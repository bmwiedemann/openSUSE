-------------------------------------------------------------------
Thu Dec 17 12:20:00 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>
 
- disable %{ix86} build
 
-------------------------------------------------------------------
Sun Nov 29 15:48:14 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20201127.
  git-annex (8.20201127) upstream; urgency=medium

    * adjust: New --unlock-present mode which locks files whose content is not
      present (so the broken symlink is visible), while unlocking files whose
      content is present.
    * Added annex.adjustedbranchrefresh git config to update adjusted
      branches set up by git-annex adjust --unlock-present/--hide-missing.
    * Fix hang when an external special remote program exited but
      the stderr pipe to it was left open, due to a daemon having inherited
      the file descriptor.
    * Fix a bug that could make resuming a download from the web fail
      when the entire content of the file is actually already present
      locally.
    * examinekey: Added a "file" format variable for consistency with find,
      and for easier scripting.
    * init: When writing hook scripts, set all execute bits, not only
      the user execute bit.
    * upgrade: Support an edge case upgrading a v5 direct mode repo
      where nothing had ever been committed to the head branch.
    * Made the test suite significantly less noisy, only displaying command
      output when something failed.
    * Fix building without the torrent library.
      Thanks, Kyle Meyer.
    * Fix build on Windows.
    * Prevent windows assistant from trying (and failing) to upgrade
      itself, which has never been supported on windows.

   -- Joey Hess <id@joeyh.name>  Fri, 27 Nov 2020 12:54:11 -0400

-------------------------------------------------------------------
Tue Nov 17 15:41:20 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- drop 0001-enable-extensions-needed-by-new-version-of-persistent.patch

-------------------------------------------------------------------
Mon Nov 16 21:55:38 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20201116.
  git-annex (8.20201116) upstream; urgency=medium

    * move: Fix a regression in the last release that made move --to not
      honor numcopies settings.
    * sync --content: Fix a bug where a file that was not preferred content
      could be transferred to a remote. This happened when the file got deleted
      after the sync started running.
    * Warn when adding a annex symlink or pointer file that uses a key that
      is not known to the repository, to prevent confusion if the user has
      copied it from some other repository.
    * examinekey: Added two new format variables: objectpath and objectpointer
    * examinekey: Added --migrate-to-backend

   -- Joey Hess <id@joeyh.name>  Mon, 16 Nov 2020 09:36:35 -0400

-------------------------------------------------------------------
Sat Nov  7 22:15:09 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- add ./0001-enable-extensions-needed-by-new-version-of-persisten.patch 

-------------------------------------------------------------------
Sat Nov  7 15:34:35 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20201103.
  Upstream has edited the change log file since the last release in
  a non-trivial way, i.e. they did more than just add a new entry
  at the top. You can review the file at:
  http://hackage.haskell.org/package/git-annex-8.20201103/src/CHANGELOG

-------------------------------------------------------------------
Thu Oct  8 02:00:42 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20201007.
  git-annex (8.20201007) upstream; urgency=medium

    * --json output now includes a new field "input" which is the input
      value (filename, url, etc) that caused a json object to be output.
    * --batch combined with -J now runs batch requests concurrently for many
      commands. Before, the combination was accepted, but did not enable
      concurrency. Since the output of batch requests can be in any order,
      --json with the new "input" field is recommended to be used,
      to determine which batch request each response corresponds to.
    * aws-0.22 improved its support for setting etags, which improves
      support for versioned S3 buckets.
    * Serialize use of C magic library, which is not thread safe.
      This fixes failures uploading to S3 when using -J.
    * add, addurl, importfeed, import: Added --no-check-gitignore option
      for finer grained control than using --force.
    * import: Check gitignores when importing trees from special remotes.
    * addunused: Don't check .gitignores when adding files.
    * Improve the "Try making some of these repositories available"
      message, with some hints for the user for what to do.
    * Improve --debug output to show pid of processes that are started and
      stopped.
    * sync --all: Sped up seeking to around twice as fast, by avoiding a
      pass over the worktree files when preferred content expressions of the
      local repo and remotes don't use include=/exclude=.
    * Sped up seeking for files to operate on, when using options like
      --copies or --in, by around 20%
    * import --no-content: Check annex.largefiles, and import small
      files into git, the same as is done when importing with content.
      If the largefiles expression needs the file content available
      (due to mimetype or mimeencoding being used), the import will fail.
    * sync: When run without --content, import without copying from
      importtree=yes directory special remotes.
      (Other special remotes may support this later as well.)
    * addurl: Avoid a redundant git ignores check for speed.
    * upgrade: Avoid an upgrade failure of a bare repo in unusual circumstances.
    * httpalso: Support being used with special remotes that do not have
      encryption= in their config.
    * Parse youtube-dl progress output, which lets progress be displayed
      when doing concurrent downloads.
    * Fix build with Benchmark build flag.
    * Enable building with git-annex benchmark by default, only turning it
      off when the criterion library is not installed.
    * runshell: Fix a edge case where rm errors were sent to stdout, which
      could confuse things parsing git-annex output.
    * runshell: Update files atomically when preparing to run git-annex.
    * Fix a build failure on Windows.

   -- Joey Hess <id@joeyh.name>  Wed, 07 Oct 2020 12:19:05 -0400

-------------------------------------------------------------------
Tue Sep 15 14:54:15 UTC 2020 - Michel Normand <normand@linux.vnet.ibm.com>

- Add _constraints 4GB min disk space

-------------------------------------------------------------------
Wed Sep  9 02:00:54 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20200908.
  Upstream has edited the change log file since the last release in
  a non-trivial way, i.e. they did more than just add a new entry
  at the top. You can review the file at:
  http://hackage.haskell.org/package/git-annex-8.20200908/src/CHANGELOG

-------------------------------------------------------------------
Tue Aug 18 10:46:50 UTC 2020 - Peter Simons <psimons@suse.com>

- Replace %setup -q with the more modern %autosetup macro.

-------------------------------------------------------------------
Tue Aug 11 02:00:33 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20200810.
  git-annex (8.20200810) upstream; urgency=medium

    * Added support for external backend programs. So if you want a hash
      that git-annex doesn't support, or something stranger, you can write a
      small program to implement it.
    * Fix a bug in find --branch in the previous version.
    * importfeed: Fix reversion that caused some '.' in filenames to be
      replaced with '_'
    * Fix a lock file descriptor leak that could occur when running commands
      like git-annex add with -J. Bug was introduced as part of a different FD
      leak fix in version 6.20160318.
    * Fix a hang when using git-annex with an old openssh 7.2p2, which had
      some weird inheriting of ssh FDs by sshd. Bug was introduced in
      git-annex version 7.20200202.7.
    * move, copy --to: Sped up seeking files by 2x.
    * drop: Sped up seeking files to drop by 2x, and also some performance
      improvements to checking numcopies.
    * Deal with unusual IFS settings in the shell scripts for linux
      standalone and OSX app.
      Thanks, Yaroslav Halchenko
    * Avoid complaining that a file with "is beyond a symbolic link"
      when the filepath is absolute and the symlink in question is not
      actually inside the git repository.
    * Slightly sped up the linux standalone bundle.
    * Support building with dlist-1.0

- Drop obsolete 0001-fix-build-with-dlist-1.0.patch.

-------------------------------------------------------------------
Thu Aug  6 07:58:47 UTC 2020 - Peter Simons <psimons@suse.com>

- Apply 0001-fix-build-with-dlist-1.0.patch to add support for
  building with dlist version 1.x.

-------------------------------------------------------------------
Tue Jul 21 08:29:13 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20200720.1.
  git-annex (8.20200720.1) upstream; urgency=medium

    * Fix a bug in find --batch in the previous version.

   -- Joey Hess <id@joeyh.name>  Mon, 20 Jul 2020 19:39:11 -0400

  git-annex (8.20200720) upstream; urgency=medium

    * import: Added --no-content option, which avoids downloading files
      from a special remote. Currently only supported by the directory
      special remote.
    * Honor annex.largefiles when importing a tree from a special remote.
      (Except for when --no-content is used.)
    * Fix a deadlock that could occur after git-annex got an unlocked
      file, causing the command to hang indefinitely. Known to happen on
      vfat filesystems, possibly others.
    * Build with the http-client-restricted and git-lfs libraries when
      available, otherwise use the vendored copy as before.
    * testremote: Fix over-allocation of resources and bad caching,
      including starting up a large number of external special remote processes.
      (Regression introduced in version 8.20200501)
    * test: Fix some test cases that assumed git's default branch name.
    * importfeed: Added some additional --template variables:
      itempubyear, itempubmonth, itempubday, itempubhour,
      itempubminute, itempubsecond.
    * Made several special remotes support locking content on them,
      which allows dropping from other special remotes in some situations
      where it was not possible before. Supported special remotes:
      S3 (with versioning=yes), git-lfs, tahoe
    * Fix reversion that broke passing annex.* and remote.*.annex-*
      git configs with -c. (Since version 8.20200330.)
    * Bring back git-annex branch read cache. This speeds up some operations,
      eg git-annex sync --content --all gets 20% faster.
    * Fix a recently introduced bug that could cause a "fork: resource exhausted"
      after getting several thousand files.
    * Sped up the --all option by 2x to 16x by using git cat-file --buffer.
      Thanks to Lukey for finding this optimisation.
    * Sped up seeking for annexed files to operate on by a factor of nearly 2x.
    * Sped up sync --content by 2x and other commands like fsck --fast and
      whereis by around 50%, by using git cat-file --buffer.
    * importfeed: Made checking known urls step around 15% faster.
    * fsck: Detect if WORM keys contain a carriage return, and recommend
      upgrading the key. (git-annex could have maybe created such keys back
      in 2013).
    * When on an adjust --hide-missing branch, fix handling of files that
      have been deleted but the deletion is not yet staged.

   -- Joey Hess <id@joeyh.name>  Mon, 20 Jul 2020 14:40:51 -0400

-------------------------------------------------------------------
Thu Jun 18 02:00:26 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20200617.
  git-annex (8.20200617) upstream; urgency=medium

    * Added annex.skipunknown git config, that can be set to false to change
      the behavior of commands like `git annex get foo*`, to not skip
      over files/dirs that are not checked into git and are explicitly listed in
      the command line.
    * annex.skipunknown is planned to change to default to false in a
      git-annex release in early 2022. If you prefer the current behavior,
      you can explicitly set it to true.
    * Try to enable special remotes configured with autoenable=yes
      when git-annex auto-initialization happens in a new clone of an
      existing repo. Previously, git-annex init had to be explicitly run to
      enable them. Special remotes cannot display anything when autoenabled
      this way, to avoid interfering with the output of git-annex query
      commands.
    * export: Added options for json output.
    * import: Added --json-progress.
    * addurl: Make --preserve-filename also apply when eg a torrent contains
      multiple files.
    * Fix a crash or potentially not all files being exported when
      sync -J --content is used with an export remote.
    * export: Let concurrent transfers be done with -J or annex.jobs.
    * move --to, copy --to, mirror --to: When concurrency is enabled, run
      cleanup actions in separate job pool from uploads.
    * init: If lock probing stalls for a long time (eg a broken NFS server),
      display a message to let the user know what's taking so long.
    * init: When annex.pidlock is set, skip lock probing.
    * Fix file descriptor leak when importing from a directory special remote
      that is configured with exporttree=yes.
    * Note that external special remote programs should not block SIGINT or
      SIGTERM.
    * Avoid creating the keys database during init when there are no unlocked
      files, to prevent init failing when sqlite does not work in the
      filesystem.
    * import: Avoid using some strange names for temporary keys,
      which broke importing from a directory special remote onto a vfat
      filesystem.
    * S3: The REDUCED_REDUNDANCY storage class is no longer cheaper so
      stop documenting it, and stop offering it as a choice in the assistant.
    * Improve display of problems auto-initializing or upgrading local git
      remotes.
    * When a local git remote cannot be initialized because it has no
      git-annex branch or a .noannex file, avoid displaying a message about it.
    * checkpresentkey: When no remote is specified, try all remotes, not
      only ones that the location log says contain the key. This is what
      the documentation has always said it did.
    * Fix regression in external special remote handling: GETCONFIG did not
      return a value that was set with SETCONFIG immediately before.
      (Regression introduced in version 7.20200202.7)
    * Fix bug that made initremote of extrnal special remotes with
      embedcreds=yes or gpg encryption not store the creds in the git-annex
      branch. git-annex-remote-googledrive one was special remote affected by
      this bug.
      (Regression introduced in version 7.20200202.7)
    * Fix bug that made creds not be stored in git when a special remote
      was initialized with gpg encryption, but without an explicit
      embedcreds=yes.
      (Regression introduced in version 7.20200202.7)
    * Fix a annex.pidlock issue that made eg git-annex get of an unlocked
      file hang until the annex.pidlocktimeout and then fail.

   -- Joey Hess <id@joeyh.name>  Wed, 17 Jun 2020 15:58:59 -0400

-------------------------------------------------------------------
Tue Jun  9 09:26:18 UTC 2020 - psimons@suse.com

- Add git-annex at version 8.20200522.

