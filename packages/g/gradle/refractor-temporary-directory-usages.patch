diff -Nur gradle-4.4.1/subprojects/base-services/src/main/java/org/gradle/initialization/GradleUserHomeDirProvider.java gradle-4.4.1-new/subprojects/base-services/src/main/java/org/gradle/initialization/GradleUserHomeDirProvider.java
--- gradle-4.4.1/subprojects/base-services/src/main/java/org/gradle/initialization/GradleUserHomeDirProvider.java	1970-01-01 01:00:00.000000000 +0100
+++ gradle-4.4.1-new/subprojects/base-services/src/main/java/org/gradle/initialization/GradleUserHomeDirProvider.java	2022-10-10 12:05:02.668063622 +0200
@@ -0,0 +1,26 @@
+/*
+ * Copyright 2016 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gradle.initialization;
+
+import java.io.File;
+
+public interface GradleUserHomeDirProvider {
+    /**
+     * Returns the user home directory for the current build.
+     */
+    File getGradleUserHomeDirectory();
+}
diff -Nur gradle-4.4.1/subprojects/base-services/src/main/java/org/gradle/internal/file/TempFiles.java gradle-4.4.1-new/subprojects/base-services/src/main/java/org/gradle/internal/file/TempFiles.java
--- gradle-4.4.1/subprojects/base-services/src/main/java/org/gradle/internal/file/TempFiles.java	2022-10-10 12:04:54.584155723 +0200
+++ gradle-4.4.1-new/subprojects/base-services/src/main/java/org/gradle/internal/file/TempFiles.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,45 +0,0 @@
-/*
- * Copyright 2020 the original author or authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.gradle.internal.file;
-
-import com.google.common.base.Preconditions;
-
-import javax.annotation.CheckReturnValue;
-import java.io.File;
-import java.io.IOException;
-
-/**
- * Security safe API's for creating temporary files.
- */
-public final class TempFiles {
-
-    private TempFiles() {
-        /* no-op */
-    }
-
-    /**
-     * Improves the security guarantees of {@link File#createTempFile(String, String, File)}.
-     *
-     * @see File#createTempFile(String, String, File)
-     */
-    @CheckReturnValue
-    public static File createTempFile(String prefix, String suffix, File directory) throws IOException {
-        Preconditions.checkNotNull(directory, "The `directory` argument must not be null as this will default to the system temporary directory");
-        return File.createTempFile(prefix, suffix, directory);
-    }
-
-}
\ No newline at end of file
diff -Nur gradle-4.4.1/subprojects/build-cache/build-cache.gradle gradle-4.4.1-new/subprojects/build-cache/build-cache.gradle
--- gradle-4.4.1/subprojects/build-cache/build-cache.gradle	2022-10-10 12:04:54.696154447 +0200
+++ gradle-4.4.1-new/subprojects/build-cache/build-cache.gradle	2022-10-10 12:12:55.854672985 +0200
@@ -19,6 +19,7 @@
     api project(":baseServices")
     api libraries.inject
 
+    implementation project(":fileTemp")
     implementation project(":messaging")
     implementation project(":native")
     implementation project(":persistentCache")
diff -Nur gradle-4.4.1/subprojects/build-cache/src/main/java/org/gradle/caching/local/internal/DefaultBuildCacheTempFileStore.java gradle-4.4.1-new/subprojects/build-cache/src/main/java/org/gradle/caching/local/internal/DefaultBuildCacheTempFileStore.java
--- gradle-4.4.1/subprojects/build-cache/src/main/java/org/gradle/caching/local/internal/DefaultBuildCacheTempFileStore.java	2022-10-10 12:04:54.696154447 +0200
+++ gradle-4.4.1-new/subprojects/build-cache/src/main/java/org/gradle/caching/local/internal/DefaultBuildCacheTempFileStore.java	2022-10-10 15:43:03.460721182 +0200
@@ -19,7 +19,7 @@
 import org.gradle.api.Action;
 import org.gradle.api.UncheckedIOException;
 import org.gradle.caching.BuildCacheKey;
-import org.gradle.internal.file.TempFiles;
+import org.gradle.api.internal.file.temp.TempFiles;
 import org.gradle.util.GFileUtils;
 
 import java.io.File;
diff -Nur gradle-4.4.1/subprojects/core/core.gradle gradle-4.4.1-new/subprojects/core/core.gradle
--- gradle-4.4.1/subprojects/core/core.gradle	2022-10-10 12:04:54.624155268 +0200
+++ gradle-4.4.1-new/subprojects/core/core.gradle	2022-10-11 14:57:05.839191649 +0200
@@ -77,6 +77,7 @@
     testFixturesRuntime project(':runtimeApiInfo')
 
     integTestImplementation project(":internalIntegTesting")
+    integTestImplementation project(":fileTemp")
 
     integTestRuntimeOnly project(":plugins")
     integTestRuntimeOnly project(':maven')
diff -Nur gradle-4.4.1/subprojects/core/src/integTest/groovy/org/gradle/process/internal/AbstractWorkerProcessIntegrationSpec.groovy gradle-4.4.1-new/subprojects/core/src/integTest/groovy/org/gradle/process/internal/AbstractWorkerProcessIntegrationSpec.groovy
--- gradle-4.4.1/subprojects/core/src/integTest/groovy/org/gradle/process/internal/AbstractWorkerProcessIntegrationSpec.groovy	2022-10-10 12:04:54.588155677 +0200
+++ gradle-4.4.1-new/subprojects/core/src/integTest/groovy/org/gradle/process/internal/AbstractWorkerProcessIntegrationSpec.groovy	2022-10-10 15:44:07.115983366 +0200
@@ -24,7 +24,7 @@
 import org.gradle.api.internal.classpath.DefaultModuleRegistry
 import org.gradle.api.internal.classpath.ModuleRegistry
 import org.gradle.api.internal.file.TestFiles
-import org.gradle.api.internal.file.TmpDirTemporaryFileProvider
+import org.gradle.api.internal.file.temp.TmpDirTemporaryFileProvider
 import org.gradle.api.logging.LogLevel
 import org.gradle.cache.CacheRepository
 import org.gradle.cache.internal.CacheFactory
diff -Nur gradle-4.4.1/subprojects/core/src/integTest/groovy/org/gradle/process/internal/ProjectBuilderEndUserIntegrationTest.groovy gradle-4.4.1-new/subprojects/core/src/integTest/groovy/org/gradle/process/internal/ProjectBuilderEndUserIntegrationTest.groovy
--- gradle-4.4.1/subprojects/core/src/integTest/groovy/org/gradle/process/internal/ProjectBuilderEndUserIntegrationTest.groovy	1970-01-01 01:00:00.000000000 +0100
+++ gradle-4.4.1-new/subprojects/core/src/integTest/groovy/org/gradle/process/internal/ProjectBuilderEndUserIntegrationTest.groovy	2022-10-10 15:45:06.187298710 +0200
@@ -0,0 +1,105 @@
+/*
+ * Copyright 2020 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gradle.testfixtures
+
+import org.gradle.api.internal.file.temp.FilePermissionsCheckerFixture
+import org.gradle.integtests.fixtures.AbstractIntegrationSpec
+import org.gradle.integtests.fixtures.executer.GradleContextualExecuter
+import spock.lang.IgnoreIf
+
+@IgnoreIf({ GradleContextualExecuter.embedded })
+// These tests run builds that themselves run a build in a test worker with 'gradleApi()' dependency, which needs to pick up Gradle modules from a real distribution
+class ProjectBuilderEndUserIntegrationTest extends AbstractIntegrationSpec {
+
+    def setup() {
+        buildFile << """
+        apply plugin: 'groovy'
+        dependencies {
+            implementation localGroovy()
+            implementation gradleApi()
+            testImplementation('org.spockframework:spock-core:1.0-groovy-2.4') {
+                exclude module: 'groovy-all'
+            }
+        }
+        ${jcenterRepository()}
+        test.testLogging.exceptionFormat = 'full'
+        """
+        file("src/test/groovy/FilePermissionsChecker.groovy") << FilePermissionsCheckerFixture.createFileContents()
+    }
+
+    def "project builder has correctly set working directory"() {
+        when:
+        groovyTestSourceFile '''
+        import org.gradle.testfixtures.ProjectBuilder
+        import org.gradle.testfixtures.internal.ProjectBuilderImpl
+        import java.io.File
+        import spock.lang.Specification
+        class Test extends Specification {
+            def "system property is set"() {
+                expect:
+                System.getProperty(ProjectBuilderImpl.PROJECT_BUILDER_SYS_PROP) != null
+            }
+            def "project builder has expected user home"() {
+                when:
+                String userHome = new File(System.getProperty("user.home")).absolutePath.replace(File.separatorChar, '/' as char)
+                File gradleUserHome = ProjectBuilder.builder().build().gradle.gradleUserHomeDir
+                String gradleUserHomeAbsolutePath = gradleUserHome.absolutePath
+                then:
+                gradleUserHomeAbsolutePath.contains("/build/tmp/")
+                gradleUserHomeAbsolutePath.contains("/gradle-project-builder/")
+                // Comes from FilePermissionsCheckerFixture
+                FilePermissionsChecker.assertSafeParentFile(gradleUserHome)
+            }
+        }
+        '''
+        then:
+        succeeds('test')
+    }
+
+    def "project builder working directory can be changed by the user"() {
+        when:
+        buildFile << '''
+        test {
+            File customTestKitDir = file('my-custom-project-builder-dir')
+            systemProperty('org.gradle.project.builder.dir', customTestKitDir)
+        }
+        '''
+        groovyTestSourceFile '''
+        import org.gradle.testfixtures.ProjectBuilder
+        import org.gradle.testfixtures.internal.ProjectBuilderImpl
+        import java.io.File
+        import spock.lang.Specification
+        class Test extends Specification {
+            def "system property is set"() {
+                expect:
+                System.getProperty(ProjectBuilderImpl.PROJECT_BUILDER_SYS_PROP).endsWith('my-custom-project-builder-dir')
+            }
+            def "project builder has expected user home"() {
+                when:
+                File gradleUserHome = ProjectBuilder.builder().build().gradle.gradleUserHomeDir
+                String gradleUserHomeAbsolutePath = gradleUserHome.absolutePath
+                then:
+                gradleUserHomeAbsolutePath.contains("/my-custom-project-builder-dir/")
+                // Comes from FilePermissionsCheckerFixture
+                FilePermissionsChecker.assertSafeParentFile(gradleUserHome)
+            }
+        }
+        '''
+        then:
+        succeeds('test')
+    }
+}
\ No newline at end of file
diff -Nur gradle-4.4.1/subprojects/core/src/integTest/groovy/org/gradle/process/internal/WorkerProcessIntegrationTest.groovy gradle-4.4.1-new/subprojects/core/src/integTest/groovy/org/gradle/process/internal/WorkerProcessIntegrationTest.groovy
--- gradle-4.4.1/subprojects/core/src/integTest/groovy/org/gradle/process/internal/WorkerProcessIntegrationTest.groovy	2022-10-10 12:04:54.588155677 +0200
+++ gradle-4.4.1-new/subprojects/core/src/integTest/groovy/org/gradle/process/internal/WorkerProcessIntegrationTest.groovy	2022-10-10 15:44:18.775848225 +0200
@@ -17,7 +17,7 @@
 package org.gradle.process.internal
 
 import org.gradle.api.Action
-import org.gradle.api.internal.file.TmpDirTemporaryFileProvider
+import org.gradle.api.internal.file.temp.TmpDirTemporaryFileProvider
 import org.gradle.api.logging.LogLevel
 import org.gradle.api.logging.Logging
 import org.gradle.internal.Actions
diff -Nur gradle-4.4.1/subprojects/core/src/integTest/groovy/org/gradle/testfixtures/ProjectBuilderEndUserIntegrationTest.groovy gradle-4.4.1-new/subprojects/core/src/integTest/groovy/org/gradle/testfixtures/ProjectBuilderEndUserIntegrationTest.groovy
--- gradle-4.4.1/subprojects/core/src/integTest/groovy/org/gradle/testfixtures/ProjectBuilderEndUserIntegrationTest.groovy	1970-01-01 01:00:00.000000000 +0100
+++ gradle-4.4.1-new/subprojects/core/src/integTest/groovy/org/gradle/testfixtures/ProjectBuilderEndUserIntegrationTest.groovy	2022-10-11 16:38:21.967256404 +0200
@@ -0,0 +1,105 @@
+/*
+ * Copyright 2020 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gradle.testfixtures
+
+import org.gradle.api.internal.file.temp.FilePermissionsCheckerFixture
+import org.gradle.integtests.fixtures.AbstractIntegrationSpec
+import org.gradle.integtests.fixtures.executer.GradleContextualExecuter
+import spock.lang.IgnoreIf
+
+@IgnoreIf({ GradleContextualExecuter.embedded })
+// These tests run builds that themselves run a build in a test worker with 'gradleApi()' dependency, which needs to pick up Gradle modules from a real distribution
+class ProjectBuilderEndUserIntegrationTest extends AbstractIntegrationSpec {
+
+    def setup() {
+        buildFile << """
+        apply plugin: 'groovy'
+        dependencies {
+            implementation localGroovy()
+            implementation gradleApi()
+            testImplementation('org.spockframework:spock-core:1.0-groovy-2.4') {
+                exclude module: 'groovy-all'
+            }
+        }
+        ${jcenterRepository()}
+        test.testLogging.exceptionFormat = 'full'
+        """
+        file("src/test/groovy/FilePermissionsChecker.groovy") << FilePermissionsCheckerFixture.createFileContents()
+    }
+
+    def "project builder has correctly set working directory"() {
+        when:
+        groovyTestSourceFile '''
+        import org.gradle.testfixtures.ProjectBuilder
+        import org.gradle.testfixtures.internal.ProjectBuilderImpl
+        import java.io.File
+        import spock.lang.Specification
+        class Test extends Specification {
+            def "system property is set"() {
+                expect:
+                System.getProperty(ProjectBuilderImpl.PROJECT_BUILDER_SYS_PROP) != null
+            }
+            def "project builder has expected user home"() {
+                when:
+                String userHome = new File(System.getProperty("user.home")).absolutePath.replace(File.separatorChar, '/' as char)
+                File gradleUserHome = ProjectBuilder.builder().build().gradle.gradleUserHomeDir
+                String gradleUserHomeAbsolutePath = gradleUserHome.absolutePath
+                then:
+                gradleUserHomeAbsolutePath.contains("/build/tmp/")
+                gradleUserHomeAbsolutePath.contains("/gradle-project-builder/")
+                // Comes from FilePermissionsCheckerFixture
+                FilePermissionsChecker.assertSafeParentFile(gradleUserHome)
+            }
+        }
+        '''
+        then:
+        succeeds('test')
+    }
+
+    def "project builder working directory can be changed by the user"() {
+        when:
+        buildFile << '''
+        test {
+            File customTestKitDir = file('my-custom-project-builder-dir')
+            systemProperty('org.gradle.project.builder.dir', customTestKitDir)
+        }
+        '''
+        groovyTestSourceFile '''
+        import org.gradle.testfixtures.ProjectBuilder
+        import org.gradle.testfixtures.internal.ProjectBuilderImpl
+        import java.io.File
+        import spock.lang.Specification
+        class Test extends Specification {
+            def "system property is set"() {
+                expect:
+                System.getProperty(ProjectBuilderImpl.PROJECT_BUILDER_SYS_PROP).endsWith('my-custom-project-builder-dir')
+            }
+            def "project builder has expected user home"() {
+                when:
+                File gradleUserHome = ProjectBuilder.builder().build().gradle.gradleUserHomeDir
+                String gradleUserHomeAbsolutePath = gradleUserHome.absolutePath
+                then:
+                gradleUserHomeAbsolutePath.contains("/my-custom-project-builder-dir/")
+                // Comes from FilePermissionsCheckerFixture
+                FilePermissionsChecker.assertSafeParentFile(gradleUserHome)
+            }
+        }
+        '''
+        then:
+        succeeds('test')
+    }
+}
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/DefaultTask.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/DefaultTask.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/DefaultTask.java	2022-10-10 12:04:54.604155496 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/DefaultTask.java	2022-10-10 15:46:31.854305804 +0200
@@ -18,6 +18,7 @@
 
 import org.gradle.api.file.DirectoryProperty;
 import org.gradle.api.file.RegularFileProperty;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.internal.AbstractTask;
 import org.gradle.api.internal.NoConventionMapping;
 import org.gradle.api.internal.file.TaskFileVarFactory;
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/AbstractTask.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/AbstractTask.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/AbstractTask.java	2022-10-10 12:04:54.608155449 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/AbstractTask.java	2022-10-11 12:09:35.205664126 +0200
@@ -29,7 +29,7 @@
 import org.gradle.api.Project;
 import org.gradle.api.Task;
 import org.gradle.api.internal.file.FileResolver;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.internal.project.ProjectInternal;
 import org.gradle.api.internal.tasks.ClassLoaderAwareTaskAction;
 import org.gradle.api.internal.tasks.ContextAwareTaskAction;
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/changedetection/state/FileTimeStampInspector.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/changedetection/state/FileTimeStampInspector.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/changedetection/state/FileTimeStampInspector.java	2022-10-10 12:04:54.612155404 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/changedetection/state/FileTimeStampInspector.java	2022-10-10 15:47:01.353963894 +0200
@@ -17,7 +17,7 @@
 package org.gradle.api.internal.changedetection.state;
 
 import org.gradle.api.UncheckedIOException;
-import org.gradle.internal.file.TempFiles;
+import org.gradle.api.internal.file.temp.TempFiles;
 
 import java.io.File;
 import java.io.FileOutputStream;
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/file/DefaultFileOperations.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/file/DefaultFileOperations.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/file/DefaultFileOperations.java	2022-10-10 12:04:54.612155404 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/file/DefaultFileOperations.java	2022-10-10 15:47:32.461603346 +0200
@@ -33,6 +33,7 @@
 import org.gradle.api.internal.file.copy.DefaultCopySpec;
 import org.gradle.api.internal.file.copy.FileCopier;
 import org.gradle.api.internal.file.delete.Deleter;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.internal.resources.DefaultResourceHandler;
 import org.gradle.api.internal.tasks.TaskResolver;
 import org.gradle.api.resources.ReadableResource;
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/file/DefaultTemporaryFileProvider.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/file/DefaultTemporaryFileProvider.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/file/DefaultTemporaryFileProvider.java	2022-10-10 12:04:54.612155404 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/file/DefaultTemporaryFileProvider.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,67 +0,0 @@
-/*
- * Copyright 2010 the original author or authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.gradle.api.internal.file;
-
-import org.gradle.api.UncheckedIOException;
-import org.gradle.internal.Factory;
-import org.gradle.internal.FileUtils;
-import org.gradle.internal.file.TempFiles;
-import org.gradle.util.CollectionUtils;
-import org.gradle.util.GFileUtils;
-
-import javax.annotation.Nonnull;
-import javax.annotation.Nullable;
-import java.io.File;
-import java.io.IOException;
-import java.io.Serializable;
-
-public class DefaultTemporaryFileProvider implements TemporaryFileProvider, Serializable {
-    private final Factory<File> baseDirFactory;
-
-    public DefaultTemporaryFileProvider(final Factory<File> fileFactory) {
-        this.baseDirFactory = fileFactory;
-    }
-
-    public File newTemporaryFile(String... path) {
-        return FileUtils.canonicalize(new File(baseDirFactory.create(), CollectionUtils.join("/", path)));
-    }
-
-    public File createTemporaryFile(String prefix, @Nullable String suffix, String... path) {
-        File dir = new File(baseDirFactory.create(), CollectionUtils.join("/", path));
-        GFileUtils.mkdirs(dir);
-        try {
-            return File.createTempFile(prefix, suffix, dir);
-        } catch (IOException e) {
-            throw new UncheckedIOException(e);
-        }
-    }
-
-    public File createTemporaryDirectory(@Nullable @Nonnull String prefix, @Nullable String suffix, @Nullable String... path) {
-        File dir = new File(baseDirFactory.create(), CollectionUtils.join("/", path));
-        GFileUtils.mkdirs(dir);
-        try {
-            // TODO: This is not a great paradigm for creating a temporary directory.
-            // See http://guava-libraries.googlecode.com/svn/tags/release08/javadoc/com/google/common/io/Files.html#createTempDir%28%29 for an alternative.
-            File tmpDir = TempFiles.createTempFile(prefix, suffix, dir);
-            tmpDir.delete();
-            tmpDir.mkdir();
-            return tmpDir;
-        } catch (IOException e) {
-            throw new UncheckedIOException(e);
-        }
-    }
-}
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/resources/DefaultResourceHandler.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/resources/DefaultResourceHandler.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/resources/DefaultResourceHandler.java	2022-10-10 12:04:54.612155404 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/resources/DefaultResourceHandler.java	2022-10-10 15:48:15.433105294 +0200
@@ -17,7 +17,7 @@
 package org.gradle.api.internal.resources;
 
 import org.gradle.api.internal.file.FileOperations;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.internal.file.archive.compression.Bzip2Archiver;
 import org.gradle.api.internal.file.archive.compression.GzipArchiver;
 import org.gradle.api.resources.ResourceHandler;
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/resources/DefaultTextResourceFactory.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/resources/DefaultTextResourceFactory.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/resources/DefaultTextResourceFactory.java	2022-10-10 12:04:54.612155404 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/resources/DefaultTextResourceFactory.java	2022-10-10 15:48:28.748950959 +0200
@@ -17,7 +17,7 @@
 package org.gradle.api.internal.resources;
 
 import org.gradle.api.internal.file.FileOperations;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.resources.TextResource;
 import org.gradle.api.resources.TextResourceFactory;
 
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/resources/FileCollectionBackedArchiveTextResource.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/resources/FileCollectionBackedArchiveTextResource.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/resources/FileCollectionBackedArchiveTextResource.java	2022-10-10 12:04:54.612155404 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/resources/FileCollectionBackedArchiveTextResource.java	2022-10-10 15:48:39.420827269 +0200
@@ -19,7 +19,7 @@
 import org.gradle.api.file.FileCollection;
 import org.gradle.api.file.FileTree;
 import org.gradle.api.internal.file.FileOperations;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.internal.file.collections.LazilyInitializedFileCollection;
 import org.gradle.api.internal.tasks.TaskDependencyResolveContext;
 import org.gradle.api.tasks.util.PatternSet;
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/resources/FileCollectionBackedTextResource.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/resources/FileCollectionBackedTextResource.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/resources/FileCollectionBackedTextResource.java	2022-10-10 12:04:54.612155404 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/resources/FileCollectionBackedTextResource.java	2022-10-10 15:48:51.388688558 +0200
@@ -17,7 +17,7 @@
 
 import com.google.common.io.Files;
 import org.gradle.api.file.FileCollection;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.resources.ResourceException;
 import org.gradle.api.resources.internal.TextResourceInternal;
 import org.gradle.api.tasks.TaskDependency;
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/resources/StringBackedTextResource.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/resources/StringBackedTextResource.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/api/internal/resources/StringBackedTextResource.java	2022-10-10 12:04:54.612155404 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/api/internal/resources/StringBackedTextResource.java	2022-10-10 15:49:01.096576041 +0200
@@ -17,7 +17,7 @@
 
 import com.google.common.io.Files;
 import org.gradle.api.file.FileCollection;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.internal.tasks.TaskDependencies;
 import org.gradle.api.resources.ResourceException;
 import org.gradle.api.resources.internal.TextResourceInternal;
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/initialization/GradleUserHomeDirProvider.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/initialization/GradleUserHomeDirProvider.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/initialization/GradleUserHomeDirProvider.java	2022-10-10 12:04:54.620155313 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/initialization/GradleUserHomeDirProvider.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,26 +0,0 @@
-/*
- * Copyright 2016 the original author or authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.gradle.initialization;
-
-import java.io.File;
-
-public interface GradleUserHomeDirProvider {
-    /**
-     * Returns the user home directory for the current build.
-     */
-    File getGradleUserHomeDirectory();
-}
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/internal/resource/local/GroupedAndNamedUniqueFileStore.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/internal/resource/local/GroupedAndNamedUniqueFileStore.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/internal/resource/local/GroupedAndNamedUniqueFileStore.java	2022-10-10 12:04:54.620155313 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/internal/resource/local/GroupedAndNamedUniqueFileStore.java	2022-10-10 15:50:13.455737360 +0200
@@ -17,7 +17,7 @@
 
 import org.gradle.api.Action;
 import org.gradle.api.Transformer;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.internal.hash.HashUtil;
 
 import java.io.File;
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/internal/service/scopes/BasicGlobalScopeServices.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/internal/service/scopes/BasicGlobalScopeServices.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/internal/service/scopes/BasicGlobalScopeServices.java	2022-10-10 12:04:54.620155313 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/internal/service/scopes/BasicGlobalScopeServices.java	2022-10-10 15:50:42.327402728 +0200
@@ -20,8 +20,7 @@
 import org.gradle.api.internal.file.DefaultFileLookup;
 import org.gradle.api.internal.file.FileLookup;
 import org.gradle.api.internal.file.FileResolver;
-import org.gradle.api.internal.file.TemporaryFileProvider;
-import org.gradle.api.internal.file.TmpDirTemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.tasks.util.PatternSet;
 import org.gradle.api.tasks.util.internal.PatternSets;
 import org.gradle.api.tasks.util.internal.PatternSpecFactory;
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/internal/service/scopes/BuildScopeServices.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/internal/service/scopes/BuildScopeServices.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/internal/service/scopes/BuildScopeServices.java	2022-10-10 12:04:54.620155313 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/internal/service/scopes/BuildScopeServices.java	2022-10-10 15:52:08.078408848 +0200
@@ -36,6 +36,7 @@
 import org.gradle.api.internal.component.DefaultComponentTypeRegistry;
 import org.gradle.api.internal.file.FileLookup;
 import org.gradle.api.internal.file.FileResolver;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.internal.file.collections.DirectoryFileTreeFactory;
 import org.gradle.api.internal.initialization.DefaultScriptClassPathResolver;
 import org.gradle.api.internal.initialization.DefaultScriptHandlerFactory;
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/internal/service/scopes/GlobalScopeServices.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/internal/service/scopes/GlobalScopeServices.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/internal/service/scopes/GlobalScopeServices.java	2022-10-10 12:04:54.620155313 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/internal/service/scopes/GlobalScopeServices.java	2022-10-11 12:08:41.642170275 +0200
@@ -36,8 +36,8 @@
 import org.gradle.api.internal.classpath.PluginModuleRegistry;
 import org.gradle.api.internal.file.DefaultFileCollectionFactory;
 import org.gradle.api.internal.file.FileCollectionFactory;
-import org.gradle.api.internal.file.TemporaryFileProvider;
-import org.gradle.api.internal.file.TmpDirTemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TmpDirTemporaryFileProvider;
 import org.gradle.api.internal.file.collections.DefaultDirectoryFileTreeFactory;
 import org.gradle.api.internal.file.collections.DirectoryFileTreeFactory;
 import org.gradle.api.internal.model.DefaultObjectFactory;
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/internal/service/scopes/GradleUserHomeScopeServices.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/internal/service/scopes/GradleUserHomeScopeServices.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/internal/service/scopes/GradleUserHomeScopeServices.java	2022-10-10 12:04:54.620155313 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/internal/service/scopes/GradleUserHomeScopeServices.java	2022-10-10 15:52:39.390045936 +0200
@@ -36,8 +36,8 @@
 import org.gradle.api.internal.changedetection.state.TaskHistoryStore;
 import org.gradle.api.internal.changedetection.state.ValueSnapshotter;
 import org.gradle.api.internal.classpath.ModuleRegistry;
-import org.gradle.api.internal.file.TemporaryFileProvider;
-import org.gradle.api.internal.file.TmpDirTemporaryFileProvider;
+import org.gradle.api.internal.file.temp.GradleUserHomeTemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.internal.file.collections.DirectoryFileTreeFactory;
 import org.gradle.api.internal.initialization.loadercache.ClassLoaderCache;
 import org.gradle.api.internal.initialization.loadercache.DefaultClassLoaderCache;
@@ -98,7 +98,7 @@
 
     public void configure(ServiceRegistration registration, GradleUserHomeDirProvider userHomeDirProvider) {
         registration.addProvider(new CacheRepositoryServices(userHomeDirProvider.getGradleUserHomeDirectory(), null));
-        registration.add(TmpDirTemporaryFileProvider.class);
+        registration.add(GradleUserHomeTemporaryFileProvider.class);
         for (PluginServiceRegistry plugin : globalServices.getAll(PluginServiceRegistry.class)) {
             plugin.registerGradleUserHomeServices(registration);
         }
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/internal/service/scopes/ProjectScopeServices.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/internal/service/scopes/ProjectScopeServices.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/internal/service/scopes/ProjectScopeServices.java	2022-10-10 12:04:54.620155313 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/internal/service/scopes/ProjectScopeServices.java	2022-10-11 17:13:19.820441963 +0200
@@ -33,12 +33,11 @@
 import org.gradle.api.internal.file.DefaultFileOperations;
 import org.gradle.api.internal.file.DefaultProjectLayout;
 import org.gradle.api.internal.file.DefaultSourceDirectorySetFactory;
-import org.gradle.api.internal.file.DefaultTemporaryFileProvider;
+import org.gradle.api.internal.file.temp.DefaultTemporaryFileProvider;
 import org.gradle.api.internal.file.FileLookup;
 import org.gradle.api.internal.file.FileResolver;
 import org.gradle.api.internal.file.SourceDirectorySetFactory;
-import org.gradle.api.internal.file.TemporaryFileProvider;
-import org.gradle.api.internal.file.TmpDirTemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.internal.file.collections.DirectoryFileTreeFactory;
 import org.gradle.api.internal.initialization.DefaultScriptHandlerFactory;
 import org.gradle.api.internal.initialization.ScriptClassPathResolver;
@@ -147,7 +146,7 @@
         return new DefaultFileOperations(fileResolver, project.getTasks(), temporaryFileProvider, instantiator, fileLookup, directoryFileTreeFactory, streamHasher, fileHasher);
     }
 
-    protected DefaultExecActionFactory createExecActionFactory(FileResolver fileResolver, TmpDirTemporaryFileProvider temporaryFileProvider) {
+    protected DefaultExecActionFactory createExecActionFactory(FileResolver fileResolver, TemporaryFileProvider temporaryFileProvider) {
         return new DefaultExecActionFactory(fileResolver, temporaryFileProvider);
     }
 
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/process/internal/DefaultExecActionFactory.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/process/internal/DefaultExecActionFactory.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/process/internal/DefaultExecActionFactory.java	2022-10-10 12:04:54.604155496 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/process/internal/DefaultExecActionFactory.java	2022-10-11 16:40:48.725739351 +0200
@@ -17,8 +17,11 @@
 package org.gradle.process.internal;
 
 import org.gradle.api.internal.file.FileResolver;
-import org.gradle.api.internal.file.TemporaryFileProvider;
-import org.gradle.api.internal.file.TmpDirTemporaryFileProvider;
+import org.gradle.api.internal.file.temp.GradleUserHomeTemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
+import org.gradle.initialization.GradleUserHomeDirProvider;
+
+import static java.util.Objects.requireNonNull;
 
 public class DefaultExecActionFactory implements ExecActionFactory, ExecHandleFactory, JavaExecHandleFactory {
     private final FileResolver fileResolver;
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/process/internal/DefaultJavaExecAction.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/process/internal/DefaultJavaExecAction.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/process/internal/DefaultJavaExecAction.java	2022-10-10 12:04:54.604155496 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/process/internal/DefaultJavaExecAction.java	2022-10-10 16:07:45.580165880 +0200
@@ -17,7 +17,7 @@
 package org.gradle.process.internal;
 
 import org.gradle.api.internal.file.FileResolver;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.process.ExecResult;
 
 public class DefaultJavaExecAction extends JavaExecHandleBuilder implements JavaExecAction {
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/process/internal/JavaExecHandleBuilder.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/process/internal/JavaExecHandleBuilder.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/process/internal/JavaExecHandleBuilder.java	2022-10-10 12:04:54.604155496 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/process/internal/JavaExecHandleBuilder.java	2022-10-10 16:07:55.516063112 +0200
@@ -17,7 +17,7 @@
 
 import org.gradle.api.file.FileCollection;
 import org.gradle.api.internal.file.FileResolver;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.internal.file.collections.DefaultConfigurableFileCollection;
 import org.gradle.process.JavaExecSpec;
 import org.gradle.process.JavaForkOptions;
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/process/internal/worker/child/ApplicationClassesInSystemClassLoaderWorkerImplementationFactory.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/process/internal/worker/child/ApplicationClassesInSystemClassLoaderWorkerImplementationFactory.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/process/internal/worker/child/ApplicationClassesInSystemClassLoaderWorkerImplementationFactory.java	2022-10-10 12:04:54.604155496 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/process/internal/worker/child/ApplicationClassesInSystemClassLoaderWorkerImplementationFactory.java	2022-10-10 16:08:15.275858728 +0200
@@ -20,7 +20,7 @@
 import org.gradle.api.JavaVersion;
 import org.gradle.api.UncheckedIOException;
 import org.gradle.api.internal.ClassPathRegistry;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.logging.LogLevel;
 import org.gradle.internal.classpath.ClassPath;
 import org.gradle.internal.io.StreamByteBuffer;
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/process/internal/worker/DefaultWorkerProcessFactory.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/process/internal/worker/DefaultWorkerProcessFactory.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/process/internal/worker/DefaultWorkerProcessFactory.java	2022-10-10 12:04:54.604155496 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/process/internal/worker/DefaultWorkerProcessFactory.java	2022-10-10 16:08:05.811956618 +0200
@@ -18,7 +18,7 @@
 
 import org.gradle.api.Action;
 import org.gradle.api.internal.ClassPathRegistry;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.logging.LoggingManager;
 import org.gradle.internal.classloader.ClasspathUtil;
 import org.gradle.internal.id.IdGenerator;
diff -Nur gradle-4.4.1/subprojects/core/src/main/java/org/gradle/testfixtures/internal/ProjectBuilderImpl.java gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/testfixtures/internal/ProjectBuilderImpl.java
--- gradle-4.4.1/subprojects/core/src/main/java/org/gradle/testfixtures/internal/ProjectBuilderImpl.java	2022-10-10 12:04:54.616155359 +0200
+++ gradle-4.4.1-new/subprojects/core/src/main/java/org/gradle/testfixtures/internal/ProjectBuilderImpl.java	2022-10-10 16:10:32.474439616 +0200
@@ -16,14 +16,16 @@
 
 package org.gradle.testfixtures.internal;
 
+import com.google.common.annotations.VisibleForTesting;
 import org.gradle.StartParameter;
 import org.gradle.api.Project;
 import org.gradle.api.internal.AsmBackedClassGenerator;
 import org.gradle.api.internal.GradleInternal;
 import org.gradle.api.internal.StartParameterInternal;
 import org.gradle.api.internal.file.FileResolver;
-import org.gradle.api.internal.file.TemporaryFileProvider;
-import org.gradle.api.internal.file.TmpDirTemporaryFileProvider;
+import org.gradle.api.internal.file.temp.DefaultTemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TmpDirTemporaryFileProvider;
 import org.gradle.api.internal.initialization.ClassLoaderScope;
 import org.gradle.api.internal.project.DefaultProject;
 import org.gradle.api.internal.project.IProjectFactory;
@@ -50,11 +52,15 @@
 import org.gradle.internal.time.Time;
 import org.gradle.internal.work.WorkerLeaseService;
 import org.gradle.invocation.DefaultGradle;
+import org.gradle.util.GFileUtils;
 
 import javax.annotation.Nullable;
 import java.io.File;
 
 public class ProjectBuilderImpl {
+    @VisibleForTesting
+    public static final String PROJECT_BUILDER_SYS_PROP = "org.gradle.project.builder.dir";
+
     private static ServiceRegistry globalServices;
     private static final AsmBackedClassGenerator CLASS_GENERATOR = new AsmBackedClassGenerator();
 
@@ -141,14 +147,31 @@
     }
 
     public File prepareProjectDir(@Nullable File projectDir) {
-        if (projectDir == null) {
-            TemporaryFileProvider temporaryFileProvider = TmpDirTemporaryFileProvider.createLegacy();
-            projectDir = temporaryFileProvider.createTemporaryDirectory("gradle", "projectDir");
+        if (projectDir != null) {
+            return FileUtils.canonicalize(projectDir);
+        }
+        if (System.getProperties().containsKey(PROJECT_BUILDER_SYS_PROP)) {
+            File tempDirectory = new File(System.getProperty(PROJECT_BUILDER_SYS_PROP));
+            GFileUtils.mkdirs(tempDirectory);
+            TemporaryFileProvider temporaryFileProvider = new DefaultTemporaryFileProvider(() -> tempDirectory);
+            File newProjectDirectory = temporaryFileProvider.createTemporaryDirectory("gradle", "projectDir");
             // TODO deleteOnExit won't clean up non-empty directories (and it leaks memory for long-running processes).
-            projectDir.deleteOnExit();
+            newProjectDirectory.deleteOnExit();
+            return newProjectDirectory;
         } else {
-            projectDir = FileUtils.canonicalize(projectDir);
-        }
-        return projectDir;
+            // TODO: This logic will be removed once Gradle is built with latest nightly.
+            TemporaryFileProvider temporaryFileProvider = TmpDirTemporaryFileProvider.createLegacy();
+            File tempDirectory = temporaryFileProvider.createTemporaryDirectory("gradle", "projectDir");
+            // TODO deleteOnExit won't clean up non-empty directories (and it leaks memory for long-running processes).
+            tempDirectory.deleteOnExit();
+            return tempDirectory;
+        } /* else {
+            // TODO: Restore this and remove above once changes merged to latest nightly.
+            String message = String.format(
+                "Either ProjectBuilder::withProjectDir must be called or `%s` system property must be set",
+                PROJECT_BUILDER_SYS_PROP
+            );
+            throw new IllegalStateException(message);
+        } */
     }
 }
diff -Nur gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/api/internal/file/DefaultFileOperationsTest.groovy gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/api/internal/file/DefaultFileOperationsTest.groovy
--- gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/api/internal/file/DefaultFileOperationsTest.groovy	2022-10-10 12:04:54.596155586 +0200
+++ gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/api/internal/file/DefaultFileOperationsTest.groovy	2022-10-10 16:11:02.050133701 +0200
@@ -30,6 +30,7 @@
 import org.gradle.api.internal.file.collections.DefaultDirectoryFileTreeFactory
 import org.gradle.api.internal.file.collections.FileTreeAdapter
 import org.gradle.api.internal.file.copy.DefaultCopySpec
+import org.gradle.api.internal.file.temp.TemporaryFileProvider
 import org.gradle.api.internal.tasks.TaskResolver
 import org.gradle.internal.classloader.ClasspathUtil
 import org.gradle.internal.hash.FileHasher
diff -Nur gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/api/internal/file/DefaultTemporaryFileProviderTest.groovy gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/api/internal/file/DefaultTemporaryFileProviderTest.groovy
--- gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/api/internal/file/DefaultTemporaryFileProviderTest.groovy	2022-10-10 12:04:54.596155586 +0200
+++ gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/api/internal/file/DefaultTemporaryFileProviderTest.groovy	2022-10-10 16:11:41.125729522 +0200
@@ -15,6 +15,7 @@
  */
 package org.gradle.api.internal.file
 
+import org.gradle.api.internal.file.temp.DefaultTemporaryFileProvider
 import org.gradle.internal.Factory
 import org.gradle.test.fixtures.file.TestNameTestDirectoryProvider
 import org.junit.Rule
diff -Nur gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/api/internal/project/DefaultProjectSpec.groovy gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/api/internal/project/DefaultProjectSpec.groovy
--- gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/api/internal/project/DefaultProjectSpec.groovy	2022-10-10 12:04:54.596155586 +0200
+++ gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/api/internal/project/DefaultProjectSpec.groovy	2022-10-11 17:21:08.203381703 +0200
@@ -26,7 +26,7 @@
 import org.gradle.api.internal.file.DefaultFileOperations
 import org.gradle.api.internal.file.FileLookup
 import org.gradle.api.internal.file.FileResolver
-import org.gradle.api.internal.file.TemporaryFileProvider
+import org.gradle.api.internal.file.temp.TemporaryFileProvider
 import org.gradle.api.internal.file.TestFiles
 import org.gradle.api.internal.file.collections.DefaultDirectoryFileTreeFactory
 import org.gradle.api.internal.initialization.ClassLoaderScope
diff -Nur gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/api/internal/resources/FileCollectionBackedTarArchiveTextResourceTest.groovy gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/api/internal/resources/FileCollectionBackedTarArchiveTextResourceTest.groovy
--- gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/api/internal/resources/FileCollectionBackedTarArchiveTextResourceTest.groovy	2022-10-10 12:04:54.596155586 +0200
+++ gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/api/internal/resources/FileCollectionBackedTarArchiveTextResourceTest.groovy	2022-10-10 16:12:24.433281573 +0200
@@ -18,7 +18,7 @@
 
 import com.google.common.base.Charsets
 import org.gradle.api.internal.file.FileOperations
-import org.gradle.api.internal.file.TemporaryFileProvider
+import org.gradle.api.internal.file.temp.TemporaryFileProvider
 
 class FileCollectionBackedTarArchiveTextResourceTest extends AbstractTextResourceTest {
     def setup() {
diff -Nur gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/api/internal/resources/FileCollectionBackedTextResourceTest.groovy gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/api/internal/resources/FileCollectionBackedTextResourceTest.groovy
--- gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/api/internal/resources/FileCollectionBackedTextResourceTest.groovy	2022-10-10 12:04:54.596155586 +0200
+++ gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/api/internal/resources/FileCollectionBackedTextResourceTest.groovy	2022-10-10 16:12:28.221242393 +0200
@@ -17,7 +17,7 @@
 package org.gradle.api.internal.resources
 
 import com.google.common.base.Charsets
-import org.gradle.api.internal.file.TemporaryFileProvider
+import org.gradle.api.internal.file.temp.TemporaryFileProvider
 
 class FileCollectionBackedTextResourceTest extends AbstractTextResourceTest {
     def setup() {
diff -Nur gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/api/internal/resources/FileCollectionBackedZipArchiveTextResourceTest.groovy gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/api/internal/resources/FileCollectionBackedZipArchiveTextResourceTest.groovy
--- gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/api/internal/resources/FileCollectionBackedZipArchiveTextResourceTest.groovy	2022-10-10 12:04:54.596155586 +0200
+++ gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/api/internal/resources/FileCollectionBackedZipArchiveTextResourceTest.groovy	2022-10-10 16:12:32.489198247 +0200
@@ -18,7 +18,7 @@
 
 import com.google.common.base.Charsets
 import org.gradle.api.internal.file.FileOperations
-import org.gradle.api.internal.file.TemporaryFileProvider
+import org.gradle.api.internal.file.temp.TemporaryFileProvider
 
 class FileCollectionBackedZipArchiveTextResourceTest extends AbstractTextResourceTest {
     def setup() {
diff -Nur gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/api/internal/resources/StringBackedTextResourceTest.groovy gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/api/internal/resources/StringBackedTextResourceTest.groovy
--- gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/api/internal/resources/StringBackedTextResourceTest.groovy	2022-10-10 12:04:54.596155586 +0200
+++ gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/api/internal/resources/StringBackedTextResourceTest.groovy	2022-10-10 16:12:36.801153646 +0200
@@ -16,7 +16,7 @@
 
 package org.gradle.api.internal.resources
 
-import org.gradle.api.internal.file.TemporaryFileProvider
+import org.gradle.api.internal.file.temp.TemporaryFileProvider
 
 class StringBackedTextResourceTest extends AbstractTextResourceTest {
     def setup() {
diff -Nur gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/internal/service/scopes/GradleUserHomeScopeServicesTest.groovy gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/internal/service/scopes/GradleUserHomeScopeServicesTest.groovy
--- gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/internal/service/scopes/GradleUserHomeScopeServicesTest.groovy	2022-10-10 12:04:54.600155541 +0200
+++ gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/internal/service/scopes/GradleUserHomeScopeServicesTest.groovy	2022-10-11 17:21:08.199381746 +0200
@@ -26,7 +26,7 @@
 import org.gradle.api.internal.changedetection.state.InMemoryCacheDecoratorFactory
 import org.gradle.api.internal.changedetection.state.ValueSnapshotter
 import org.gradle.api.internal.classpath.ModuleRegistry
-import org.gradle.api.internal.file.TemporaryFileProvider
+import org.gradle.api.internal.file.temp.TemporaryFileProvider
 import org.gradle.api.internal.file.collections.DirectoryFileTreeFactory
 import org.gradle.api.internal.initialization.loadercache.ClassLoaderCache
 import org.gradle.cache.CacheDecorator
diff -Nur gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/internal/service/scopes/ProjectScopeServicesTest.groovy gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/internal/service/scopes/ProjectScopeServicesTest.groovy
--- gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/internal/service/scopes/ProjectScopeServicesTest.groovy	2022-10-10 12:04:54.600155541 +0200
+++ gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/internal/service/scopes/ProjectScopeServicesTest.groovy	2022-10-11 17:21:08.199381746 +0200
@@ -32,7 +32,7 @@
 import org.gradle.api.internal.file.FileLookup
 import org.gradle.api.internal.file.FileOperations
 import org.gradle.api.internal.file.FileResolver
-import org.gradle.api.internal.file.TemporaryFileProvider
+import org.gradle.api.internal.file.temp.TemporaryFileProvider
 import org.gradle.api.internal.file.collections.DirectoryFileTreeFactory
 import org.gradle.api.internal.initialization.ClassLoaderScope
 import org.gradle.api.internal.initialization.DefaultScriptHandler
diff -Nur gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/process/internal/JavaExecHandleBuilderTest.groovy gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/process/internal/JavaExecHandleBuilderTest.groovy
--- gradle-4.4.1/subprojects/core/src/test/groovy/org/gradle/process/internal/JavaExecHandleBuilderTest.groovy	2022-10-10 12:04:54.592155632 +0200
+++ gradle-4.4.1-new/subprojects/core/src/test/groovy/org/gradle/process/internal/JavaExecHandleBuilderTest.groovy	2022-10-10 16:14:40.959869461 +0200
@@ -16,7 +16,7 @@
 package org.gradle.process.internal
 
 import org.gradle.api.internal.file.TestFiles
-import org.gradle.api.internal.file.TmpDirTemporaryFileProvider
+import org.gradle.api.internal.file.temp.TmpDirTemporaryFileProvider
 import org.gradle.internal.jvm.Jvm
 import spock.lang.Specification
 import spock.lang.Unroll
diff -Nur gradle-4.4.1/subprojects/core/src/testFixtures/groovy/org/gradle/test/fixtures/AbstractProjectBuilderSpec.groovy gradle-4.4.1-new/subprojects/core/src/testFixtures/groovy/org/gradle/test/fixtures/AbstractProjectBuilderSpec.groovy
--- gradle-4.4.1/subprojects/core/src/testFixtures/groovy/org/gradle/test/fixtures/AbstractProjectBuilderSpec.groovy	2022-10-10 12:04:54.592155632 +0200
+++ gradle-4.4.1-new/subprojects/core/src/testFixtures/groovy/org/gradle/test/fixtures/AbstractProjectBuilderSpec.groovy	2022-10-10 16:22:35.538876847 +0200
@@ -24,6 +24,7 @@
 import org.gradle.api.internal.tasks.execution.DefaultTaskExecutionContext
 import org.gradle.test.fixtures.file.CleanupTestDirectory
 import org.gradle.test.fixtures.file.TestNameTestDirectoryProvider
+import org.gradle.testfixtures.internal.ProjectBuilderImpl
 import org.gradle.util.TestUtil
 import org.gradle.util.UsesNativeServices
 import org.junit.Rule
@@ -49,6 +50,11 @@
     def setup() {
         project = TestUtil.createRootProject(temporaryFolder.testDirectory)
     }
+    
+    def cleanup() {
+        // The root project needs to be cleaned up
+        ProjectBuilderImpl.stop(project)
+    }
 
     void execute(Task task) {
         project.services.get(TaskExecuter).execute((TaskInternal) task, (TaskStateInternal) task.state, new DefaultTaskExecutionContext())
diff -Nur gradle-4.4.1/subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/DependencyManagementBuildScopeServices.java gradle-4.4.1-new/subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/DependencyManagementBuildScopeServices.java
--- gradle-4.4.1/subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/DependencyManagementBuildScopeServices.java	2022-10-10 12:04:54.492156771 +0200
+++ gradle-4.4.1-new/subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/DependencyManagementBuildScopeServices.java	2022-10-11 17:21:08.203381703 +0200
@@ -66,8 +66,8 @@
 import org.gradle.api.internal.artifacts.vcs.VcsDependencyResolver;
 import org.gradle.api.internal.attributes.ImmutableAttributesFactory;
 import org.gradle.api.internal.file.FileLookup;
-import org.gradle.api.internal.file.TemporaryFileProvider;
-import org.gradle.api.internal.file.TmpDirTemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TmpDirTemporaryFileProvider;
 import org.gradle.api.internal.file.collections.DirectoryFileTreeFactory;
 import org.gradle.api.internal.filestore.ivy.ArtifactIdentifierFileStore;
 import org.gradle.api.internal.model.NamedObjectInstantiator;
diff -Nur gradle-4.4.1/subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/resolveengine/store/ResolutionResultsStoreFactory.java gradle-4.4.1-new/subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/resolveengine/store/ResolutionResultsStoreFactory.java
--- gradle-4.4.1/subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/resolveengine/store/ResolutionResultsStoreFactory.java	2022-10-10 12:04:54.488156816 +0200
+++ gradle-4.4.1-new/subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/resolveengine/store/ResolutionResultsStoreFactory.java	2022-10-11 12:09:42.961590836 +0200
@@ -18,7 +18,7 @@
 
 import org.gradle.api.artifacts.result.ResolvedComponentResult;
 import org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.TransientConfigurationResults;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.logging.Logger;
 import org.gradle.api.logging.Logging;
 import org.gradle.cache.internal.Store;
diff -Nur gradle-4.4.1/subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/repositories/transport/RepositoryTransportFactory.java gradle-4.4.1-new/subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/repositories/transport/RepositoryTransportFactory.java
--- gradle-4.4.1/subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/repositories/transport/RepositoryTransportFactory.java	2022-10-10 12:04:54.492156771 +0200
+++ gradle-4.4.1-new/subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/repositories/transport/RepositoryTransportFactory.java	2022-10-11 17:17:21.065787082 +0200
@@ -23,7 +23,7 @@
 import org.gradle.api.internal.artifacts.ivyservice.ivyresolve.StartParameterResolutionOverride;
 import org.gradle.api.internal.artifacts.ivyservice.resolutionstrategy.DefaultExternalResourceCachePolicy;
 import org.gradle.api.internal.artifacts.ivyservice.resolutionstrategy.ExternalResourceCachePolicy;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.authentication.Authentication;
 import org.gradle.cache.internal.ProducerGuard;
 import org.gradle.internal.authentication.AuthenticationInternal;
diff -Nur gradle-4.4.1/subprojects/dependency-management/src/main/java/org/gradle/api/internal/filestore/ivy/ArtifactIdentifierFileStore.java gradle-4.4.1-new/subprojects/dependency-management/src/main/java/org/gradle/api/internal/filestore/ivy/ArtifactIdentifierFileStore.java
--- gradle-4.4.1/subprojects/dependency-management/src/main/java/org/gradle/api/internal/filestore/ivy/ArtifactIdentifierFileStore.java	2022-10-10 12:04:54.492156771 +0200
+++ gradle-4.4.1-new/subprojects/dependency-management/src/main/java/org/gradle/api/internal/filestore/ivy/ArtifactIdentifierFileStore.java	2022-10-11 12:09:49.093532892 +0200
@@ -18,7 +18,7 @@
 
 import org.gradle.api.Transformer;
 // import org.gradle.api.internal.artifacts.ivyservice.ArtifactCacheMetadata;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 // import org.gradle.api.internal.file.TmpDirTemporaryFileProvider;
 import org.gradle.internal.component.external.model.ModuleComponentArtifactIdentifier;
 import org.gradle.internal.resource.local.GroupedAndNamedUniqueFileStore;
diff -Nur gradle-4.4.1/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/cached/ExternalResourceFileStore.java gradle-4.4.1-new/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/cached/ExternalResourceFileStore.java
--- gradle-4.4.1/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/cached/ExternalResourceFileStore.java	2022-10-10 12:04:54.496156726 +0200
+++ gradle-4.4.1-new/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/cached/ExternalResourceFileStore.java	2022-10-11 17:21:08.199381746 +0200
@@ -17,7 +17,7 @@
 
 import org.apache.commons.lang.StringUtils;
 import org.gradle.api.Transformer;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.internal.resource.local.GroupedAndNamedUniqueFileStore;
 import org.gradle.internal.resource.local.UniquePathKeyFileStore;
 
diff -Nur gradle-4.4.1/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/transfer/DefaultCacheAwareExternalResourceAccessor.java gradle-4.4.1-new/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/transfer/DefaultCacheAwareExternalResourceAccessor.java
--- gradle-4.4.1/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/transfer/DefaultCacheAwareExternalResourceAccessor.java	2022-10-10 12:04:54.496156726 +0200
+++ gradle-4.4.1-new/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/transfer/DefaultCacheAwareExternalResourceAccessor.java	2022-10-11 12:09:58.797443103 +0200
@@ -22,7 +22,7 @@
 import org.gradle.api.UncheckedIOException;
 import org.gradle.api.internal.artifacts.ivyservice.CacheLockingManager;
 import org.gradle.api.internal.artifacts.ivyservice.resolutionstrategy.ExternalResourceCachePolicy;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.resources.ResourceException;
 import org.gradle.cache.internal.ProducerGuard;
 import org.gradle.internal.Factory;
diff -Nur gradle-4.4.1/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/transport/file/FileTransport.java gradle-4.4.1-new/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/transport/file/FileTransport.java
--- gradle-4.4.1/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/transport/file/FileTransport.java	2022-10-10 12:04:54.496156726 +0200
+++ gradle-4.4.1-new/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/transport/file/FileTransport.java	2022-10-11 12:10:04.717394918 +0200
@@ -18,7 +18,7 @@
 import org.gradle.api.internal.artifacts.ivyservice.CacheLockingManager;
 import org.gradle.api.internal.artifacts.ivyservice.resolutionstrategy.DefaultExternalResourceCachePolicy;
 import org.gradle.api.internal.artifacts.ivyservice.resolutionstrategy.ExternalResourceCachePolicy;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.cache.internal.ProducerGuard;
 import org.gradle.internal.resource.ExternalResourceName;
 import org.gradle.internal.resource.ExternalResourceRepository;
diff -Nur gradle-4.4.1/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/transport/ResourceConnectorRepositoryTransport.java gradle-4.4.1-new/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/transport/ResourceConnectorRepositoryTransport.java
--- gradle-4.4.1/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/transport/ResourceConnectorRepositoryTransport.java	2022-10-10 12:04:54.496156726 +0200
+++ gradle-4.4.1-new/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/transport/ResourceConnectorRepositoryTransport.java	2022-10-11 17:21:08.203381703 +0200
@@ -18,7 +18,7 @@
 
 import org.gradle.api.internal.artifacts.ivyservice.CacheLockingManager;
 import org.gradle.api.internal.artifacts.ivyservice.resolutionstrategy.ExternalResourceCachePolicy;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.cache.internal.ProducerGuard;
 import org.gradle.internal.logging.progress.ProgressLoggerFactory;
 import org.gradle.internal.operations.BuildOperationExecutor;
diff -Nur gradle-4.4.1/subprojects/dependency-management/src/test/groovy/org/gradle/api/internal/artifacts/ivyservice/resolveengine/store/ResolutionResultsStoreFactoryTest.groovy gradle-4.4.1-new/subprojects/dependency-management/src/test/groovy/org/gradle/api/internal/artifacts/ivyservice/resolveengine/store/ResolutionResultsStoreFactoryTest.groovy
--- gradle-4.4.1/subprojects/dependency-management/src/test/groovy/org/gradle/api/internal/artifacts/ivyservice/resolveengine/store/ResolutionResultsStoreFactoryTest.groovy	2022-10-10 12:04:54.480156908 +0200
+++ gradle-4.4.1-new/subprojects/dependency-management/src/test/groovy/org/gradle/api/internal/artifacts/ivyservice/resolveengine/store/ResolutionResultsStoreFactoryTest.groovy	2022-10-11 12:08:57.706018480 +0200
@@ -16,8 +16,8 @@
 
 package org.gradle.api.internal.artifacts.ivyservice.resolveengine.store
 
-import org.gradle.api.internal.file.TestFiles
-import org.gradle.api.internal.file.TmpDirTemporaryFileProvider
+import org.gradle.api.internal.temp.file.TestFiles
+import org.gradle.api.internal.temp.file.TmpDirTemporaryFileProvider
 import org.gradle.cache.internal.BinaryStore
 import org.gradle.internal.concurrent.CompositeStoppable
 import org.gradle.test.fixtures.file.TestNameTestDirectoryProvider
diff -Nur gradle-4.4.1/subprojects/dependency-management/src/test/groovy/org/gradle/internal/resource/transfer/DefaultCacheAwareExternalResourceAccessorTest.groovy gradle-4.4.1-new/subprojects/dependency-management/src/test/groovy/org/gradle/internal/resource/transfer/DefaultCacheAwareExternalResourceAccessorTest.groovy
--- gradle-4.4.1/subprojects/dependency-management/src/test/groovy/org/gradle/internal/resource/transfer/DefaultCacheAwareExternalResourceAccessorTest.groovy	2022-10-10 12:04:54.484156863 +0200
+++ gradle-4.4.1-new/subprojects/dependency-management/src/test/groovy/org/gradle/internal/resource/transfer/DefaultCacheAwareExternalResourceAccessorTest.groovy	2022-10-11 17:21:08.199381746 +0200
@@ -19,7 +19,7 @@
 import org.gradle.api.Transformer
 import org.gradle.api.internal.artifacts.ivyservice.CacheLockingManager
 import org.gradle.api.internal.artifacts.ivyservice.resolutionstrategy.DefaultExternalResourceCachePolicy
-import org.gradle.api.internal.file.TemporaryFileProvider
+import org.gradle.api.internal.file.temp.TemporaryFileProvider
 import org.gradle.cache.internal.ProducerGuard
 import org.gradle.internal.hash.HashUtil
 import org.gradle.internal.resource.ExternalResource
diff -Nur gradle-4.4.1/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/DefaultTemporaryFileProvider.java gradle-4.4.1-new/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/DefaultTemporaryFileProvider.java
--- gradle-4.4.1/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/DefaultTemporaryFileProvider.java	2022-10-10 12:04:54.760153718 +0200
+++ gradle-4.4.1-new/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/DefaultTemporaryFileProvider.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,67 +0,0 @@
-/*
- * Copyright 2010 the original author or authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.gradle.api.internal.file;
-
-import org.gradle.api.UncheckedIOException;
-import org.gradle.internal.Factory;
-import org.gradle.internal.FileUtils;
-import org.gradle.internal.file.TempFiles;
-import org.gradle.util.CollectionUtils;
-import org.gradle.util.GFileUtils;
-
-import javax.annotation.Nonnull;
-import javax.annotation.Nullable;
-import java.io.File;
-import java.io.IOException;
-import java.io.Serializable;
-
-public class DefaultTemporaryFileProvider implements TemporaryFileProvider, Serializable {
-    private final Factory<File> baseDirFactory;
-
-    public DefaultTemporaryFileProvider(final Factory<File> fileFactory) {
-        this.baseDirFactory = fileFactory;
-    }
-
-    public File newTemporaryFile(String... path) {
-        return FileUtils.canonicalize(new File(baseDirFactory.create(), CollectionUtils.join("/", path)));
-    }
-
-    public File createTemporaryFile(String prefix, @Nullable String suffix, String... path) {
-        File dir = new File(baseDirFactory.create(), CollectionUtils.join("/", path));
-        GFileUtils.mkdirs(dir);
-        try {
-            return File.createTempFile(prefix, suffix, dir);
-        } catch (IOException e) {
-            throw new UncheckedIOException(e);
-        }
-    }
-
-    public File createTemporaryDirectory(@Nullable @Nonnull String prefix, @Nullable String suffix, @Nullable String... path) {
-        File dir = new File(baseDirFactory.create(), CollectionUtils.join("/", path));
-        GFileUtils.mkdirs(dir);
-        try {
-            // TODO: This is not a great paradigm for creating a temporary directory.
-            // See http://guava-libraries.googlecode.com/svn/tags/release08/javadoc/com/google/common/io/Files.html#createTempDir%28%29 for an alternative.
-            File tmpDir = TempFiles.createTempFile(prefix, suffix, dir);
-            tmpDir.delete();
-            tmpDir.mkdir();
-            return tmpDir;
-        } catch (IOException e) {
-            throw new UncheckedIOException(e);
-        }
-    }
-}
diff -Nur gradle-4.4.1/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/DefaultTemporaryFileProvider.java gradle-4.4.1-new/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/DefaultTemporaryFileProvider.java
--- gradle-4.4.1/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/DefaultTemporaryFileProvider.java	1970-01-01 01:00:00.000000000 +0100
+++ gradle-4.4.1-new/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/DefaultTemporaryFileProvider.java	2022-10-10 16:45:06.640250804 +0200
@@ -0,0 +1,69 @@
+/*
+ * Copyright 2010 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gradle.api.internal.file.temp;
+
+import org.gradle.api.UncheckedIOException;
+import org.gradle.internal.Factory;
+import org.gradle.internal.FileUtils;
+import org.gradle.util.CollectionUtils;
+import org.gradle.util.GFileUtils;
+
+import javax.annotation.Nullable;
+import java.io.File;
+import java.io.IOException;
+import java.io.Serializable;
+
+public class DefaultTemporaryFileProvider implements TemporaryFileProvider, Serializable {
+    private final Factory<File> baseDirFactory;
+
+    public DefaultTemporaryFileProvider(final Factory<File> fileFactory) {
+        this.baseDirFactory = fileFactory;
+    }
+
+    public File newTemporaryFile(String... path) {
+        return FileUtils.canonicalize(new File(baseDirFactory.create(), CollectionUtils.join("/", path)));
+    }
+
+    public File createTemporaryFile(String prefix, @Nullable String suffix, String... path) {
+        File dir = new File(baseDirFactory.create(), CollectionUtils.join("/", path));
+        GFileUtils.mkdirs(dir);
+        try {
+            return File.createTempFile(prefix, suffix, dir);
+        } catch (IOException e) {
+            throw new UncheckedIOException(e);
+        }
+    }
+
+    public File createTemporaryDirectory(String prefix, @Nullable String suffix, @Nullable String... path) {
+        File dir = new File(baseDirFactory.create(), CollectionUtils.join("/", path));
+        GFileUtils.mkdirs(dir);
+        try {
+            // TODO: This is not a great paradigm for creating a temporary directory.
+            // See http://guava-libraries.googlecode.com/svn/tags/release08/javadoc/com/google/common/io/Files.html#createTempDir%28%29 for an alternative.
+            File tmpDir = TempFiles.createTempFile(prefix, suffix, dir);
+            if (!tmpDir.delete()) {
+                throw new UncheckedIOException("Failed to delete file: " + tmpDir);
+            }
+            if (!tmpDir.mkdir()) {
+                throw new UncheckedIOException("Failed to make directory: " + tmpDir);
+            }
+            return tmpDir;
+        } catch (IOException e) {
+            throw new UncheckedIOException(e);
+        }
+    }
+}
diff -Nur gradle-4.4.1/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/GradleUserHomeTemporaryFileProvider.java gradle-4.4.1-new/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/GradleUserHomeTemporaryFileProvider.java
--- gradle-4.4.1/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/GradleUserHomeTemporaryFileProvider.java	1970-01-01 01:00:00.000000000 +0100
+++ gradle-4.4.1-new/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/GradleUserHomeTemporaryFileProvider.java	2022-10-11 16:56:31.159513505 +0200
@@ -0,0 +1,36 @@
+/*
+ * Copyright 2020 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gradle.api.internal.file.temp;
+
+import org.gradle.initialization.GradleUserHomeDirProvider;
+import org.gradle.internal.Factory;
+import org.gradle.internal.FileUtils;
+
+import javax.inject.Inject;
+import java.io.File;
+
+public class GradleUserHomeTemporaryFileProvider extends DefaultTemporaryFileProvider {
+    @Inject
+    public GradleUserHomeTemporaryFileProvider(final GradleUserHomeDirProvider gradleUserHomeDirProvider) {
+        super(new Factory<File>() {
+            @Override
+            public File create() {
+                return FileUtils.canonicalize(new File(gradleUserHomeDirProvider.getGradleUserHomeDirectory(), ".tmp"));
+            }
+        });
+    }
+}
\ No newline at end of file
diff -Nur gradle-4.4.1/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/TempFiles.java gradle-4.4.1-new/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/TempFiles.java
--- gradle-4.4.1/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/TempFiles.java	1970-01-01 01:00:00.000000000 +0100
+++ gradle-4.4.1-new/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/TempFiles.java	2022-10-10 16:48:26.618035145 +0200
@@ -0,0 +1,46 @@
+/*
+ * Copyright 2020 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gradle.api.internal.file.temp;
+
+import javax.annotation.CheckReturnValue;
+import java.io.File;
+import java.io.IOException;
+
+/**
+ * Security safe API's for creating temporary files.
+ */
+public final class TempFiles {
+
+    private TempFiles() {
+        /* no-op */
+    }
+
+    /**
+     * Improves the security guarantees of {@link File#createTempFile(String, String, File)}.
+     *
+     * @see File#createTempFile(String, String, File)
+     */
+    @CheckReturnValue
+    public static File createTempFile(String prefix, String suffix, File directory) throws IOException {
+        //noinspection ConstantConditions
+        if (directory == null) {
+            throw new NullPointerException("The `directory` argument must not be null as this will default to the system temporary directory");
+        }
+        return File.createTempFile(prefix, suffix, directory);
+    }
+
+}
\ No newline at end of file
diff -Nur gradle-4.4.1/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/TemporaryFileProvider.java gradle-4.4.1-new/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/TemporaryFileProvider.java
--- gradle-4.4.1/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/TemporaryFileProvider.java	1970-01-01 01:00:00.000000000 +0100
+++ gradle-4.4.1-new/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/TemporaryFileProvider.java	2022-10-10 16:43:11.821522945 +0200
@@ -0,0 +1,39 @@
+/*
+ * Copyright 2010 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.gradle.api.internal.file.temp;
+
+import javax.annotation.Nullable;
+import java.io.File;
+
+public interface TemporaryFileProvider {
+    /**
+     * Allocates a new temporary file with the exact specified path,
+     * relative to the temporary file directory. Does not create the file.
+     * Provides no guarantees around whether the file already exists.
+     *
+     * @param path The tail path components for the file.
+     * @return The file
+     */
+    File newTemporaryFile(String... path);
+
+    /**
+     * Allocates and creates a new temporary file with the given prefix, suffix,
+     * and path, relative to the temporary file directory.
+     */
+    File createTemporaryFile(String prefix, @Nullable String suffix, String... path);
+
+    File createTemporaryDirectory(@Nullable String prefix, @Nullable String suffix, String... path);
+}
diff -Nur gradle-4.4.1/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/TmpDirTemporaryFileProvider.java gradle-4.4.1-new/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/TmpDirTemporaryFileProvider.java
--- gradle-4.4.1/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/TmpDirTemporaryFileProvider.java	1970-01-01 01:00:00.000000000 +0100
+++ gradle-4.4.1-new/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/temp/TmpDirTemporaryFileProvider.java	2022-10-10 16:43:16.209474329 +0200
@@ -0,0 +1,55 @@
+/*
+ * Copyright 2020 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gradle.api.internal.file.temp;
+
+import org.gradle.internal.Factory;
+import org.gradle.internal.FileUtils;
+import org.gradle.internal.SystemProperties;
+
+import javax.inject.Inject;
+import java.io.File;
+
+public class TmpDirTemporaryFileProvider extends DefaultTemporaryFileProvider {
+
+    @Inject
+    TmpDirTemporaryFileProvider() {
+        super(new Factory<File>() {
+            @Override
+            public File create() {
+                @SuppressWarnings("deprecation") final String tempDirLocation = SystemProperties.getInstance().getJavaIoTmpDir();
+                return FileUtils.canonicalize(new File(tempDirLocation));
+            }
+        });
+    }
+
+    private TmpDirTemporaryFileProvider(final Factory<File> tempDirProvider) {
+        super(new Factory<File>() {
+            @Override
+            public File create() {
+                return FileUtils.canonicalize(tempDirProvider.create());
+            }
+        });
+    }
+
+    public static TmpDirTemporaryFileProvider createLegacy() {
+        return new TmpDirTemporaryFileProvider();
+    }
+
+    public static TmpDirTemporaryFileProvider createFromCustomBase(Factory<File> tempDirProvider) {
+        return new TmpDirTemporaryFileProvider(tempDirProvider);
+    }
+}
\ No newline at end of file
diff -Nur gradle-4.4.1/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/TemporaryFileProvider.java gradle-4.4.1-new/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/TemporaryFileProvider.java
--- gradle-4.4.1/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/TemporaryFileProvider.java	2022-10-10 12:04:54.760153718 +0200
+++ gradle-4.4.1-new/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/TemporaryFileProvider.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,39 +0,0 @@
-/*
- * Copyright 2010 the original author or authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.gradle.api.internal.file;
-
-import javax.annotation.Nullable;
-import java.io.File;
-
-public interface TemporaryFileProvider {
-    /**
-     * Allocates a new temporary file with the exact specified path,
-     * relative to the temporary file directory. Does not create the file.
-     * Provides no guarantees around whether the file already exists.
-     *
-     * @param path The tail path components for the file.
-     * @return The file
-     */
-    File newTemporaryFile(String... path);
-
-    /**
-     * Allocates and creates a new temporary file with the given prefix, suffix,
-     * and path, relative to the temporary file directory.
-     */
-    File createTemporaryFile(String prefix, @Nullable String suffix, String... path);
-
-    File createTemporaryDirectory(@Nullable String prefix, @Nullable String suffix, String... path);
-}
diff -Nur gradle-4.4.1/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/TmpDirTemporaryFileProvider.java gradle-4.4.1-new/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/TmpDirTemporaryFileProvider.java
--- gradle-4.4.1/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/TmpDirTemporaryFileProvider.java	2022-10-10 12:04:54.760153718 +0200
+++ gradle-4.4.1-new/subprojects/file-temp/src/main/java/org/gradle/api/internal/file/TmpDirTemporaryFileProvider.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,55 +0,0 @@
-/*
- * Copyright 2020 the original author or authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.gradle.api.internal.file;
-
-import org.gradle.internal.Factory;
-import org.gradle.internal.FileUtils;
-import org.gradle.internal.SystemProperties;
-
-import javax.inject.Inject;
-import java.io.File;
-
-public class TmpDirTemporaryFileProvider extends DefaultTemporaryFileProvider {
-
-    @Inject
-    TmpDirTemporaryFileProvider() {
-        super(new Factory<File>() {
-            @Override
-            public File create() {
-                @SuppressWarnings("deprecation") final String tempDirLocation = SystemProperties.getInstance().getJavaIoTmpDir();
-                return FileUtils.canonicalize(new File(tempDirLocation));
-            }
-        });
-    }
-
-    private TmpDirTemporaryFileProvider(final Factory<File> tempDirProvider) {
-        super(new Factory<File>() {
-            @Override
-            public File create() {
-                return FileUtils.canonicalize(tempDirProvider.create());
-            }
-        });
-    }
-
-    public static TmpDirTemporaryFileProvider createLegacy() {
-        return new TmpDirTemporaryFileProvider();
-    }
-
-    public static TmpDirTemporaryFileProvider createFromCustomBase(Factory<File> tempDirProvider) {
-        return new TmpDirTemporaryFileProvider(tempDirProvider);
-    }
-}
\ No newline at end of file
diff -Nur gradle-4.4.1/subprojects/file-temp/src/testFixtures/groovy/org/gradle/api/internal/file/temp/FilePermissionsCheckerFixture.groovy gradle-4.4.1-new/subprojects/file-temp/src/testFixtures/groovy/org/gradle/api/internal/file/temp/FilePermissionsCheckerFixture.groovy
--- gradle-4.4.1/subprojects/file-temp/src/testFixtures/groovy/org/gradle/api/internal/file/temp/FilePermissionsCheckerFixture.groovy	1970-01-01 01:00:00.000000000 +0100
+++ gradle-4.4.1-new/subprojects/file-temp/src/testFixtures/groovy/org/gradle/api/internal/file/temp/FilePermissionsCheckerFixture.groovy	2022-10-10 16:53:08.534907951 +0200
@@ -0,0 +1,81 @@
+/*
+ * Copyright 2020 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gradle.api.internal.file.temp
+
+import org.intellij.lang.annotations.Language
+
+class FilePermissionsCheckerFixture {
+
+    static String createFileContents() {
+        @Language("groovy")
+        String filePermissionsChecker = """
+import groovy.transform.CompileStatic
+import java.io.File
+import java.nio.file.Files
+import java.nio.file.Path
+import java.nio.file.Paths
+import java.nio.file.attribute.PosixFilePermission
+@CompileStatic
+class FilePermissionsChecker {
+    static void assertSafeParentFile(File file) {
+        def userHome = new File(System.getProperty("user.home")).toPath()
+        if (System.getProperty("os.name").toLowerCase().contains("windows")) {
+            // Windows this should always be true
+            assert file.toPath().startsWith(userHome) : "Test kit directory must be under the user home for security reasons. Home: '\$userHome', File: '\${file.toPath()}'"
+        } else if (file.toPath().startsWith(userHome)) {
+            // Most other cases this will be true
+            assert file.toPath().startsWith(userHome) : 'Test kit directory must be under the user home for security reasons'
+        } else {
+            // When run under test distribution, execution will be out of temp, so do a recursive file permissions check
+            assertSafePosixPermissions(file)
+        }
+    }
+    private static void assertSafePosixPermissions(File file) {
+        Path path = file.toPath()
+        Path start
+        if (file.exists()) {
+            start = path
+        } else {
+            start = path.parent
+        }
+        if (!hasSafePosixPermissionsRecursive(start)) {
+            String message = "Test kit directory must be under a posix protected directory for security reasons. "+
+                "Some parent must not have permissions \${PosixFilePermission.OTHERS_READ} nor \${PosixFilePermission.OTHERS_WRITE}"
+            throw new AssertionError(message as Object)
+        }
+    }
+    /**
+    * Performs a recursive check of this path and it's parents to find a parent with safe posix permissions.
+    * @return true when this directory, or one of it's parent directories has posix file permissions that are deemed safe.
+    */
+    private static boolean hasSafePosixPermissionsRecursive(Path path) {
+        Set<PosixFilePermission> filePermissions = Files.getPosixFilePermissions(path)
+        if (filePermissions.contains(PosixFilePermission.OTHERS_READ) || filePermissions.contains(PosixFilePermission.OTHERS_WRITE)) {
+            Path parent = path.parent
+            if (parent == null || parent.nameCount == 0) {
+                return false
+            }
+            return hasSafePosixPermissionsRecursive(parent)
+        } else {
+            return true
+        }
+    }
+}
+"""
+        return filePermissionsChecker
+    }
+}
\ No newline at end of file
diff -Nur gradle-4.4.1/subprojects/ide/src/test/groovy/org/gradle/plugins/ide/idea/model/internal/IdeaDependenciesProviderTest.groovy gradle-4.4.1-new/subprojects/ide/src/test/groovy/org/gradle/plugins/ide/idea/model/internal/IdeaDependenciesProviderTest.groovy
--- gradle-4.4.1/subprojects/ide/src/test/groovy/org/gradle/plugins/ide/idea/model/internal/IdeaDependenciesProviderTest.groovy	2022-10-10 12:04:54.716154219 +0200
+++ gradle-4.4.1-new/subprojects/ide/src/test/groovy/org/gradle/plugins/ide/idea/model/internal/IdeaDependenciesProviderTest.groovy	2022-10-10 16:59:53.414410285 +0200
@@ -31,13 +31,19 @@
 import org.gradle.util.TestUtil
 
 public class IdeaDependenciesProviderTest extends AbstractProjectBuilderSpec {
-    private final ProjectInternal project = TestUtil.createRootProject(temporaryFolder.testDirectory)
-    private final ProjectInternal childProject = TestUtil.createChildProject(project, "child", new File("."))
-    def serviceRegistry = new DefaultServiceRegistry()
-        .add(LocalComponentRegistry, Stub(LocalComponentRegistry))
-        .add(IncludedBuildTaskGraph, Stub(IncludedBuildTaskGraph))
-        .add(BuildIdentity, new DefaultBuildIdentity(new DefaultBuildIdentifier("foo")))
-    private final dependenciesProvider = new IdeaDependenciesProvider(serviceRegistry)
+    private ProjectInternal childProject
+    private IdeArtifactRegistry artifactRegistry
+    private IdeaDependenciesProvider dependenciesProvider
+
+    def setup() {
+        childProject = TestUtil.createChildProject(project, "child", temporaryFolder.testDirectory.file("child"))
+        artifactRegistry = Stub(IdeArtifactRegistry)
+        dependenciesProvider = new IdeaDependenciesProvider(project, artifactRegistry, project.services.get(ProjectStateRegistry), NullGradleApiSourcesResolver.INSTANCE)
+
+        _ * artifactRegistry.getIdeProject(_, _) >> { Class c, def m ->
+            return Stub(c)
+        }
+    }
 
     def "no dependencies test"() {
         applyPluginToProjects()
diff -Nur gradle-4.4.1/subprojects/internal-integ-testing/src/main/groovy/org/gradle/integtests/fixtures/AbstractIntegrationSpec.groovy gradle-4.4.1-new/subprojects/internal-integ-testing/src/main/groovy/org/gradle/integtests/fixtures/AbstractIntegrationSpec.groovy
--- gradle-4.4.1/subprojects/internal-integ-testing/src/main/groovy/org/gradle/integtests/fixtures/AbstractIntegrationSpec.groovy	2022-10-10 12:04:54.672154720 +0200
+++ gradle-4.4.1-new/subprojects/internal-integ-testing/src/main/groovy/org/gradle/integtests/fixtures/AbstractIntegrationSpec.groovy	2022-10-10 17:03:59.727674100 +0200
@@ -36,6 +36,7 @@
 import org.gradle.test.fixtures.maven.MavenLocalRepository
 import org.gradle.testing.internal.util.Specification
 import org.hamcrest.CoreMatchers
+import org.intellij.lang.annotations.Language
 import org.hamcrest.Matcher
 import org.junit.Rule
 
@@ -127,6 +128,14 @@
         file("build/classes/", language, sourceSet, fqcn)
     }
 
+    TestFile groovyTestSourceFile(@Language("groovy") String source) {
+        file("src/test/groovy/Test.groovy") << source
+    }
+
+    TestFile javaTestSourceFile(@Language("java") String source) {
+        file("src/test/java/Test.java") << source
+    }
+
     protected GradleExecuter sample(Sample sample) {
         inDirectory(sample.dir)
     }
diff -Nur gradle-4.4.1/subprojects/language-groovy/src/main/java/org/gradle/api/internal/tasks/AntGroovydoc.java gradle-4.4.1-new/subprojects/language-groovy/src/main/java/org/gradle/api/internal/tasks/AntGroovydoc.java
--- gradle-4.4.1/subprojects/language-groovy/src/main/java/org/gradle/api/internal/tasks/AntGroovydoc.java	2022-10-10 12:04:54.624155268 +0200
+++ gradle-4.4.1-new/subprojects/language-groovy/src/main/java/org/gradle/api/internal/tasks/AntGroovydoc.java	2022-10-10 17:06:32.665975148 +0200
@@ -28,7 +28,7 @@
 import org.gradle.api.Project;
 import org.gradle.api.file.CopySpec;
 import org.gradle.api.file.FileCollection;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.internal.file.FileOperations;
 import org.gradle.api.internal.project.IsolatedAntBuilder;
 import org.gradle.api.internal.project.ProjectInternal;
diff -Nur gradle-4.4.1/subprojects/language-groovy/src/main/java/org/gradle/api/tasks/compile/GroovyCompile.java gradle-4.4.1-new/subprojects/language-groovy/src/main/java/org/gradle/api/tasks/compile/GroovyCompile.java
--- gradle-4.4.1/subprojects/language-groovy/src/main/java/org/gradle/api/tasks/compile/GroovyCompile.java	2022-10-10 12:04:54.624155268 +0200
+++ gradle-4.4.1-new/subprojects/language-groovy/src/main/java/org/gradle/api/tasks/compile/GroovyCompile.java	2022-10-10 17:07:05.785607230 +0200
@@ -24,6 +24,7 @@
 import org.gradle.api.file.FileCollection;
 import org.gradle.api.file.FileTree;
 import org.gradle.api.internal.file.FileResolver;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.internal.project.ProjectInternal;
 import org.gradle.api.internal.tasks.JavaToolChainFactory;
 import org.gradle.api.internal.tasks.compile.AnnotationProcessorDetector;
diff -Nur gradle-4.4.1/subprojects/language-groovy/src/main/java/org/gradle/api/tasks/javadoc/Groovydoc.java gradle-4.4.1-new/subprojects/language-groovy/src/main/java/org/gradle/api/tasks/javadoc/Groovydoc.java
--- gradle-4.4.1/subprojects/language-groovy/src/main/java/org/gradle/api/tasks/javadoc/Groovydoc.java	2022-10-10 12:04:54.624155268 +0200
+++ gradle-4.4.1-new/subprojects/language-groovy/src/main/java/org/gradle/api/tasks/javadoc/Groovydoc.java	2022-10-11 17:08:56.747411546 +0200
@@ -19,7 +19,7 @@
 import org.gradle.api.InvalidUserDataException;
 import org.gradle.api.file.FileCollection;
 import org.gradle.api.file.FileTree;
-import org.gradle.api.internal.file.TmpDirTemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.internal.project.IsolatedAntBuilder;
 import org.gradle.api.internal.tasks.AntGroovydoc;
 import org.gradle.api.logging.LogLevel;
@@ -179,7 +179,7 @@
     public AntGroovydoc getAntGroovydoc() {
         if (antGroovydoc == null) {
             IsolatedAntBuilder antBuilder = getServices().get(IsolatedAntBuilder.class);
-            TmpDirTemporaryFileProvider temporaryFileProvider = getServices().get(TmpDirTemporaryFileProvider.class);
+            TemporaryFileProvider temporaryFileProvider = getServices().get(TemporaryFileProvider.class);
             antGroovydoc = new AntGroovydoc(antBuilder, temporaryFileProvider);
         }
         return antGroovydoc;
diff -Nur gradle-4.4.1/subprojects/language-java/src/main/java/org/gradle/api/tasks/compile/JavaCompile.java gradle-4.4.1-new/subprojects/language-java/src/main/java/org/gradle/api/tasks/compile/JavaCompile.java
--- gradle-4.4.1/subprojects/language-java/src/main/java/org/gradle/api/tasks/compile/JavaCompile.java	2022-10-10 12:04:54.752153810 +0200
+++ gradle-4.4.1-new/subprojects/language-java/src/main/java/org/gradle/api/tasks/compile/JavaCompile.java	2022-10-10 17:08:13.108859354 +0200
@@ -23,6 +23,7 @@
 import org.gradle.api.file.FileTree;
 import org.gradle.api.internal.changedetection.changes.IncrementalTaskInputsInternal;
 import org.gradle.api.internal.file.FileOperations;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.internal.tasks.JavaToolChainFactory;
 import org.gradle.api.internal.tasks.compile.AnnotationProcessorDetector;
 import org.gradle.api.internal.tasks.compile.CleaningJavaCompiler;
diff -Nur gradle-4.4.1/subprojects/language-native/src/main/java/org/gradle/language/cpp/internal/DefaultCppBinary.java gradle-4.4.1-new/subprojects/language-native/src/main/java/org/gradle/language/cpp/internal/DefaultCppBinary.java
--- gradle-4.4.1/subprojects/language-native/src/main/java/org/gradle/language/cpp/internal/DefaultCppBinary.java	2022-10-10 12:04:54.644155039 +0200
+++ gradle-4.4.1-new/subprojects/language-native/src/main/java/org/gradle/language/cpp/internal/DefaultCppBinary.java	2022-10-10 17:08:33.912628055 +0200
@@ -26,7 +26,7 @@
 import org.gradle.api.file.FileCollection;
 import org.gradle.api.file.ProjectLayout;
 import org.gradle.api.internal.file.FileOperations;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.api.internal.file.collections.FileCollectionAdapter;
 import org.gradle.api.internal.file.collections.MinimalFileSet;
 import org.gradle.api.model.ObjectFactory;
diff -Nur gradle-4.4.1/subprojects/launcher/src/main/java/org/gradle/launcher/cli/CommandLineActionFactory.java gradle-4.4.1-new/subprojects/launcher/src/main/java/org/gradle/launcher/cli/CommandLineActionFactory.java
--- gradle-4.4.1/subprojects/launcher/src/main/java/org/gradle/launcher/cli/CommandLineActionFactory.java	2022-10-10 12:04:54.568155905 +0200
+++ gradle-4.4.1-new/subprojects/launcher/src/main/java/org/gradle/launcher/cli/CommandLineActionFactory.java	2022-10-11 12:09:06.161938575 +0200
@@ -19,7 +19,7 @@
 import org.apache.tools.ant.Main;
 import org.gradle.api.Action;
 import org.gradle.api.internal.file.IdentityFileResolver;
-import org.gradle.api.internal.file.TmpDirTemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TmpDirTemporaryFileProvider;
 import org.gradle.api.logging.configuration.LoggingConfiguration;
 import org.gradle.cli.CommandLineArgumentException;
 import org.gradle.cli.CommandLineConverter;
diff -Nur gradle-4.4.1/subprojects/native/src/main/java/org/gradle/internal/nativeintegration/filesystem/jdk7/Jdk7Symlink.java gradle-4.4.1-new/subprojects/native/src/main/java/org/gradle/internal/nativeintegration/filesystem/jdk7/Jdk7Symlink.java
--- gradle-4.4.1/subprojects/native/src/main/java/org/gradle/internal/nativeintegration/filesystem/jdk7/Jdk7Symlink.java	2022-10-10 12:04:54.672154720 +0200
+++ gradle-4.4.1-new/subprojects/native/src/main/java/org/gradle/internal/nativeintegration/filesystem/jdk7/Jdk7Symlink.java	2022-10-11 17:07:48.768153799 +0200
@@ -16,7 +16,7 @@
 
 package org.gradle.internal.nativeintegration.filesystem.jdk7;
 
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.internal.nativeintegration.filesystem.Symlink;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
diff -Nur gradle-4.4.1/subprojects/native/src/main/java/org/gradle/internal/nativeintegration/filesystem/services/FileSystemServices.java gradle-4.4.1-new/subprojects/native/src/main/java/org/gradle/internal/nativeintegration/filesystem/services/FileSystemServices.java
--- gradle-4.4.1/subprojects/native/src/main/java/org/gradle/internal/nativeintegration/filesystem/services/FileSystemServices.java	2022-10-10 12:04:54.672154720 +0200
+++ gradle-4.4.1-new/subprojects/native/src/main/java/org/gradle/internal/nativeintegration/filesystem/services/FileSystemServices.java	2022-10-10 17:11:14.690839851 +0200
@@ -18,7 +18,7 @@
 
 import net.rubygrapefruit.platform.PosixFiles;
 import org.gradle.api.JavaVersion;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.internal.nativeintegration.filesystem.FileCanonicalizer;
 import org.gradle.internal.nativeintegration.filesystem.FileMetadataAccessor;
 import org.gradle.internal.nativeintegration.filesystem.FileModeAccessor;
diff -Nur gradle-4.4.1/subprojects/native/src/main/java/org/gradle/internal/nativeintegration/filesystem/services/GenericFileSystem.java gradle-4.4.1-new/subprojects/native/src/main/java/org/gradle/internal/nativeintegration/filesystem/services/GenericFileSystem.java
--- gradle-4.4.1/subprojects/native/src/main/java/org/gradle/internal/nativeintegration/filesystem/services/GenericFileSystem.java	2022-10-10 12:04:54.672154720 +0200
+++ gradle-4.4.1-new/subprojects/native/src/main/java/org/gradle/internal/nativeintegration/filesystem/services/GenericFileSystem.java	2022-10-10 17:11:38.506574967 +0200
@@ -18,7 +18,7 @@
 import com.google.common.base.Charsets;
 import com.google.common.io.Files;
 import org.apache.commons.io.FileUtils;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.internal.SystemProperties;
 import org.gradle.internal.file.FileMetadataSnapshot;
 import org.gradle.internal.nativeintegration.filesystem.FileException;
diff -Nur gradle-4.4.1/subprojects/native/src/main/java/org/gradle/internal/nativeintegration/services/NativeServices.java gradle-4.4.1-new/subprojects/native/src/main/java/org/gradle/internal/nativeintegration/services/NativeServices.java
--- gradle-4.4.1/subprojects/native/src/main/java/org/gradle/internal/nativeintegration/services/NativeServices.java	2022-10-10 12:04:54.672154720 +0200
+++ gradle-4.4.1-new/subprojects/native/src/main/java/org/gradle/internal/nativeintegration/services/NativeServices.java	2022-10-11 16:48:19.956848619 +0200
@@ -28,7 +28,8 @@
 import net.rubygrapefruit.platform.internal.DefaultProcessLauncher;
 import org.gradle.api.Action;
 import org.gradle.api.JavaVersion;
-import org.gradle.api.internal.file.TmpDirTemporaryFileProvider;
+import org.gradle.api.internal.file.temp.GradleUserHomeTemporaryFileProvider;
+import org.gradle.initialization.GradleUserHomeDirProvider;
 import org.gradle.internal.SystemProperties;
 import org.gradle.internal.jvm.Jvm;
 import org.gradle.internal.nativeintegration.ProcessEnvironment;
@@ -62,6 +63,7 @@
  */
 public class NativeServices extends DefaultServiceRegistry implements ServiceRegistry {
     private static final Logger LOGGER = LoggerFactory.getLogger(NativeServices.class);
+    private static File userHomeDir;
     private static boolean useNativeIntegrations;
     private static final NativeServices INSTANCE = new NativeServices();
     private static final JansiBootPathConfigurer JANSI_BOOT_PATH_CONFIGURER = new JansiBootPathConfigurer();
@@ -138,7 +140,7 @@
         register(new Action<ServiceRegistration>() {
             @Override
             public void execute(ServiceRegistration registration) {
-                registration.add(TmpDirTemporaryFileProvider.class);
+                registration.add(GradleUserHomeTemporaryFileProvider.class);
             }
         });
     }
@@ -148,6 +150,15 @@
         // Don't close
     }
 
+    protected GradleUserHomeDirProvider createGradleUserHomeDirProvider() {
+        return new GradleUserHomeDirProvider() {
+            @Override
+            public File getGradleUserHomeDirectory() {
+                return userHomeDir;
+            }
+        };
+    }
+
     protected OperatingSystem createOperatingSystem() {
         return OperatingSystem.current();
     }
diff -Nur gradle-4.4.1/subprojects/native/src/test/groovy/org/gradle/internal/nativeintegration/services/NativeServicesTest.groovy gradle-4.4.1-new/subprojects/native/src/test/groovy/org/gradle/internal/nativeintegration/services/NativeServicesTest.groovy
--- gradle-4.4.1/subprojects/native/src/test/groovy/org/gradle/internal/nativeintegration/services/NativeServicesTest.groovy	2022-10-10 12:04:54.668154767 +0200
+++ gradle-4.4.1-new/subprojects/native/src/test/groovy/org/gradle/internal/nativeintegration/services/NativeServicesTest.groovy	2022-10-10 17:13:19.837447941 +0200
@@ -18,6 +18,7 @@
 import net.rubygrapefruit.platform.ProcessLauncher
 import net.rubygrapefruit.platform.SystemInfo
 import net.rubygrapefruit.platform.WindowsRegistry
+import org.gradle.api.internal.file.temp.TemporaryFileProvider
 import org.gradle.internal.nativeintegration.ProcessEnvironment
 import org.gradle.internal.nativeintegration.console.ConsoleDetector
 import org.gradle.internal.nativeintegration.filesystem.Chmod
@@ -77,4 +78,9 @@
         expect:
         services.get(ProcessLauncher) != null
     }
+    
+    def "makes a TemporaryFileProvider available"() {
+        expect:
+        services.get(TemporaryFileProvider) != null
+    }
 }
diff -Nur gradle-4.4.1/subprojects/scala/scala.gradle gradle-4.4.1-new/subprojects/scala/scala.gradle
--- gradle-4.4.1/subprojects/scala/scala.gradle	2022-10-10 12:04:54.564155951 +0200
+++ gradle-4.4.1-new/subprojects/scala/scala.gradle	2022-10-10 17:14:56.164376582 +0200
@@ -24,7 +24,8 @@
     compile project(":languageJvm")
     compile project(":languageScala")
     compile project(":plugins")
-
+    compile project(":fileTemp")
+    
     testCompile libraries.slf4j_api
 
     integTestRuntime project(":ide")
diff -Nur gradle-4.4.1/subprojects/scala/src/main/java/org/gradle/api/tasks/scala/ScalaDoc.java gradle-4.4.1-new/subprojects/scala/src/main/java/org/gradle/api/tasks/scala/ScalaDoc.java
--- gradle-4.4.1/subprojects/scala/src/main/java/org/gradle/api/tasks/scala/ScalaDoc.java	2022-10-10 12:04:54.564155951 +0200
+++ gradle-4.4.1-new/subprojects/scala/src/main/java/org/gradle/api/tasks/scala/ScalaDoc.java	2022-10-10 17:15:24.328063341 +0200
@@ -29,7 +29,7 @@
 import org.gradle.api.tasks.PathSensitivity;
 import org.gradle.api.tasks.SourceTask;
 import org.gradle.api.tasks.TaskAction;
-import org.gradle.internal.file.TempFiles;
+import org.gradle.api.internal.file.temp.TempFiles;
 import org.gradle.util.GUtil;
 
 import javax.inject.Inject;
diff -Nur gradle-4.4.1/subprojects/testing-jvm/src/main/java/org/gradle/api/internal/tasks/testing/detection/ClassFileExtractionManager.java gradle-4.4.1-new/subprojects/testing-jvm/src/main/java/org/gradle/api/internal/tasks/testing/detection/ClassFileExtractionManager.java
--- gradle-4.4.1/subprojects/testing-jvm/src/main/java/org/gradle/api/internal/tasks/testing/detection/ClassFileExtractionManager.java	2022-10-10 12:04:54.652154948 +0200
+++ gradle-4.4.1-new/subprojects/testing-jvm/src/main/java/org/gradle/api/internal/tasks/testing/detection/ClassFileExtractionManager.java	2022-10-11 09:47:20.116167637 +0200
@@ -17,8 +17,8 @@
 
 import org.apache.commons.lang.text.StrBuilder;
 import org.gradle.api.GradleException;
-import org.gradle.api.internal.file.DefaultTemporaryFileProvider;
-import org.gradle.api.internal.file.TemporaryFileProvider;
+import org.gradle.api.internal.file.temp.DefaultTemporaryFileProvider;
+import org.gradle.api.internal.file.temp.TemporaryFileProvider;
 import org.gradle.internal.Factory;
 import org.gradle.util.JarUtil;
 import org.slf4j.Logger;
diff -Nur gradle-4.4.1/subprojects/testing-jvm/src/main/java/org/gradle/api/tasks/testing/Test.java gradle-4.4.1-new/subprojects/testing-jvm/src/main/java/org/gradle/api/tasks/testing/Test.java
--- gradle-4.4.1/subprojects/testing-jvm/src/main/java/org/gradle/api/tasks/testing/Test.java	2022-10-10 12:04:54.652154948 +0200
+++ gradle-4.4.1-new/subprojects/testing-jvm/src/main/java/org/gradle/api/tasks/testing/Test.java	2022-10-11 17:31:00.057113999 +0200
@@ -64,6 +64,7 @@
 import org.gradle.util.CollectionUtils;
 import org.gradle.util.ConfigureUtil;
 import org.gradle.util.SingleMessageLogger;
+import org.gradle.util.GFileUtils;
 
 import javax.inject.Inject;
 import java.io.File;
@@ -122,6 +123,9 @@
 @CacheableTask
 public class Test extends AbstractTestTask implements JavaForkOptions, PatternFilterable {
 
+    private static final String TEST_KIT_DIR_SYS_PROP = "org.gradle.testkit.dir";
+    private static final String PROJECT_BUILDER_SYS_PROP = "org.gradle.project.builder.dir";
+
     private final DefaultJavaForkOptions forkOptions;
     private final DefaultTestFilter filter;
 
@@ -526,6 +530,8 @@
             addTestListener(new NoMatchingTestsReporter(createNoMatchingTestErrorMessage()));
         }
 
+        setupGradleTempDirTestingSystemProperties();
+
         try {
             super.executeTests();
         } finally {
@@ -533,6 +539,19 @@
         }
     }
 
+    private void setupGradleTempDirForSystemProperty(String systemProperty, String childDirName) {
+        if (!forkOptions.getSystemProperties().containsKey(systemProperty)) {
+            File testKitDir = new File(getTemporaryDir(), childDirName);
+            GFileUtils.mkdirs(testKitDir);
+            forkOptions.systemProperty(systemProperty, testKitDir);
+        }
+    }
+
+    private void setupGradleTempDirTestingSystemProperties() {
+        setupGradleTempDirForSystemProperty(TEST_KIT_DIR_SYS_PROP, "gradle-test-kit");
+        setupGradleTempDirForSystemProperty(PROJECT_BUILDER_SYS_PROP, "gradle-project-builder");
+    }
+    
     @Override
     protected TestExecuter<JvmTestExecutionSpec> createTestExecuter() {
         if (testExecuter == null) {
diff -Nur gradle-4.4.1/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/BaseTestKitEndUserIntegrationTest.groovy gradle-4.4.1-new/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/BaseTestKitEndUserIntegrationTest.groovy
--- gradle-4.4.1/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/BaseTestKitEndUserIntegrationTest.groovy	2022-10-10 12:04:54.588155677 +0200
+++ gradle-4.4.1-new/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/BaseTestKitEndUserIntegrationTest.groovy	2022-10-11 09:13:34.100228847 +0200
@@ -30,7 +30,7 @@
         requireIsolatedTestKitDir = true
         executer.requireGradleDistribution()
         executer.beforeExecute {
-            usingInitScript(file("testKitDirInit.gradle") << """
+            usingInitScript(file("tempDirInit.gradle") << """
                 allprojects {
                     tasks.withType(Test) {
                         systemProperty "$DefaultGradleRunner.TEST_KIT_DIR_SYS_PROP", "${TextUtil.normaliseFileSeparators(testKitDir.absolutePath)}"
diff -Nur gradle-4.4.1/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/GradleRunnerDefaultDirectoryOverrideIntegrationTest.groovy gradle-4.4.1-new/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/GradleRunnerDefaultDirectoryOverrideIntegrationTest.groovy
--- gradle-4.4.1/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/GradleRunnerDefaultDirectoryOverrideIntegrationTest.groovy	1970-01-01 01:00:00.000000000 +0100
+++ gradle-4.4.1-new/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/GradleRunnerDefaultDirectoryOverrideIntegrationTest.groovy	2022-10-11 09:15:04.343156868 +0200
@@ -0,0 +1,45 @@
+/*
+ * Copyright 2020 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gradle.testkit.runner.enduser
+
+import org.gradle.integtests.fixtures.executer.GradleContextualExecuter
+import org.gradle.testkit.runner.fixtures.NoDebug
+import org.gradle.testkit.runner.fixtures.NonCrossVersion
+import org.gradle.testkit.runner.internal.DefaultGradleRunner
+import org.gradle.util.TextUtil
+import spock.lang.IgnoreIf
+
+@NonCrossVersion
+@NoDebug
+@IgnoreIf({ GradleContextualExecuter.embedded })
+// These tests run builds that themselves run a build in a test worker with 'gradleTestKit()' dependency, which needs to pick up Gradle modules from a real distribution
+class GradleRunnerDefaultDirectoryOverrideIntegrationTest extends BaseTestKitEndUserIntegrationTest {
+
+    def withCustomTestKitDirectory() {
+        requireIsolatedTestKitDir = true
+        executer.beforeExecute {
+            usingInitScript(file("testKitDirInit.gradle") << """
+                allprojects {
+                    tasks.withType(Test) {
+                        systemProperty "$DefaultGradleRunner.TEST_KIT_DIR_SYS_PROP", "${TextUtil.normaliseFileSeparators(testKitDir.absolutePath)}"
+                    }
+                }
+            """)
+        }
+    }
+
+}
\ No newline at end of file
diff -Nur gradle-4.4.1/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/GradleRunnerDefaultTestKitDirIntegrationTest.groovy gradle-4.4.1-new/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/GradleRunnerDefaultTestKitDirIntegrationTest.groovy
--- gradle-4.4.1/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/GradleRunnerDefaultTestKitDirIntegrationTest.groovy	1970-01-01 01:00:00.000000000 +0100
+++ gradle-4.4.1-new/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/GradleRunnerDefaultTestKitDirIntegrationTest.groovy	2022-10-11 09:16:23.482216784 +0200
@@ -0,0 +1,154 @@
+/*
+ * Copyright 2021 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gradle.testkit.runner.enduser
+
+import org.gradle.api.internal.file.temp.FilePermissionsCheckerFixture
+import org.gradle.integtests.fixtures.executer.GradleContextualExecuter
+import org.gradle.testkit.runner.BaseGradleRunnerIntegrationTest
+import org.gradle.testkit.runner.fixtures.NonCrossVersion
+import org.gradle.util.TextUtil
+import org.gradle.util.UsesNativeServices
+import spock.lang.IgnoreIf
+
+@NonCrossVersion
+@UsesNativeServices
+@IgnoreIf({ GradleContextualExecuter.embedded })
+// These tests run builds that themselves run a build in a test worker with 'gradleTestKit()' dependency, which needs to pick up Gradle modules from a real distribution
+class GradleRunnerDefaultTestKitDirIntegrationTest extends BaseGradleRunnerIntegrationTest implements TestKitDependencyBlock {
+
+    def setup() {
+        executer.beforeExecute {
+            usingInitScript(file("tempDirInit.gradle") << """
+                allprojects {
+                    tasks.withType(Test) {
+                        // Do not set the DefaultGradleRunner.TEST_KIT_DIR_SYS_PROP system property, that will defeat the purpose of this test
+                        systemProperty "java.io.tmpdir", "${TextUtil.normaliseFileSeparators(file("tmp").createDir().absolutePath)}"
+                    }
+                }
+            """)
+        }
+
+        buildFile << """
+            apply plugin: 'groovy'
+            dependencies {
+                implementation localGroovy()
+                testImplementation('org.spockframework:spock-core:1.0-groovy-2.4') {
+                    exclude module: 'groovy-all'
+                }
+            }
+            ${jcenterRepository()}
+            tasks.withType(Test).configureEach {
+                testLogging.exceptionFormat = 'full'
+                testLogging.showStandardStreams = true
+                testLogging.events "started", "skipped", "failed", "passed", "standard_out", "standard_error"
+            }
+        """
+
+
+        file("src/test/groovy/FilePermissionsChecker.groovy") << FilePermissionsCheckerFixture.createFileContents()
+    }
+
+
+    def "uses a test kit directory under the project build directory by default"() {
+        when:
+        buildFile << gradleTestKitDependency()
+
+        groovyTestSourceFile("""
+            import org.gradle.testkit.runner.GradleRunner
+            import org.gradle.testkit.runner.internal.DefaultGradleRunner
+            import java.io.File
+            import spock.lang.Specification
+            class Test extends Specification {
+                def "the test kit system property is set by default"() {
+                    expect:
+                    System.getProperty(DefaultGradleRunner.TEST_KIT_DIR_SYS_PROP) != null
+                }
+                def "default test kit provider value is derived from system property"() {
+                    when:
+                    def runner = GradleRunner.create() as DefaultGradleRunner
+                    def dir = runner.testKitDirProvider.dir
+                    def absolutePath = dir.absolutePath.replace(File.separatorChar, '/' as char)
+                    then:
+                    dir.exists()
+                    absolutePath.contains("/build/tmp/")
+                    absolutePath.endsWith("/gradle-test-kit")
+                    FilePermissionsChecker.assertSafeParentFile(dir)
+                }
+            }
+        """)
+
+        then:
+        succeeds 'test'
+    }
+
+    def "gradle test kit directory can be changed by the user"() {
+        when:
+        buildFile << gradleTestKitDependency() << '''
+        test {
+            File customTestKitDir = file('my-custom-testkit-dir')
+            systemProperty('org.gradle.testkit.dir', customTestKitDir)
+        }
+        '''
+
+        groovyTestSourceFile("""
+            import org.gradle.testkit.runner.GradleRunner
+            import org.gradle.testkit.runner.internal.DefaultGradleRunner
+            import java.io.File
+            import spock.lang.Specification
+            class Test extends Specification {
+                def "the test kit system property is set by default"() {
+                    expect:
+                    System.getProperty(DefaultGradleRunner.TEST_KIT_DIR_SYS_PROP).endsWith(File.separator + "my-custom-testkit-dir")
+                }
+                def "default test kit provider value is derived from system property"() {
+                    when:
+                    def runner = GradleRunner.create() as DefaultGradleRunner
+                    def dir = runner.testKitDirProvider.dir
+                    def absolutePath = dir.absolutePath.replace(File.separatorChar, '/' as char)
+                    then:
+                    absolutePath.endsWith("/my-custom-testkit-dir")
+                    FilePermissionsChecker.assertSafeParentFile(dir)
+                }
+            }
+        """)
+
+        then:
+        succeeds 'test'
+    }
+
+    def "gradle test kit directory exists before GradleRunner is created for first time"() {
+        when:
+        buildFile << gradleTestKitDependency()
+        groovyTestSourceFile("""
+            import org.gradle.testkit.runner.internal.DefaultGradleRunner
+            import java.io.File
+            import spock.lang.Specification
+            class Test extends Specification {
+                def "test kit directory already exists"() {
+                    when:
+                    File testKitDir = new File(System.getProperty(DefaultGradleRunner.TEST_KIT_DIR_SYS_PROP))
+                    then:
+                    assert testKitDir.exists() : "Should already exist because Test task created it already"
+                }
+            }
+        """)
+        then:
+        succeeds 'test'
+    }
+
+
+}
\ No newline at end of file
diff -Nur gradle-4.4.1/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/GradleRunnerMiscEndUserIntegationTest.groovy gradle-4.4.1-new/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/GradleRunnerMiscEndUserIntegationTest.groovy
--- gradle-4.4.1/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/GradleRunnerMiscEndUserIntegationTest.groovy	2022-10-10 12:04:54.588155677 +0200
+++ gradle-4.4.1-new/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/GradleRunnerMiscEndUserIntegationTest.groovy	2022-10-11 09:32:09.150984264 +0200
@@ -20,11 +20,12 @@
 import org.gradle.testkit.runner.fixtures.NoDebug
 import org.gradle.testkit.runner.internal.DefaultGradleRunner
 import org.gradle.util.GFileUtils
+import org.intellij.lang.annotations.Language
 
 /**
  * Miscellaneous usage scenarios that don't have more specific homes.
  */
-class GradleRunnerMiscEndUserIntegationTest extends BaseTestKitEndUserIntegrationTest {
+class GradleRunnerMiscEndUserIntegationTest extends BaseTestKitEndUserIntegrationTest implements TestKitDependencyBloc {
 
     def setup() {
         buildFile << """
@@ -68,7 +69,7 @@
             }
         """
 
-        file("src/test/groovy/Test.groovy") << """
+        groovyTestSourceFile("""
             import org.gradle.testkit.runner.GradleRunner
             import spock.lang.Specification
 
@@ -78,7 +79,7 @@
                     GradleRunner.create().withProjectDir(new File("foo")).build()
                 }
             }
-        """
+        """)
 
         then:
         fails 'build'
@@ -127,7 +128,7 @@
             }
         """
 
-        file("src/test/groovy/Test.groovy") << """
+        groovyTestSourceFile("""
             import org.gradle.testkit.runner.GradleRunner
             import spock.lang.Specification
 
@@ -137,14 +138,15 @@
                     GradleRunner.create().debug == $debug
                 }
             }
-        """
+        """)
 
         then:
         succeeds 'test'
     }
 
     static String successfulSpockTest(String className) {
-        """
+        @Language("groovy")
+        def spockTest = """
             import org.gradle.testkit.runner.GradleRunner
             import static org.gradle.testkit.runner.TaskOutcome.*
             import org.junit.Rule
@@ -181,14 +183,7 @@
                 }
             }
         """
-    }
-
-    static String gradleTestKitDependency() {
-        """
-            dependencies {
-                testCompile gradleTestKit()
-            }
-        """
+        spockTest
     }
 
 }
diff -Nur gradle-4.4.1/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/TestKitDependencyBlock.groovy gradle-4.4.1-new/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/TestKitDependencyBlock.groovy
--- gradle-4.4.1/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/TestKitDependencyBlock.groovy	1970-01-01 01:00:00.000000000 +0100
+++ gradle-4.4.1-new/subprojects/test-kit/src/integTest/groovy/org/gradle/testkit/runner/enduser/TestKitDependencyBlock.groovy	2022-10-11 09:32:23.238816932 +0200
@@ -0,0 +1,29 @@
+/*
+ * Copyright 2021 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.gradle.testkit.runner.enduser
+
+trait TestKitDependencyBlock {
+
+    String gradleTestKitDependency() {
+        """
+            dependencies {
+                testImplementation gradleTestKit()
+            }
+        """
+    }
+
+}
\ No newline at end of file
diff -Nur gradle-4.4.1/subprojects/test-kit/src/main/java/org/gradle/testkit/runner/internal/TempTestKitDirProvider.java gradle-4.4.1-new/subprojects/test-kit/src/main/java/org/gradle/testkit/runner/internal/TempTestKitDirProvider.java
--- gradle-4.4.1/subprojects/test-kit/src/main/java/org/gradle/testkit/runner/internal/TempTestKitDirProvider.java	2022-10-10 12:04:54.588155677 +0200
+++ gradle-4.4.1-new/subprojects/test-kit/src/main/java/org/gradle/testkit/runner/internal/TempTestKitDirProvider.java	2022-10-11 09:46:46.916561818 +0200
@@ -20,9 +20,10 @@
 
 import java.io.File;
 
+@Deprecated
 public class TempTestKitDirProvider extends ConstantTestKitDirProvider {
 
-    public TempTestKitDirProvider(SystemProperties systemProperties) {
+    protected TempTestKitDirProvider(SystemProperties systemProperties) {
         super(new File(systemProperties.getJavaIoTmpDir(), ".gradle-test-kit-".concat(systemProperties.getUserName())));
     }
 
diff -Nur gradle-4.4.1/subprojects/test-kit/src/test/groovy/org/gradle/testkit/runner/internal/TempTestKitDirProviderTest.groovy gradle-4.4.1-new/subprojects/test-kit/src/test/groovy/org/gradle/testkit/runner/internal/TempTestKitDirProviderTest.groovy
--- gradle-4.4.1/subprojects/test-kit/src/test/groovy/org/gradle/testkit/runner/internal/TempTestKitDirProviderTest.groovy	2022-10-10 12:04:54.588155677 +0200
+++ gradle-4.4.1-new/subprojects/test-kit/src/test/groovy/org/gradle/testkit/runner/internal/TempTestKitDirProviderTest.groovy	1970-01-01 01:00:00.000000000 +0100
@@ -1,43 +0,0 @@
-/*
- * Copyright 2015 the original author or authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.gradle.testkit.runner.internal
-
-import org.gradle.internal.SystemProperties
-import org.gradle.test.fixtures.file.TestNameTestDirectoryProvider
-import org.junit.Rule
-import spock.lang.Specification
-
-class TempTestKitDirProviderTest extends Specification {
-
-    @Rule
-    TestNameTestDirectoryProvider testDirectoryProvider = new TestNameTestDirectoryProvider()
-
-    def "can create temporary directory"() {
-        def systemProperties = Mock(SystemProperties) {
-            getJavaIoTmpDir() >> testDirectoryProvider.testDirectory.absolutePath
-            getUserName() >> "foo"
-        }
-
-        when:
-        def testKitDirProvider = new TempTestKitDirProvider(systemProperties)
-        def expectedTmpDir = new File(testDirectoryProvider.testDirectory, ".gradle-test-kit-foo")
-
-        then:
-        testKitDirProvider.dir.absolutePath == expectedTmpDir.absolutePath
-    }
-
-}
diff -Nur gradle-4.4.1/subprojects/test-kit/test-kit.gradle gradle-4.4.1-new/subprojects/test-kit/test-kit.gradle
--- gradle-4.4.1/subprojects/test-kit/test-kit.gradle	2022-10-10 12:04:54.588155677 +0200
+++ gradle-4.4.1-new/subprojects/test-kit/test-kit.gradle	2022-10-10 17:15:58.807679848 +0200
@@ -1,6 +1,7 @@
 dependencies {
     compile project(':core')
     compile project(':toolingApi')
+    compile project(':fileTemp')
     compile libraries.commons_io
     runtime project(':native')
     integTestRuntime project(':toolingApiBuilders')
