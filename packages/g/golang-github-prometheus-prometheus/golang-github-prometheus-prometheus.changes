-------------------------------------------------------------------
Wed May 19 20:32:28 UTC 2021 - Daniel Molkentin <daniel.molkentin@suse.com>

- Refresh patches
  + Changed:
    * 0001-Do-not-force-the-pure-Go-name-resolver.patch
    * 0002-Default-settings.patch
    * 0003-Add-Uyuni-service-discovery.patch

- Upgrade to upstream version 2.27.1
  + Bugfix:
   * SECURITY: Fix arbitrary redirects under the /new endpoint (CVE-2021-29622)  

- Upgrade to upstream version 2.27.0
  + Features:
    * Promtool: Retroactive rule evaluation functionality. #7675
    * Configuration: Environment variable expansion for external labels. Behind --enable-feature=expand-external-labels flag. #8649
    * TSDB: Add a flag(--storage.tsdb.max-block-chunk-segment-size) to control the max chunks file size of the blocks for small Prometheus instances. #8478
    * UI: Add a dark theme. #8604
    * AWS Lightsail Discovery: Add AWS Lightsail Discovery. #8693
    * Docker Discovery: Add Docker Service Discovery. #8629
    * OAuth: Allow OAuth 2.0 to be used anywhere an HTTP client is used. #8761
    * Remote Write: Send exemplars via remote write. Experimental and disabled by default. #8296
  + Enhancements:
    * Digital Ocean Discovery: Add __meta_digitalocean_vpc label. #8642
    * Scaleway Discovery: Read Scaleway secret from a file. #8643
    * Scrape: Add configurable limits for label size and count. #8777
    * UI: Add 16w and 26w time range steps. #8656
    * Templating: Enable parsing strings in humanize functions. #8682
  + Bugfixes:
    * UI: Provide errors instead of blank page on TSDB Status Page. #8654 #8659
    * TSDB: Do not panic when writing very large records to the WAL. #8790
    * TSDB: Avoid panic when mmaped memory is referenced after the file is closed. #8723
    * Scaleway Discovery: Fix nil pointer dereference. #8737
    * Consul Discovery: Restart no longer required after config update with no targets. #8766

-------------------------------------------------------------------
Tue May  4 14:35:58 UTC 2021 - Witek Bedyk <witold.bedyk@suse.com>

- Add tarball with vendor modules and web assets
- Uyuni: Read formula data from exporters map
- Uyuni: Add support for TLS targets
  + Changed:
    * 0003-Add-Uyuni-service-discovery.patch
    * 0002-Default-settings.patch Changed
    * 0003-Add-Uyuni-service-discovery.patch

- Upgrade to upstream version 2.26.0
  + Changes
    * Alerting: Using Alertmanager v2 API by default. #8626
    * Prometheus/Promtool: Binaries are now printing help and usage to stdout instead of stderr. #8542
  + Features
    * Remote: Add support for AWS SigV4 auth method for remote_write. #8509
    * PromQL: Allow negative offsets. Behind --enable-feature=promql-negative-offset flag. #8487
    * UI: Add advanced auto-completion, syntax highlighting and linting to graph page query input. #8634
  + Enhancements
    * PromQL: Add last_over_time, sgn, clamp functions. #8457
    * Scrape: Add support for specifying type of Authorization header credentials with Bearer by default. #8512
    * Scrape: Add follow_redirects option to scrape configuration. #8546
    * Remote: Allow retries on HTTP 429 response code for remote_write. #8237 #8477
    * Remote: Allow configuring custom headers for remote_read. #8516
    * UI: Hitting Enter now triggers new query. #8581
    * UI: Better handling of long rule and names on the /rules and /targets pages. #8608 #8609
    * UI: Add collapse/expand all button on the /targets page. #8486

- Upgrade to upstream version 2.25.0
  + Features
    * Include a new `--enable-feature=` flag that enables experimental features.
  + Enhancements
    * Add optional name property to testgroup for better test failure output. #8440
    * Add warnings into React Panel on the Graph page. #8427
    * TSDB: Increase the number of buckets for the compaction duration metric. #8342
    * Remote: Allow passing along custom remote_write HTTP headers. #8416
    * Mixins: Scope grafana configuration. #8332
    * Kubernetes SD: Add endpoint labels metadata. #8273
    * UI: Expose total number of label pairs in head in TSDB stats page. #8343
    * TSDB: Reload blocks every minute, to detect new blocks and enforce retention more often. #8343
  + Bug fixes
    * API: Fix global URL when external address has no port. #8359
    * Deprecate unused flag --alertmanager.timeout. #8407

- Upgrade to upstream version 2.24.1
  + Enhancements
    * Cache basic authentication results to significantly improve performance of HTTP endpoints.

- Upgrade to upstream version 2.24.0
  + Features
    * Add TLS and basic authentication to HTTP endpoints. #8316
    * promtool: Add check web-config subcommand to check web config files. #8319
    * promtool: Add tsdb create-blocks-from openmetrics subcommand to backfill metrics data from an OpenMetrics file. #8084
  + Enhancements
    * HTTP API: Fast-fail queries with only empty matchers. #8288
    * HTTP API: Support matchers for labels API. #8301
    * promtool: Improve checking of URLs passed on the command line. #7956
    * SD: Expose IPv6 as a label in EC2 SD. #7086
    * SD: Reuse EC2 client, reducing frequency of requesting credentials. #8311
    * TSDB: Add logging when compaction takes more than the block time range. #8151
    * TSDB: Avoid unnecessary GC runs after compaction. #8276

- Upgrade to upstream version 2.23.0
  + Changes
    * UI: Make the React UI default. #8142
    * Remote write: The following metrics were removed/renamed in remote write. #6815
      > prometheus_remote_storage_succeeded_samples_total was removed and prometheus_remote_storage_samples_total was introduced for all the samples attempted to send.
      > prometheus_remote_storage_sent_bytes_total was removed and replaced with prometheus_remote_storage_samples_bytes_total and prometheus_remote_storage_metadata_bytes_total.
      > prometheus_remote_storage_failed_samples_total -> prometheus_remote_storage_samples_failed_total .
      > prometheus_remote_storage_retried_samples_total -> prometheus_remote_storage_samples_retried_total.
      > prometheus_remote_storage_dropped_samples_total -> prometheus_remote_storage_samples_dropped_total.
      > prometheus_remote_storage_pending_samples -> prometheus_remote_storage_samples_pending.
    * Remote: Do not collect non-initialized timestamp metrics. #8060
  + Enhancements
    * Remote write: Added a metric prometheus_remote_storage_max_samples_per_send for remote write. #8102
    * TSDB: Make the snapshot directory name always the same length. #8138
    * TSDB: Create a checkpoint only once at the end of all head compactions. #8067
    * TSDB: Avoid Series API from hitting the chunks. #8050
    * TSDB: Cache label name and last value when adding series during compactions making compactions faster. #8192
    * PromQL: Improved performance of Hash method making queries a bit faster. #8025
    * promtool: tsdb list now prints block sizes. #7993
    * promtool: Calculate mint and maxt per test avoiding unnecessary calculations. #8096
    * SD: Add filtering of services to Docker Swarm SD. #8074

-------------------------------------------------------------------
Tue Mar  9 13:28:50 UTC 2021 - Witek Bedyk <witold.bedyk@suse.com>

- Uyuni: `hostname` label is now set to FQDN instead of IP
  + Changed:
    * 0003-Add-Uyuni-service-discovery.patch

-------------------------------------------------------------------
Mon Nov  9 10:49:39 UTC 2020 - Stefano Torresi <stefano.torresi@suse.com>

- Update to upstream version 2.22.1
- Update packaging
  * Remove systemd and shadow hard requirements
  * use systemd-sysusers to configure the user in a dedicated 'system-user-prometheus' subpackage
  * add 'prometheus' package alias

-------------------------------------------------------------------
Fri Jul 31 14:50:21 UTC 2020 - Witek Bedyk <witold.bedyk@suse.com>

- Update 0003-Add-Uyuni-service-discovery.patch:
  + Add support for Prometheus exporters proxy

-------------------------------------------------------------------
Wed Jun  3 15:59:05 UTC 2020 - Joao Cavalheiro <jcavalheiro@suse.com>

- Update change log and spec file
  + Modified spec file: default to golang 1.14 to avoid "have choice" build issues in OBS. 
  + Rebase and update patches for version 2.18.0
  + Changed:  
    * 0001-Do-not-force-the-pure-Go-name-resolver.patch
    * 0002-Default-settings.patch Changed
    * 0003-Add-Uyuni-service-discovery.patch

- Update to 2.18.0 
  + Features 
    * Tracing: Added experimental Jaeger support #7148
  + Changes
    * Federation: Only use local TSDB for federation (ignore remote read). #7096
    * Rules: `rule_evaluations_total` and `rule_evaluation_failures_total` have a `rule_group` label now. #7094
  + Enhancements
    * TSDB: Significantly reduce WAL size kept around after a block cut. #7098
    * Discovery: Add `architecture` meta label for EC2. #7000
  + Bug fixes
    * UI: Fixed wrong MinTime reported by /status. #7182
    * React UI: Fixed multiselect legend on OSX. #6880
    * Remote Write: Fixed blocked resharding edge case. #7122
    * Remote Write: Fixed remote write not updating on relabel configs change. #7073

- Changes from 2.17.2
  + Bug fixes
    * Federation: Register federation metrics #7081
    * PromQL: Fix panic in parser error handling #7132
    * Rules: Fix reloads hanging when deleting a rule group that is being evaluated #7138
    * TSDB: Fix a memory leak when prometheus starts with an empty TSDB WAL #7135
    * TSDB: Make isolation more robust to panics in web handlers #7129 #7136

- Changes from 2.17.1
  + Bug fixes
    * TSDB: Fix query performance regression that increased memory and CPU usage #7051

- Changes from 2.17.0
  + Features 
    * TSDB: Support isolation #6841
    * This release implements isolation in TSDB. API queries and recording rules are
      guaranteed to only see full scrapes and full recording rules. This comes with a
      certain overhead in resource usage. Depending on the situation, there might be
      some increase in memory usage, CPU usage, or query latency.
  + Enhancements
    * PromQL: Allow more keywords as metric names #6933
    * React UI: Add normalization of localhost URLs in targets page #6794
    * Remote read: Read from remote storage concurrently #6770
    * Rules: Mark deleted rule series as stale after a reload #6745
    * Scrape: Log scrape append failures as debug rather than warn #6852
    * TSDB: Improve query performance for queries that partially hit the head #6676
    * Consul SD: Expose service health as meta label #5313
    * EC2 SD: Expose EC2 instance lifecycle as meta label #6914
    * Kubernetes SD: Expose service type as meta label for K8s service role #6684
    * Kubernetes SD: Expose label_selector and field_selector #6807
    * Openstack SD: Expose hypervisor id as meta label #6962
  + Bug fixes
    * PromQL: Do not escape HTML-like chars in query log #6834 #6795
    * React UI: Fix data table matrix values #6896
    * React UI: Fix new targets page not loading when using non-ASCII characters #6892
    * Remote read: Fix duplication of metrics read from remote storage with external labels #6967 #7018
    * Remote write: Register WAL watcher and live reader metrics for all remotes, not just the first one #6998
    * Scrape: Prevent removal of metric names upon relabeling #6891
    * Scrape: Fix 'superfluous response.WriteHeader call' errors when scrape fails under some circonstances #6986
    * Scrape: Fix crash when reloads are separated by two scrape intervals #7011

- Changes from 2.16.0
  + Features 
    * React UI: Support local timezone on /graph #6692
    * PromQL: add absent_over_time query function #6490
    * Adding optional logging of queries to their own file #6520
  + Enhancements
    * React UI: Add support for rules page and "Xs ago" duration displays #6503
    * React UI: alerts page, replace filtering togglers tabs with checkboxes #6543
    * TSDB: Export metric for WAL write errors #6647
    * TSDB: Improve query performance for queries that only touch the most recent 2h of data. #6651
    * PromQL: Refactoring in parser errors to improve error messages #6634
    * PromQL: Support trailing commas in grouping opts #6480
    * Scrape: Reduce memory usage on reloads by reusing scrape cache #6670
    * Scrape: Add metrics to track bytes and entries in the metadata cache #6675
    * promtool: Add support for line-column numbers for invalid rules output #6533
    * Avoid restarting rule groups when it is unnecessary #6450
  + Bug fixes
    * React UI: Send cookies on fetch() on older browsers #6553
    * React UI: adopt grafana flot fix for stacked graphs #6603
    * React UI: broken graph page browser history so that back button works as expected #6659
    * TSDB: ensure compactionsSkipped metric is registered, and log proper error if one is returned from head.Init #6616
    * TSDB: return an error on ingesting series with duplicate labels #6664
    * PromQL: Fix unary operator precedence #6579
    * PromQL: Respect query.timeout even when we reach query.max-concurrency #6712
    * PromQL: Fix string and parentheses handling in engine, which affected React UI #6612
    * PromQL: Remove output labels returned by absent() if they are produced by multiple identical label matchers #6493
    * Scrape: Validate that OpenMetrics input ends with `# EOF` #6505
    * Remote read: return the correct error if configs can't be marshal'd to JSON #6622
    * Remote write: Make remote client `Store` use passed context, which can affect shutdown timing #6673
    * Remote write: Improve sharding calculation in cases where we would always be consistently behind by tracking pendingSamples #6511
    * Ensure prometheus_rule_group metrics are deleted when a rule group is removed #6693

- Changes from 2.15.2
  + Bug fixes
    * TSDB: Fixed support for TSDB blocks built with Prometheus before 2.1.0. #6564
    * TSDB: Fixed block compaction issues on Windows. #6547

- Changes from 2.15.1
  + Bug fixes
    * TSDB: Fixed race on concurrent queries against same data. #6512

- Changes from 2.15.0
  + Features 
    * API: Added new endpoint for exposing per metric metadata `/metadata`. #6420 #6442
  + Changes
    * Discovery: Removed `prometheus_sd_kubernetes_cache_*` metrics. Additionally `prometheus_sd_kubernetes_workqueue_latency_seconds` and `prometheus_sd_kubernetes_workqueue_work_duration_seconds` metrics now show correct values in seconds. #6393
    * Remote write: Changed `query` label on `prometheus_remote_storage_*` metrics to `remote_name` and `url`. #6043
  + Enhancements
    * TSDB: Significantly reduced memory footprint of loaded TSDB blocks. #6418 #6461
    * TSDB: Significantly optimized what we buffer during compaction which should result in lower memory footprint during compaction. #6422 #6452 #6468 #6475
    * TSDB: Improve replay latency. #6230
    * TSDB: WAL size is now used for size based retention calculation. #5886
    * Remote read: Added query grouping and range hints to the remote read request #6401
    * Remote write: Added `prometheus_remote_storage_sent_bytes_total` counter per queue. #6344
    * promql: Improved PromQL parser performance. #6356
    * React UI: Implemented missing pages like `/targets` #6276, TSDB status page #6281 #6267 and many other fixes and performance improvements.
    * promql: Prometheus now accepts spaces between time range and square bracket. e.g `[ 5m]` #6065  
  + Bug fixes
    * Config: Fixed alertmanager configuration to not miss targets when configurations are similar. #6455
    * Remote write: Value of `prometheus_remote_storage_shards_desired` gauge shows raw value of desired shards and it's updated correctly. #6378
    * Rules: Prometheus now fails the evaluation of rules and alerts where metric results collide with labels specified in `labels` field. #6469
    * API: Targets Metadata API `/targets/metadata` now accepts empty `match_targets` parameter as in the spec. #6303

- Changes from 2.14.0
  + Features 
    * API: `/api/v1/status/runtimeinfo` and `/api/v1/status/buildinfo` endpoints added for use by the React UI. #6243
    * React UI: implement the new experimental React based UI. #5694 and many more
      * Can be found by under `/new`.
      * Not all pages are implemented yet.
    * Status: Cardinality statistics added to the Runtime & Build Information page. #6125
  + Enhancements
    * Remote write: fix delays in remote write after a compaction. #6021
    * UI: Alerts can be filtered by state. #5758
  + Bug fixes
    * Ensure warnings from the API are escaped. #6279
    * API: lifecycle endpoints return 403 when not enabled. #6057
    * Build: Fix Solaris build. #6149
    * Promtool: Remove false duplicate rule warnings when checking rule files with alerts. #6270
    * Remote write: restore use of deduplicating logger in remote write. #6113
    * Remote write: do not reshard when unable to send samples. #6111
    * Service discovery: errors are no longer logged on context cancellation. #6116, #6133
    * UI: handle null response from API properly. #6071

- Changes from 2.13.1
  + Bug fixes
    * Fix panic in ARM builds of Prometheus. #6110
    * promql: fix potential panic in the query logger. #6094
    * Multiple errors of http: superfluous response.WriteHeader call in the logs. #6145

- Changes from 2.13.0
  + Enhancements
    * Metrics: renamed prometheus_sd_configs_failed_total to prometheus_sd_failed_configs and changed to Gauge #5254
    * Include the tsdb tool in builds. #6089
    * Service discovery: add new node address types for kubernetes. #5902
    * UI: show warnings if query have returned some warnings. #5964
    * Remote write: reduce memory usage of the series cache. #5849
    * Remote read: use remote read streaming to reduce memory usage. #5703
    * Metrics: added metrics for remote write max/min/desired shards to queue manager. #5787
    * Promtool: show the warnings during label query. #5924
    * Promtool: improve error messages when parsing bad rules. #5965
    * Promtool: more promlint rules. #5515
  + Bug fixes
    * UI: Fix a Stored DOM XSS vulnerability with query history [CVE-2019-10215](http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-10215). #6098
    * Promtool: fix recording inconsistency due to duplicate labels. #6026
    * UI: fixes service-discovery view when accessed from unhealthy targets. #5915
    * Metrics format: OpenMetrics parser crashes on short input. #5939
    * UI: avoid truncated Y-axis values. #6014

- Changes from 2.12.0
  + Features 
    * Track currently active PromQL queries in a log file. #5794
    * Enable and provide binaries for `mips64` / `mips64le` architectures. #5792
  + Enhancements
    * Improve responsiveness of targets web UI and API endpoint. #5740
    * Improve remote write desired shards calculation. #5763
    * Flush TSDB pages more precisely. tsdb#660
    * Add `prometheus_tsdb_retention_limit_bytes` metric. tsdb#667
    * Add logging during TSDB WAL replay on startup. tsdb#662
    * Improve TSDB memory usage. tsdb#653, tsdb#643, tsdb#654, tsdb#642, tsdb#627
  + Bug fixes
    * Check for duplicate label names in remote read. #5829
    * Mark deleted rules' series as stale on next evaluation. #5759
    * Fix JavaScript error when showing warning about out-of-sync server time. #5833
    * Fix `promtool test rules` panic when providing empty `exp_labels`. #5774
    * Only check last directory when discovering checkpoint number. #5756
    * Fix error propagation in WAL watcher helper functions. #5741
    * Correctly handle empty labels from alert templates. #5845

-------------------------------------------------------------------
Wed May 13 10:12:43 UTC 2020 - Joao Cavalheiro <jcavalheiro@suse.com>

- Update Uyuni/SUSE Manager service discovery patch
  + Modified 0003-Add-Uyuni-service-discovery.patch:
  + Adapt service discovery to the new Uyuni API endpoints
  + Modified spec file: force golang 1.12 to fix build issues in SLE15SP2

-------------------------------------------------------------------
Mon Jan 27 12:12:44 UTC 2020 - Witek Bedyk <witold.bedyk@suse.com>

- Update to Prometheus 2.11.2

-------------------------------------------------------------------
Mon Nov 25 14:59:24 UTC 2019 - Joao Cavalheiro <jcavalheiro@suse.com>

- Patch macros on spec file to support builds on SLE 12 

-------------------------------------------------------------------
Thu Nov 21 13:29:22 UTC 2019 - Jan Fajerski <jan.fajerski@suse.com>

- Remove prometheus.firewall.xml source file

-------------------------------------------------------------------
Wed Nov 20 22:33:20 UTC 2019 - Michał Rostecki <mrostecki@opensuse.org>

- Remove firewalld files. They are installed in the main firewalld
  package.

-------------------------------------------------------------------
Wed Nov 20 15:32:20 UTC 2019 - Joao Cavalheiro <jcavalheiro@suse.com>

- Update Uyuni/SUSE Manager service discovery patch
  + Modified 0003-Add-Uyuni-service-discovery.patch 
  + Fixes crashes when systems have no FQDN 
  + Adds Parallel calls to Uyuni API, meaningful performance increase
  + Adds Support for system group labels

-------------------------------------------------------------------
Mon Sep 23 10:19:03 UTC 2019 - Michał Rostecki <mrostecki@opensuse.org>

- Do not install the firewalld config file on Tumbleweed (on
  versions newer than Leap 15.1). It's installed in the main
  firewalld package.

-------------------------------------------------------------------
Fri Aug 16 06:46:24 UTC 2019 - Jan Fajerski <jan.fajerski@suse.com>

- remove 0004-prometheus-buildmode-pie.patch
  + this patch produces binaries that crash immediately
- add -v to promu build command for better build debugging
- reorder some %install tasks

-------------------------------------------------------------------
Fri Aug  2 11:22:25 UTC 2019 - Jan Fajerski <jan.fajerski@suse.com>

- Add network-online (Wants and After) dependency to systemd unit bsc#1143913

-------------------------------------------------------------------
Wed Jul 31 10:46:13 UTC 2019 - Andreas Schneider <asn@cryptomilk.org>

- Build with PIE
  + Added 0004-prometheus-buildmode-pie.patch

-------------------------------------------------------------------
Wed Jul 31 06:47:55 UTC 2019 - Andreas Schneider <asn@cryptomilk.org>

- Only package required files (reduces rpm size by 4 MB)
- Add sysconfig file
- Add firewall config file
- Use variables for defining user and group

-------------------------------------------------------------------
Thu Jul 25 16:34:29 UTC 2019 - Joao Cavalheiro <jcavalheiro@suse.com>

- Add support for Uyuni/SUSE Manager service discovery
  + Added 0003-Add-Uyuni-service-discovery.patch

-------------------------------------------------------------------
Thu Jul 18 01:06:13 UTC 2019 - Simon Crute <simon.crute@grafana.com>

- readded _service file removed in error. 

- Update to 2.11.1 
  + Bug Fix:
    * Fix potential panic when prometheus is watching multiple zookeeper paths.

- Update to 2.11.0
  + Bug Fix:
    * resolve race condition in maxGauge. 
    * Fix ZooKeeper connection leak. 
    * Improved atomicity of .tmp block replacement during compaction for usual case. 
    * Fix "unknown series references" after clean shutdown. 
    * Re-calculate block size when calling block.Delete. 
    * Fix unsafe snapshots with head block. 
    * prometheus_tsdb_compactions_failed_total is now incremented on any compaction failure. 
  + Changes:
    * Remove max_retries from queue_config (it has been unused since rewriting remote-write to utilize the write-ahead-log)
    * The meta file BlockStats no longer holds size information. This is now dynamically calculated and kept in memory. It also includes the meta file size which was not included before
    * Renamed metric from prometheus_tsdb_wal_reader_corruption_errors to prometheus_tsdb_wal_reader_corruption_errors_total
  + Features:
    * Add option to use Alertmanager API v2. 
    * Added humanizePercentage function for templates. 
    * Include InitContainers in Kubernetes Service Discovery. 
    * Provide option to compress WAL records using Snappy. 
  + Enhancements:
    * Create new clean segment when starting the WAL. 
    * Reduce allocations in PromQL aggregations. 
    * Add storage warnings to LabelValues and LabelNames API results. 
    * Add prometheus_http_requests_total metric. 
    * Enable openbsd/arm build. 
    * Remote-write allocation improvements. 
    * Query performance improvement: Efficient iteration and search in HashForLabels and HashWithoutLabels. 
    * Allow injection of arbitrary headers in promtool. 
    * Allow passing external_labels in alert unit tests groups. 
    * Allows globs for rules when unit testing.
    * Improved postings intersection matching. 
    * Reduced disk usage for WAL for small setups. 
    * Optimize queries using regexp for set lookups. 
 

-------------------------------------------------------------------
Thu Jul  4 12:08:24 UTC 2019 - Simon Crute <simon.crute@grafana.com>

- rebase patch002-Default-settings.patch 

- Update to 2.10.0:
  + Bug Fixes:
    * TSDB: Don't panic when running out of disk space and recover nicely from the condition
    * TSDB: Correctly handle empty labels.
    * TSDB: Don't crash on an unknown tombstone reference. 
    * Storage/remote: Remove queue-manager specific metrics if queue no longer exists. 
    * PromQL: Correctly display {__name__="a"}. 
    * Discovery/kubernetes: Use service rather than ingress as the name for the service workqueue. 
    * Discovery/azure: Don't panic on a VM with a public IP. 
    * Web: Fixed Content-Type for js and css instead of using /etc/mime.types.
    * API: Encode alert values as string to correctly represent Inf/NaN. 
  + Features:
    * Template expansion: Make external labels available as $externalLabels in alert and console template expansion. 
    * TSDB: Add prometheus_tsdb_wal_segment_current metric for the WAL segment index that TSDB is currently writing to. tsdb
    * Scrape: Add scrape_series_added per-scrape metric. #5546
  + Enhancements
    * Discovery/kubernetes: Add labels __meta_kubernetes_endpoint_node_name and __meta_kubernetes_endpoint_hostname. 
    * Discovery/azure: Add label __meta_azure_machine_public_ip. 
    * TSDB: Simplify mergedPostings.Seek, resulting in better performance if there are many posting lists. tsdb
    * Log filesystem type on startup. 
    * Cmd/promtool: Use POST requests for Query and QueryRange. client_golang
    * Web: Sort alerts by group name. 
    * Console templates: Add convenience variables $rawParams, $params, $path.
- Upadte to 2.9.2
  + Bug Fixes:
    * Make sure subquery range is taken into account for selection 
    * Exhaust every request body before closing it 
    * Cmd/promtool: return errors from rule evaluations 
    * Remote Storage: string interner should not panic in release 
    * Fix memory allocation regression in mergedPostings.Seek tsdb

- Update to 2.9.1
  + Bug Fixes:
    * Discovery/kubernetes: fix missing label sanitization 
    * Remote_write: Prevent reshard concurrent with calling stop 

- Update to 2.9.0 
  + Feature: 
    * Add honor_timestamps scrape option.
  + Enhancements:	
    * Update Consul to support catalog.ServiceMultipleTags.
    * Discovery/kubernetes: add present labels for labels/annotations.
    * OpenStack SD: Add ProjectID and UserID meta labels.
    * Add GODEBUG and retention to the runtime page. 
    * Add support for POSTing to /series endpoint. 
    * Support PUT methods for Lifecycle and Admin APIs.
    * Scrape: Add global jitter for HA server.
    * Check for cancellation on every step of a range evaluation. 
    * String interning for labels & values in the remote_write path.
    * Don't lose the scrape cache on a failed scrape.
    * Reload cert files from disk automatically. common
    * Use fixed length millisecond timestamp format for logs. common
    * Performance improvements for postings. 
  Bug Fixes:
    * Remote Write: fix checkpoint reading. 
    * Check if label value is valid when unmarshaling external labels from YAML. 
    * Promparse: sort all labels when parsing. 
    * Reload rules: copy state on both name and labels. 
    * Exponentation operator to drop metric name in result of operation. 
    * Config: resolve more file paths. 
    * Promtool: resolve relative paths in alert test files. 
    * Set TLSHandshakeTimeout in HTTP transport. common
    * Use fsync to be more resilient to machine crashes. 
    * Keep series that are still in WAL in checkpoints.

- Update to 2.8.1
  + Bug Fixes
    *  Display the job labels in /targets which was removed accidentally

- Update to 2.8.0 
  + Change:
    * This release uses Write-Ahead Logging (WAL) for the remote_write API. This currently causes a slight increase in memory usage, which will be addressed in future releases.
    * Default time retention is used only when no size based retention is specified. These are flags where time retention is specified by the flag --storage.tsdb.retention and size retention by --storage.tsdb.retention.size. 
    * prometheus_tsdb_storage_blocks_bytes_total is now prometheus_tsdb_storage_blocks_bytes. 
  + Feature:
    * (EXPERIMENTAL) Time overlapping blocks are now allowed; vertical compaction and vertical query merge. It is an optional feature which is controlled by the --storage.tsdb.allow-overlapping-blocks flag, disabled by default.
  + Enhancements:  
	* Use the WAL for remote_write API.
    * Query performance improvements. 
    * UI enhancements with upgrade to Bootstrap 4. 
    * Reduce time that Alertmanagers are in flux when reloaded. 
    * Limit number of metrics displayed on UI to 10000. 
    * (1) Remember All/Unhealthy choice on target-overview when reloading page. (2) Resize text-input area on Graph page on mouseclick. 
    * In histogram_quantile merge buckets with equivalent le values. 
    * Show list of offending labels in the error message in many-to-many scenarios. 
    * Show Storage Retention criteria in effect on /status page. 
  + Bug Fixes: 
    + Fix sorting of rule groups. 
    + Fix support for password_file and bearer_token_file in Kubernetes SD. 
    + Scrape: catch errors when creating HTTP clients  
    + Adds new metrics:
        prometheus_target_scrape_pools_total
        prometheus_target_scrape_pools_failed_total
        prometheus_target_scrape_pool_reloads_total
        prometheus_target_scrape_pool_reloads_failed_total
    + Fix panic when aggregator param is not a literal.

-------------------------------------------------------------------
Fri Feb 22 09:20:11 UTC 2019 - Jan Fajerski <jan.fajerski@suse.com>

- fix spec file: actually ship promtool

-------------------------------------------------------------------
Fri Feb  8 07:24:59 UTC 2019 - Jan Fajerski <jan.fajerski@suse.com>

- Update to 2.7.1:
  + Bug Fixes:
    * Fix a Stored DOM XSS vulnerability with query history (boo#1124610)
    * prometheus_rule_group_last_duration_seconds now reports seconds instead of nanoseconds
    * Make sure the targets are consistently sorted in the targets page
- Update to 2.7.0:
  + cli flag depreacted: storage.tsdb.retention use storage.tsdb.retention.time
    instead; depreacted flag will be removed in 3.0
  + Features:
    * Add subqueries to PromQL
    * Add support for disk size based retention. Note that we don't
      consider the WAL size which could be significant and the time
      based retention policy also applies (experimental)
    * Add CORS origin flag
  + Bug Fixes:
    * Don't depend on given order when comparing samples in alert unit testing
    * Make sure the retention period doesn't overflow
    * Don't generate blocks with no samples
- Update to 2.6.0:
  + Remove default flags from the container's entrypoint, run Prometheus from
    /etc/prometheus and symlink the storage directory to /etc/prometheus/data
  + Promtool: Remove the update command
  + Features:
    * Add JSON log format via the --log.format flag
    * API: Add /api/v1/labels endpoint to get all label names
    * Web: Allow setting the page's title via the --web.ui-title flag
  + Enhancements:
    * Add prometheus_tsdb_lowest_timestamp_seconds, prometheus_tsdb_head_min_time_seconds
      and prometheus_tsdb_head_max_time_seconds metrics
    * Add rule_group_last_evaluation_timestamp_seconds metric
    * Add prometheus_template_text_expansion_failures_total and prometheus_template_text_expansions_total metrics
    * Set consistent User-Agent header in outgoing requests
    * Azure SD: Error out at load time when authentication parameters are missing
    * EC2 SD: Add the machine's private DNS name to the discovery metadata
    * EC2 SD: Add the operating system's platform to the discovery metadata
    * Kubernetes SD: Add the pod's phase to the discovery metadata
    * Kubernetes SD: Log Kubernetes messages
    * Promtool: Collect CPU and trace profiles
    * Promtool: Support writing output as JSON
    * Remote Read: Return available data if remote read fails partially
    * Remote Write: Improve queue performance
    * Remote Write: Add min_shards parameter to set the minimum number of shards
    * TSDB: Improve WAL reading
    * TSDB: Memory improvements
    * Web: Log stack traces on panic
    * Web UI: Add copy to clipboard button for configuration
    * Web UI: Support console queries at specific times
    * Web UI: group targets by job then instance
  + Bug Fixes:
    * Deduplicate handler labels for HTTP metrics
    * Fix leaked queriers causing shutdowns to hang
    * Fix configuration loading panics on nil pointer slice elements
    * API: Correctly skip mismatching targets on /api/v1/targets/metadata
    * API: Better rounding for incoming query timestamps
    * Discovery: Remove all targets when the scrape configuration gets empty
    * PromQL: Fix a goroutine leak in the lexer/parser
    * Scrape: Fix deadlock in the scrape's manager
    * Scrape: Scrape targets at fixed intervals even after Prometheus restarts
    * TSDB: Support restored snapshots including the head properly
    * TSDB: Repair WAL when the last record in a segment is torn
- Update to 2.5.0
  + Group targets by scrape config instead of job name
  + Marathon SD: Various changes to adapt to Marathon 1.5+
  + Discovery: Split prometheus_sd_discovered_targets metric by scrape and
    notify (Alertmanager SD) as well as by section in the respective configuration
  + Enhancements:
    * Support s390x platform for Linux
    * API: Add prometheus_api_remote_read_queries metric tracking currently
      executed or waiting remote read API requests
    * Remote Read: Add prometheus_remote_storage_remote_read_queries metric
      tracking currently in-flight remote read queries
    * Remote Read: Reduced memory usage
    * Discovery: Add prometheus_sd_discovered_targets,
      prometheus_sd_received_updates_total, prometheus_sd_updates_delayed_total,
      and prometheus_sd_updates_total metrics for discovery subsystem
    * Discovery: Improve performance of previously slow updates of changes of targets
    * Kubernetes SD: Add extended metrics
    * OpenStack SD: Support discovering instances from all projects
    * OpenStack SD: Discover all interfaces
    * OpenStack SD: Support tls_config for the used HTTP client
    * Triton SD: Add ability to filter triton_sd targets by pre-defined groups
    * Web UI: Avoid browser spell-checking in expression field
    * Web UI: Add scrape duration and last evaluation time in targets and rules pages
    * Web UI: Improve rule view by wrapping lines
    * Rules: Error out at load time for invalid templates, rather than at evaluation time
  + Bug Fixes:
    * Change max/min over_time to handle NaNs properly
    * Check label name for count_values PromQL function
    * Ensure that vectors and matrices do not contain identical label-sets
- Update to 2.4.3
  + Bug Fixes:
    [BUGFIX] Fix panic when using custom EC2 API for SD #4672
    [BUGFIX] Fix panic when Zookeeper SD cannot connect to servers #4669
    [BUGFIX] Make the skip_head an optional parameter for snapshot API #4674
- Update to 2.4.2
  + Bug Fixes:
    [BUGFIX] Handle WAL corruptions properly prometheus/tsdb#389
    [BUGFIX] Handle WAL migrations correctly on Windows prometheus/tsdb#392
- Update to 2.4.1
  + New TSDB metrics
  + Bug Fixes:
  Render UI correctly for Windows
- Update to 2.4.0
  + The WAL implementation has been re-written so the storage is not forward
    compatible. Prometheus 2.3 storage will work on 2.4 but not vice-versa
  + Reduce remote write default retries
  + Remove /heap endpoint
  + Features:
    * Persist alert 'for' state across restarts
    * Add API providing per target metric metadata
    * Add API providing recording and alerting rules
  + Enhancements:
    * Brand new WAL implementation for TSDB. Forwards incompatible with previous WAL.
    * Show rule evaluation errors in UI
    * Throttle resends of alerts to Alertmanager
    * Send EndsAt along with the alert to Alertmanager
    * Limit the samples returned by remote read endpoint
    * Limit the data read in through remote read
    * Coalesce identical SD configuations
    * promtool: Add new commands for debugging and querying
    * Update console examples for node_exporter v0.16.0
    * Optimize PromQL aggregations
    * Remote read: Add Offset to hints
    * consul_sd: Add support for ServiceMeta field
    * ec2_sd: Maintain order of subnet_id label
    * ec2_sd: Add support for custom endpoint to support EC2 compliant APIs
    * ec2_sd: Add instance_owner label
    * azure_sd: Add support for VMSS discovery and multiple environments
    * gce_sd: Add instance_id label
    * Forbid rule-abiding robots from indexing
    * Log virtual memory limits on startup
  + Bug Fixes:
    * Wait for service discovery to stop before exiting
    * Render SD configs properly
    * Only add LookbackDelta to vector selectors
    * ec2_sd: Handle panic-ing nil pointer
    * consul_sd: Stop leaking connections
    * Use templated labels also to identify alerts
    * Reduce floating point errors in stddev and related functions
    * Log errors while encoding responses
- Update to 2.3.2
  + Bug Fixes:
    * Fix various tsdb bugs
    * Reorder startup and shutdown to prevent panics.
    * Exit with non-zero code on error
    * discovery/kubernetes/ingress: fix scheme discovery
    * Fix race in zookeeper sd
    * Better timeout handling in promql
    * Propogate errors when selecting series from the tsdb
- Update to 2.3.1
  + Bug Fixes:
    * Avoid infinite loop on duplicate NaN values.
    * Fix nil pointer deference when using various API endpoints
    * config: set target group source index during unmarshalling
    * discovery/file: fix logging
    * kubernetes_sd: fix namespace filtering
    * web: restore old path prefix behavior
    * web: remove security headers added in 2.3.0
- Update to 2.3.0
  + marathon_sd: use auth_token and auth_token_file for token-based authentication
    instead of bearer_token and bearer_token_file respectively
  + Metric names for HTTP server metrics changed
  + Features:
    * Add query commands to promtool
    * Add security headers to HTTP server responses
    * Pass query hints via remote read API
    * Basic auth passwords can now be configured via file across all configuration
  + Enhancements:
    * Optimise PromQL and API serialization for memory usage and allocations
    * Limit number of dropped targets in web UI
    * Consul and EC2 service discovery allow using server-side filtering for performance improvement
    * Add advanced filtering configuration to EC2 service discovery
    * marathon_sd: adds support for basic and bearer authentication, plus all
      other common HTTP client options (TLS config, proxy URL, etc.)
    * Provide machine type metadata and labels in GCE service discovery
    * Add pod controller kind and name to Kubernetes service discovery data
    * Move TSDB to flock-based log file that works with Docker containers
  + Bug Fixes:
    * Properly propagate storage errors in PromQL
    * Fix path prefix for web pages
    * Fix goroutine leak in Consul service discovery
    * Fix races in scrape manager
    * Fix OOM for very large k in PromQL topk() queries
    * Make remote write more resilient to unavailable receivers
    * Make remote write shutdown cleanly
    * Don't leak files on errors in TSDB's tombstone cleanup
    * Unary minus expressions now removes the metric name from results
    * Fix bug that lead to wrong amount of samples considered for time range expressions
- Update to 2.2.1
  + Bug Fixes:
    * Fix data loss in TSDB on compaction
    * Correctly stop timer in remote-write path
    * Fix deadlock triggered by loading targets page
    * Fix incorrect buffering of samples on range selection queries
    * Handle large index files on windows properly
- Update to 2.2.0
  + This release introduces improvements to the storage format and fixes a
    regression introduced in 2.1. As a result Prometheus servers upgraded
    to 2.2 cannot be downgraded to a lower version anymore!
  + Rename file SD mtime metric
  + Send target update on empty pod IP in Kubernetes SD
  + Features:
    * Add API endpoint for flags.
    * Add API endpoint for dropped targets.
    * Display annotations on alerts page.
    * Add option to skip head data when taking snapshots
  + Enhancements:
    * Federation performance improvement.
    * Read bearer token file on every scrape.
    * Improve typeahead on /graph page.
    * Change rule file formatting.
    * Set consul server default to localhost:8500.
    * Add dropped Alertmanagers to API info endpoint.
    * Add OS type meta label to Azure SD.
    * Validate required fields in SD configuration.
  + Bug Fixes:
    * Prevent stack overflow on deep recursion in TSDB.
    * Correctly read offsets in index files that are greater than 4GB.
    * Fix scraping behavior for empty labels.
    * Drop metric name for bool modifier.
    * Fix races in discovery.
    * Fix Kubernetes endpoints SD for empty subsets.
    * Throttle updates from SD providers, which caused increased CPU usage and allocations.
    * Fix TSDB block reload issue.
    * Fix PromQL printing of empty without().
    * Don't reset FiredAt for inactive alerts.
    * Fix erroneous file version changes and repair existing data.
- remove pr-3174.patch, has been fixed in https://github.com/prometheus/prometheus/pull/3517

-------------------------------------------------------------------
Wed Mar 14 07:20:23 UTC 2018 - jan.fajerski@suse.com

- spec: fix directory for fdupes 

-------------------------------------------------------------------
Thu Jan 25 10:11:26 UTC 2018 - kkaempf@suse.com

- Update to 2.1.0:
  + Features:
    * New Service Discovery UI showing labels before and after relabelling.
    * New Admin APIs added to v1 to delete, snapshot and remove tombstones.
  + Enhancements:
    * The graph UI autcomplete now includes your previous queries.
    * Federation is now much faster for large numbers of series.
    * Added new metrics to measure rule timings.
    * Rule evaluation times added to the rules UI.
    * Added metrics to measure modified time of file SD files.
    * Kubernetes SD now includes POD UID in discovery metadata.
    * The Query APIs now return optional stats on query execution times.
    * The index now no longer has the 4GiB size limit and is also smaller.
  + Bug Fixes:
    * Remote read read_recent option is now false by default.
    * Pass the right configuration to each Alertmanager (AM) when using
      multiple AM configs.
    * Fix not-matchers not selecting series with labels unset.
    * tsdb: Fix occasional panic in head block.
    * tsdb: Close files before deletion to fix retention issues on Windows
      and NFS.
    * tsdb: Cleanup and do not retry failing compactions.
    * tsdb: Close WAL while shutting down.

-------------------------------------------------------------------
Thu Nov  9 07:30:09 UTC 2017 - tserong@suse.com

- Update to final v2.0.0 release (bsc#1067341):
  + Compared to version 1.x, this release includes a completely rewritten
    storage engine, huge performance improvements, but also many backwards
    incompatible changes.  For more information, read the announcement blog
    post and migration guide:
    - https://prometheus.io/blog/2017/11/08/announcing-prometheus-2-0/
    - https://prometheus.io/docs/prometheus/2.0/migration/
  + Changes:
    * Completely rewritten storage layer, with WAL.  This is not backwards
      compatible with 1.x storage,  and many flags have changed/disappeared.
    * New staleness behavior. Series now marked stale after target scrapes
      no longer return them, and soon after targets disappear from service
      discovery.
    * Rules files use YAML syntax now.  Conversion tool added to promtool.
    * Removed count_scalar, drop_common_labels functions and keep_common
      modifier from PromQL.
    * Rewritten exposition format parser with much higher performance.  The
      Protobuf exposition format is no longer supported.
    * Example console templates updated for new storage and metrics names.
      Examples other than node exporter and Prometheus removed.
    * Admin and lifecycle APIs now disabled by default, can be reenabled via
      flags
    * Flags switched to using Kingpin, all flags are now --flagname rather
      than -flagname.
  + Features:
    * Remote read can be configured to not read data which is available
      locally.  This is enabled by default.
    * Rules can be grouped now.  Rules within a rule group are executed
      sequentially.
    * Added experimental GRPC apis
    * Add timestamp() function to PromQL.
  + Enhancements:
    * Remove remote read from the query path if no remote storage is
      configured.
    * Bump Consul HTTP client timeout to not match the Consul SD watch
      timeout.
    * Go-conntrack added to provide HTTP connection metrics.
  + Bug Fixes:
    * Fix connection leak in Consul SD.

-------------------------------------------------------------------
Tue Nov  7 23:30:46 UTC 2017 - tserong@suse.com

- Update to v2.0.0-rc.3 (bsc#1067030):
  + Enhancements:
    * Remove remote read from the query path if no remote storage
      is configured.
    * Bump Consul HTTP client timeout to not match the Consul SD
      watch timeout.
    * Bump up a too small max block duration to the min block
      duration instead of returning an error.
  + Bug Fixes:
    * Avoid needless padding of 4 zero bytes in index files.
    * Delete old blocks during reload (necessary on MS Windows).
    * Fix regression of alert rules state loss on config reload.
    * Serialize background WAL operations to avoid data races.
  + This also contains bugfixes and remote-storage features from
    the 1.8 branch.

-------------------------------------------------------------------
Fri Oct 27 02:06:17 UTC 2017 - tserong@suse.com

- Update to v2.0.0-rc.2 (bsc#1065377):
  + Enhancements:
    * Handle WAL segments with corrupted header gracefully
    * Stabilize memory usage during WAL replay
  + Changes:
    * Prefix all storage metrics with prometheus_
  + Bug Fixes:
    * Correctly handle label removal in remote read
    * Fix chunk misalignment causing out-of-order samples
    * Fix connection leak in Consul SD
    * Handle invalid chunk dereferences gracefully
    * Prevent potential deadlock during failing querier construction

-------------------------------------------------------------------
Thu Oct 19 00:00:32 UTC 2017 - tserong@suse.com

- Update to v2.0.0-rc.1:
  + Features/Enhancements:
    * Added a warning for time-drift between the browser and the
      prometheus-server.
    * Much faster WAL read-back on restart.
  + Bug Fixes:
    * Fixed Remote-read to not drop the first series.
    * Validate recording-rule names.
    * Fix several races.
    * Only close blocks if there are no iterators accessing it.
- Refresh 0002-Default-settings.patch

-------------------------------------------------------------------
Wed Oct 11 01:13:03 UTC 2017 - tserong@suse.com

- Update to v2.0.0-rc.0:
  + Numerous changes to the new storage layer, the main changes being:
    * Remove `count_scalar`, `keep_common` and `drop_common_labels` functions
    * Breaking change in the index format for better consistency 
    * Fix panic due garbage collected mmap'ed strings 
    * Fix broken snapshots and admin APIs 
    * Send HTTP Accept header when scraping
    * Use the WAL flush interval passed instead of the hardcoded value
  + This release requires a clean storage directory and is not compatible
    with files created by previous beta releases
- Refresh 0002-Default-settings.patch

-------------------------------------------------------------------
Sun Sep 24 15:11:37 UTC 2017 - tserong@suse.com

- Fix loopback address for REST API gateway (bsc#1059462)
  + Added pr-3174.patch

-------------------------------------------------------------------
Fri Sep 22 08:07:50 UTC 2017 - tserong@suse.com

- Update to v2.0.0-beta.5:
  + Bug Fixes:
    *  Remove deadlock on startup when restoring WAL
    * Fix semantical races resulting in invalid persisted files
    * Correctly read back WAL in certain edge cases
    * Prevent crashes caused by changing metric representations in target's
      /metrics
  + Enhancements:
    * Overall memory usage reduction
    * Serve debugging endpoints while TSDB is loading
    * Healthy endpoint correctly reflects liveness during startup
    * Switch to consistent usage of go-kit/log
  + This release may have issues with files written by previous beta releases
- Refresh 0002-Default-settings.patch to apply cleanly again

-------------------------------------------------------------------
Mon Sep 18 12:18:17 UTC 2017 - tserong@suse.com

- Update to v2.0.0-beta.4:
  + Numerous changes to the new storage layer, the main changes being:
    * Single, compacted write ahead log
    * Single in-memory block with garbage collection
    * Improve compression of index files
    * Cache series dropped via metric_relabel_configs
    * Pool byte buffers for scraping
  + Overall the changes achieve a baseline reduction in memory consumption
    and reduce peak memory usage by 30-40% compared to 2.0.0-beta.2
  + This release requires a clean storage directory and is not compatible
    with files created by previous beta releases

-------------------------------------------------------------------
Tue Aug 22 08:10:18 UTC 2017 - tserong@suse.com

- Update to v2.0.0-beta.2
  + vendor: update prometheus/tsdb (Fix panic caused by 0 division)

-------------------------------------------------------------------
Wed Aug 16 02:17:42 UTC 2017 - tserong@suse.com

- Update to v2.0.0-beta.1
  + Includes a new storage layer, which reduces bottlenecks and shows
    considerable performance improvements, but does not work with old v1
    storage data.
- Refresh 0002-Default-settings.patch to apply cleanly again

-------------------------------------------------------------------
Tue May  9 05:32:44 UTC 2017 - tserong@suse.com

- Add systemd unit file and default config (/etc/prometheus/prometheus.yml)
- Run as unprivileged "prometheus" user
- Default to /etc/prometheus for config and /var/lib/prometheus for metrics
  + Added 0002-Default-settings.patch

-------------------------------------------------------------------
Wed Apr 26 09:07:42 UTC 2017 - tserong@suse.com

- Add BuildRequires: glibc-devel-static to fix aarch64 build

-------------------------------------------------------------------
Wed Mar 29 09:50:28 UTC 2017 - moio@suse.com

- Initial version
