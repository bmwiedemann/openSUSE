-------------------------------------------------------------------
Wed Sep  6 15:05:28 UTC 2023 - Johannes Kastl <kastl@b1-systems.de>

- use "manual" service instead of "disabled"
- update to 2.47.0:
  This release adds an experimental OpenTelemetry (OTLP) Ingestion
  feature, and also new setting `keep_dropped_targets` to limit the
  amount of dropped targets held in memory. This defaults to 0
  meaning 'no limit', so we encourage users with large Prometheus
  to try setting a limit such as 100.
  * [FEATURE] Web: Add OpenTelemetry (OTLP) Ingestion endpoint.
    #12571 #12643
  * [FEATURE] Scraping: Optionally limit detail on dropped targets,
    to save memory. #12647
  * [ENHANCEMENT] TSDB: Write head chunks to disk in the background
    to reduce blocking. #11818
  * [ENHANCEMENT] PromQL: Speed up aggregate and function queries.
    #12682
  * [ENHANCEMENT] PromQL: More efficient evaluation of query with
    `timestamp()`. #12579
  * [ENHANCEMENT] API: Faster streaming of Labels to JSON. #12598
  * [ENHANCEMENT] Agent: Memory pooling optimisation. #12651
  * [ENHANCEMENT] TSDB: Prevent storage space leaks due to
    terminated snapshots on shutdown. #12664
  * [ENHANCEMENT] Histograms: Refactoring and optimisations. #12352
    #12584 #12596 #12711 #12054
  * [ENHANCEMENT] Histograms: Add `histogram_stdvar` and
    `histogram_stddev` functions. #12614
  * [ENHANCEMENT] Remote-write: add http.resend_count tracing
    attribute. #12676
  * [ENHANCEMENT] TSDB: Support native histograms in snapshot on
    shutdown. #12722
  * [BUGFIX] TSDB/Agent: ensure that new series get written to WAL
    on rollback. #12592
  * [BUGFIX] Scraping: fix infinite loop on exemplar in protobuf
    format. #12737


-------------------------------------------------------------------
Tue Jul 25 13:42:13 UTC 2023 - Johannes Kastl <kastl@b1-systems.de>

- remove vendor.tar.gz during "make clean"
- update to 2.46.0:
  * [FEATURE] Promtool: Add PromQL format and label matcher
    set/delete commands to promtool. #11411
  * [FEATURE] Promtool: Add push metrics command. #12299
  * [ENHANCEMENT] Promtool: Read from stdin if no filenames are
    provided in check rules. #12225
  * [ENHANCEMENT] Hetzner SD: Support larger ID's that will be used
    by Hetzner in September. #12569
  * [ENHANCEMENT] Kubernetes SD: Add more labels for endpointslice
    and endpoints role. #10914
  * [ENHANCEMENT] Kubernetes SD: Do not add pods to target group if
    the PodIP status is not set. #11642
  * [ENHANCEMENT] OpenStack SD: Include instance image ID in
    labels. #12502
  * [ENHANCEMENT] Remote Write receiver: Validate the metric names
    and labels. #11688
  * [ENHANCEMENT] Web: Initialize `prometheus_http_requests_total`
    metrics with `code` label set to `200`. #12472
  * [ENHANCEMENT] TSDB: Add Zstandard compression option for wlog.
    #11666
  * [ENHANCEMENT] TSDB: Support native histograms in snapshot on
    shutdown. #12258
  * [ENHANCEMENT] Labels: Avoid compiling regexes that are literal.
    #12434
  * [BUGFIX] Histograms: Fix parsing of float histograms without
    zero bucket. #12577
  * [BUGFIX] Histograms: Fix scraping native and classic histograms
    missing some histograms. #12554
  * [BUGFIX] Histograms: Enable ingestion of multiple exemplars per
    sample. 12557
  * [BUGFIX] File SD: Fix path handling in File-SD watcher to allow
    directory monitoring on Windows. #12488
  * [BUGFIX] Linode SD: Cast `InstanceSpec` values to `int64` to
    avoid overflows on 386 architecture. #12568
  * [BUGFIX] PromQL Engine: Include query parsing in active-query
    tracking. #12418
  * [BUGFIX] TSDB: Handle TOC parsing failures. #10623

-------------------------------------------------------------------
Mon Jun 26 05:09:10 UTC 2023 - Johannes Kastl <kastl@b1-systems.de>

- update to 2.45.0:
  This release is a LTS (Long-Term Support) release of Prometheus
  and will receive security, documentation and bugfix patches for
  at least 12 months.  Please read more about our LTS release cycle
  at <https://prometheus.io/docs/introduction/release-cycle/>.
  * [FEATURE] API: New limit parameter to limit the number of items
    returned by `/api/v1/status/tsdb` endpoint. #12336
  * [FEATURE] Config: Add limits to global config. #12126
  * [FEATURE] Consul SD: Added support for `path_prefix`. #12372
  * [FEATURE] Native histograms: Add option to scrape both classic
    and native histograms. #12350
  * [FEATURE] Native histograms: Added support for two more
    arithmetic operators `avg_over_time` and `sum_over_time`.
    #12262
  * [FEATURE] Promtool: When providing the block id, only one block
    will be loaded and analyzed. #12031
  * [FEATURE] Remote-write: New Azure ad configuration to support
    remote writing directly to Azure Monitor workspace. #11944
  * [FEATURE] TSDB: Samples per chunk are now configurable with
    flag `storage.tsdb.samples-per-chunk`. By default set to its
    former value 120. #12055
  * [ENHANCEMENT] Native histograms: bucket size can now be limited
    to avoid scrape fails. #12254
  * [ENHANCEMENT] TSDB: Dropped series are now deleted from the WAL
    sooner. #12297
  * [BUGFIX] Native histograms: ChunkSeries iterator now checks if
    a new sample can be appended to the open chunk. #12185
  * [BUGFIX] Native histograms: Fix Histogram Appender
    `Appendable()` segfault. #12357
  * [BUGFIX] Native histograms: Fix setting reset header to gauge
    histograms in seriesToChunkEncoder. #12329
  * [BUGFIX] TSDB: Tombstone intervals are not modified after Get()
    call. #12245
  * [BUGFIX] TSDB: Use path/filepath to set the WAL directory.
    #12349

-------------------------------------------------------------------
Sun May 14 09:56:45 UTC 2023 - Johannes Kastl <kastl@b1-systems.de>

- update to 2.44.0:
  This version is built with Go tag `stringlabels`, to use the
  smaller data structure for Labels that was optional in the
  previous release. For more details about this code change see
  #10991.
  * [CHANGE] Remote-write: Raise default samples per send to 2,000.
    #12203
  * [FEATURE] Remote-read: Handle native histograms. #12085, #12192
  * [FEATURE] Promtool: Health and readiness check of prometheus
    server in CLI. #12096
  * [FEATURE] PromQL: Add `query_samples_total` metric, the total
    number of samples loaded by all queries. #12251
  * [ENHANCEMENT] Storage: Optimise buffer used to iterate through
    samples. #12326
  * [ENHANCEMENT] Scrape: Reduce memory allocations on target
    labels. #12084
  * [ENHANCEMENT] PromQL: Use faster heap method for `topk()` /
    `bottomk()`. #12190
  * [ENHANCEMENT] Rules API: Allow filtering by rule name. #12270
  * [ENHANCEMENT] Native Histograms: Various fixes and
    improvements. #11687, #12264, #12272
  * [ENHANCEMENT] UI: Search of scraping pools is now
    case-insensitive. #12207
  * [ENHANCEMENT] TSDB: Add an affirmative log message for
    successful WAL repair. #12135
  * [BUGFIX] TSDB: Block compaction failed when shutting down.
    #12179
  * [BUGFIX] TSDB: Out-of-order chunks could be ignored if the
    write-behind log was deleted. #12127
- rebase patch 0001-Do-not-force-the-pure-Go-name-resolver.patch
  onto v2.44.0

-------------------------------------------------------------------
Fri May  5 06:47:39 UTC 2023 - Johannes Kastl <kastl@b1-systems.de>

- update to 2.43.1
  * [BUGFIX] Labels: Set() after Del() would be ignored, which
    broke some relabeling rules. #12322

-------------------------------------------------------------------
Thu Apr 13 13:23:41 UTC 2023 - Johannes Kastl <kastl@b1-systems.de>

- Remove npm_licenses.tar.bz2 during "make clean"

-------------------------------------------------------------------
Thu Apr  6 15:50:42 UTC 2023 - Lukas MÃ¼ller <expeehaa@outlook.com>

- Remove web-ui archives during "make clean".

-------------------------------------------------------------------
Wed Apr  5 11:28:56 UTC 2023 - Witek Bedyk <witold.bedyk@suse.com>

- Require promu >= 0.14.0 for building

-------------------------------------------------------------------
Wed Mar 22 06:00:08 UTC 2023 - Johannes Kastl <kastl@b1-systems.de>

- update to 2.43.0:
  * [SECURITY BUGFIX]: Fix uncontrolled resource consumption by
    updating Go to version 1.20.1 (bsc#1208298, CVE-2022-41723)
  * [FEATURE] Promtool: Add HTTP client configuration to query
    commands. #11487
  * [FEATURE] Scrape: Add `include_scrape_configs` to include
    scrape configs from different files. #12019
  * [FEATURE] HTTP client: Add `no_proxy` to exclude URLs from
    proxied requests. #12098
  * [FEATURE] HTTP client: Add `proxy_from_enviroment` to read
    proxies from env variables. #12098
  * [ENHANCEMENT] API: Add support for setting lookback delta per
    query via the API. #12088
  * [ENHANCEMENT] API: Change HTTP status code from 503/422 to 499
    if a request is canceled. #11897
  * [ENHANCEMENT] Scrape: Allow exemplars for all metric types.
    #11984
  * [ENHANCEMENT] TSDB: Add metrics for head chunks and WAL folders
    size. #12013
  * [ENHANCEMENT] TSDB: Automatically remove incorrect snapshot
    with index that is ahead of WAL. #11859
  * [ENHANCEMENT] TSDB: Improve Prometheus parser error outputs to
    be more comprehensible. #11682
  * [ENHANCEMENT] UI: Scope `group by` labels to metric in
    autocompletion. #11914
  * [BUGFIX] Scrape: Fix
    `prometheus_target_scrape_pool_target_limit` metric not set
    before reloading. #12002
  * [BUGFIX] TSDB: Correctly update
    `prometheus_tsdb_head_chunks_removed_total` and
    `prometheus_tsdb_head_chunks` metrics when reading WAL. #11858
  * [BUGFIX] TSDB: Use the correct unit (seconds) when recording
    out-of-order append deltas in the
    `prometheus_tsdb_sample_ooo_delta` metric. #12004

-------------------------------------------------------------------
Tue Feb 28 15:44:01 UTC 2023 - Johannes Kastl <kastl@b1-systems.de>

- fix building web assets (boo#1208752)
- adjust packaging to build webassets locally, outside of OBS
  * to get the UI working, newer versions of prometheus need the
    react app assets
  * as running `npm install` inside of OBS is not possible, the
    required dependencies need to be prepared outside of OBS
  * added a PACKAGING_README.md file, that explains how the new
    web-ui-*.tar.gz and npm_licenses.tar.bz2 tarballs can be
    created

-------------------------------------------------------------------
Thu Feb  2 07:19:41 UTC 2023 - Johannes Kastl <kastl@b1-systems.de>

- update to 2.42.0:
  This release comes with a bunch of feature coverage for native
  histograms and breaking changes.

  If you are trying native histograms already, we recommend you
  remove the `wal` directory when upgrading.
  Because the old WAL record for native histograms is not
  backward compatible in v2.42.0, this will lead to some data
  loss for the latest data.

  Additionally, if you scrape "float histograms" or use recording
  rules on native histograms in v2.42.0 (which writes float
  histograms),
  it is a one-way street since older versions do not support
  float histograms.

  * [CHANGE] **breaking** TSDB: Changed WAL record format for the
    experimental native histograms. #11783
  * [FEATURE] Add 'keep_firing_for' field to alerting rules.
    #11827
  * [FEATURE] Promtool: Add support of selecting timeseries for
    TSDB dump. #11872
  * [ENHANCEMENT] Agent: Native histogram support. #11842
  * [ENHANCEMENT] Rules: Support native histograms in recording
    rules. #11838
  * [ENHANCEMENT] SD: Add container ID as a meta label for pod
    targets for Kubernetes. #11844
  * [ENHANCEMENT] SD: Add VM size label to azure service
    discovery. #11650
  * [ENHANCEMENT] Support native histograms in federation. #11830
  * [ENHANCEMENT] TSDB: Add gauge histogram support.
    #11783 #11840 #11814
  * [ENHANCEMENT] TSDB/Scrape: Support FloatHistogram that
    represents buckets as float64 values. #11522 #11817 #11716
  * [ENHANCEMENT] UI: Show individual scrape pools on /targets
    page. #11142

-------------------------------------------------------------------
Tue Jan 10 14:18:30 UTC 2023 - Johannes Kastl <kastl@b1-systems.de>

- modify _service file and set go_modules to disabled
  * this allows full preparation just using 'osc service disabledrun'
- rebase patch 0002-Default-settings.patch
- drop patch 0003-Bump-client_golang-to-1.12.1.patch
- update to 2.33.0:
  * [CHANGE] PromQL: Promote negative offset and @ modifer to stable features. #10121
  * [CHANGE] Web: Promote remote-write-receiver to stable. #10119
  * [FEATURE] Config: Add stripPort template function. #10002
  * [FEATURE] Promtool: Add cardinality analysis to check metrics, enabled by flag --extended. #10045
  * [FEATURE] SD: Enable target discovery in own K8s namespace. #9881
  * [FEATURE] SD: Add provider ID label in K8s SD. #9603
  * [FEATURE] Web: Add limit field to the rules API. #10152
  * [ENHANCEMENT] Remote-write: Avoid allocations by buffering concrete structs instead of interfaces. #9934
  * [ENHANCEMENT] Remote-write: Log time series details for out-of-order samples in remote write receiver. #9894
  * [ENHANCEMENT] Remote-write: Shard up more when backlogged. #9274
  * [ENHANCEMENT] TSDB: Use simpler map key to improve exemplar ingest performance. #10111
  * [ENHANCEMENT] TSDB: Avoid allocations when popping from the intersected postings heap. #10092
  * [ENHANCEMENT] TSDB: Make chunk writing non-blocking, avoiding latency spikes in remote-write. #10051
  * [ENHANCEMENT] TSDB: Improve label matching performance. #9907
  * [ENHANCEMENT] UI: Optimize the service discovery page and add a search bar. #10131
  * [ENHANCEMENT] UI: Optimize the target page and add a search bar. #10103
  * [BUGFIX] Promtool: Make exit codes more consistent. #9861
  * [BUGFIX] Promtool: Fix flakiness of rule testing. #8818
  * [BUGFIX] Remote-write: Update prometheus_remote_storage_queue_highest_sent_timestamp_seconds metric when write irrecoverably fails. #10102
  * [BUGFIX] Storage: Avoid panic in BufferedSeriesIterator. #9945
  * [BUGFIX] TSDB: CompactBlockMetas should produce correct mint/maxt for overlapping blocks. #10108
  * [BUGFIX] TSDB: Fix logging of exemplar storage size. #9938
  * [BUGFIX] UI: Fix overlapping click targets for the alert state checkboxes. #10136
  * [BUGFIX] UI: Fix Unhealthy filter on target page to actually display only Unhealthy targets. #10103
  * [BUGFIX] UI: Fix autocompletion when expression is empty. #10053
  * [BUGFIX] TSDB: Fix deadlock from simultaneous GC and write. #10166
- update to 2.33.1:
  * [BUGFIX] SD: Fix no such file or directory in K8s SD when not running inside K8s. #10235
- update to 2.33.2:
  * [BUGFIX] Azure SD: Fix panic when IP Address isn't set. #10280
  * [BUGFIX] Remote-write: Fix deadlock when stopping a shard. #10279
- update to 2.33.3:
  * [BUGFIX] Azure SD: Fix a regression when public IP Address isn't set. #10289
- update to 2.33.4:
  * [BUGFIX] TSDB: Fix panic when m-mapping head chunks onto the disk. #10316
- update to 2.33.5:
  * [BUGFIX] Remote-write: Fix deadlock between adding to queue and getting batch. #10395
- update to 2.34.0:
  * [CHANGE] UI: Classic UI removed. #10208
  * [CHANGE] Tracing: Migrate from Jaeger to OpenTelemetry based tracing. #9724, #10203, #10276
  * [ENHANCEMENT] TSDB: Disable the chunk write queue by default and allow configuration with the experimental flag --storage.tsdb.head-chunks-write-queue-size. #10425
  * [ENHANCEMENT] HTTP SD: Add a failure counter. #10372
  * [ENHANCEMENT] Azure SD: Set Prometheus User-Agent on requests. #10209
  * [ENHANCEMENT] Uyuni SD: Reduce the number of logins to Uyuni. #10072
  * [ENHANCEMENT] Scrape: Log when an invalid media type is encountered during a scrape. #10186
  * [ENHANCEMENT] Scrape: Accept application/openmetrics-text;version=1.0.0 in addition to version=0.0.1. #9431
  * [ENHANCEMENT] Remote-read: Add an option to not use external labels as selectors for remote read. #10254
  * [ENHANCEMENT] UI: Optimize the alerts page and add a search bar. #10142
  * [ENHANCEMENT] UI: Improve graph colors that were hard to see. #10179
  * [ENHANCEMENT] Config: Allow escaping of $ with $$ when using environment variables with external labels. #10129
  * [BUGFIX] PromQL: Properly return an error from histogram_quantile when metrics have the same labelset. #10140
  * [BUGFIX] UI: Fix bug that sets the range input to the resolution. #10227
  * [BUGFIX] TSDB: Fix a query panic when memory-snapshot-on-shutdown is enabled. #10348
  * [BUGFIX] Parser: Specify type in metadata parser errors. #10269
  * [BUGFIX] Scrape: Fix label limit changes not applying. #10370
- update to 2.35.0:
  * [CHANGE] TSDB: Delete *.tmp WAL files when Prometheus starts. #10317
  * [CHANGE] promtool: Add new flag --lint (enabled by default) for the commands check rules and check config, resulting in a new exit code (3) for linter errors. #10435
  * [FEATURE] Support for automatically setting the variable GOMAXPROCS to the container CPU limit. Enable with the flag --enable-feature=auto-gomaxprocs. #10498
  * [FEATURE] PromQL: Extend statistics with total and peak number of samples in a query. Additionally, per-step statistics are available with --enable-feature=promql-per-step-stats and using stats=all in the query API.
  * Enable with the flag --enable-feature=per-step-stats. #10369
  * [ENHANCEMENT] Prometheus is built with Go 1.18. #10501
  * [ENHANCEMENT] TSDB: more efficient sorting of postings read from WAL at startup. #10500
  * [ENHANCEMENT] Azure SD: Add metric to track Azure SD failures. #10476
  * [ENHANCEMENT] Azure SD: Add an optional resource_group configuration. #10365
  * [ENHANCEMENT] Kubernetes SD: Support discovery.k8s.io/v1 EndpointSlice (previously only discovery.k8s.io/v1beta1 EndpointSlice was supported). #9570
  * [ENHANCEMENT] Kubernetes SD: Allow attaching node metadata to discovered pods. #10080
  * [ENHANCEMENT] OAuth2: Support for using a proxy URL to fetch OAuth2 tokens. #10492
  * [ENHANCEMENT] Configuration: Add the ability to disable HTTP2. #10492
  * [ENHANCEMENT] Config: Support overriding minimum TLS version. #10610
  * [BUGFIX] Kubernetes SD: Explicitly include gcp auth from k8s.io. #10516
  * [BUGFIX] Fix OpenMetrics parser to sort uppercase labels correctly. #10510
  * [BUGFIX] UI: Fix scrape interval and duration tooltip not showing on target page. #10545
  * [BUGFIX] Tracing/GRPC: Set TLS credentials only when insecure is false. #10592
  * [BUGFIX] Agent: Fix ID collision when loading a WAL with multiple segments. #10587
  * [BUGFIX] Remote-write: Fix a deadlock between Batch and flushing the queue. #10608
- update to 2.36.0:
  * [FEATURE] Add lowercase and uppercase relabel action. #10641
  * [FEATURE] SD: Add IONOS Cloud integration. #10514
  * [FEATURE] SD: Add Vultr integration. #10714
  * [FEATURE] SD: Add Linode SD failure count metric. #10673
  * [FEATURE] Add prometheus_ready metric. #10682
  * [ENHANCEMENT] Add stripDomain to template function. #10475
  * [ENHANCEMENT] UI: Enable active search through dropped targets. #10668
  * [ENHANCEMENT] promtool: support matchers when querying label values. #10727
  * [ENHANCEMENT] Add agent mode identifier. #9638
  * [BUGFIX] Changing TotalQueryableSamples from int to int64. #10549
  * [BUGFIX] tsdb/agent: Ignore duplicate exemplars. #10595
  * [BUGFIX] TSDB: Fix chunk overflow appending samples at a variable rate. #10607
  * [BUGFIX] Stop rule manager before TSDB is stopped. #10680
- update to 2.36.1:
  * [BUGFIX] promtool: Add --lint-fatal option #10840
- update to 2.36.2:
  * [BUGFIX] Fix serving of static assets like fonts and favicon. #10888
- update to 2.37.0:
  * [FEATURE] Nomad SD: New service discovery for Nomad built-in service discovery. #10915
  * [ENHANCEMENT] Kubernetes SD: Allow attaching node labels for endpoint role. #10759
  * [ENHANCEMENT] PromQL: Optimise creation of signature with/without labels. #10667
  * [ENHANCEMENT] TSDB: Memory optimizations. #10873 #10874
  * [ENHANCEMENT] TSDB: Reduce sleep time when reading WAL. #10859 #10878
  * [ENHANCEMENT] OAuth2: Add appropriate timeouts and User-Agent header. #11020
  * [BUGFIX] Alerting: Fix Alertmanager targets not being updated when alerts were queued. #10948
  * [BUGFIX] Hetzner SD: Make authentication files relative to Prometheus config file. #10813
  * [BUGFIX] Promtool: Fix promtool check config not erroring properly on failures. #10952
  * [BUGFIX] Scrape: Keep relabeled scrape interval and timeout on reloads. #10916
  * [BUGFIX] TSDB: Don't increment prometheus_tsdb_compactions_failed_total when context is canceled. #10772
  * [BUGFIX] TSDB: Fix panic if series is not found when deleting series. #10907
  * [BUGFIX] TSDB: Increase prometheus_tsdb_mmap_chunk_corruptions_total on out of sequence errors. #10406
  * [BUGFIX] Uyuni SD: Make authentication files relative to Prometheus configuration file and fix default configuration values. #10813
- update to 2.38.0:
  * [FEATURE]: Web: Add a /api/v1/format_query HTTP API endpoint that allows pretty-formatting PromQL expressions. #11036 #10544 #11005
  * [FEATURE]: UI: Add support for formatting PromQL expressions in the UI. #11039
  * [FEATURE]: DNS SD: Support MX records for discovering targets. #10099
  * [FEATURE]: Templates: Add toTime() template function that allows converting sample timestamps to Go time.Time values. #10993
  * [ENHANCEMENT]: Kubernetes SD: Add __meta_kubernetes_service_port_number meta label indicating the service port number. #11002 #11053
  * [ENHANCEMENT]: Kubernetes SD: Add __meta_kubernetes_pod_container_image meta label indicating the container image. #11034 #11146
  * [ENHANCEMENT]: PromQL: When a query panics, also log the query itself alongside the panic message. #10995
  * [ENHANCEMENT]: UI: Tweak colors in the dark theme to improve the contrast ratio. #11068
  * [ENHANCEMENT]: Web: Speed up calls to /api/v1/rules by avoiding locks and using atomic types instead. #10858
  * [ENHANCEMENT]: Scrape: Add a no-default-scrape-port feature flag, which omits or removes any default HTTP (:80) or HTTPS (:443) ports in the target's scrape address. #9523
  * [BUGFIX]: TSDB: In the WAL watcher metrics, expose the type="exemplar" label instead of type="unknown" for exemplar records. #11008
  * [BUGFIX]: TSDB: Fix race condition around allocating series IDs during chunk snapshot loading. #11099
- update to 2.39.0:
  * [FEATURE] experimental TSDB: Add support for ingesting out-of-order samples. This is configured via out_of_order_time_window field in the config file; check config file docs for more info. #11075
  * [ENHANCEMENT] API: /-/healthy and /-/ready API calls now also respond to a HEAD request on top of existing GET support. #11160
  * [ENHANCEMENT] PuppetDB SD: Add __meta_puppetdb_query label. #11238
  * [ENHANCEMENT] AWS EC2 SD: Add __meta_ec2_region label. #11326
  * [ENHANCEMENT] AWS Lightsail SD: Add __meta_lightsail_region label. #11326
  * [ENHANCEMENT] Scrape: Optimise relabeling by re-using memory. #11147
  * [ENHANCEMENT] TSDB: Improve WAL replay timings. #10973 #11307 #11319
  * [ENHANCEMENT] TSDB: Optimise memory by not storing unnecessary data in the memory. #11280 #11288 #11296
  * [ENHANCEMENT] TSDB: Allow overlapping blocks by default. --storage.tsdb.allow-overlapping-blocks now has no effect. #11331
  * [ENHANCEMENT] UI: Click to copy label-value pair from query result to clipboard. #11229
  * [BUGFIX] TSDB: Turn off isolation for Head compaction to fix a memory leak. #11317
  * [BUGFIX] TSDB: Fix 'invalid magic number 0' error on Prometheus startup. #11338
  * [BUGFIX] PromQL: Properly close file descriptor when logging unfinished queries. #11148
  * [BUGFIX] Agent: Fix validation of flag options and prevent WAL from growing more than desired. #9876
- update to 2.39.1:
  * [BUGFIX] Rules: Fix notifier relabel changing the labels on active alerts. #11427
- update to 2.40.0:
  * [FEATURE] Add experimental support for native histograms. Enable with the flag --enable-feature=native-histograms. #11447
  * [FEATURE] SD: Add service discovery for OVHcloud. #10802
  * [ENHANCEMENT] Kubernetes SD: Use protobuf encoding. #11353
  * [ENHANCEMENT] TSDB: Use golang.org/x/exp/slices for improved sorting speed. #11054 #11318 #11380
  * [ENHANCEMENT] Consul SD: Add enterprise admin partitions. Adds __meta_consul_partition label. Adds partition config in consul_sd_config. #11482
  * [BUGFIX] API: Fix API error codes for /api/v1/labels and /api/v1/series. #11356
- update to 2.40.1:
  * [BUGFIX] TSDB: Fix alignment for atomic int64 for 32 bit architecture. #11547
  * [BUGFIX] Scrape: Fix accept headers. #11552
- update to 2.40.2:
  * [BUGFIX] UI: Fix black-on-black metric name color in dark mode. #11572
- update to 2.40.3:
  * [BUGFIX] TSDB: Fix compaction after a deletion is called. #11623
- update to 2.40.4:
  * [SECURITY] Fix basic authentication bypass vulnerability (CVE-2022-46146, bsc#1208049).
- update to 2.40.5:
  * [BUGFIX] TSDB: Fix queries involving native histograms due to improper reset of iterators. #11643
- update to 2.40.6:
  * [SECURITY] Security upgrade from go and upstream dependencies that include
    security fixes to the net/http and os packages. #11691
- update to 2.40.7:
  * [BUGFIX] Use Windows native DNS resolver. #11704
  * [BUGFIX] TSDB: Fix queries involving negative buckets of native histograms. #11699
- modify patch 0001-Do-not-force-the-pure-Go-name-resolver.patch to work on 2.40.7
- update to 2.41.0:
  * [FEATURE] Relabeling: Add keepequal and dropequal relabel actions. #11564
  * [FEATURE] Add support for HTTP proxy headers. #11712
  * [ENHANCEMENT] Reload private certificates when changed on disk. #11685
  * [ENHANCEMENT] Add max_version to specify maximum TLS version in tls_config. #11685
  * [ENHANCEMENT] Add goos and goarch labels to prometheus_build_info. #11685
  * [ENHANCEMENT] SD: Add proxy support for EC2 and LightSail SDs #11611
  * [ENHANCEMENT] SD: Add new metric prometheus_sd_file_watcher_errors_total. #11066
  * [ENHANCEMENT] Remote Read: Use a pool to speed up marshalling. #11357
  * [ENHANCEMENT] TSDB: Improve handling of tombstoned chunks in iterators. #11632
  * [ENHANCEMENT] TSDB: Optimize postings offset table reading. #11535
  * [BUGFIX] Scrape: Validate the metric name, label names, and label values after relabeling. #11074
  * [BUGFIX] Remote Write receiver and rule manager: Fix error handling. #11727
- BuildRequire go1.19

-------------------------------------------------------------------
Thu Apr  7 12:36:08 UTC 2022 - Julio GonzÃ¡lez Gil <jgonzalez@suse.com>

- Build firewalld-prometheus-config only for SUSE Linux Enterprise
  15, 15.1 and 15.2, and require firewalld for it
- firewalld-prometheus-config needs to be a Recommends, not a
  Requires, as prometheus does not require it to run

-------------------------------------------------------------------
Fri Mar 18 12:20:59 UTC 2022 - Witek Bedyk <witold.bedyk@suse.com>

- Create firewalld-prometheus-config subpackage (bsc#1197042,
  jsc#SLE-24374, jsc#SLE-24375)

-------------------------------------------------------------------
Mon Mar  7 16:40:16 UTC 2022 - Witek Bedyk <witold.bedyk@suse.com>

- Update vendor tarball with prometheus/client_golang 1.12.1
  (bsc#1196338)
  * Added 0003-Bump-client_golang-to-1.12.1.patch

-------------------------------------------------------------------
Tue Feb 22 15:27:25 UTC 2022 - Witek Bedyk <witold.bedyk@suse.com>

- Fix Firewalld configuration file location (bsc#1196300)

-------------------------------------------------------------------
Fri Feb 18 15:09:09 UTC 2022 - Witek Bedyk <witold.bedyk@suse.com>

- Require Go 1.16+
- Do not build on s390 architecture.

-------------------------------------------------------------------
Wed Jan 19 11:36:21 UTC 2022 - Witek Bedyk <witold.bedyk@suse.com>

- Updated patches:
  + Changed:
    * 0002-Default-settings.patch
  + Removed:
    * 0003-Add-Uyuni-service-discovery.patch

- Use obs-service-go_modules

- Upgrade to upstream version 2.32.1 (jsc#SLE-22863)
  + Bugfixes:
    * Scrape: Fix reporting metrics when sample limit is reached
      during the report. #9996
    * Scrape: Ensure that scrape interval and scrape timeout are
      always set. #10023
    * TSDB: Expose and fix bug in iterators' Seek() method. #10030

- Upgrade to upstream version 2.32.0
  + Change:
    * remote-write: Change default max retry time from 100ms to
      5 seconds. #9634
  + Features:
    * Agent: New mode of operation optimized for remote-write only
      scenarios, without local storage.
    * Promtool: Add promtool check service-discovery command. #8970
  + Enhancements:
    * Promtool: Improve test output. #8064
    * Promtool: Use kahan summation for better numerical stability.
    * Remote-write: Reuse memory for marshalling. #9412
    * Scrape: Add scrape_body_size_bytes scrape metric behind the
      --enable-feature=extra-scrape-metrics flag. #9569
    * TSDB: Add windows arm64 support. #9703
    * TSDB: Optimize query by skipping unneeded sorting in TSDB.
    * Templates: Support int and uint as datatypes for template
      formatting. #9680
    * UI: Prefer rate over rad, delta over deg, and count over cos
      in autocomplete. #9688
  + Bugfixes:
    * TSDB: Add more size checks when writing individual sections
      in the index. #9710
    * PromQL: Make deriv() return zero values for constant series.
    * TSDB: Fix panic when checkpoint directory is empty. #9687
    * TSDB: Fix panic, out of order chunks, and race warning during
      WAL replay. #9856
    * UI: Correctly render links for targets with IPv6 addresses
      that contain a Zone ID. #9853
    * Promtool: Fix checking of authorization.credentials_file and
      bearer_token_file fields. #9883
    * Uyuni SD: Fix null pointer exception during initialization.
    * TSDB: Fix queries after a failed snapshot replay. #9980

- Upgrade to upstream version 2.31.1
  + Bugfix:
    * SD: Fix a panic when the experimental discovery manager
      receives targets during a reload. #9656

- Upgrade to upstream version 2.31.0
  + Change:
    * UI: Remove standard PromQL editor in favour of the
      codemirror-based editor. #9452
  + Features:
    * PromQL: Add trigonometric functions and atan2 binary
      operator. #9239 #9248 #9515
    * Remote: Add support for exemplar in the remote write receiver
      endpoint. #9319 #9414
    * SD: Add PuppetDB service discovery. #8883
    * SD: Add Uyuni service discovery. #8190
    * Web: Add support for security-related HTTP headers. #9546
  + Enhancements:
    * Azure SD: Add proxy_url, follow_redirects, tls_config. #9267
    * Backfill: Add --max-block-duration in promtool
      create-blocks-from rules. #9511
    * Config: Print human-readable sizes with unit instead of raw
      numbers. #9361
    * HTTP: Re-enable HTTP/2. #9398
    * Kubernetes SD: Warn user if number of endpoints exceeds
      limit. #9467
    * OAuth2: Add TLS configuration to token requests. #9550
    * PromQL: Several optimizations. #9365 #9360 #9362 #9552
    * PromQL: Make aggregations deterministic in instant queries.
    * Rules: Add the ability to limit number of alerts or series.
    * SD: Experimental discovery manager to avoid restarts upon
      reload.
    * UI: Debounce timerange setting changes. #9359
  + Bugfixes:
    * Backfill: Apply rule labels after query labels. #9421
    * Scrape: Resolve conflicts between multiple exported label
      prefixes. #9479 #9518
    * Scrape: Restart scrape loops when __scrape_interval__ is
      changed. #9551
    * TSDB: Fix memory leak in samples deletion. #9151
    * UI: Use consistent margin-bottom for all alert kinds. #9318

- Upgrade to upstream version 2.30.3
  + Bugfixes:
    * TSDB: Fix panic on failed snapshot replay. #9438
    * TSDB: Don't fail snapshot replay with exemplar storage
      disabled when the snapshot contains exemplars. #9438

- Upgrade to upstream version 2.30.2
  + Bugfix:
    * TSDB: Don't error on overlapping m-mapped chunks during WAL
      replay. #9381

- Upgrade to upstream version 2.30.1
  + Enhancements:
    * Remote Write: Redact remote write URL when used for metric
      label. #9383
    * UI: Redact remote write URL and proxy URL passwords in the
      /config page. #9408
  + Bugfixes:
    * promtool rules backfill: Prevent creation of data before the
      start time. #9339
    * promtool rules backfill: Do not query after the end time.
    * Azure SD: Fix panic when no computername is set. #9387

- Upgrade to upstream version 2.30.0
  + Features:
    * experimental TSDB: Snapshot in-memory chunks on shutdown for
      faster restarts. #7229
    * experimental Scrape: Configure scrape interval and scrape
      timeout via relabeling using __scrape_interval__ and
      __scrape_timeout__ labels respectively. #8911
    * Scrape: Add scrape_timeout_seconds and scrape_sample_limit
      metric. #9247 #9295
  + Enhancements:
    * Scrape: Add --scrape.timestamp-tolerance flag to adjust
      scrape timestamp tolerance when enabled via
      --scrape.adjust-timestamps. #9283
    * Remote Write: Improve throughput when sending exemplars.
    * TSDB: Optimise WAL loading by removing extra map and caching
      min-time #9160
    * promtool: Speed up checking for duplicate rules. #9262/#9306
    * Scrape: Reduce allocations when parsing the metrics. #9299
    * docker_sd: Support host network mode #9125
  + Bugfixes:
    * Exemplars: Fix panic when resizing exemplar storage from 0 to
      a non-zero size. #9286
    * TSDB: Correctly decrement
      prometheus_tsdb_head_active_appenders when the append has no
      samples. #9230
    * promtool rules backfill: Return 1 if backfill was
      unsuccessful. #9303
    * promtool rules backfill: Avoid creation of overlapping
      blocks. #9324
    * config: Fix a panic when reloading configuration with a null
      relabel action. #9224

- Upgrade to upstream version 2.29.2
  + Bugfixes:
    * Fix Kubernetes SD failing to discover Ingress in
      Kubernetes v1.22. #9205
    * Fix data race in loading write-ahead-log (WAL). #9259

- Upgrade to upstream version 2.29.1
  + Bugfixes:
    * TSDB: align atomically accessed int64 to prevent panic in
      32-bit archs. #9192

- Upgrade to upstream version 2.29.0
  + Changes:
    * Promote --storage.tsdb.allow-overlapping-blocks flag to
      stable. #9117
    * Promote --storage.tsdb.retention.size flag to stable. #9004
  + Features:
    * Add Kuma service discovery. #8844
    * Add present_over_time PromQL function. #9097
    * Allow configuring exemplar storage via file and make it
      reloadable. #8974
    * UI: Allow selecting time range with mouse drag. #8977
    * promtool: Add feature flags flag --enable-feature. #8958
    * promtool: Add file_sd file validation. #8950
  + Enhancements:
    * Reduce blocking of outgoing remote write requests from series
      garbage collection. #9109
    * Improve write-ahead-log decoding performance. #9106
    * Improve append performance in TSDB by reducing mutexes usage.
    * Allow configuring max_samples_per_send for remote write
      metadata. #8959
    * Add __meta_gce_interface_ipv4_<name> meta label to GCE
      discovery. #8978
    * Add __meta_ec2_availability_zone_id meta label to EC2
      discovery. #8896
    * Add __meta_azure_machine_computer_name meta label to Azure
      discovery. #9112
    * Add __meta_hetzner_hcloud_labelpresent_<labelname> meta label
      to Hetzner discovery. #9028
    * promtool: Add compaction efficiency to promtool tsdb analyze
      reports. #8940
    * promtool: Allow configuring max block duration for
      backfilling via --max-block-duration flag. #8919
    * UI: Add sorting and filtering to flags page. #8988
    * UI: Improve alerts page rendering performance. #9005
  + Bugfixes:
    * Log when total symbol size exceeds 2^32 bytes, causing
      compaction to fail, and skip compaction. #9104
    * Fix incorrect target_limit reloading of zero value. #9120
    * Fix head GC and pending readers race condition. #9081
    * Fix timestamp handling in OpenMetrics parser. #9008
    * Fix potential duplicate metrics in /federate endpoint when
      specifying multiple matchers. #8885
    * Fix server configuration and validation for authentication
      via client cert. #9123
    * Allow start and end again as label names in PromQL queries.
      They were disallowed since the introduction of @ timestamp
      feature. #9119

- Upgrade to upstream version 2.28.1
  + Bugfixes:
    * HTTP SD: Allow charset specification in Content-Type header.
    * HTTP SD: Fix handling of disappeared target groups. #9019
    * Fix incorrect log-level handling after moving to go-kit/log.

- Upgrade to upstream version 2.28.0
  + Change:
    * UI: Make the new experimental PromQL editor the default.
  + Features:
    * Linode SD: Add Linode service discovery. #8846
    * HTTP SD: Add generic HTTP-based service discovery. #8839
    * Kubernetes SD: Allow configuring API Server access via a
      kubeconfig file. #8811
    * UI: Add exemplar display support to the graphing interface.
    * Consul SD: Add namespace support for Consul Enterprise. #8900
  + Enhancements:
    * Promtool: Allow silencing output when importing / backfilling
      data. #8917
    * Consul SD: Support reading tokens from file. #8926
    * Rules: Add a new .ExternalURL alert field templating
      variable, containing the external URL of the Prometheus
      server. #8878
    * Scrape: Add experimental body_size_limit scrape configuration
      setting to limit the allowed response body size for target
      scrapes. #8833 #8886
    * Kubernetes SD: Add ingress class name label for ingress
      discovery. #8916
    * UI: Show a startup screen with progress bar when the TSDB is
      not ready yet. #8662 #8908 #8909 #8946
    * SD: Add a target creation failure counter
      prometheus_target_sync_failed_total and improve target
      creation failure handling. #8786
    * TSDB: Improve validation of exemplar label set length. #8816
    * TSDB: Add a prometheus_tsdb_clean_start metric that indicates
      whether a TSDB lockfile from a previous run still existed
      upon startup. #8824
  + Bugfixes:
    * UI: In the experimental PromQL editor, fix autocompletion and
      parsing for special float values and improve series metadata
      fetching. #8856
    * TSDB: When merging chunks, split resulting chunks if they
      would contain more than the maximum of 120 samples. #8582
    * SD: Fix the computation of the
      prometheus_sd_discovered_targets metric when using multiple
      service discoveries. #8828

-------------------------------------------------------------------
Mon Sep 20 14:44:20 UTC 2021 - Johannes Segitz <jsegitz@suse.com>

- Added hardening to systemd service(s) (bsc#1181400). Modified:
  * prometheus.service

-------------------------------------------------------------------
Thu Jul  8 08:08:39 UTC 2021 - Witek Bedyk <witold.bedyk@suse.com>

- Provide and reload firewalld configuration only for:
  + openSUSE Leap 15.0, 15.1, 15.2
  + SUSE SLE15, SLE15 SP1, SLE15 SP2

-------------------------------------------------------------------
Wed May 19 20:32:28 UTC 2021 - Daniel Molkentin <daniel.molkentin@suse.com>

- Refresh patches
  + Changed:
    * 0001-Do-not-force-the-pure-Go-name-resolver.patch
    * 0002-Default-settings.patch
    * 0003-Add-Uyuni-service-discovery.patch

- Upgrade to upstream version 2.27.1 (jsc#SLE-18254)
  + Bugfix:
   * SECURITY: Fix arbitrary redirects under the /new endpoint (CVE-2021-29622, bsc#1186242)

- Upgrade to upstream version 2.27.0
  + Features:
    * Promtool: Retroactive rule evaluation functionality. #7675
    * Configuration: Environment variable expansion for external labels. Behind --enable-feature=expand-external-labels flag. #8649
    * TSDB: Add a flag(--storage.tsdb.max-block-chunk-segment-size) to control the max chunks file size of the blocks for small Prometheus instances. #8478
    * UI: Add a dark theme. #8604
    * AWS Lightsail Discovery: Add AWS Lightsail Discovery. #8693
    * Docker Discovery: Add Docker Service Discovery. #8629
    * OAuth: Allow OAuth 2.0 to be used anywhere an HTTP client is used. #8761
    * Remote Write: Send exemplars via remote write. Experimental and disabled by default. #8296
  + Enhancements:
    * Digital Ocean Discovery: Add __meta_digitalocean_vpc label. #8642
    * Scaleway Discovery: Read Scaleway secret from a file. #8643
    * Scrape: Add configurable limits for label size and count. #8777
    * UI: Add 16w and 26w time range steps. #8656
    * Templating: Enable parsing strings in humanize functions. #8682
  + Bugfixes:
    * UI: Provide errors instead of blank page on TSDB Status Page. #8654 #8659
    * TSDB: Do not panic when writing very large records to the WAL. #8790
    * TSDB: Avoid panic when mmaped memory is referenced after the file is closed. #8723
    * Scaleway Discovery: Fix nil pointer dereference. #8737
    * Consul Discovery: Restart no longer required after config update with no targets. #8766

-------------------------------------------------------------------
Tue May  4 14:35:58 UTC 2021 - Witek Bedyk <witold.bedyk@suse.com>

- Add tarball with vendor modules and web assets
- Uyuni: Read formula data from exporters map
- Uyuni: Add support for TLS targets
  + Changed:
    * 0003-Add-Uyuni-service-discovery.patch
    * 0002-Default-settings.patch Changed
    * 0003-Add-Uyuni-service-discovery.patch

- Upgrade to upstream version 2.26.0
  + Changes
    * Alerting: Using Alertmanager v2 API by default. #8626
    * Prometheus/Promtool: Binaries are now printing help and usage to stdout instead of stderr. #8542
  + Features
    * Remote: Add support for AWS SigV4 auth method for remote_write. #8509
    * PromQL: Allow negative offsets. Behind --enable-feature=promql-negative-offset flag. #8487
    * UI: Add advanced auto-completion, syntax highlighting and linting to graph page query input. #8634
  + Enhancements
    * PromQL: Add last_over_time, sgn, clamp functions. #8457
    * Scrape: Add support for specifying type of Authorization header credentials with Bearer by default. #8512
    * Scrape: Add follow_redirects option to scrape configuration. #8546
    * Remote: Allow retries on HTTP 429 response code for remote_write. #8237 #8477
    * Remote: Allow configuring custom headers for remote_read. #8516
    * UI: Hitting Enter now triggers new query. #8581
    * UI: Better handling of long rule and names on the /rules and /targets pages. #8608 #8609
    * UI: Add collapse/expand all button on the /targets page. #8486

- Upgrade to upstream version 2.25.0
  + Features
    * Include a new `--enable-feature=` flag that enables experimental features.
  + Enhancements
    * Add optional name property to testgroup for better test failure output. #8440
    * Add warnings into React Panel on the Graph page. #8427
    * TSDB: Increase the number of buckets for the compaction duration metric. #8342
    * Remote: Allow passing along custom remote_write HTTP headers. #8416
    * Mixins: Scope grafana configuration. #8332
    * Kubernetes SD: Add endpoint labels metadata. #8273
    * UI: Expose total number of label pairs in head in TSDB stats page. #8343
    * TSDB: Reload blocks every minute, to detect new blocks and enforce retention more often. #8343
  + Bug fixes
    * API: Fix global URL when external address has no port. #8359
    * Deprecate unused flag --alertmanager.timeout. #8407

- Upgrade to upstream version 2.24.1
  + Enhancements
    * Cache basic authentication results to significantly improve performance of HTTP endpoints.

- Upgrade to upstream version 2.24.0
  + Features
    * Add TLS and basic authentication to HTTP endpoints. #8316
    * promtool: Add check web-config subcommand to check web config files. #8319
    * promtool: Add tsdb create-blocks-from openmetrics subcommand to backfill metrics data from an OpenMetrics file. #8084
  + Enhancements
    * HTTP API: Fast-fail queries with only empty matchers. #8288
    * HTTP API: Support matchers for labels API. #8301
    * promtool: Improve checking of URLs passed on the command line. #7956
    * SD: Expose IPv6 as a label in EC2 SD. #7086
    * SD: Reuse EC2 client, reducing frequency of requesting credentials. #8311
    * TSDB: Add logging when compaction takes more than the block time range. #8151
    * TSDB: Avoid unnecessary GC runs after compaction. #8276

- Upgrade to upstream version 2.23.0
  + Changes
    * UI: Make the React UI default. #8142
    * Remote write: The following metrics were removed/renamed in remote write. #6815
      > prometheus_remote_storage_succeeded_samples_total was removed and prometheus_remote_storage_samples_total was introduced for all the samples attempted to send.
      > prometheus_remote_storage_sent_bytes_total was removed and replaced with prometheus_remote_storage_samples_bytes_total and prometheus_remote_storage_metadata_bytes_total.
      > prometheus_remote_storage_failed_samples_total -> prometheus_remote_storage_samples_failed_total .
      > prometheus_remote_storage_retried_samples_total -> prometheus_remote_storage_samples_retried_total.
      > prometheus_remote_storage_dropped_samples_total -> prometheus_remote_storage_samples_dropped_total.
      > prometheus_remote_storage_pending_samples -> prometheus_remote_storage_samples_pending.
    * Remote: Do not collect non-initialized timestamp metrics. #8060
  + Enhancements
    * Remote write: Added a metric prometheus_remote_storage_max_samples_per_send for remote write. #8102
    * TSDB: Make the snapshot directory name always the same length. #8138
    * TSDB: Create a checkpoint only once at the end of all head compactions. #8067
    * TSDB: Avoid Series API from hitting the chunks. #8050
    * TSDB: Cache label name and last value when adding series during compactions making compactions faster. #8192
    * PromQL: Improved performance of Hash method making queries a bit faster. #8025
    * promtool: tsdb list now prints block sizes. #7993
    * promtool: Calculate mint and maxt per test avoiding unnecessary calculations. #8096
    * SD: Add filtering of services to Docker Swarm SD. #8074

-------------------------------------------------------------------
Tue Mar  9 13:28:50 UTC 2021 - Witek Bedyk <witold.bedyk@suse.com>

- Uyuni: `hostname` label is now set to FQDN instead of IP
  + Changed:
    * 0003-Add-Uyuni-service-discovery.patch

-------------------------------------------------------------------
Mon Nov  9 10:49:39 UTC 2020 - Stefano Torresi <stefano.torresi@suse.com>

- Update to upstream version 2.22.1
- Update packaging
  * Remove systemd and shadow hard requirements
  * use systemd-sysusers to configure the user in a dedicated 'system-user-prometheus' subpackage
  * add 'prometheus' package alias

-------------------------------------------------------------------
Mon Aug 31 13:59:02 UTC 2020 - Patrick Seidensal <pseidensal@suse.com>

- Update package with changes from `server:monitoring` bsc#1175478

  Left out removal of firewalld related configuration files as SLE-15-SP1's
  `firewalld` package does not contain prometheus configuration yet.

-------------------------------------------------------------------
Fri Jul 31 14:50:21 UTC 2020 - Witek Bedyk <witold.bedyk@suse.com>

- Update 0003-Add-Uyuni-service-discovery.patch:
  + Add support for Prometheus exporters proxy

-------------------------------------------------------------------
Wed Jun  3 15:59:05 UTC 2020 - Joao Cavalheiro <jcavalheiro@suse.com>

- Update change log and spec file
  + Modified spec file: default to golang 1.14 to avoid "have choice" build issues in OBS. 
  + Rebase and update patches for version 2.18.0
  + Changed:  
    * 0001-Do-not-force-the-pure-Go-name-resolver.patch
    * 0002-Default-settings.patch Changed
    * 0003-Add-Uyuni-service-discovery.patch

- Update to 2.18.0 
  + Features 
    * Tracing: Added experimental Jaeger support #7148
  + Changes
    * Federation: Only use local TSDB for federation (ignore remote read). #7096
    * Rules: `rule_evaluations_total` and `rule_evaluation_failures_total` have a `rule_group` label now. #7094
  + Enhancements
    * TSDB: Significantly reduce WAL size kept around after a block cut. #7098
    * Discovery: Add `architecture` meta label for EC2. #7000
  + Bug fixes
    * UI: Fixed wrong MinTime reported by /status. #7182
    * React UI: Fixed multiselect legend on OSX. #6880
    * Remote Write: Fixed blocked resharding edge case. #7122
    * Remote Write: Fixed remote write not updating on relabel configs change. #7073

- Changes from 2.17.2
  + Bug fixes
    * Federation: Register federation metrics #7081
    * PromQL: Fix panic in parser error handling #7132
    * Rules: Fix reloads hanging when deleting a rule group that is being evaluated #7138
    * TSDB: Fix a memory leak when prometheus starts with an empty TSDB WAL #7135
    * TSDB: Make isolation more robust to panics in web handlers #7129 #7136

- Changes from 2.17.1
  + Bug fixes
    * TSDB: Fix query performance regression that increased memory and CPU usage #7051

- Changes from 2.17.0
  + Features 
    * TSDB: Support isolation #6841
    * This release implements isolation in TSDB. API queries and recording rules are
      guaranteed to only see full scrapes and full recording rules. This comes with a
      certain overhead in resource usage. Depending on the situation, there might be
      some increase in memory usage, CPU usage, or query latency.
  + Enhancements
    * PromQL: Allow more keywords as metric names #6933
    * React UI: Add normalization of localhost URLs in targets page #6794
    * Remote read: Read from remote storage concurrently #6770
    * Rules: Mark deleted rule series as stale after a reload #6745
    * Scrape: Log scrape append failures as debug rather than warn #6852
    * TSDB: Improve query performance for queries that partially hit the head #6676
    * Consul SD: Expose service health as meta label #5313
    * EC2 SD: Expose EC2 instance lifecycle as meta label #6914
    * Kubernetes SD: Expose service type as meta label for K8s service role #6684
    * Kubernetes SD: Expose label_selector and field_selector #6807
    * Openstack SD: Expose hypervisor id as meta label #6962
  + Bug fixes
    * PromQL: Do not escape HTML-like chars in query log #6834 #6795
    * React UI: Fix data table matrix values #6896
    * React UI: Fix new targets page not loading when using non-ASCII characters #6892
    * Remote read: Fix duplication of metrics read from remote storage with external labels #6967 #7018
    * Remote write: Register WAL watcher and live reader metrics for all remotes, not just the first one #6998
    * Scrape: Prevent removal of metric names upon relabeling #6891
    * Scrape: Fix 'superfluous response.WriteHeader call' errors when scrape fails under some circonstances #6986
    * Scrape: Fix crash when reloads are separated by two scrape intervals #7011

- Changes from 2.16.0
  + Features 
    * React UI: Support local timezone on /graph #6692
    * PromQL: add absent_over_time query function #6490
    * Adding optional logging of queries to their own file #6520
  + Enhancements
    * React UI: Add support for rules page and "Xs ago" duration displays #6503
    * React UI: alerts page, replace filtering togglers tabs with checkboxes #6543
    * TSDB: Export metric for WAL write errors #6647
    * TSDB: Improve query performance for queries that only touch the most recent 2h of data. #6651
    * PromQL: Refactoring in parser errors to improve error messages #6634
    * PromQL: Support trailing commas in grouping opts #6480
    * Scrape: Reduce memory usage on reloads by reusing scrape cache #6670
    * Scrape: Add metrics to track bytes and entries in the metadata cache #6675
    * promtool: Add support for line-column numbers for invalid rules output #6533
    * Avoid restarting rule groups when it is unnecessary #6450
  + Bug fixes
    * React UI: Send cookies on fetch() on older browsers #6553
    * React UI: adopt grafana flot fix for stacked graphs #6603
    * React UI: broken graph page browser history so that back button works as expected #6659
    * TSDB: ensure compactionsSkipped metric is registered, and log proper error if one is returned from head.Init #6616
    * TSDB: return an error on ingesting series with duplicate labels #6664
    * PromQL: Fix unary operator precedence #6579
    * PromQL: Respect query.timeout even when we reach query.max-concurrency #6712
    * PromQL: Fix string and parentheses handling in engine, which affected React UI #6612
    * PromQL: Remove output labels returned by absent() if they are produced by multiple identical label matchers #6493
    * Scrape: Validate that OpenMetrics input ends with `# EOF` #6505
    * Remote read: return the correct error if configs can't be marshal'd to JSON #6622
    * Remote write: Make remote client `Store` use passed context, which can affect shutdown timing #6673
    * Remote write: Improve sharding calculation in cases where we would always be consistently behind by tracking pendingSamples #6511
    * Ensure prometheus_rule_group metrics are deleted when a rule group is removed #6693

- Changes from 2.15.2
  + Bug fixes
    * TSDB: Fixed support for TSDB blocks built with Prometheus before 2.1.0. #6564
    * TSDB: Fixed block compaction issues on Windows. #6547

- Changes from 2.15.1
  + Bug fixes
    * TSDB: Fixed race on concurrent queries against same data. #6512

- Changes from 2.15.0
  + Features 
    * API: Added new endpoint for exposing per metric metadata `/metadata`. #6420 #6442
  + Changes
    * Discovery: Removed `prometheus_sd_kubernetes_cache_*` metrics. Additionally `prometheus_sd_kubernetes_workqueue_latency_seconds` and `prometheus_sd_kubernetes_workqueue_work_duration_seconds` metrics now show correct values in seconds. #6393
    * Remote write: Changed `query` label on `prometheus_remote_storage_*` metrics to `remote_name` and `url`. #6043
  + Enhancements
    * TSDB: Significantly reduced memory footprint of loaded TSDB blocks. #6418 #6461
    * TSDB: Significantly optimized what we buffer during compaction which should result in lower memory footprint during compaction. #6422 #6452 #6468 #6475
    * TSDB: Improve replay latency. #6230
    * TSDB: WAL size is now used for size based retention calculation. #5886
    * Remote read: Added query grouping and range hints to the remote read request #6401
    * Remote write: Added `prometheus_remote_storage_sent_bytes_total` counter per queue. #6344
    * promql: Improved PromQL parser performance. #6356
    * React UI: Implemented missing pages like `/targets` #6276, TSDB status page #6281 #6267 and many other fixes and performance improvements.
    * promql: Prometheus now accepts spaces between time range and square bracket. e.g `[ 5m]` #6065  
  + Bug fixes
    * Config: Fixed alertmanager configuration to not miss targets when configurations are similar. #6455
    * Remote write: Value of `prometheus_remote_storage_shards_desired` gauge shows raw value of desired shards and it's updated correctly. #6378
    * Rules: Prometheus now fails the evaluation of rules and alerts where metric results collide with labels specified in `labels` field. #6469
    * API: Targets Metadata API `/targets/metadata` now accepts empty `match_targets` parameter as in the spec. #6303

- Changes from 2.14.0
  + Features 
    * API: `/api/v1/status/runtimeinfo` and `/api/v1/status/buildinfo` endpoints added for use by the React UI. #6243
    * React UI: implement the new experimental React based UI. #5694 and many more
      * Can be found by under `/new`.
      * Not all pages are implemented yet.
    * Status: Cardinality statistics added to the Runtime & Build Information page. #6125
  + Enhancements
    * Remote write: fix delays in remote write after a compaction. #6021
    * UI: Alerts can be filtered by state. #5758
  + Bug fixes
    * Ensure warnings from the API are escaped. #6279
    * API: lifecycle endpoints return 403 when not enabled. #6057
    * Build: Fix Solaris build. #6149
    * Promtool: Remove false duplicate rule warnings when checking rule files with alerts. #6270
    * Remote write: restore use of deduplicating logger in remote write. #6113
    * Remote write: do not reshard when unable to send samples. #6111
    * Service discovery: errors are no longer logged on context cancellation. #6116, #6133
    * UI: handle null response from API properly. #6071

- Changes from 2.13.1
  + Bug fixes
    * Fix panic in ARM builds of Prometheus. #6110
    * promql: fix potential panic in the query logger. #6094
    * Multiple errors of http: superfluous response.WriteHeader call in the logs. #6145

- Changes from 2.13.0
  + Enhancements
    * Metrics: renamed prometheus_sd_configs_failed_total to prometheus_sd_failed_configs and changed to Gauge #5254
    * Include the tsdb tool in builds. #6089
    * Service discovery: add new node address types for kubernetes. #5902
    * UI: show warnings if query have returned some warnings. #5964
    * Remote write: reduce memory usage of the series cache. #5849
    * Remote read: use remote read streaming to reduce memory usage. #5703
    * Metrics: added metrics for remote write max/min/desired shards to queue manager. #5787
    * Promtool: show the warnings during label query. #5924
    * Promtool: improve error messages when parsing bad rules. #5965
    * Promtool: more promlint rules. #5515
  + Bug fixes
    * UI: Fix a Stored DOM XSS vulnerability with query history [CVE-2019-10215](http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-10215). #6098
    * Promtool: fix recording inconsistency due to duplicate labels. #6026
    * UI: fixes service-discovery view when accessed from unhealthy targets. #5915
    * Metrics format: OpenMetrics parser crashes on short input. #5939
    * UI: avoid truncated Y-axis values. #6014

- Changes from 2.12.0
  + Features 
    * Track currently active PromQL queries in a log file. #5794
    * Enable and provide binaries for `mips64` / `mips64le` architectures. #5792
  + Enhancements
    * Improve responsiveness of targets web UI and API endpoint. #5740
    * Improve remote write desired shards calculation. #5763
    * Flush TSDB pages more precisely. tsdb#660
    * Add `prometheus_tsdb_retention_limit_bytes` metric. tsdb#667
    * Add logging during TSDB WAL replay on startup. tsdb#662
    * Improve TSDB memory usage. tsdb#653, tsdb#643, tsdb#654, tsdb#642, tsdb#627
  + Bug fixes
    * Check for duplicate label names in remote read. #5829
    * Mark deleted rules' series as stale on next evaluation. #5759
    * Fix JavaScript error when showing warning about out-of-sync server time. #5833
    * Fix `promtool test rules` panic when providing empty `exp_labels`. #5774
    * Only check last directory when discovering checkpoint number. #5756
    * Fix error propagation in WAL watcher helper functions. #5741
    * Correctly handle empty labels from alert templates. #5845

-------------------------------------------------------------------
Wed May 13 10:12:43 UTC 2020 - Joao Cavalheiro <jcavalheiro@suse.com>

- Update Uyuni/SUSE Manager service discovery patch
  + Modified 0003-Add-Uyuni-service-discovery.patch:
  + Adapt service discovery to the new Uyuni API endpoints
  + Modified spec file: force golang 1.12 to fix build issues in SLE15SP2

-------------------------------------------------------------------
Mon Jan 27 12:12:44 UTC 2020 - Witek Bedyk <witold.bedyk@suse.com>

- Update to Prometheus 2.11.2

-------------------------------------------------------------------
Mon Nov 25 14:59:24 UTC 2019 - Joao Cavalheiro <jcavalheiro@suse.com>

- Patch macros on spec file to support builds on SLE 12 

-------------------------------------------------------------------
Thu Nov 21 13:29:22 UTC 2019 - Jan Fajerski <jan.fajerski@suse.com>

- Remove prometheus.firewall.xml source file

-------------------------------------------------------------------
Wed Nov 20 22:33:20 UTC 2019 - MichaÅ Rostecki <mrostecki@opensuse.org>

- Remove firewalld files. They are installed in the main firewalld
  package.

-------------------------------------------------------------------
Wed Nov 20 15:32:20 UTC 2019 - Joao Cavalheiro <jcavalheiro@suse.com>

- Update Uyuni/SUSE Manager service discovery patch
  + Modified 0003-Add-Uyuni-service-discovery.patch 
  + Fixes crashes when systems have no FQDN 
  + Adds Parallel calls to Uyuni API, meaningful performance increase
  + Adds Support for system group labels

-------------------------------------------------------------------
Mon Sep 23 10:19:03 UTC 2019 - MichaÅ Rostecki <mrostecki@opensuse.org>

- Do not install the firewalld config file on Tumbleweed (on
  versions newer than Leap 15.1). It's installed in the main
  firewalld package.

-------------------------------------------------------------------
Fri Aug 16 06:46:24 UTC 2019 - Jan Fajerski <jan.fajerski@suse.com>

- remove 0004-prometheus-buildmode-pie.patch
  + this patch produces binaries that crash immediately
- add -v to promu build command for better build debugging
- reorder some %install tasks

-------------------------------------------------------------------
Fri Aug  2 11:22:25 UTC 2019 - Jan Fajerski <jan.fajerski@suse.com>

- Add network-online (Wants and After) dependency to systemd unit bsc#1143913

-------------------------------------------------------------------
Wed Jul 31 10:46:13 UTC 2019 - Andreas Schneider <asn@cryptomilk.org>

- Build with PIE
  + Added 0004-prometheus-buildmode-pie.patch

-------------------------------------------------------------------
Wed Jul 31 06:47:55 UTC 2019 - Andreas Schneider <asn@cryptomilk.org>

- Only package required files (reduces rpm size by 4 MB)
- Add sysconfig file
- Add firewall config file
- Use variables for defining user and group

-------------------------------------------------------------------
Thu Jul 25 16:34:29 UTC 2019 - Joao Cavalheiro <jcavalheiro@suse.com>

- Add support for Uyuni/SUSE Manager service discovery
  + Added 0003-Add-Uyuni-service-discovery.patch

-------------------------------------------------------------------
Thu Jul 18 01:06:13 UTC 2019 - Simon Crute <simon.crute@grafana.com>

- readded _service file removed in error. 

- Update to 2.11.1 
  + Bug Fix:
    * Fix potential panic when prometheus is watching multiple zookeeper paths.

- Update to 2.11.0
  + Bug Fix:
    * resolve race condition in maxGauge. 
    * Fix ZooKeeper connection leak. 
    * Improved atomicity of .tmp block replacement during compaction for usual case. 
    * Fix "unknown series references" after clean shutdown. 
    * Re-calculate block size when calling block.Delete. 
    * Fix unsafe snapshots with head block. 
    * prometheus_tsdb_compactions_failed_total is now incremented on any compaction failure. 
  + Changes:
    * Remove max_retries from queue_config (it has been unused since rewriting remote-write to utilize the write-ahead-log)
    * The meta file BlockStats no longer holds size information. This is now dynamically calculated and kept in memory. It also includes the meta file size which was not included before
    * Renamed metric from prometheus_tsdb_wal_reader_corruption_errors to prometheus_tsdb_wal_reader_corruption_errors_total
  + Features:
    * Add option to use Alertmanager API v2. 
    * Added humanizePercentage function for templates. 
    * Include InitContainers in Kubernetes Service Discovery. 
    * Provide option to compress WAL records using Snappy. 
  + Enhancements:
    * Create new clean segment when starting the WAL. 
    * Reduce allocations in PromQL aggregations. 
    * Add storage warnings to LabelValues and LabelNames API results. 
    * Add prometheus_http_requests_total metric. 
    * Enable openbsd/arm build. 
    * Remote-write allocation improvements. 
    * Query performance improvement: Efficient iteration and search in HashForLabels and HashWithoutLabels. 
    * Allow injection of arbitrary headers in promtool. 
    * Allow passing external_labels in alert unit tests groups. 
    * Allows globs for rules when unit testing.
    * Improved postings intersection matching. 
    * Reduced disk usage for WAL for small setups. 
    * Optimize queries using regexp for set lookups. 
 

-------------------------------------------------------------------
Thu Jul  4 12:08:24 UTC 2019 - Simon Crute <simon.crute@grafana.com>

- rebase patch002-Default-settings.patch 

- Update to 2.10.0:
  + Bug Fixes:
    * TSDB: Don't panic when running out of disk space and recover nicely from the condition
    * TSDB: Correctly handle empty labels.
    * TSDB: Don't crash on an unknown tombstone reference. 
    * Storage/remote: Remove queue-manager specific metrics if queue no longer exists. 
    * PromQL: Correctly display {__name__="a"}. 
    * Discovery/kubernetes: Use service rather than ingress as the name for the service workqueue. 
    * Discovery/azure: Don't panic on a VM with a public IP. 
    * Web: Fixed Content-Type for js and css instead of using /etc/mime.types.
    * API: Encode alert values as string to correctly represent Inf/NaN. 
  + Features:
    * Template expansion: Make external labels available as $externalLabels in alert and console template expansion. 
    * TSDB: Add prometheus_tsdb_wal_segment_current metric for the WAL segment index that TSDB is currently writing to. tsdb
    * Scrape: Add scrape_series_added per-scrape metric. #5546
  + Enhancements
    * Discovery/kubernetes: Add labels __meta_kubernetes_endpoint_node_name and __meta_kubernetes_endpoint_hostname. 
    * Discovery/azure: Add label __meta_azure_machine_public_ip. 
    * TSDB: Simplify mergedPostings.Seek, resulting in better performance if there are many posting lists. tsdb
    * Log filesystem type on startup. 
    * Cmd/promtool: Use POST requests for Query and QueryRange. client_golang
    * Web: Sort alerts by group name. 
    * Console templates: Add convenience variables $rawParams, $params, $path.
- Upadte to 2.9.2
  + Bug Fixes:
    * Make sure subquery range is taken into account for selection 
    * Exhaust every request body before closing it 
    * Cmd/promtool: return errors from rule evaluations 
    * Remote Storage: string interner should not panic in release 
    * Fix memory allocation regression in mergedPostings.Seek tsdb

- Update to 2.9.1
  + Bug Fixes:
    * Discovery/kubernetes: fix missing label sanitization 
    * Remote_write: Prevent reshard concurrent with calling stop 

- Update to 2.9.0 
  + Feature: 
    * Add honor_timestamps scrape option.
  + Enhancements:	
    * Update Consul to support catalog.ServiceMultipleTags.
    * Discovery/kubernetes: add present labels for labels/annotations.
    * OpenStack SD: Add ProjectID and UserID meta labels.
    * Add GODEBUG and retention to the runtime page. 
    * Add support for POSTing to /series endpoint. 
    * Support PUT methods for Lifecycle and Admin APIs.
    * Scrape: Add global jitter for HA server.
    * Check for cancellation on every step of a range evaluation. 
    * String interning for labels & values in the remote_write path.
    * Don't lose the scrape cache on a failed scrape.
    * Reload cert files from disk automatically. common
    * Use fixed length millisecond timestamp format for logs. common
    * Performance improvements for postings. 
  Bug Fixes:
    * Remote Write: fix checkpoint reading. 
    * Check if label value is valid when unmarshaling external labels from YAML. 
    * Promparse: sort all labels when parsing. 
    * Reload rules: copy state on both name and labels. 
    * Exponentation operator to drop metric name in result of operation. 
    * Config: resolve more file paths. 
    * Promtool: resolve relative paths in alert test files. 
    * Set TLSHandshakeTimeout in HTTP transport. common
    * Use fsync to be more resilient to machine crashes. 
    * Keep series that are still in WAL in checkpoints.

- Update to 2.8.1
  + Bug Fixes
    *  Display the job labels in /targets which was removed accidentally

- Update to 2.8.0 
  + Change:
    * This release uses Write-Ahead Logging (WAL) for the remote_write API. This currently causes a slight increase in memory usage, which will be addressed in future releases.
    * Default time retention is used only when no size based retention is specified. These are flags where time retention is specified by the flag --storage.tsdb.retention and size retention by --storage.tsdb.retention.size. 
    * prometheus_tsdb_storage_blocks_bytes_total is now prometheus_tsdb_storage_blocks_bytes. 
  + Feature:
    * (EXPERIMENTAL) Time overlapping blocks are now allowed; vertical compaction and vertical query merge. It is an optional feature which is controlled by the --storage.tsdb.allow-overlapping-blocks flag, disabled by default.
  + Enhancements:  
	* Use the WAL for remote_write API.
    * Query performance improvements. 
    * UI enhancements with upgrade to Bootstrap 4. 
    * Reduce time that Alertmanagers are in flux when reloaded. 
    * Limit number of metrics displayed on UI to 10000. 
    * (1) Remember All/Unhealthy choice on target-overview when reloading page. (2) Resize text-input area on Graph page on mouseclick. 
    * In histogram_quantile merge buckets with equivalent le values. 
    * Show list of offending labels in the error message in many-to-many scenarios. 
    * Show Storage Retention criteria in effect on /status page. 
  + Bug Fixes: 
    + Fix sorting of rule groups. 
    + Fix support for password_file and bearer_token_file in Kubernetes SD. 
    + Scrape: catch errors when creating HTTP clients  
    + Adds new metrics:
        prometheus_target_scrape_pools_total
        prometheus_target_scrape_pools_failed_total
        prometheus_target_scrape_pool_reloads_total
        prometheus_target_scrape_pool_reloads_failed_total
    + Fix panic when aggregator param is not a literal.

-------------------------------------------------------------------
Fri Feb 22 09:20:11 UTC 2019 - Jan Fajerski <jan.fajerski@suse.com>

- fix spec file: actually ship promtool

-------------------------------------------------------------------
Fri Feb  8 07:24:59 UTC 2019 - Jan Fajerski <jan.fajerski@suse.com>

- Update to 2.7.1:
  + Bug Fixes:
    * Fix a Stored DOM XSS vulnerability with query history (boo#1124610)
    * prometheus_rule_group_last_duration_seconds now reports seconds instead of nanoseconds
    * Make sure the targets are consistently sorted in the targets page
- Update to 2.7.0:
  + cli flag depreacted: storage.tsdb.retention use storage.tsdb.retention.time
    instead; depreacted flag will be removed in 3.0
  + Features:
    * Add subqueries to PromQL
    * Add support for disk size based retention. Note that we don't
      consider the WAL size which could be significant and the time
      based retention policy also applies (experimental)
    * Add CORS origin flag
  + Bug Fixes:
    * Don't depend on given order when comparing samples in alert unit testing
    * Make sure the retention period doesn't overflow
    * Don't generate blocks with no samples
- Update to 2.6.0:
  + Remove default flags from the container's entrypoint, run Prometheus from
    /etc/prometheus and symlink the storage directory to /etc/prometheus/data
  + Promtool: Remove the update command
  + Features:
    * Add JSON log format via the --log.format flag
    * API: Add /api/v1/labels endpoint to get all label names
    * Web: Allow setting the page's title via the --web.ui-title flag
  + Enhancements:
    * Add prometheus_tsdb_lowest_timestamp_seconds, prometheus_tsdb_head_min_time_seconds
      and prometheus_tsdb_head_max_time_seconds metrics
    * Add rule_group_last_evaluation_timestamp_seconds metric
    * Add prometheus_template_text_expansion_failures_total and prometheus_template_text_expansions_total metrics
    * Set consistent User-Agent header in outgoing requests
    * Azure SD: Error out at load time when authentication parameters are missing
    * EC2 SD: Add the machine's private DNS name to the discovery metadata
    * EC2 SD: Add the operating system's platform to the discovery metadata
    * Kubernetes SD: Add the pod's phase to the discovery metadata
    * Kubernetes SD: Log Kubernetes messages
    * Promtool: Collect CPU and trace profiles
    * Promtool: Support writing output as JSON
    * Remote Read: Return available data if remote read fails partially
    * Remote Write: Improve queue performance
    * Remote Write: Add min_shards parameter to set the minimum number of shards
    * TSDB: Improve WAL reading
    * TSDB: Memory improvements
    * Web: Log stack traces on panic
    * Web UI: Add copy to clipboard button for configuration
    * Web UI: Support console queries at specific times
    * Web UI: group targets by job then instance
  + Bug Fixes:
    * Deduplicate handler labels for HTTP metrics
    * Fix leaked queriers causing shutdowns to hang
    * Fix configuration loading panics on nil pointer slice elements
    * API: Correctly skip mismatching targets on /api/v1/targets/metadata
    * API: Better rounding for incoming query timestamps
    * Discovery: Remove all targets when the scrape configuration gets empty
    * PromQL: Fix a goroutine leak in the lexer/parser
    * Scrape: Fix deadlock in the scrape's manager
    * Scrape: Scrape targets at fixed intervals even after Prometheus restarts
    * TSDB: Support restored snapshots including the head properly
    * TSDB: Repair WAL when the last record in a segment is torn
- Update to 2.5.0
  + Group targets by scrape config instead of job name
  + Marathon SD: Various changes to adapt to Marathon 1.5+
  + Discovery: Split prometheus_sd_discovered_targets metric by scrape and
    notify (Alertmanager SD) as well as by section in the respective configuration
  + Enhancements:
    * Support s390x platform for Linux
    * API: Add prometheus_api_remote_read_queries metric tracking currently
      executed or waiting remote read API requests
    * Remote Read: Add prometheus_remote_storage_remote_read_queries metric
      tracking currently in-flight remote read queries
    * Remote Read: Reduced memory usage
    * Discovery: Add prometheus_sd_discovered_targets,
      prometheus_sd_received_updates_total, prometheus_sd_updates_delayed_total,
      and prometheus_sd_updates_total metrics for discovery subsystem
    * Discovery: Improve performance of previously slow updates of changes of targets
    * Kubernetes SD: Add extended metrics
    * OpenStack SD: Support discovering instances from all projects
    * OpenStack SD: Discover all interfaces
    * OpenStack SD: Support tls_config for the used HTTP client
    * Triton SD: Add ability to filter triton_sd targets by pre-defined groups
    * Web UI: Avoid browser spell-checking in expression field
    * Web UI: Add scrape duration and last evaluation time in targets and rules pages
    * Web UI: Improve rule view by wrapping lines
    * Rules: Error out at load time for invalid templates, rather than at evaluation time
  + Bug Fixes:
    * Change max/min over_time to handle NaNs properly
    * Check label name for count_values PromQL function
    * Ensure that vectors and matrices do not contain identical label-sets
- Update to 2.4.3
  + Bug Fixes:
    [BUGFIX] Fix panic when using custom EC2 API for SD #4672
    [BUGFIX] Fix panic when Zookeeper SD cannot connect to servers #4669
    [BUGFIX] Make the skip_head an optional parameter for snapshot API #4674
- Update to 2.4.2
  + Bug Fixes:
    [BUGFIX] Handle WAL corruptions properly prometheus/tsdb#389
    [BUGFIX] Handle WAL migrations correctly on Windows prometheus/tsdb#392
- Update to 2.4.1
  + New TSDB metrics
  + Bug Fixes:
  Render UI correctly for Windows
- Update to 2.4.0
  + The WAL implementation has been re-written so the storage is not forward
    compatible. Prometheus 2.3 storage will work on 2.4 but not vice-versa
  + Reduce remote write default retries
  + Remove /heap endpoint
  + Features:
    * Persist alert 'for' state across restarts
    * Add API providing per target metric metadata
    * Add API providing recording and alerting rules
  + Enhancements:
    * Brand new WAL implementation for TSDB. Forwards incompatible with previous WAL.
    * Show rule evaluation errors in UI
    * Throttle resends of alerts to Alertmanager
    * Send EndsAt along with the alert to Alertmanager
    * Limit the samples returned by remote read endpoint
    * Limit the data read in through remote read
    * Coalesce identical SD configuations
    * promtool: Add new commands for debugging and querying
    * Update console examples for node_exporter v0.16.0
    * Optimize PromQL aggregations
    * Remote read: Add Offset to hints
    * consul_sd: Add support for ServiceMeta field
    * ec2_sd: Maintain order of subnet_id label
    * ec2_sd: Add support for custom endpoint to support EC2 compliant APIs
    * ec2_sd: Add instance_owner label
    * azure_sd: Add support for VMSS discovery and multiple environments
    * gce_sd: Add instance_id label
    * Forbid rule-abiding robots from indexing
    * Log virtual memory limits on startup
  + Bug Fixes:
    * Wait for service discovery to stop before exiting
    * Render SD configs properly
    * Only add LookbackDelta to vector selectors
    * ec2_sd: Handle panic-ing nil pointer
    * consul_sd: Stop leaking connections
    * Use templated labels also to identify alerts
    * Reduce floating point errors in stddev and related functions
    * Log errors while encoding responses
- Update to 2.3.2
  + Bug Fixes:
    * Fix various tsdb bugs
    * Reorder startup and shutdown to prevent panics.
    * Exit with non-zero code on error
    * discovery/kubernetes/ingress: fix scheme discovery
    * Fix race in zookeeper sd
    * Better timeout handling in promql
    * Propogate errors when selecting series from the tsdb
- Update to 2.3.1
  + Bug Fixes:
    * Avoid infinite loop on duplicate NaN values.
    * Fix nil pointer deference when using various API endpoints
    * config: set target group source index during unmarshalling
    * discovery/file: fix logging
    * kubernetes_sd: fix namespace filtering
    * web: restore old path prefix behavior
    * web: remove security headers added in 2.3.0
- Update to 2.3.0
  + marathon_sd: use auth_token and auth_token_file for token-based authentication
    instead of bearer_token and bearer_token_file respectively
  + Metric names for HTTP server metrics changed
  + Features:
    * Add query commands to promtool
    * Add security headers to HTTP server responses
    * Pass query hints via remote read API
    * Basic auth passwords can now be configured via file across all configuration
  + Enhancements:
    * Optimise PromQL and API serialization for memory usage and allocations
    * Limit number of dropped targets in web UI
    * Consul and EC2 service discovery allow using server-side filtering for performance improvement
    * Add advanced filtering configuration to EC2 service discovery
    * marathon_sd: adds support for basic and bearer authentication, plus all
      other common HTTP client options (TLS config, proxy URL, etc.)
    * Provide machine type metadata and labels in GCE service discovery
    * Add pod controller kind and name to Kubernetes service discovery data
    * Move TSDB to flock-based log file that works with Docker containers
  + Bug Fixes:
    * Properly propagate storage errors in PromQL
    * Fix path prefix for web pages
    * Fix goroutine leak in Consul service discovery
    * Fix races in scrape manager
    * Fix OOM for very large k in PromQL topk() queries
    * Make remote write more resilient to unavailable receivers
    * Make remote write shutdown cleanly
    * Don't leak files on errors in TSDB's tombstone cleanup
    * Unary minus expressions now removes the metric name from results
    * Fix bug that lead to wrong amount of samples considered for time range expressions
- Update to 2.2.1
  + Bug Fixes:
    * Fix data loss in TSDB on compaction
    * Correctly stop timer in remote-write path
    * Fix deadlock triggered by loading targets page
    * Fix incorrect buffering of samples on range selection queries
    * Handle large index files on windows properly
- Update to 2.2.0
  + This release introduces improvements to the storage format and fixes a
    regression introduced in 2.1. As a result Prometheus servers upgraded
    to 2.2 cannot be downgraded to a lower version anymore!
  + Rename file SD mtime metric
  + Send target update on empty pod IP in Kubernetes SD
  + Features:
    * Add API endpoint for flags.
    * Add API endpoint for dropped targets.
    * Display annotations on alerts page.
    * Add option to skip head data when taking snapshots
  + Enhancements:
    * Federation performance improvement.
    * Read bearer token file on every scrape.
    * Improve typeahead on /graph page.
    * Change rule file formatting.
    * Set consul server default to localhost:8500.
    * Add dropped Alertmanagers to API info endpoint.
    * Add OS type meta label to Azure SD.
    * Validate required fields in SD configuration.
  + Bug Fixes:
    * Prevent stack overflow on deep recursion in TSDB.
    * Correctly read offsets in index files that are greater than 4GB.
    * Fix scraping behavior for empty labels.
    * Drop metric name for bool modifier.
    * Fix races in discovery.
    * Fix Kubernetes endpoints SD for empty subsets.
    * Throttle updates from SD providers, which caused increased CPU usage and allocations.
    * Fix TSDB block reload issue.
    * Fix PromQL printing of empty without().
    * Don't reset FiredAt for inactive alerts.
    * Fix erroneous file version changes and repair existing data.
- remove pr-3174.patch, has been fixed in https://github.com/prometheus/prometheus/pull/3517

-------------------------------------------------------------------
Wed Mar 14 07:20:23 UTC 2018 - jan.fajerski@suse.com

- spec: fix directory for fdupes 

-------------------------------------------------------------------
Thu Jan 25 10:11:26 UTC 2018 - kkaempf@suse.com

- Update to 2.1.0:
  + Features:
    * New Service Discovery UI showing labels before and after relabelling.
    * New Admin APIs added to v1 to delete, snapshot and remove tombstones.
  + Enhancements:
    * The graph UI autcomplete now includes your previous queries.
    * Federation is now much faster for large numbers of series.
    * Added new metrics to measure rule timings.
    * Rule evaluation times added to the rules UI.
    * Added metrics to measure modified time of file SD files.
    * Kubernetes SD now includes POD UID in discovery metadata.
    * The Query APIs now return optional stats on query execution times.
    * The index now no longer has the 4GiB size limit and is also smaller.
  + Bug Fixes:
    * Remote read read_recent option is now false by default.
    * Pass the right configuration to each Alertmanager (AM) when using
      multiple AM configs.
    * Fix not-matchers not selecting series with labels unset.
    * tsdb: Fix occasional panic in head block.
    * tsdb: Close files before deletion to fix retention issues on Windows
      and NFS.
    * tsdb: Cleanup and do not retry failing compactions.
    * tsdb: Close WAL while shutting down.

-------------------------------------------------------------------
Thu Nov  9 07:30:09 UTC 2017 - tserong@suse.com

- Update to final v2.0.0 release (bsc#1067341):
  + Compared to version 1.x, this release includes a completely rewritten
    storage engine, huge performance improvements, but also many backwards
    incompatible changes.  For more information, read the announcement blog
    post and migration guide:
    - https://prometheus.io/blog/2017/11/08/announcing-prometheus-2-0/
    - https://prometheus.io/docs/prometheus/2.0/migration/
  + Changes:
    * Completely rewritten storage layer, with WAL.  This is not backwards
      compatible with 1.x storage,  and many flags have changed/disappeared.
    * New staleness behavior. Series now marked stale after target scrapes
      no longer return them, and soon after targets disappear from service
      discovery.
    * Rules files use YAML syntax now.  Conversion tool added to promtool.
    * Removed count_scalar, drop_common_labels functions and keep_common
      modifier from PromQL.
    * Rewritten exposition format parser with much higher performance.  The
      Protobuf exposition format is no longer supported.
    * Example console templates updated for new storage and metrics names.
      Examples other than node exporter and Prometheus removed.
    * Admin and lifecycle APIs now disabled by default, can be reenabled via
      flags
    * Flags switched to using Kingpin, all flags are now --flagname rather
      than -flagname.
  + Features:
    * Remote read can be configured to not read data which is available
      locally.  This is enabled by default.
    * Rules can be grouped now.  Rules within a rule group are executed
      sequentially.
    * Added experimental GRPC apis
    * Add timestamp() function to PromQL.
  + Enhancements:
    * Remove remote read from the query path if no remote storage is
      configured.
    * Bump Consul HTTP client timeout to not match the Consul SD watch
      timeout.
    * Go-conntrack added to provide HTTP connection metrics.
  + Bug Fixes:
    * Fix connection leak in Consul SD.

-------------------------------------------------------------------
Tue Nov  7 23:30:46 UTC 2017 - tserong@suse.com

- Update to v2.0.0-rc.3 (bsc#1067030):
  + Enhancements:
    * Remove remote read from the query path if no remote storage
      is configured.
    * Bump Consul HTTP client timeout to not match the Consul SD
      watch timeout.
    * Bump up a too small max block duration to the min block
      duration instead of returning an error.
  + Bug Fixes:
    * Avoid needless padding of 4 zero bytes in index files.
    * Delete old blocks during reload (necessary on MS Windows).
    * Fix regression of alert rules state loss on config reload.
    * Serialize background WAL operations to avoid data races.
  + This also contains bugfixes and remote-storage features from
    the 1.8 branch.

-------------------------------------------------------------------
Fri Oct 27 02:06:17 UTC 2017 - tserong@suse.com

- Update to v2.0.0-rc.2 (bsc#1065377):
  + Enhancements:
    * Handle WAL segments with corrupted header gracefully
    * Stabilize memory usage during WAL replay
  + Changes:
    * Prefix all storage metrics with prometheus_
  + Bug Fixes:
    * Correctly handle label removal in remote read
    * Fix chunk misalignment causing out-of-order samples
    * Fix connection leak in Consul SD
    * Handle invalid chunk dereferences gracefully
    * Prevent potential deadlock during failing querier construction

-------------------------------------------------------------------
Thu Oct 19 00:00:32 UTC 2017 - tserong@suse.com

- Update to v2.0.0-rc.1:
  + Features/Enhancements:
    * Added a warning for time-drift between the browser and the
      prometheus-server.
    * Much faster WAL read-back on restart.
  + Bug Fixes:
    * Fixed Remote-read to not drop the first series.
    * Validate recording-rule names.
    * Fix several races.
    * Only close blocks if there are no iterators accessing it.
- Refresh 0002-Default-settings.patch

-------------------------------------------------------------------
Wed Oct 11 01:13:03 UTC 2017 - tserong@suse.com

- Update to v2.0.0-rc.0:
  + Numerous changes to the new storage layer, the main changes being:
    * Remove `count_scalar`, `keep_common` and `drop_common_labels` functions
    * Breaking change in the index format for better consistency 
    * Fix panic due garbage collected mmap'ed strings 
    * Fix broken snapshots and admin APIs 
    * Send HTTP Accept header when scraping
    * Use the WAL flush interval passed instead of the hardcoded value
  + This release requires a clean storage directory and is not compatible
    with files created by previous beta releases
- Refresh 0002-Default-settings.patch

-------------------------------------------------------------------
Sun Sep 24 15:11:37 UTC 2017 - tserong@suse.com

- Fix loopback address for REST API gateway (bsc#1059462)
  + Added pr-3174.patch

-------------------------------------------------------------------
Fri Sep 22 08:07:50 UTC 2017 - tserong@suse.com

- Update to v2.0.0-beta.5:
  + Bug Fixes:
    *  Remove deadlock on startup when restoring WAL
    * Fix semantical races resulting in invalid persisted files
    * Correctly read back WAL in certain edge cases
    * Prevent crashes caused by changing metric representations in target's
      /metrics
  + Enhancements:
    * Overall memory usage reduction
    * Serve debugging endpoints while TSDB is loading
    * Healthy endpoint correctly reflects liveness during startup
    * Switch to consistent usage of go-kit/log
  + This release may have issues with files written by previous beta releases
- Refresh 0002-Default-settings.patch to apply cleanly again

-------------------------------------------------------------------
Mon Sep 18 12:18:17 UTC 2017 - tserong@suse.com

- Update to v2.0.0-beta.4:
  + Numerous changes to the new storage layer, the main changes being:
    * Single, compacted write ahead log
    * Single in-memory block with garbage collection
    * Improve compression of index files
    * Cache series dropped via metric_relabel_configs
    * Pool byte buffers for scraping
  + Overall the changes achieve a baseline reduction in memory consumption
    and reduce peak memory usage by 30-40% compared to 2.0.0-beta.2
  + This release requires a clean storage directory and is not compatible
    with files created by previous beta releases

-------------------------------------------------------------------
Tue Aug 22 08:10:18 UTC 2017 - tserong@suse.com

- Update to v2.0.0-beta.2
  + vendor: update prometheus/tsdb (Fix panic caused by 0 division)

-------------------------------------------------------------------
Wed Aug 16 02:17:42 UTC 2017 - tserong@suse.com

- Update to v2.0.0-beta.1
  + Includes a new storage layer, which reduces bottlenecks and shows
    considerable performance improvements, but does not work with old v1
    storage data.
- Refresh 0002-Default-settings.patch to apply cleanly again

-------------------------------------------------------------------
Tue May  9 05:32:44 UTC 2017 - tserong@suse.com

- Add systemd unit file and default config (/etc/prometheus/prometheus.yml)
- Run as unprivileged "prometheus" user
- Default to /etc/prometheus for config and /var/lib/prometheus for metrics
  + Added 0002-Default-settings.patch

-------------------------------------------------------------------
Wed Apr 26 09:07:42 UTC 2017 - tserong@suse.com

- Add BuildRequires: glibc-devel-static to fix aarch64 build

-------------------------------------------------------------------
Wed Mar 29 09:50:28 UTC 2017 - moio@suse.com

- Initial version
