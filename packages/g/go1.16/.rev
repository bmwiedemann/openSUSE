<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>a70dbbadb8e1bf75efebd9577e32cd33</srcmd5>
    <version>1.16</version>
    <time>1613677250</time>
    <user>dimstar_suse</user>
    <comment>- go1.16 (released 2021-02-16) Go 1.16 is a major release of Go.</comment>
    <requestid>873220</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>b9b03dca92753156ca637398276ca0e4</srcmd5>
    <version>1.16</version>
    <time>1614274050</time>
    <user>RBrownSUSE</user>
    <comment>- gcc6-go.patch fix typo go-7 to go-6 for bootstrap on SLE-12 gcc6 (forwarded request 874739 from jfkw)</comment>
    <requestid>874740</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>10ded34e9d9121e3f96f8c48854db4ec</srcmd5>
    <version>1.16.2</version>
    <time>1615802035</time>
    <user>dimstar_suse</user>
    <comment>- go1.16.2 (released 2021-03-11) includes fixes to cgo, the
  compiler, linker, the go command, and the syscall and time
  packages.
  Refs boo#1182345 go1.16 release tracking
  * go#44793 cmd/go: mod tidy should ignore missing standard library packages
  * go#44746 cmd/go: improve error message when outside a module from &quot;working directory is not part of a module&quot;
  * go#44676 cmd/go: warning message when getting a retracted module version is missing a trailing newline
  * go#44659 runtime: marked free object in span
  * go#44647 cmd/go: &quot;malformed import path&quot; in Go 1.16 for packages with path elements containing a leading dot
  * go#44638 cmd/link: runtime crash, unexpected fault address 0xffffffffffffffff, h2_bundle.go, when using plugin
  * go#44618 time: LoadLocationFromTZData with slim tzdata uses incorrect zone
  * go#44593 syscall &amp; x/sys/windows: buffer overflow in GetQueuedCompletionStatus
  * go#44498 cmd/go: 'go mod edit -exclude' erroneously rejects '+incompatible' versions
  * go#44496 cmd/go: malformed module path with retract v2+
  * go#44464 cmd/compile: ICE on deferred call to syscall.LazyDLL.Call
  * go#44462 x/tools/go/analysis, syscall: ptrace redeclared in this block
  * go#44433 cmd/compile: Compiler regression in Go 1.16 - internal compiler error: child dcl collision on symbol
  * go#44402 doc: Broken image in readme
  * go#44358 cmd/compile: internal compiler error: Value live at entry. It shouldn't be.
  * go#44346 runtime/cgo: cannot build with -Wsign-compare (forwarded request 878434 from jfkw)</comment>
    <requestid>878437</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>96b54b5165ee430ba3f7f165a818d659</srcmd5>
    <version>1.16.3</version>
    <time>1617908515</time>
    <user>RBrownSUSE</user>
    <comment>- go1.16.3 (released 2021-04-01) includes fixes to the compiler,
  linker, runtime, the go command, and the testing and time
  packages.
  Refs boo#1182345 go1.16 release tracking
  * go#45303 runtime: &quot;invalid pc-encoded table&quot; throw caused by bad cgo traceback
  * go#45253 cmd/compile: fix long RMW bit operations on AMD64
  * go#45240 all: run.{bash,bat,rc} sets GOPATH inconsistently
  * go#45192 Strange behaviour with loops
  * go#45030 cmd/link: go 1.16 plugin does not initialize global variables correctly when not used directly
  * go#44888 testing: Helper line number has changed in 1.16
  * go#44885 cmd/go: import paths ending with '+' are rejected (affects executable like g++ or clang++)
  * go#44869 time, runtime: zero duration timer takes 2 minutes to fire
  * go#44860 cmd/go: documentation at golang.org for cmd/go has confusing formatting
  * go#44812 cmd/go: 'go get' does not add missing hash to go.sum when ziphash file missing from cache
  * go#44640 cmd/link: fail to build when using time/tzdata on ARM (forwarded request 882731 from jfkw)</comment>
    <requestid>882733</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>a7f137f987f48ef5bbe70dc43fdbee68</srcmd5>
    <version>1.16.4</version>
    <time>1620653646</time>
    <user>dimstar_suse</user>
    <comment>- go1.16.4 (released 2021-05-06) includes a security fix to the
  net/http package, as well as bug fixes to the runtime, the
  compiler, and the archive/zip, time, and syscall packages.
  CVE-2021-31525
  Refs boo#1182345 go1.16 release tracking
  * boo#1185790 CVE-2021-31525
  * go#45712 net/http: ReadRequest can stack overflow
  * go#45636 cmd/compile: internal compiler error: Invalid PPC64 rotate mask
  * go#45482 runtime: &quot;invalid pc-encoded table&quot; throw caused by bad cgo traceback (expandFinalInlineFrames)
  * go#45385 time: Europe/Dublin timezone handling broken with embedded timezone database
  * go#45347 archive/zip: duplicate entries in FS interface
  * go#45307 os/signal: timeout in TestAllThreadsSyscallSignals (forwarded request 891377 from jfkw)</comment>
    <requestid>891378</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>db8c118a6a28f0105173ae6fa823e1c3</srcmd5>
    <version>1.16.5</version>
    <time>1624300486</time>
    <user>dimstar_suse</user>
    <comment>- go1.16.5 (released 2021-06-03) includes security fixes to the
  archive/zip, math/big, net, and net/http/httputil packages, as
  well as bug fixes to the linker, the go command, and the net/http
  package.
  CVE-2021-33195 CVE-2021-33196 CVE-2021-33197 CVE-2021-33198
  Refs boo#1182345 go1.16 release tracking
  * boo#1187443 go#46241 CVE-2021-33195
  * go#46357 net: Lookup functions may return invalid host names
  * go#46530 net: Unix dnsclient test for CVE-2021-33195 assumes that 1.2.3.4 does not resolve
  * boo#1186622 go#46242 CVE-2021-33196
  * go#46397 archive/zip: malformed archive may cause panic or memory exhaustion
  * boo#1187444 go#46313 CVE-2021-33197
  * go#46315 net/http/httputil: ReverseProxy forwards Connection headers if first one is empty
  * boo#1187445 go#45910 CVE-2021-33198
  * go#46306 math/big: (*Rat).SetString with &quot;1.770p02041010010011001001&quot; crashes with &quot;makeslice: len out of range&quot;
  * go#46214 cmd/go: make go mod download with no arguments leave go.sum alone
  * go#46144 cmd/go: error out of 'go mod tidy' if the go.mod file specifies a newer-than-supported Go version
  * go#46128 cmd/link: internal error when externally linking very large binaries
  * go#45927 cmd/link: SIGSEGV running 'openshift-install version' for release-4.8 using external linking on PPC64LE
  * go#45832 cmd/link: unexpected trampoline when cross-compiling to ppc64le (forwarded request 900520 from jfkw)</comment>
    <requestid>900522</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>120861ebd898bec716035631b434e0e3</srcmd5>
    <version>1.16.5</version>
    <time>1625675375</time>
    <user>dimstar_suse</user>
    <comment>- Fix extraneous trailing percent character %endif% in spec file. (forwarded request 903994 from jfkw)</comment>
    <requestid>903997</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>f3b4fb401dc6e00d368bc52f588d8d5b</srcmd5>
    <version>1.16.6</version>
    <time>1626386328</time>
    <user>dimstar_suse</user>
    <comment>- go1.16.6 (released 2021-07-12) includes a security fix to the
  crypto/tls package, as well as bug fixes to the compiler, and the
  net and net/http packages.
  CVE-2021-34558
  Refs boo#1182345 go1.16 release tracking
  * boo#1188229 go#47143 CVE-2021-34558
  * go#47145 security: fix CVE-2021-34558
  * go#46999 net: LookupMX behaviour broken
  * go#46981 net: TestCVE202133195 fails if /etc/resolv.conf specifies ndots larger than 3
  * go#46769 syscall: TestGroupCleanupUserNamespace test failure on Fedora
  * go#46657 runtime: deeply nested struct initialized with non-zero values
  * go#44984 net/http: server not setting Content-Length in certain cases (forwarded request 905962 from jfkw)</comment>
    <requestid>905965</requestid>
  </revision>
  <revision rev="9" vrev="2">
    <srcmd5>212a734a7c6800ad59aee21615f9b52a</srcmd5>
    <version>1.16.6</version>
    <time>1627313872</time>
    <user>dimstar_suse</user>
    <comment>- Add patch to fix crashes on PowerPC with kernel &gt;= 5.13:
  * fix-ppc64-crashes.patch (forwarded request 907144 from favogt)</comment>
    <requestid>907807</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>d45fca0e86b9aaecddff16bee1145a3b</srcmd5>
    <version>1.16.7</version>
    <time>1628675220</time>
    <user>RBrownSUSE</user>
    <comment>- go1.16.7 (released 2021-08-05) includes a security fix to the
  net/http/httputil package, as well as bug fixes to the compiler,
  the linker, the runtime, the go command, and the net/http
  package.
  CVE-2021-36221
  Refs boo#1182345 go1.16 release tracking
  * boo#1189162 go#46866 CVE-2021-36221
  * go#47474 net/http: panic due to racy read of persistConn after handler panic
  * go#47348 cmd/go: &quot;go list -f '{{.Stale}}'&quot; stack overflow with cyclic imports
  * go#47332 time: Timer reset broken under heavy use since go1.16 timer optimizations added
  * go#47289 cmd/link: build error with cgo in Windows, redefinition of go.map.zero
  * go#47015 cmd/go: go mod vendor: open C:\Users\LICENSE: Access is denied.
  * go#46928 cmd/compile: register conflict between external linker and duffzero on arm64
  * go#46858 runtime: ppc64x binaries randomly segfault on linux 5.13rc6
  * go#46551 cmd/go: unhelpful error message when running &quot;go install&quot; on a replaced-but-not-required package (forwarded request 910389 from jfkw)</comment>
    <requestid>910391</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>2bc5eb498d39dbe683e1570ad9ca087b</srcmd5>
    <version>1.16.8</version>
    <time>1632251551</time>
    <user>dimstar_suse</user>
    <comment>- go1.16.8 (released 2021-09-09) includes a security fix to the
  archive/zip package, as well as bug fixes to the archive/zip,
  go/internal/gccgoimporter, html/template, net/http, and
  runtime/pprof packages.
  Refs boo#1182345 go1.16 release tracking
  CVE-2021-39293
  * boo#1190589 go#47801 CVE-2021-39293
  * go#47985 archive/zip: overflow in preallocation check can cause OOM panic
  * go#47691 x/net/http2: server sends RST_STREAM w/ PROTOCOL_ERROR to clients it incorrectly believes have violated max advertised num streams
  * go#47675 runtime/pprof: apparent deadlock in TestGoroutineSwitch on linux-armv6l
  * go#47610 go/internal/gccgoimporter: TestInstallationImporter broken with tip gccgo
  * go#47535 net/http: TestCancelRequestWhenSharingConnection can cause port exhaustion
  * go#47042 html/template: data race with concurrent ExecuteTemplate calls

- Add bash scripts used by go tool commands to provide a more
  complete cross-compiling go toolchain install.
  * Fixes &quot;go tool dist list&quot; error &quot;all.bash does not exist&quot;</comment>
    <requestid>919904</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>0928ce9ba32481c41885224df9cf7037</srcmd5>
    <version>1.16.9</version>
    <time>1633963719</time>
    <user>dimstar_suse</user>
    <comment>- go1.16.9 (released 2021-10-07) includes a security fix to the
  linker and misc/wasm directory, as well as bug fixes to the
  runtime and to the text/template package.
  Refs boo#1182345 go1.16 release tracking
  CVE-2021-38297
  * boo#1191468 go#48797 CVE-2021-38297
  * go#48799 security: fix CVE-2021-38297 misc/wasm, cmd/link: do not let command line args overwrite global data
  * go#48443 text/template: should t.init() be executed before t.muTmpl.Lock() in AddParseTree() method?
  * go#47858 time: timer reset sometimes ignored, causing delayed ticks (forwarded request 924123 from jfkw)</comment>
    <requestid>924125</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>5d88cbc6032057605cfa6d981c457e71</srcmd5>
    <version>1.16.10</version>
    <time>1636218908</time>
    <user>dimstar_suse</user>
    <comment>- go1.16.10 (released 2021-11-04) includes security fixes to the
  archive/zip and debug/macho packages, as well as bug fixes to the
  compiler, linker, runtime, the misc/wasm directory, and to the
  net/http package.
  Refs boo#1182345 go1.16 release tracking
  CVE-2021-41771 CVE-2021-41772
  * boo#1192377 go#48990 CVE-2021-41771
  * go#48991 debug/macho: invalid dynamic symbol table command can cause panic
  * boo#1192378 go#48085 CVE-2021-41772
  * go#48251 archive/zip: Reader.Open panics on empty string
  * go#49153 misc/wasm, cmd/link: Go 1.17.2 causes WASM builds to throw command line too long with many environment variables
  * go#49076 x/net/http2: backport critical fixes
  * go#49009 net,runtime: apparent deadlock in (*net.conn).Close and runtime.netpollblock on arm64 platforms
  * go#48822 x/net/http2: client can hang forever if headers' size exceeds connection's buffer size and server hangs past request time
  * go#48649 x/net/http2: pool deadlock
  * go#48478 cmd/compile: 64 bits shifts on arm get wrong results
  * go#48474 cmd/compile: incorrect arm/arm64 simplification rules (forwarded request 929547 from jfkw)</comment>
    <requestid>929549</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>e912dfe90c2862d35f1d50710413b684</srcmd5>
    <version>1.16.11</version>
    <time>1638831545</time>
    <user>dimstar_suse</user>
    <comment>- go1.16.11 (released 2021-12-02) includes fixes to the compiler,
  runtime, and the net/http, net/http/httptest, and time packages.
  Refs boo#1182345 go1.16 release tracking
  * go#49910 x/net/http2: frequent failures in TestClientConnCloseAtBody
  * go#49908 x/net/ipv6: TestPacketConnReadWriteMulticast{UDP,ICMP} failing with &quot;i/o timeout&quot; on OpenBSD 6.8 and 7.0
  * go#49904 x/net/http2: Client doesn't send body until ExpectContinueTimeout expires
  * go#49867 syscall: ntdll.dll errors in rtlGetNtVersionNumbers via os.StartProcess
  * go#49851 net/http/httptest: Close does not wait for the underlying Server's ConnState callbacks to complete
  * go#49728 runtime: &quot;fatal error: unexpected signal during runtime execution&quot; in cmd/go tests on darwin-amd64-race running macOS 12.0
  * go#49661 x/net/http2: TestUnreadFlowControlReturned_Server failures with stream error &quot;NO_ERROR&quot; since 2021-10-05
  * go#49623 net/http: Possible HTTP/2 busy loop regression in Go 1.17.3
  * go#49567 net/http: server responds with Transfer-Encoding: identity
  * go#49560 x/net/http2: setting Request.Close doesn't close TCP connections
  * go#49558 net/http: HTTP/2 response body Close method sometimes returns spurious context cancelation error (1.17.3 regression)
  * go#49406 time: ParseInLocation error
  * go#49391 cmd/compile: internal compiler error: Expand calls interface data problem (forwarded request 935319 from jfkw)</comment>
    <requestid>935321</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>be0ab3530f5ef8c5c78285651ad4a17f</srcmd5>
    <version>1.16.12</version>
    <time>1639340826</time>
    <user>dimstar_suse</user>
    <comment>- go1.16.12 (released 2021-12-09) includes security fixes to the
  syscall and net/http packages.
  Refs boo#1182345 go1.16 release tracking
  CVE-2021-44716 CVE-2021-44717 
  * boo#1193598 go#50057 CVE-2021-44717
  * go#50066 syscall: don’t close fd 0 on ForkExec error
  * boo#1193597 go#50058 CVE-2021-44716
  * go#50064 net/http: limit growth of header canonicalization cache (forwarded request 938740 from jfkw)</comment>
    <requestid>938752</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>be318759c5e554e1c545f8c36dcc0412</srcmd5>
    <version>1.16.13</version>
    <time>1641680586</time>
    <user>dimstar_suse</user>
    <comment>- go1.16.13 (released 2022-01-06) includes fixes to the compiler,
  linker, runtime, and the net/http package.
  Refs boo#1182345 go1.16 release tracking
  * go#50449 x/net/http2: http.Server.WriteTimeout does not fire if the http2 stream's window is out of space.
  * go#50296 cmd/link: does not set section type of .init_array correctly
  * go#50194 runtime/race: building for iOS, but linking in object file built for macOS
  * go#50072 runtime: race detector SIGABRT or SIGSEGV on macOS Monterey
  * go#49923 cmd/link: support more load commands on Mach-O
  * go#49412 cmd/compile: internal compiler error: Op...LECall and OpDereference have mismatched mem
  * go#48115 runtime: mallocs cause &quot;base outside usable address space&quot; panic when running on iOS 14 (forwarded request 944559 from jfkw)</comment>
    <requestid>944561</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>a7e41f8642053d1f4c87775abfda3ab0</srcmd5>
    <version>1.16.14</version>
    <time>1644778236</time>
    <user>dimstar_suse</user>
    <comment>- go1.16.14 (released 2022-02-10) includes security fixes to the
  crypto/elliptic, math/big packages and to the go command, as well
  as bug fixes to the compiler, linker, runtime, the go command,
  and the debug/macho, debug/pe, net/http/httptest, and testing
  packages.
  Refs boo#1182345 go1.16 release tracking
  CVE-2022-23806 CVE-2022-23772 CVE-2022-23773
  * boo#1195838 go#50974 CVE-2022-23806
  * go#50977 crypto/elliptic: IsOnCurve returns true for invalid field elements
  * boo#1195835 go#50699 CVE-2022-23772
  * go#50700 math/big: Rat.SetString may consume large amount of RAM and crash
  * boo#1195834 go#35671 CVE-2022-23773
  * go#50686 cmd/go: do not treat branches with semantic-version names as releases
  * go#50866 cmd/compile: incorrect use of CMN on arm64
  * go#50832 runtime/race: NoRaceMutexPureHappensBefore failures
  * go#50811 cmd/go: remove bitbucket VCS probing
  * go#50780 runtime: incorrect frame information in traceback traversal may hang the process.
  * go#50721 debug/pe: reading debug_info section of PE files that use the DWARF5 form DW_FORM_line_strp causes error
  * go#50682 cmd/compile: MOVWreg missing sign-extension following a Copy from a floating-point LoadReg
  * go#50645 testing: surprising interaction of subtests with TempDir
  * go#50585 net/http/httptest: add fipsonly compliant certificate in for NewTLSServer(), for dev.boringcrypto branch
  * go#50245 runtime: intermittent os/exec.Command.Start() Hang on Darwin in Presence of &quot;plugin&quot; Package (forwarded request 953822 from jfkw)</comment>
    <requestid>953824</requestid>
  </revision>
  <revision rev="18" vrev="2">
    <srcmd5>2eaf0054ece3f4e3fbd1a5faefe40995</srcmd5>
    <version>1.16.14</version>
    <time>1645461958</time>
    <user>dimstar_suse</user>
    <comment>- Add missing .bin binary test data to packaging.
  * Existing test data files added to packaging with mode 644:
    src/compress/bzip2/testdata/pass-random2.bin
    src/compress/bzip2/testdata/pass-random1.bin
    src/debug/dwarf/testdata/line-gcc-win.bin (forwarded request 955951 from jfkw)</comment>
    <requestid>955954</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>97ce3ab983d7d161c99836e1cf793403</srcmd5>
    <version>1.16.15</version>
    <time>1646487777</time>
    <user>dimstar_suse</user>
    <comment>- go1.16.15 (released 2022-03-03) includes a security fix to the
  regexp/syntax package, as well as bug fixes to the compiler,
  runtime, the go command, and to the net package
  Refs boo#1182345 go1.16 release tracking
  CVE-2022-24921
  * boo#1196732 go#51112 CVE-2022-24921
  * go#51117 regexp: stack overflow (process exit) handling deeply nested regexp
  * go#51331 cmd/go/internal/modfetch: erroneously resolves a v2+incompatible version when a v2/go.mod file exists
  * go#51198 cmd/compile: &quot;runtime: bad pointer in frame&quot; in riscv64 with complier optimizations
  * go#51161 net: use EDNS to increase DNS packet size [freeze exception]
  * go#50733 runtime/metrics: time histogram sub-bucket ranges are off by a factor of two (forwarded request 959305 from jfkw)</comment>
    <requestid>959307</requestid>
  </revision>
  <revision rev="20" vrev="2">
    <srcmd5>3ffd3100bbc6ad5c9ea8a021c18ebf3b</srcmd5>
    <version>1.16.15</version>
    <time>1647724783</time>
    <user>dimstar_suse</user>
    <comment>- add dont-force-gold-on-arm64.patch (bsc#1183043)
- drop binutils-gold dependency (forwarded request 962279 from jfkw)</comment>
    <requestid>962280</requestid>
  </revision>
  <revision rev="21" vrev="3">
    <srcmd5>0d96868e6eaccd68f91936d421dbc6ea</srcmd5>
    <version>1.16.15</version>
    <time>1649181295</time>
    <user>dimstar_suse</user>
    <comment>- Add %define go_label as a configurable Go toolchain directory
  * go_label can be used to package multiple Go toolchains with
    the same go_api
  * go_label should be defined as go_api with an optional suffix
    e.g. %{go_api} or %{go_api}-foo
  * Default go_label = go_api makes no changes to package layout (forwarded request 966740 from jfkw)</comment>
    <requestid>966743</requestid>
  </revision>
  <revision rev="22" vrev="4">
    <srcmd5>0cd80e5430d7bd9afb15a8d293c5910d</srcmd5>
    <version>1.16.15</version>
    <time>1661159092</time>
    <user>dimstar_suse</user>
    <comment>- switch to gcc-go, bootstrap via gcc-go 11/12 which
  should be available on leap, sle and factory
- add gcc-go.patch to bootstrap with gcc-go any version
- drop gcc6-go.patch, gcc7-go.patch: superseded by gcc-go.patch (forwarded request 998265 from jfkw)</comment>
    <requestid>998266</requestid>
  </revision>
  <revision rev="23" vrev="5">
    <srcmd5>b54b38da0e21b193783d08bfb2e305c6</srcmd5>
    <version>1.16.15</version>
    <time>1661434395</time>
    <user>dimstar_suse</user>
    <comment>- Don't build with shared on riscv64 for &lt; go1.18 (forwarded request 999101 from jfkw)</comment>
    <requestid>999105</requestid>
  </revision>
</revisionlist>
