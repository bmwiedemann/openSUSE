-------------------------------------------------------------------
Mon Nov 23 09:59:18 UTC 2020 - psimons@suse.com

- Update optparse-applicative to version 0.16.1.0.
  ## Version 0.16.1.0 (21 Nov 2020)

  - Guard `process` dependency behind an on by default flag.
    This allows one to shrink the dependency tree significantly
    by turning off the ability to use bash completion actions.

  - Remove `bytestring` dependency from the test suite.

-------------------------------------------------------------------
Tue Aug 18 10:45:37 UTC 2020 - Peter Simons <psimons@suse.com>

- Replace %setup -q with the more modern %autosetup macro.

-------------------------------------------------------------------
Thu Aug 13 15:56:41 UTC 2020 - psimons@suse.com

- Update optparse-applicative to version 0.16.0.0.
  ## Version 0.16.0.0 (14 Aug 2020)

  - Add `Options.Applicative.NonEmpty.some1` function, which
    parses options the same as `some1` from base, but doesn't
    cause duplicates in the usage texts.

  - Further improve help text generation in the presence
    of optional values when nesting is involved, and many and
    some when displayed with a suffix.

  - Add "global" options to the usage texts for subcommands.
    When using subcommands, a "global options" section can
    now appear below the options and commands sections.

    Global options are *off* by default, to enable them, use
    the `helpShowGlobals` modifier.

    The `noGlobal` builder will suppress a single option being
    displayed in the global options list.

    Fixes issues:
      * \# 175 - List detailed subparser documentation with `--help`
      * \# 294 - Displaying global options when listing options for a command.
      * \# 359 - Subcommand help text lacks required parent command arguments

  - Allow the `--help` option to take the name of a command.
    Usage without any arguments is the same, but now, when an
    argument is given, if it is the name of a currently
    reachable command, the help text for that command will
    be show.

    Fixes issues:
      * \# 379 - cmd --help subcmd is not the same as cmd subcmd --help

  - Updated dependency bounds.

  - Add builder for the all positional parser policy.

  - Remove deprecated functions
      * nullOption
      * execParserMaybe
      * customExecParserMaybe

-------------------------------------------------------------------
Tue Jun 16 11:14:25 UTC 2020 - Peter Simons <psimons@suse.com>

- Re-generate file with latest version of spec-cleaner.

-------------------------------------------------------------------
Thu May  7 08:08:23 UTC 2020 - Peter Simons <psimons@suse.com>

- Update Cabal file to get more accurate dependency information.

-------------------------------------------------------------------
Fri Nov  8 16:14:20 UTC 2019 - Peter Simons <psimons@suse.com>

- Drop obsolete group attributes.

-------------------------------------------------------------------
Fri Sep 13 10:29:54 UTC 2019 - psimons@suse.com

- Update optparse-applicative to version 0.15.1.0.
  Upstream has edited the change log file since the last release in
  a non-trivial way, i.e. they did more than just add a new entry
  at the top. You can review the file at:
  http://hackage.haskell.org/package/optparse-applicative-0.15.1.0/src/CHANGELOG.md

-------------------------------------------------------------------
Sat Jul  6 02:02:17 UTC 2019 - psimons@suse.com

- Update optparse-applicative to version 0.15.0.0.
  Upstream has edited the change log file since the last release in
  a non-trivial way, i.e. they did more than just add a new entry
  at the top. You can review the file at:
  http://hackage.haskell.org/package/optparse-applicative-0.15.0.0/src/CHANGELOG.md

-------------------------------------------------------------------
Tue Jun 11 14:29:14 UTC 2019 - Peter Simons <psimons@suse.com>

- Update Cabal file for more accurate build dependencies.

-------------------------------------------------------------------
Thu Oct  4 09:42:59 UTC 2018 - psimons@suse.com

- Update optparse-applicative to version 0.14.3.0.
  ## Version 0.14.3.0 (03 Oct 2018)

  - Updated dependency bounds.

  - Fix tab completion with Commands being unreachable.

  - Clean ups and Documentation.

-------------------------------------------------------------------
Wed Jul 18 14:26:34 UTC 2018 - psimons@suse.com

- Cosmetic: replace tabs with blanks, strip trailing white space,
  and update copyright headers with spec-cleaner.

-------------------------------------------------------------------
Mon May 14 17:02:11 UTC 2018 - psimons@suse.com

- Update optparse-applicative to version 0.14.2.0.
  - Export `HasName`, `HasCompleter`, `HasValue`, and
    `HasMetavar` type classes.

  - Upgrade `str` and related builders to be polymorphic over
    `IsString`. This allows `Text` and `Bytestring` to be used
    naturally with `strOption` and `strArgument` and friends.

    *Note:* This change may require additional type signatures
            in cases where the reader was necessary for type
            inference.

  - Export public API explicitly from `Options.Applicative`
    instead of re-exporting other modules.

    *Note:* Minor changes to exports were made in conjunction
            to this change. `ParserHelp` no longer requires an
            an extra import, and some internally used functions
            from `Options.Applicative.Common` are no longer
            exported from the main module.

  - Add Zsh and Fish completions with rich descriptions for
    options and commands.

    Use "--zsh-completion-script" and "fish-completion-script"
    to generate scripts for these shells.

  - Fix bash completions with quoted sections, tilde expansions
    and completions after "--".

  - Add suggestions to error message when a user mistypes a
    command or option.

  - Add `style` builder, for styling option descriptions.

  - Improve error message for options when a required argument
    is not supplied.

  - Fix #242 regarding flags with long options, where a flag given
    a long option could be interpreted incorrectly.

  - Fix `noIntersperse` to be more like its namesakes in other
    libraries. When on, options will be accepted until an argument
    is passed, after which all options will be treated as positional
    arguments.

  - Add `forwardOptions` builder, which will allow unknown options
    and flags to be passed to an argument builder.
    This is useful to mixed parsing environments, or wrappers to
    other commands.

  - Add `Semigroup` instances for `Completer` and `Chunk`.

  - Forwards compatibility with `MonadFail` proposal.

-------------------------------------------------------------------
Thu Aug  3 15:38:38 UTC 2017 - psimons@suse.com

- Updated with latest spec-cleaner version 0.9.8-8-geadfbbf.

-------------------------------------------------------------------
Tue Mar 14 09:26:01 UTC 2017 - psimons@suse.com

- Update to version 0.13.2.0 with cabal2obs.

-------------------------------------------------------------------
Sun Feb 12 14:16:49 UTC 2017 - psimons@suse.com

- Update to version 0.13.1.0 with cabal2obs.

-------------------------------------------------------------------
Sun Jul 10 17:08:15 UTC 2016 - psimons@suse.com

- Update to version 0.12.1.0 revision 0 with cabal2obs.

-------------------------------------------------------------------
Wed Jan 20 09:59:00 UTC 2016 - mimi.vx@gmail.com

- update to 0.12.1.0
* Improve subparser contexts to improve usage error texts
* Fixed bugs

-------------------------------------------------------------------
Wed Dec 30 12:44:06 UTC 2015 - mimi.vx@gmail.com

- update to 0.12.0.0
* Add "missing" error condition descriptions when required flags and arguments
    are not provided.
* Allow multiple short flags to be concatenated together behind a single
    hyphen, e.g. "-xcf".
* Updated dependency bounds on process and ansi-wl-pprint.
* Add Show and Eq instances to some types for easier debugging.
* Add defaultPrefs, a default preferences value

-------------------------------------------------------------------
Thu Nov 19 13:48:09 UTC 2015 - mimi.vx@gmail.com

- initial commit
