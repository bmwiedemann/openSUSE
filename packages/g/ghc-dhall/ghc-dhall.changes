-------------------------------------------------------------------
Tue Oct  6 08:56:16 UTC 2020 - psimons@suse.com

- Update dhall to version 1.35.0 revision 2.
  Upstream has revised the Cabal build instructions on Hackage.

-------------------------------------------------------------------
Wed Sep 16 12:53:49 UTC 2020 - psimons@suse.com

- Update dhall to version 1.35.0 revision 1.
  Upstream has revised the Cabal build instructions on Hackage.

-------------------------------------------------------------------
Sat Sep 12 16:18:00 UTC 2020 - psimons@suse.com

- Update dhall to version 1.35.0.
  1.35.0

  * [Supports version 18.0.0 of the standard](https://github.com/dhall-lang/dhall-lang/releases/tag/v18.0.0)
      * [Implement more efficient `with` desugaring](https://github.com/dhall-lang/dhall-haskell/pull/1993)
          * Chained `with` expressions will now be much more efficient
  * [BREAKING CHANGE TO THE API: Preserve whitespace for `Lam` constructor](https://github.com/dhall-lang/dhall-haskell/pull/1980)
      * This change extends the `Lam` constructor to preserve whitespace around
        the variable binding
      * The motivation for this change is to enable `dhall-docs` to support
        jumping to definitions
      * You can replace your existing `Lam` constructors with
        `Dhall.Core.makeFunctionBinding`
  * [BREAKING CHANGE TO THE API: Preserve whitespace for `Field` constructors](https://github.com/dhall-lang/dhall-haskell/pull/1991)
      * This change extends the `Field` constructor to preserve whitespace around
        the selected field
      * The motivation for this change is to enable `dhall-docs` to support
        jumping to definitions
      * You can use `Dhall.Core.makeFieldSelection` and
        `Dhall.Core.fieldSelectionLabel` to convert between the detailed and the
        simple representation of the selected field.
  * [Add `FromDhall` instances for `{Int,Word}{,8,16,32,64}`](https://github.com/dhall-lang/dhall-haskell/pull/2012)
  * [Add `--output` option for `dhall text` subcommand](https://github.com/dhall-lang/dhall-haskell/pull/1974)
  * [Add `Dhall.Crypto.toString`](https://github.com/dhall-lang/dhall-haskell/pull/1976)
  * [Make the HTTP `Manager` configurable](https://github.com/dhall-lang/dhall-haskell/pull/2027)
      * Several import-related functions now provide an alternative variants that
        allows the user to supply a custom `Manager`
      * You can use this to tweak HTTP request timeouts or use a different TLS
        manager (e.g. one from `http-client-openssl`)
  * Fixes and improvements to code formatting
      * [#2000](https://github.com/dhall-lang/dhall-haskell/pull/2000)
      * [#2021](https://github.com/dhall-lang/dhall-haskell/pull/2021)

        The formatter now preserves comments for record fields (both record types
        and record literals)
  * Fixes and improvements to documentation
      * [#2011](https://github.com/dhall-lang/dhall-haskell/pull/2011)
      * [#2013](https://github.com/dhall-lang/dhall-haskell/pull/2013)
      * [#2014](https://github.com/dhall-lang/dhall-haskell/pull/2014)
  * Fixes and improvements to test suite
      * [#2020](https://github.com/dhall-lang/dhall-haskell/pull/2020)

-------------------------------------------------------------------
Tue Sep  8 10:06:28 UTC 2020 - psimons@suse.com

- Update dhall to version 1.34.0 revision 2.
  1.34.0

  * [Supports version 17.1.0 of the standard](https://github.com/dhall-lang/dhall-lang/releases/tag/v17.1.0)
      * [Add support for trailing commas](https://github.com/dhall-lang/dhall-haskell/pull/1885)
  * BREAKING CHANGE to the API: [Support prefix comments on record key-value pairs](https://github.com/dhall-lang/dhall-haskell/pull/1908)
      * The Dhall AST (i.e. `Expr`) now preserves some comments for record types
        and record literals
      * The impact of this change is that you will need to add
        `Dhall.Syntax.makeRecordField` or `Dhall.Syntax.recordFieldValue` in a few
        places wherever your Haskell assembles or disassembles record expressions
      * The motivation of this change is two-fold:
          * To eventually enable `dhall-docs` support for rendering record
            comments as documentation
          * To eventually enable support for preserving record-related comments
            when formatting Dhall code
  * BUG FIX: [Fix `with` expressions to permit functions on their left-hand side](https://github.com/dhall-lang/dhall-haskell/pull/1897)
      * This was a case of the Haskell implementation not being compliant with the
        standard grammar
  * [Drop support for GHC 8.2](https://github.com/dhall-lang/dhall-haskell/pull/1949)
  * [Add a new `dhall rewrite-with-schemas` command](https://github.com/dhall-lang/dhall-haskell/pull/1902)
      * You can now simplify a Dhall expression using a schema record (e.g. a
        `./schemas.dhall` record that a package might provide)
      * This simplification replaces large anonymous records with an
        equivalent use of a record completion when possible
  * [Add `--transitive` flag to `dhall {format,lint,freeze}](https://github.com/dhall-lang/dhall-haskell/pull/1880)
      * This flag lets you format/lint/freeze a file and all of its transitive
        dependencies that are reachable via relative file imports
  * [Move `man/dhall.1` to `data-files`](https://github.com/dhall-lang/dhall-haskell/pull/1921)
      * This ensures that Cabal will install `dhall`'s `man` pages in the
        correct directory
  * Performance improvements
      * [#1879](https://github.com/dhall-lang/dhall-haskell/pull/1879)
  * Standards compliance
      * [#1953](https://github.com/dhall-lang/dhall-haskell/pull/1953)
      * [#1954](https://github.com/dhall-lang/dhall-haskell/pull/1954)
      * [#1956](https://github.com/dhall-lang/dhall-haskell/pull/1956)
      * [#1957](https://github.com/dhall-lang/dhall-haskell/pull/1957)
      * [#1958](https://github.com/dhall-lang/dhall-haskell/pull/1958)
  * Fixes and improvements to haddocks
      * [#1881](https://github.com/dhall-lang/dhall-haskell/pull/1881)
      * [#1955](https://github.com/dhall-lang/dhall-haskell/pull/1955)

-------------------------------------------------------------------
Mon Aug 31 09:34:38 UTC 2020 - psimons@suse.com

- Update dhall to version 1.33.1 revision 2.
  Upstream has revised the Cabal build instructions on Hackage.

-------------------------------------------------------------------
Wed Aug 19 07:59:20 UTC 2020 - Michel Normand <normand@linux.vnet.ibm.com>

- Add _constraints with 6GB min disk space for ppc64/ppc64le

-------------------------------------------------------------------
Tue Aug 18 10:44:38 UTC 2020 - Peter Simons <psimons@suse.com>

- Replace %setup -q with the more modern %autosetup macro.

-------------------------------------------------------------------
Tue Aug 18 09:43:56 UTC 2020 - Peter Simons <psimons@suse.com>

- Tweak Cabal file to accept latest version of optparse-applicative.

-------------------------------------------------------------------
Mon Aug 13 10:37:00 UTC 2020 - Peter Simons <psimons@suse.com>

- Relax overspecified dependency on ansi-terminal.

-------------------------------------------------------------------
Mon Aug 10 06:37:01 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- relax dependency constraints

-------------------------------------------------------------------
Wed Jul  8 16:38:41 UTC 2020 - psimons@suse.com

- Add dhall at version 1.33.1.
