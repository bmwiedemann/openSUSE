-------------------------------------------------------------------
Thu Feb 13 19:43:56 UTC 2020 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12.17 (released 2020/02/12) includes a fix to the runtime.
  Refs boo#1141689.
  * go#36574 runtime: "PowerRegisterSuspendResumeNotification failed with errno= 87" when running in Windows docker containers
  * Truncate changelog for versions older than go1.12

-------------------------------------------------------------------
Wed Jan 29 00:14:49 UTC 2020 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12.16 (released 2020/01/28) includes two security fixes to
  the crypto/x509 package.
  Refs boo#1141689.
  * go#36839 crypto/x509, x/crypto/cryptobyte: panic in certificate parsing
  * go#36836 crypto/x509: certificate validation bypass on Windows 10

-------------------------------------------------------------------
Fri Jan 10 08:24:15 UTC 2020 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12.15 (released 2020/01/09) includes fixes to the runtime
  and the net/http package.
  Refs boo#1141689.
  * go#36433 net/http: racing write to t.ProxyConnectHeader in dialConn when proxy URL includes auth credentials
  * go#36377 runtime: "fatal error: PowerRegisterSuspendResumeNotification failure" when running in Windows docker containers
  * go#36376 runtime: Timer buckets may get "stuck" for long periods of time after Windows 8/10 systems wake from sleep
  * go#36367 runtime: sweep increased allocation count crash on arm64
  * go#36002 doc: release history webpage contains suboptimal links

-------------------------------------------------------------------
Thu Dec  5 22:31:35 UTC 2019 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12.14 (released 2019/12/04) includes a fix to the runtime.
  Refs boo#1141689.
  * go#35747 ensure that Go toolchain meets Apple's notarization requirements
  * go#35210 runtime: function textOff returns incorrect value if multiple text sections are present

-------------------------------------------------------------------
Fri Nov  1 16:14:29 UTC 2019 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12.13 (released 2019/10/31) fixes an issue on macOS 10.15
  Catalina where the non-notarized installer and binaries were
  being rejected by Gatekeeper. Only macOS users who hit this issue
  need to update.
  Refs boo#1141689.

-------------------------------------------------------------------
Wed Oct 29 19:37:12 UTC 2019 - Jeff Kowalczyk <jkowalczyk@suse.com>

- Add %ifarch %arm aarch64 BuildRequires: binutils-gold to fix
  /usr/lib64/go/{version}/pkg/tool/linux_arm64/link: running gcc failed: exit status 1
  collect2: fatal error: cannot find 'ld'-

-------------------------------------------------------------------
Wed Oct 23 16:13:46 UTC 2019 - Stefan BrÃ¼ns <stefan.bruens@rwth-aachen.de>

- Remove unneeded systemd BuildRequires.

-------------------------------------------------------------------
Mon Oct 21 14:05:35 UTC 2019 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Fix broken go_api evaluation (1.12 < 1.5, when evaluated as floats),
  let RPM evaluate the expression, drop no longer required bc.
- Own the gdbinit.d directory, avoid the build dependency on gdb.

-------------------------------------------------------------------
Fri Oct 18 05:11:29 UTC 2019 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12.12 (released 2019/10/17) includes fixes to the go command,
  runtime, syscall and net packages.
  Refs boo#1141689.
  * go#34881 net/http: Client.Do() panics when URL includes HTTP basic auth
  * go#34789 cmd/go/internal/modconv: TestConvertLegacyConfig failing on release-branch.go1.12
  * go#34713 runtime, internal/poll: darwin: ensure that no thread is consumed, nor a syscall.Read if FD isn't yet ready for I/O
  * go#34711 runtime: "program exceeds 50-thread limit" in test of os package on darwin-arm-mg912baios
  * go#34661 net: infinite loop in LookupAddr()
  * go#34641 syscall: (*LazyProc).Call does not keep arguments alive (anymore)
  * go#33983 cmd/cover: cannot run in directory with no .go files
  * go#33982 x/sys/unix: TestPassFD consistently failing in aix-ppc64 builder on release-branch.go1.12
  * go#33877 net/http: Transport leaks net.Conns if connections never become idle
  * go#33758 x/build, cmd/go: TestGoGetInsecure failing in release-branch.go1.12
  * go#33757 x/build, runtime: linux-s390x-ibm regression in TestGdbPython on release-branch.go1.12
  * go#33756 x/build: skip `darwin-386-10_14` builder on release-branch.go1.12
  * go#33673 cmd/go: regression on the default of CGO_ENABLED to 0 for cross builds
  * go#31887 cmd/go: downloads follow plain-HTTP redirects even when the -insecure flag is not set
  * go#31305 x/arch/arm64/arm64asm: TestObjdumpARM64TestDecode{GNU,Go}Syntaxdata failing at Go 1.12.3

-------------------------------------------------------------------
Thu Oct 17 22:18:23 UTC 2019 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12.11 (released 2019/10/17) includes security fixes to the
  crypto/dsa package addressing the following CVE:
  CVE-2019-17596
  Refs boo#1141689.
  * boo#1154402 CVE-2019-17596
  * go#34961 crypto/dsa: invalid public key causes panic in dsa.Verify

-------------------------------------------------------------------
Thu Sep 26 04:09:51 UTC 2019 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12.10 (released 2019/09/25) includes security fixes to the
  net/http package addressing the following CVE:
  CVE-2019-16276
  Refs boo#1141689.
  * boo#1152082 CVE-2019-16276
  * go#34540 net/http: invalid headers are normalized, allowing request smuggling

-------------------------------------------------------------------
Thu Aug 15 23:44:35 UTC 2019 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12.9 (released 2019/08/15) includes fixes to the linker and
  the os and math/big packages.
  Refs boo#1141689.
  * go#33557 cmd/link: stack depth check too shallow
  * go#33424 os.RemoveAll: openFdAt function without O_CLOEXEC and cause fd escape to child process
  * go#33040 cmd/link: missing section for relocation target
  * go#32940 math/big: arm64 assembly code for shlVU is incorrect
  * go#30401 doc: syscall: document Setrlimit behavior change on Go 1.12 on macOS

-------------------------------------------------------------------
Tue Aug 13 20:52:13 UTC 2019 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12.8 (released 2019/08/13) includes security fixes to the
  net/http and net/url packages addressing CVEs:
  CVE-2019-9512 CVE-2019-9514 CVE-2019-14809
  Refs boo#1141689.
  * bnc#1146111 VUL-0: CVE-2019-9512: go: HTTP/2: flood using PING frames results in unbounded memory growth
  * bnc#1146115 VUL-0: CVE-2019-9514: go: HTTP/2 implementation is vulnerable to a reset flood, potentially leading to a denial of service
  * bnc#1146123 VUL-0: CVE-2019-14809: go: malformed hosts in URLs leads to authorization bypass
  * go#33633 net/url: URL.Parse Multiple Parsing Issues
  * go#33631 net/http: Denial of Service vulnerabilities in the HTTP/2 implementation

-------------------------------------------------------------------
Wed Jul 10 20:38:40 UTC 2019 - Martin Liška <mliska@suse.cz>

- Set NO_BRP_AR in order to workaround issues when ar is used for
  a Go ELF file.

-------------------------------------------------------------------
Wed Jul 10 20:26:34 UTC 2019 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12.7 (released 2019/07/08) includes fixes to cgo, the compiler,
  and the linker.
  Refs boo#1141689.
  * go#32756 cmd/cgo: generates code with inappropriate array copy
  * go#32712 cmd/compile: wrong calculation result for bit operation
    that's inlined and has all constant shifts in rewrite rules
  * go#32697 debug/dwarf: cgo produces malformed DWARF data
  * go#32583 cmd/compile: `switch` statement on a custom `int32` type
    with negative values behaves differently in two consecutive calls

-------------------------------------------------------------------
Wed Jun 26 21:34:21 UTC 2019 - Jeff Kowalczyk <jkowalczyk@suse.com>

- Use gcc9 by default by updating define gcc_go_version 9 (was 8)
  * drop unneeded patch gcc8-go.patch

-------------------------------------------------------------------
Tue Jun 25 08:01:10 UTC 2019 - Pavol Cupka <palica@liguros.net>

- adding Web Assembly stuff from misc/wasm to fix boo#1139210
- fixing some minor rpmlint warnings

-------------------------------------------------------------------
Mon Jun 17 20:38:09 UTC 2019 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12.6 (released 2019/06/11) includes fixes to the compiler, the linker,
  the go command, and the crypto/x509, net/http, and os packages.
  Refs boo#1141689.
   * go#32484 cmd/link: fix deferreturn detector
   * go#32367 net/http: make Transport ignore 408 timeout messages from server
   * go#32295 cmd/go: tests failing on linux-amd64-longtest
   * go#32282 crypto/x509: macos 10.14 SIGSEGV in crypto/x509._Cfunc_FetchPEMRoots
   * go#32261 syscall: Windows user32 function (SendInput) behaves incorrectly when called within golang environment
   * go#32168 cmd/go: accept -Wl,-R,path
   * go#32081 os: windows processes started with foreign token inherit the wrong environment [CVE-2019-11888]
   * go#32013 cmd/compile: sparse slices with struct items are not initialized
   * go#30526 cmd/go: MacOS binaries invalid for eventual Apple Notary

-------------------------------------------------------------------
Wed Jun 12 14:46:50 UTC 2019 - Dominique Leuenberger <dimstar@opensuse.org>

- BuildRequire pkgconfig(systemd) instead of systemd: allow OBS to
  shortcut the build queues by allowing usage of systemd-mini

-------------------------------------------------------------------
Thu May 16 07:12:19 UTC 2019 - Martin Liška <mliska@suse.cz>

- Add gcc9-rsp-clobber.patch in order to fix bsc#1121397.

-------------------------------------------------------------------
Tue May  7 14:42:33 UTC 2019 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12.5 (released 2019/05/06) includes fixes to the compiler, the
  linker, the go command, the runtime, and the os package.
  Refs boo#1141689.
  * go#31783 cmd/go: go get -x prints to stdout
  * go#31763 cmd/go: module loader fails to resolve imports within symlinked source file
  * go#31679 runtime: high-percentile latency of memory allocations has regressed significantly
  * go#31677 runtime: treap implementation of find() doesn't return the best-fit span
  * go#31565 cmd/link: ppc64 broken NeedsFix
  * go#31474 os.RemoveAll failing silently in go 1.12.2 when removing non-empty directories at /
  * go#31469 x/build/cmd/gopherbot: gopherbot needs human intervention
  * go#31396 cmd/compile: <autogenerated>:1: symbol listed multiple times for same type across multiple packages
  * go#31196 cmd/go: pseudoversions can refer to external commits
  * go#31117 cmd/go: go directive is not only added during go mod init, but also under other conditions that are hard to deduce
  * go#30465 cmd/vet: Consider reverting tag conflict for embedded fields
  * go#30399 cmd/vet: possible to get a printf false positive with big.Int

-------------------------------------------------------------------
Mon Apr 15 07:06:36 UTC 2019 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12.4 (released 2019/04/11) fixes an issue where using the prebuilt binary
  releases on older versions of GNU/Linux led to failures when linking programs
  that used cgo. Only Linux users who hit this issue need to update.
  Unpackaged go1.12.3 (released 2019/04/08) was accidentally released by
  upstream without its intended fix. It is identical to go1.12.2, except for
  its version number. The intended fix is in go1.12.4. go1.12.3 was never
  packaged for SUSE and openSUSE.
  Refs boo#1141689.
  * go#31293 runtime/cgo: unrecognized relocation with binaries shipped in go1.12.2

-------------------------------------------------------------------
Fri Apr  5 23:46:46 UTC 2019 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12.2 (released 2019/04/05) includes fixes to the compiler, the
  go command, the runtime, and the doc, net, net/http/httputil, and
  os packages.
  Refs boo#1141689.
  * go#31244 go 1.12 binaries rejected from mac app store due to ___getdirentries64
  * go#31211 ioutil: deadlock when WriteFile called with a 5<<30 byte buffer on Windows
  * go#31209 cmd/compile: struct interface{} value lost passing by value
  * go#31155 runtime: remove assumptions on Android Bionic's TLS layout
  * go#31144 net/http/httputil: ReverseProxy FlushInterval no longer flushes headers in go1.12
  * go#31062 net: Error when running concurrent DNS queries using cgo on MacOS
  * go#31028 Go 1.12.1 dsymutil segmentation fault on MacOS Sierra
  * go#30996 cmd/compile: miscompilation of codependent global `var` assigments in go1.12
  * go#30859 os: RemoveAll no longer returns *os.PathError
  * go#30666 runtime: dll injection vulnerabilities on Windows
  * go#30491 os: RemoveAll no longer returns *os.PathError
  * go#30266 cmd/go: executables are sometimes named after their module's last element, not directory

-------------------------------------------------------------------
Mon Mar 18 19:04:23 UTC 2019 - Marcus Rueckert <mrueckert@suse.de>

- cleaning up the macros and conditionals for gcc go
  - use bcond_with(out) to decide whether we want to use gccgo or
    not. makes it easier to test both code paths as you can use
    osc build --with(out)=gccgo
  - add defines for which go version to use for different versions,
    that way we dont have to use the old 1.4 everywhere anymore.
    this allows us to use go for bootstrapping everywhere
  - do not use gcc go at all as even gcc-go 8 can not handle some
    newer constructs
  - define a gcc_go_version variable and use it through out the
    spec file, this simplifies some conditionals and makes them
    more understandable, and we have the complex if only once.
  - move architecture defines to the top

-------------------------------------------------------------------
Thu Mar 14 23:33:36 UTC 2019 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12.1 (released 2019/03/14) includes fixes to cgo, the
  compiler, the go command, and the fmt, net/smtp, os,
  path/filepath, sync, and text/template packages.
  Refs boo#1141689.
  * go#30816 misc/cgo/test: failing TestCrossPackageTests
  * go#30684 cmd/go: duplicate symbols when including two main packages in -coverpkg in module mode
  * go#30665 cmd/go: module loader looks for the wrong tags if the "go-import" prefix includes the major-version suffix
  * go#30586 path/filepath: EvalSymlinks, incorrect traversal of relative paths
  * go#30579 os: RemoveAll doesn't remove nested un-readable directories
  * go#30567 cmd/compile: function inlining produces incorrect results in certain conditions
  * go#30493 cmd/go: error if GOCACHE is set but is not an absolute path
  * go#30484 fmt: map printing sort does not deterministically sort differing types
  * go#30478 cmd/compile: KeepAlive doesn't actually keep stack object alive
  * go#30470 sync: random errors on sync.Once running on MacOS Mojave or High Serra
  * go#30465 cmd/vet: Consider reverting tag conflict for embedded fields
  * go#30464 text/template: panics on method on nil interface value
  * go#30447 cmd/go: error if GOCACHE is set but is not an absolute path
  * go#30403 net/smtp: SendMail AUTH error with PlainAuth and successful STARTTLS
  * go#30398 fmt: map printing sort does not deterministically sort differing types

-------------------------------------------------------------------
Fri Mar  1 07:06:01 UTC 2019 - Jeff Kowalczyk <jkowalczyk@suse.com>

- go1.12 (released 2019/02/25) includes changes in the implementation of the
  toolchain, runtime, and libraries. As always, the release maintains the Go 1
  promise of compatibility. Upstream expects almost all Go programs to continue
  to compile and run as before.
  Refs boo#1141689.
  * GO111MODULE=on enables module-aware operations outside of a module directory
  * GODEBUG=tls13=1 enables opt-in support for TLS 1.3 in the crypto/tls package
    per RFC 8446. Will be default in go1.13.
  * trace tool now supports plotting mutator utilization curves, including
    cross-references to the execution trace. These are useful for analyzing the
    impact of the garbage collector on application latency and throughput.
  * arm64 assembler platform register renamed from R18 to R18_PLATFORM
  * improvements to gc
  * race detector is now supported on linux/arm64
  * cgo is now supported on linux/ppc64
  * go1.12 is the last release that will support binary-only packages.
