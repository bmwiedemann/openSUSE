From FEDORA_PATCHES Mon Sep 17 00:00:00 2001
From: Andrew Burgess <aburgess@redhat.com>
Date: Tue, 19 Nov 2024 13:56:56 +0000
Subject: gdb-add-deprecated-settings-py-script.patch

;; Not a backport.  Add a new script which defines a setting which is
;; deprecated, but we don't want to remove it from Fedora GDB just yet.

gdb: add script which defines a deprecated settings

The build-id-core-load setting has not been useful since 2020, but its
not clear when it will be OK to remove this from GDB.

Rather than defining this setting in C++ code, lets just create it
using this Python script, this helps keep the Fedora stuff out of core
GDB.

diff --git a/gdb/data-directory/Makefile.in b/gdb/data-directory/Makefile.in
--- a/gdb/data-directory/Makefile.in
+++ b/gdb/data-directory/Makefile.in
@@ -86,6 +86,7 @@ PYTHON_FILE_LIST = \
 	gdb/unwinder.py \
 	gdb/xmethod.py \
 	gdb/command/__init__.py \
+	gdb/command/deprecated-settings.py \
 	gdb/command/explore.py \
 	gdb/command/frame_filters.py \
 	gdb/command/missing_files.py \
diff --git a/gdb/python/lib/gdb/command/deprecated-settings.py b/gdb/python/lib/gdb/command/deprecated-settings.py
new file mode 100644
--- /dev/null
+++ b/gdb/python/lib/gdb/command/deprecated-settings.py
@@ -0,0 +1,35 @@
+import gdb
+
+# This setting was added to Fedora GDB back in 2007.  It controlled
+# whether GDB would use the build-id extracted from a core file to
+# auto-load the executable if the user had not already loaded an
+# executable.
+#
+# In 2020 this setting was effectively deprecated as the only use of
+# the setting's value was removed.  After this GDB would always
+# auto-load an executable based on the build-id if no executable was
+# already loaded.
+#
+# For now we maintain this setting for backward compatibility reasons.
+
+class build_id_core_load(gdb.Parameter):
+    """This setting is deprecated.  Changing it will have no effect.
+    This is maintained only for backwards compatibility.
+
+    When opening a core-file, and no executable is loaded, GDB will
+    always try to auto-load a suitable executable using the build-id
+    extracted from the core file (if a suitable build-id can be
+    found)."""
+
+    def __init__(self):
+        self.set_doc = "This setting is deprecated and has no effect."
+        self.show_doc = "This setting is deprecated and has no effect."
+        self.value = True
+
+        super().__init__("build-id-core-load", gdb.COMMAND_DATA, gdb.PARAM_BOOLEAN)
+    def validate(self):
+        return True
+    def get_set_string(self):
+        raise gdb.GdbError("The 'build-id-core-load' setting is deprecated.")
+
+build_id_core_load()
