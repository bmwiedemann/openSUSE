Index: gdb-8.2/gdb/dwarf2read.c
===================================================================
--- gdb-8.2.orig/gdb/dwarf2read.c	2018-09-11 15:25:32.000000000 +0200
+++ gdb-8.2/gdb/dwarf2read.c	2018-09-12 15:44:50.000000000 +0200
@@ -3236,7 +3236,7 @@ create_addrmap_from_aranges (struct dwar
       const uint8_t offset_size = dwarf5_is_dwarf64 ? 8 : 4;
       if (addr + entry_length > section->buffer + section->size)
 	{
-	  warning (_("Section .debug_aranges in %s entry at offset %zu "
+	  warning (_("Section .debug_aranges in %s entry at offset %td "
 	             "length %s exceeds section length %s, "
 		     "ignoring .debug_aranges."),
 		   objfile_name (objfile), entry_addr - section->buffer,
@@ -3250,7 +3250,7 @@ create_addrmap_from_aranges (struct dwar
       addr += 2;
       if (version != 2)
 	{
-	  warning (_("Section .debug_aranges in %s entry at offset %zu "
+	  warning (_("Section .debug_aranges in %s entry at offset %tu "
 		     "has unsupported version %d, ignoring .debug_aranges."),
 		   objfile_name (objfile), entry_addr - section->buffer,
 		   version);
@@ -3264,7 +3264,7 @@ create_addrmap_from_aranges (struct dwar
 	= debug_info_offset_to_per_cu.find (sect_offset (debug_info_offset));
       if (per_cu_it == debug_info_offset_to_per_cu.cend ())
 	{
-	  warning (_("Section .debug_aranges in %s entry at offset %zu "
+	  warning (_("Section .debug_aranges in %s entry at offset %tu "
 		     "debug_info_offset %s does not exists, "
 		     "ignoring .debug_aranges."),
 		   objfile_name (objfile), entry_addr - section->buffer,
@@ -3276,7 +3276,7 @@ create_addrmap_from_aranges (struct dwar
       const uint8_t address_size = *addr++;
       if (address_size < 1 || address_size > 8)
 	{
-	  warning (_("Section .debug_aranges in %s entry at offset %zu "
+	  warning (_("Section .debug_aranges in %s entry at offset %tu "
 		     "address_size %u is invalid, ignoring .debug_aranges."),
 		   objfile_name (objfile), entry_addr - section->buffer,
 		   address_size);
@@ -3286,7 +3286,7 @@ create_addrmap_from_aranges (struct dwar
       const uint8_t segment_selector_size = *addr++;
       if (segment_selector_size != 0)
 	{
-	  warning (_("Section .debug_aranges in %s entry at offset %zu "
+	  warning (_("Section .debug_aranges in %s entry at offset %tu "
 		     "segment_selector_size %u is not supported, "
 		     "ignoring .debug_aranges."),
 		   objfile_name (objfile), entry_addr - section->buffer,
@@ -3302,7 +3302,7 @@ create_addrmap_from_aranges (struct dwar
            padding > 0; padding--)
 	if (*addr++ != 0)
 	  {
-	    warning (_("Section .debug_aranges in %s entry at offset %zu "
+	    warning (_("Section .debug_aranges in %s entry at offset %tu "
 		       "padding is not zero, ignoring .debug_aranges."),
 		     objfile_name (objfile), entry_addr - section->buffer);
 	    return;
@@ -3312,7 +3312,7 @@ create_addrmap_from_aranges (struct dwar
 	{
 	  if (addr + 2 * address_size > entry_end)
 	    {
-	      warning (_("Section .debug_aranges in %s entry at offset %zu "
+	      warning (_("Section .debug_aranges in %s entry at offset %tu "
 			 "address list is not properly terminated, "
 			 "ignoring .debug_aranges."),
 		       objfile_name (objfile), entry_addr - section->buffer);
@@ -5537,7 +5537,7 @@ read_debug_names_from_section (struct ob
   if (addr != abbrev_table_start + abbrev_table_size)
     {
       warning (_("Section .debug_names in %s has abbreviation_table "
-                 "of size %zu vs. written as %u, ignoring .debug_names."),
+                 "of size %tu vs. written as %u, ignoring .debug_names."),
 	       filename, addr - abbrev_table_start, abbrev_table_size);
       return false;
     }
