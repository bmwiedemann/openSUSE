From 522e3a4837eaef79fc255b29c5ed75fc6f817ce1 Mon Sep 17 00:00:00 2001
From: Tom de Vries <tdevries@suse.de>
Date: Wed, 13 Nov 2024 22:41:35 +0100
Subject: [PATCH 16/46] [gdb/tdep] Handle syscall clock_gettime64 for arm-linux

When running test-case gdb.reverse/time-reverse.exp on arm-linux, I run into:
...
(gdb) continue^M
Continuing.^M
Process record and replay target doesn't support syscall number 403^M
Process record does not support instruction 0xdf00 at address 0xf7ebf774.^M
Process record: failed to record execution log.^M
^M
Program stopped.^M
0xf7ebf774 in ?? () from /lib/arm-linux-gnueabihf/libc.so.6^M
(gdb) FAIL: $exp: mode=c: continue to breakpoint: marker2
...

Syscall number 403 stands for clock_gettime64 on arm-linux.

Fix this by handling 403 in arm_canonicalize_syscall, and handling
gdb_sys_clock_gettime64 elsewhere.

Since i386_canonicalize_syscall is the identity function, enum value
gdb_sys_clock_gettime64 gets a value to match i386, which also happens to be
403.

Tested on arm-linux.

Approved-By: Guinevere Larsen <guinevere@redhat.com> (record-full)
---
 gdb/arm-linux-tdep.c | 1 +
 gdb/linux-record.c   | 6 ++++++
 gdb/linux-record.h   | 1 +
 3 files changed, 8 insertions(+)

diff --git a/gdb/arm-linux-tdep.c b/gdb/arm-linux-tdep.c
index bb3d808bd5a..4dc8f00d8c2 100644
--- a/gdb/arm-linux-tdep.c
+++ b/gdb/arm-linux-tdep.c
@@ -1645,6 +1645,7 @@ arm_canonicalize_syscall (int syscall)
       */
     case 384: return gdb_sys_getrandom;
     case 397: return gdb_sys_statx;
+    case 403: return gdb_sys_clock_gettime64;
     case 983041: /* ARM_breakpoint */ return gdb_sys_no_syscall;
     case 983042: /* ARM_cacheflush */ return gdb_sys_no_syscall;
     case 983043: /* ARM_usr26 */ return gdb_sys_no_syscall;
diff --git a/gdb/linux-record.c b/gdb/linux-record.c
index 549ea1bd713..33efa026a53 100644
--- a/gdb/linux-record.c
+++ b/gdb/linux-record.c
@@ -1820,6 +1820,12 @@ Do you want to stop the program?"),
 	return -1;
       break;
 
+    case gdb_sys_clock_gettime64:
+      /* Size of struct __timespec64 is 16.  */
+      if (record_mem_at_reg (regcache, tdep->arg2, 16))
+	return -1;
+      break;
+
     case gdb_sys_clock_getres:
       if (record_mem_at_reg (regcache, tdep->arg2, tdep->size_timespec))
 	return -1;
diff --git a/gdb/linux-record.h b/gdb/linux-record.h
index 962cedc3d34..54696124bf2 100644
--- a/gdb/linux-record.h
+++ b/gdb/linux-record.h
@@ -512,6 +512,7 @@ enum gdb_syscall {
   gdb_sys_inotify_init1 = 332,
   gdb_sys_getrandom = 355,
   gdb_sys_statx = 383,
+  gdb_sys_clock_gettime64 = 403,
   gdb_sys_socket = 500,
   gdb_sys_connect = 501,
   gdb_sys_accept = 502,
-- 
2.43.0

