fixup-gdb-6.3-test-pie-20050107.patch

---
 gdb/testsuite/gdb.pie/attach.exp   |  4 ++--
 gdb/testsuite/gdb.pie/break.exp    |  2 +-
 gdb/testsuite/gdb.pie/corefile.exp | 15 +++++++--------
 3 files changed, 10 insertions(+), 11 deletions(-)

diff --git a/gdb/testsuite/gdb.pie/attach.exp b/gdb/testsuite/gdb.pie/attach.exp
index 648c92608c3..2af242618de 100644
--- a/gdb/testsuite/gdb.pie/attach.exp
+++ b/gdb/testsuite/gdb.pie/attach.exp
@@ -148,13 +148,13 @@ proc do_attach_tests {} {
       -re "Load new symbol table from.*y or n.*$" {
          send_gdb "y\n"
          gdb_expect {
-            -re "Reading symbols from $escapedbinfile\.\.\.*done.*$gdb_prompt $"\
+            -re "Reading symbols from $escapedbinfile\.\.\.*$gdb_prompt $"\
                             {pass "(re)set file, before attach1"}
             -re "$gdb_prompt $" {fail "(re)set file, before attach1"}
             timeout         {fail "(timeout) (re)set file, before attach1"}
          }
       }
-      -re "Reading symbols from $escapedbinfile\.\.\.*done.*$gdb_prompt $"\
+      -re "Reading symbols from $escapedbinfile\.\.\.*$gdb_prompt $"\
                       {pass "set file, before attach1"}
       -re "$gdb_prompt $" {fail "set file, before attach1"}
       timeout         {fail "(timeout) set file, before attach1"}
diff --git a/gdb/testsuite/gdb.pie/break.exp b/gdb/testsuite/gdb.pie/break.exp
index 97b87397c27..3e07d6a8b31 100644
--- a/gdb/testsuite/gdb.pie/break.exp
+++ b/gdb/testsuite/gdb.pie/break.exp
@@ -319,7 +319,7 @@ if ![runto_main] then { fail "break tests suppressed" }
 
 send_gdb "catch\n"
 gdb_expect {
-  -re "Catch requires an event name.*$gdb_prompt $"\
+  -re "List of catch subcommands:.*$gdb_prompt $"\
           {pass "catch requires an event name"}
   -re "$gdb_prompt $"\
           {fail "catch requires an event name"}
diff --git a/gdb/testsuite/gdb.pie/corefile.exp b/gdb/testsuite/gdb.pie/corefile.exp
index ca4b01be3eb..2194ccc926c 100644
--- a/gdb/testsuite/gdb.pie/corefile.exp
+++ b/gdb/testsuite/gdb.pie/corefile.exp
@@ -83,11 +83,10 @@ if { $found == 0 } {
     }
 }
 
-# Try to clean up after ourselves. 
-remote_file build delete [file join $coredir coremmap.data]
-remote_exec build "rmdir $coredir"
-    
 if { $found == 0  } {
+    # Try to clean up after ourselves. 
+    remote_file build delete [file join $coredir coremmap.data]
+    remote_exec build "rmdir $coredir"
     warning "can't generate a core file - core tests suppressed - check ulimit -c"
     return 0
 }
@@ -110,13 +109,13 @@ if { $found == 0  } {
 
 gdb_exit
 if $verbose>1 then {
-    send_user "Spawning $GDB -nw $GDBFLAGS -core=[standard_output_file corefile]\n"
+    send_user "Spawning $GDB -nw $INTERNAL_GDBFLAGS $GDBFLAGS -core=[standard_output_file corefile]\n"
 }
 
 set oldtimeout $timeout
 set timeout [expr "$timeout + 60"]
 verbose "Timeout is now $timeout seconds" 2
-eval "spawn $GDB -nw $GDBFLAGS -core=[standard_output_file corefile]"
+eval "spawn $GDB -nw $INTERNAL_GDBFLAGS $GDBFLAGS -core=[standard_output_file corefile]"
 expect {
     -re "Couldn't find .* registers in core file.*$gdb_prompt $" {
         fail "args: -core=corefile (couldn't find regs)"
@@ -143,11 +142,11 @@ expect {
 close;
 
 if $verbose>1 then {
-    send_user "Spawning $GDB -nw $GDBFLAGS $binfile -core=[standard_output_file corefile]\n"
+    send_user "Spawning $GDB -nw $INTERNAL_GDBFLAGS $GDBFLAGS $binfile -core=[standard_output_file corefile]\n"
 }
 
 
-eval "spawn $GDB -nw $GDBFLAGS $binfile -core=[standard_output_file corefile]";
+eval "spawn $GDB -nw $INTERNAL_GDBFLAGS $GDBFLAGS $binfile -core=[standard_output_file corefile]";
 expect {
     -re "Core was generated by .*coremaker.*\r\n\#0  .*\(\).*\r\n$gdb_prompt $" {
 	pass "args: execfile -core=corefile"
