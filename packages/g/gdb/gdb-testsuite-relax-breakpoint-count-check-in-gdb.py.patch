From 943623fbdfbc3c047af66866fad4fc5ee4fc1e3b Mon Sep 17 00:00:00 2001
From: Tom de Vries <tdevries@suse.de>
Date: Mon, 12 Jun 2023 13:00:09 +0200
Subject: [PATCH] [gdb/testsuite] Relax breakpoint count check in
 gdb.python/py-rbreak.exp

With a gdb 13.2 based package on SLE-15 aarch64,  I run into:
...
(gdb) PASS: gdb.python/py-rbreak.exp: nosharedlibrary
py sl = gdb.rbreak("^[^_]",minsyms=False)^M
Breakpoint 2 at 0x4004ac: file ../sysdeps/aarch64/crti.S, line 63.^M
  ...
(gdb) py print(len(sl))^M
12^M
(gdb) FAIL: gdb.python/py-rbreak.exp: check number of returned breakpoints is 11
...

The FAIL is due to:
- the glibc object crti.o containing debug information for function
  call_weak_fn, and
- the test-case not expecting this.

The debug information is there due to compiling glibc using a binutils which
contains commit 591cc9fbbfd ("gas/Dwarf: record functions").

I've run into a similar issue before, see commit 3fbbcf473a5 ("[gdb/testsuite]
Fix regexp in py-rbreak.exp").

The fix I applied there was to use a regexp "^[^_]" to filter out
__libc_csu_fini and __libc_csu_init, but that doesn't work for call_weak_fn.

Fix this by:
- reverting the regexp to "", and
- rewriting the check to require at least 11 functions, rather than a precise
  match.

Tested on x86_64-linux.

PR testsuite/30538
Bug: https://sourceware.org/bugzilla/show_bug.cgi?id=30538
---
 gdb/testsuite/gdb.python/py-rbreak.exp | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/gdb/testsuite/gdb.python/py-rbreak.exp b/gdb/testsuite/gdb.python/py-rbreak.exp
index 2d39141285f..a4aa953d094 100644
--- a/gdb/testsuite/gdb.python/py-rbreak.exp
+++ b/gdb/testsuite/gdb.python/py-rbreak.exp
@@ -32,10 +32,16 @@ if {![runto_main]} {
 }
 
 gdb_test_no_output "nosharedlibrary"
-gdb_py_test_silent_cmd "py sl = gdb.rbreak(\"^\[^_\]\",minsyms=False)" \
+gdb_py_test_silent_cmd "py sl = gdb.rbreak(\"\",minsyms=False)" \
     "get all function breakpoints" 0
-gdb_test "py print(len(sl))" "11" \
-    "check number of returned breakpoints is 11"
+set min_breakpoints 11
+gdb_test_multiple "py print(len(sl))" \
+    "check number of returned breakpoints is at least $min_breakpoints" {
+	-re -wrap "($decimal)" {
+	    set n $expect_out(1,string)
+	    gdb_assert { $n >= $min_breakpoints } $gdb_test_name
+	}
+    }
 gdb_py_test_silent_cmd "py sl = gdb.rbreak(\"main\.\*\",minsyms=False)" \
     "get main function breakpoint" 0
 gdb_test "py print(len(sl))" "1" \

base-commit: 85025e0631ed4b0e8c3aa85d7561a715f142bdc6
-- 
2.35.3

