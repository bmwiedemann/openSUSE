-------------------------------------------------------------------
Sat Mar 22 10:54:04 UTC 2025 - Andrea Manzini <andrea.manzini@suse.com>

- Update to version 1.1.1:
  * Render Group Channels audio data to master output only if audible (#709)
  * Fix MIDI out information not being refreshed properly on MIDI channels (#717)
  * Fix MIDI actions not being added on the rightmost edge in the Action Editor (#716)
  * Fix FX buttons not being properly lit (#712)
  * Fix ChannelShared objects not being deleted on Channel deletion (#695)
  * Fix wrong play mode for sample channels in one-shot retrig mode
  * Fix missing last sample when moving or resetting 'end' point in Sample Editor
  * Fix last audio sample not being played in sample channels
  * Fix inability to clear Channels' key bindings (#708)
  * Fix Main Window size not being stored correctly (#713)
  * Update FLTK dependency to 1.4.0-1
  * Add basic CMakePresets.json file
  * Many other minor bugs and typos fixed
  * Lots of refactoring and code cleanups

-------------------------------------------------------------------
Sat Nov  9 21:16:40 UTC 2024 - Konstantin Voinov <kv@kott.no-ip.biz>

- update "exlude from all" patch
- add more BuildRequires for Wayland support
- rename 003-cmake-exclude-juce-from-all.patch to 003-cmake-exclude-juce_and_fltk-from-all.patch

-------------------------------------------------------------------
Thu Oct 31 08:42:55 UTC 2024 - edogawa@aon.at

- Update to version 1.1.0:
  * Show 'Add track' menu when right-cliking on empty area on main Keyboard
  * Refactor method name
  * Add input-only MIDI activity widget to Group channels
  * Update vst3sdk submodule
  * Update FLTK to latest master (#701)
  * Undef 'small' macro on Windows to avoid compilation error with JUCE 8.0.1
  * [CI] Don't install extra Windows dependency for Visual Studio
  * [CI] Update Windows runner to 2022
  * [CI] Fix deprecation warnings (#685)
  * Update JUCE to 8.0.1
  * Add MidiDispatcher::processTrack() method with other adjustments
  * Refactor: MidiDispatcher::processChannel() method
  * Add new model::Tracks::getChannels() method
  * Add new 'Setup MIDI input' menu element to Channel Group
  * UI: prevent Channel Group from being dragged around
  * Avoid useless operation when removing a Track
  * Rebuild Tracks indexes after removal
  * DRY
  * Remove useless Channel& return type when cloning a Channel
  * Remove unused function parameter
  * Better encapsulation for Channel removal from Track
  * Tidy: apply clang-format globally
  * Fix inability to remove a track, even if empty
  * Add missing 'typename' in template function
  * Refactor: rename all 'column' references to 'track'
  * Add support for old patches with new Track-based architecture
  * Fix PATCH_KEY_TRACKS constant
  * Fix assertion raised by test
  * Fix broken test
  * Fix assertion
  * Add support for muting groups
  * Add support for solo-ing groups
  * Pass keyPress/keyRelease/keyKill event from groups to children
  * Refactor: Column -> Track in glue layer
  * Set track width with new API
  * Remove useless v::Model methods
  * Move Channels via new Track model
  * No longer update v::Model when adding/removing/cloning channels
  * Remove Track via new Track model
  * Add Track via new Track model
  * Refactor: rename Column -> Track in v::Model
  * Display Channels by tracks in main UI
  * Create new geGroupChannel from geColumn
  * New geGroupChannel widget
  * Remove model::Channels object from model::Document
  * Enable Tracks debugging in model::Document
  * Track de-serialization
  * Tracks serialization
  * Add model::Channels::getAllIDs() utility method
  * Refactor: change Patch::Column to Patch::Track
  * Clean up Tracks in Model::reset()
  * Track-based IO operations
  * Track-based ChannelManager operations
  * Track-based Action recording
  * Track-based MIDI dispatchment
  * Track-based PluginsApi
  * Track-based rendering
  * Make Reactor work with Tracks
  * Add Channels to Tracks
  * Prepare internal tracks with internal channels and render them
  * Add new ChannelManager::addTrack() method
  * Remove unused method from ChannelsApi and ChannelManager
  * Add channelsApi::getTracks() method
  * Add m::model::Tracks object to Document
  * Add new m::model::Track and m::model::Tracks classes
  * Add m::model::Channels::add() method, to add a Channel at a certain position
  * Add m::model::Channels::getIndex() method
  * Add m::model::Channels::find() method
  * Add group capability to u::string::toString
  * Add new ChannelType::GROUP enum value
  * Mark m::Channel's comparison operator as const
  * Add new utils vector findIfSafe function, based on ID
  * Add also header files to CMakeLists.txt SOURCES list
  * Fix CMakeLists.txt indentation
  * Clang-format: fix Lambda body indentation
  * Optimization: add channels to Model by moving instead of copying them
  * [CI] Increase the number of CMake jobs for Windows and Linux
  * [CI] Upgrade macOS runner to macOS 12.7.5
  * Bump version to 1.1.0
  * Refactor: DRY parameter
  * Add 'index' property to v::Model::Column
  * Fix formatting
  * Add v::Model::Columns::addDefaultColumn() method
  * Use proper class for v::Model::Columns
  * Refactor Model::addColumn() to take a 'Column' parameter
  * Fix formatting
  * Refactor: use temporary local variable
  * Revert "Refactor: change parameter type in Renderer::advanceChannels() method"
  * Fix formatting
  * Refactor: change parameter type in Renderer::advanceChannels() method
  * Refactor: move plug-in rendering functions to separate files
  * Update AudioBuffer dep
  * Make WeakAtomic moveable
  * Remove old Queue object, use ConcurrentQueue everywhere
  * Rename model::Model's method name, add comments
  * Use model::Document::store/load methods in Model class
  * Add model::Document::store/load methods for Conf (still unused)
  * Use model::Document::store/load methods in Model class
  * Add model::Document::store/load methods for Patch (still unused)
  * Late model::Shared lock when storing data
  * Use model::Shared::store() in model::Model
  * Use model::Shared::load() in model::Model
  * Add model::Shared::store() and model::Shared::load() (still unused)
  * Add m_ prefix to all private members in model::Shared
  * Add model::Shared::findChannel() method
  * Add 'id' property to ChannelShared data structure
  * Move model/LoadState to separate file
  * Split Channel and Shared deserialization
  * Const-correctness
  * Refactor: rename model's DataLock -> SharedLock
  * Use model/Shared class in model/Model
  * Add model/Shared class (still unused)
  * Move model/DataLock to separate file
  * Update atomic-swapper dependency
  * Move Model's type definitions to separate file
  * Move model/Document to separate file
  * Simplify includes in model/KernelMidi
  * Refactor: rename model::LayoutLock -> model::DocumentLock
  * Refactor: change model::Layout -> model::Document
  * Refactor: pass MidiEvent around by reference when sent to channel, forward declare it where possible
  * Refactor: remove Model dependency from c::channel, forward declare and include what's necessary
  * Refactor: add some private methods to Renderer, using explicit rendering:: namespace qualifier
  * Refactor: remove forward declaration of struct Action, import it instead
  * Remove unused method from geChannel
  * Remove duplicated c::channel::Data object in geMidiChannel
  * Optimize imports in core/channels/channel.{h,cpp}
  * Optimize imports in glue/channels.cpp
  * Add new DeepPtr class

-------------------------------------------------------------------
Sun Feb 25 10:30:19 UTC 2024 - edogawa@aon.at

- Update to version 1.0.0:
  * Extras: fix icon path in .desktop file
  * Extras: change logo size to a supported resolution
  * Update Changelog
  * Editors: fix zoom with mousewheel
  * Action Editor: mousewheel zoom now works only when Ctrl is pressed
  * Sample Editor: mousewheel zoom now works only when Ctrl is pressed
  * Fixup typo
  * Update Changelog
  * send MIDI data through armed channels to the outside world (#498)
  * Make m::rendering::sendMidiToOut() function public
  * Prevent invalid Sample Editor state when opening the Sample Editor window without closing it first
  * Remove commented-out code
  * Fixup README.md
  * Update README.md file with bullet points from the main website
  * Update Changelog
  * Change Configuration window title and its main menu entry to 'Settings'
  * Formatting
  * Fix main menu on macOS
  * Fix Record-on-signal mode not deactivated after recording actions
  * Fix Record-on-signal mode not deactivated after recording audio (#678)
  * Fix inability to quit record-on-signal mode also when recording actions
  * Fix inability to quit record-on-signal mode (#677)
  * Fix grid not showing up correctly in Sample Editor (#679)
  * Use signed int for audio device also in Conf
  * Add some more comments
  * DRY some KernelAudio methods
  * Let KernelAudio pick a default audio device if not specified (i.e. the first time Giada is run) (#669)"
  * Use signed int type for audio device ID
  * Remove wrong comment
  * Let RtAudio pick the API automatically if RtAudio::Api == UNSPECIFIED
  * Fixup for commit bab6ba68ce9ba092a9e855cef236260aa93eaa2c: a call to resampler.last() was missing, causing a glitch (and test failure)
  * Update mcl-audio-buffer dep
  * Simplify sample rendering mechanism on REWIND render mode
  * Include json::parse() in try-catch block
  * Fix cloned channels not being added to columns
  * Don't load Wave twice in sample channel during serialization (#680)
  * Simplify SampleChannel::setWave() logic
  * Improve log message
  * Fix log messages names in waveFactory
  * rendering::onSampleEnd_ always return 'false' for 'shouldLoop' by default
  * Recursive buffer rendering implementation (#538)
  * Prevent assertion in geTabMidi when input or output devices are not found
  * Refactor: add SampleChannel::isAnyNonLoopingSingleMode() utility method
  * Refactor: add SampleChannel::isAnyLoopOnceMode() utility method
  * Refresh Preview Channel properties when reloading the sample
  * Remove old Range class, use geompp::Range instead
  * Update copyright date
  * Fix wrong channel being added when copying a sample range to new channel
  * Add tests for wfx::paste() in waveFx test case
  * Fix assertion during paste operation in Sample Editor
  * DRY code in wfx::paste()
  * Refresh Preview Channel properties on cut, trim and paste in Sample Editor
  * Print extra Channel info in Channel::debug()
  * Add m::Channel::debug() method
  * Add utils::toString(ChannelType) function
  * Always reset channel's internal volume on manual triggering
  * Fix some test cases names
  * Optimize audio preview rendering: enable it only when Sample Editor is open
  * Move some Sample Editor-related methods from ChannelsApi to SampleEditorApi
  * Remove unnecessary namespace prefix
  * Update info in comment
  * Add TODO comment
  * Store and load column layout in Patch
  * Fix version comparison algorithm in Patch::Version, add tests for it
  * Remove position and columnId from Channel in model
  * Move some v::Model-related functions to v::Model class
  * Re-enable column resizing
  * Remove Column ID, use index instead
  * Move add and remove columns functions to c::channel
  * Move Channels' layout storage to v::Model (part 1, no storage, m::Model still dirty)
  * Pass c::channel::Data by const reference to geColumn::addChannel()
  * Return geColumn reference from geKeyboard::addColumn() method
  * Update comment
  * Pass Model::Column object to Keyboard::addColumn() method
  * Add u::vector::findIfSafe() function
  * Allow non-const containers to u::vector::findIf() function
  * [Linux] Prettify metainfo.xml file
  * [Linux] Update metainfo.xml file
  * [Linux] Remove duplicated .desktop file generation (#591)
  * Change geEnvelopePoint position and color in Velocity Editor
  * Print 'Velocity' in Sample Action Editor's Velocity widget
  * Disable compilation of geEnvelopeEditor and envelope-related functions
  * Show only MidiEvent::CHANNEL_NOTE_ON types in Velocity Editor
  * Record Sample actions with max velocity by default
  * Play Sample actions with velocity taken into account
  * Move Channel's internal volume to ChannelShared object
  * Add Velocity Editor widget to Sample Channel Action Editor
  * Type deduction when mapping values in geVelocityEditor
  * Draw envelope points as circles
  * Tidy up debug messages in MidiDispatcher
  * Use float-based velocity value everywhere
  * Add more velocity-related tests to midiEvent test case
  * Remove unused global constant
  * Velocity and velocityFloat values are now kept in sync in MidiEvent class
  * Const-correctness in geVelocityEditor
  * Const-correctness in geSampleAction
  * Simplify draw logic in geSampleAction
  * Use compact nested namespace
  * Remove unused imports by geVelocityEditor
  * Remove unused forward declaration
  * Bump version to 1.0.0
  * Fix resizer bar height in geKeyboard
  * Store column layout configuration when adding new colums
  * Sort geColumn's menu items
  * Fix LangMap label name and text
  * Remove 'add column' button
  * Always keep at least one column in geKeyboard
  * Make geKeyboard::addColumn() method public
  * Better enum name
  * Tidy up geLiquidScroll::addWidget() method
  * Mark geLiquidScroll::add() methods as deleted
  * Update FLTK to latest master commit
  * Set geKeyboard painting clip based on its viewport bounds
  * Show scrollbars in geKeyboard only if necessary
  * geScroll::getViewportBounds() now takes into account the scrollbars visibility
  * Print beat numbers on Sequencer
  * Simplify drawing logic of Sequencer's cursor
  * Change 'Config' label name in Main Menu to something more meaningful
  * Optimize some imports
  * Remove unused widget geMainIO
  * Tidy up margins and sizes in Main Window
  * Main Window I/O redesign
  * New geMainInput and geMainOutput widgets (still unused)
  * Add more LangMap labels
  * Add new graphic icon for Stream Linker button
  * Pull out geLed class from geMidiActivity
  * Add support for vertical audio meters
  * Remove useless parameters from geSoundMeter's constructor
  * Main Menu redesign with macOS support
  * Add new LangMap entry

-------------------------------------------------------------------
Sat Dec 23 09:24:37 UTC 2023 - edogawa@aon.at

- Update to version 0.26.1:
  * Update Changelog
  * Bump version to 0.26.1
  * Fix crash when fetching audio device and JACK is in use
  * Fix glitches in geScroll positioning inside geSplitScroll
  * Fix Sample Editor not picking up Channel properties when loading a project
  * Const-correctness when preparing Preview Channel
  * Fix assertion when selected RtMidi API is not present in available APIs (#670)
  * Add geChoice::hasItem() method
  * [Linux] Follow the XDG Base Directory Specification (#338)
  * Minor fixup to some help labels
  * Disable 'rec-on-signal mode' button if function not available (#629)
  * Disable 'free loop-length mode' button if function not available (#629)
  * Disable 'record audio' button if can't record audio with better explanation (#629)
  * Disable UI refresh while loading a project to prevent crashes
  * Show 'missing assets' window only once the UI has been loaded
  * [Windows] Fix plug-in GUI weird auto-resize when dragged around (#621)
  * Adjust plug-in window size before showing it (reduce weird window flickering)
  * Load wave in Channel only when type is SAMPLE or PREVIEW
  * DRY m::Channel's constructor
  * Add some assertions in m::Channel class
  * Show correct progress in plug-in scan when multiple formats are in use
  * PluginManager: tidy up code
  * PluginManager: modernize scan loop
  * Add ability to stop plug-in scan (#423)
  * Pass progress callback to PluginManager::scanDirs() by value
  * PluginManager: add ability to cancel plug-in scan
  * Add support to cancellable gdProgress in gdMainWindow::ScopedProgress
  * Cancellable geProgress widget
  * Flex-based gdProgress window
  * Add geProgress constructor without parameters
  * Add some explicit imports
  * Ability to sort plug-ins in both ascending and descending order (#542)
  * Smarter plug-in sort mechanism
  * Don't close browser twice on project load to prevent crash
  * KernelAudio: prevent assertion on inputDevice.channelsStart >= 0 when applying audio changes and input device is disabled
  * On project close, close all subwindows first before resetting the engine
  * Ui::closeAllSubwindows() now closes ALL existing subwindows
  * Beautify gdWindow::deleteChild() method
  * Refactor method name in gdWindow
  * DRY gdWindow delChild() method
  * Refactor gdWindow cleanup into separate method
  * Truncate column's help text if column is too narrow
  * Print help text on columns background
  * Refactor columns background drawing
  * Add geScroll::getViewportBounds()
  * Update geompp dep
  * Leave some empty margin at the bottom of each column as drag and drop area
  * geFlexResizable: add ability to set an empty margin at the end of the stack
  * Pass by ref in some geFlexResizable methods
  * DRY some geFlexResizable internals
  * Make geFlexResizable::computeHeight() more generic
  * geFlexResizable-based geColumn
  * Add better support for MOVE mode in geResizerBar
  * Adjust parent size when widgets inside geFlexResizable are resized in MOVE mode
  * Refactor resizer bar code into separate method in geFlexResizable
  * Make widgets vector protected in geFlexResizable
  * Add geFlexResizable::clearWidgets() method
  * Add geChannel::getId() method
  * Ability to add widgets of arbitrary size to geFlexResizable
  * Add alternate constructor with explicit coordinates to geFlexResizable
  * Update FLTK to latest master
- add giada-fmt.patch (missing includee)

-------------------------------------------------------------------
Mon Oct 16 20:46:54 UTC 2023 - Lubos Kocman <lubos.kocman@suse.com>

- Drop the Commercial from license tag
  * It is an licensing option suggested by author, however our legaldb
    throws an error that it's not a valid SPDX license

-------------------------------------------------------------------
Mon Oct 16 15:28:03 UTC 2023 - Edgar Aichinger edogawa@aon.at

- Update to version 0.26.0:

  * Add ability to open more than one plug-in UI (#575)
    — you can finally have multiple plug-in windows laying around while playing. Very useful for live performances;
  * improved floating legends in Action Editor (#655)
    — we added some cute floating legends that stick on top of each Action Editor widget, making it easier to edit actions in the right place;
  * huge optimizations to the audio rendering process;
  * Windows: store configuration file in AppData directory
    — to allow better integration with the environment (#299);
  * Windows: fix missing .dll file on startup (#661);
  * many more usability improvements and smaller optimizations.

-------------------------------------------------------------------
Tue Sep 19 20:28:07 UTC 2023 - Lubos Kocman <lubos.kocman@suse.com>

- Correction of license based on legaldb review 

-------------------------------------------------------------------
Sat Aug 05 08:36:57 UTC 2023 - Edgar Aichinger edogawa@aon.at

- remove 002-fix-include-cstdint.patch (now upstream)
- Update to version 0.25.1:

  * Update changelog
  * Include <cstdint> for uint32_t
  * DRY geTabAudio
  * Better samplerate selection in dropdown menu if device has no samplerate (e.g. JACK)
  * Show 'none' in channel's dropdown menu if device has no channels (e.g. JACK)
  * Use geChoice::showFirstItem() in place of geChoice::showItem(0) in geTabAudio
  * New method geChoice::showFirstItem()
  * Show MIDI map path in drop down menu only if available and found
  * Store actual MIDI map path (std::string) into c::MidiData struct
  * Show MIDI in/out ports in drop down menu only if they are available

-------------------------------------------------------------------
Sun Jun 18 19:53:34 UTC 2023 - Edgar Aichinger <edogawa@aon.at>

- remove 001-Fix-build-with-fmt-9-GCC-12.patch (now upstream)
- update to 0.25.0

  * Ability to change audio and MIDI engines on the fly — no need to restart
    Giada anymore when the audio and/or MIDI devices change. No need to restart
    also when changing several properties in the Configuration Window;
  * Add new "Clear" button next to all MIDI learning widgets to easily clear
    the MIDI binding (#486);
  * Set default resampler quality to "Linear" (the fastest one);
  * Update FLTK to latest commit available;
  * Update JUCE to version 7.0.5;
  * Fix Velocity parameter not being usable in Action Editor;
  * Fix MIDI Channel parameter not being usable in MIDI input configuration;
  * Code refactoring and other architectural improvements.

-------------------------------------------------------------------
Thu Mar 30 07:12:31 UTC 2023 - Konstantin Voinov <kv@kott.no-ip.biz>

- Update patchset:
  * 001-Fix-build-with-fmt-9-GCC-12.patch
  * rename 001-cstdint.patch to 002-fix-include-cstdint.patch
- Switch to tar_scm with disabled mode
- Update to 0.24.0

  * Revamped MIDI sync Clock support
  * MIDI engine refactoring, featuring multi-threading support
  * UI: Resizable vu-meters
  * UI: New global MIDI activity leds
  * More core classes and functions refactoring
  * More robust persistence mechanism for project and configuration files
  * Add new tests suites for MidiEvent and ChannelFactory
  * Set C++ version to C++20
  * Update FLTK to latest commit available

-------------------------------------------------------------------
Wed Mar 29 07:11:15 UTC 2023 - Edgar Aichinger <edogawa@aon.at>

- add 001-cstdint.patch to fix TW build (gcc13)
- remove tarball from package sources (generated at buildtime)

-------------------------------------------------------------------
Thu Dec 15 13:16:54 UTC 2022 - Edgar Aichinger <edogawa@aon.at>

- update to version 0.23.2
  * 2nd bugfix release for version 0.23 Catoblepas

-------------------------------------------------------------------
Mon Sep 19 09:34:22 UTC 2022 - Edgar Aichinger <edogawa@aon.at>

- remove giada-gcc12.patch and giada-findFLTK.patch (obsolete by upstream changes)

-------------------------------------------------------------
Sun Sep 18 02:18:23 UTC 2022 - Konstantin Voinov <kv@kott.no-ip.biz>

- add 003-cmake-exclude-juce-from-all.patch to avoid juce stuff install 
- disable giada-gcc12.patch (now upstream)

-------------------------------------------------------------------
Sat Sep 17 11:38:10 UTC 2022 - Edgar Aichinger <edogawa@aon.at>

- Update to version 0.23.0

-------------------------------------------------------------------
Sun May 29 08:45:50 UTC 2022 - Luigi Baldoni <aloisio@gmx.com>

- Add giada-gcc12.patch to fix Factory build

-------------------------------------------------------------------
Tue May 24 13:18:45 UTC 2022 - Edgar Aichinger <edogawa@aon.at>

- workaround for gcc12 build failure in TW:
    temporarily use gcc11 until upstream fix will be available

-------------------------------------------------------------------
Wed Mar 16 09:07:47 UTC 2022 - Edgar Aichinger <edogawa@aon.at>

- Update to version 0.21.0+git, switch to obs_scm service
- add giada-findFLTK.patch
- enable VST3 support

-------------------------------------------------------------------
Wed Jan  1 21:01:31 UTC 2020 - Luigi Baldoni <aloisio@gmx.com>

- Update to version 0.16.0
  * Fix columns' resizer bar height on verical window resize
  * Fix crash on MIDI learn global commands
  * Fix wrong channel routing when triggering MIDI learnt
    commands
  * Fix rewind button not rewinding sample channels in LOOP_*
    mode
  * Use actual buffer size from KernelAudio when loading
    channels from a patch
  * Remove FLTK multithreading initialization
  * Remove all pthread.h leftovers
  * Fix memory corruption on Keyboard refresh
  * Fix wave size corruption while editing samples in Sample
    Editor
  * Fix freeze when cloning a Sample Channel with a sample in it
  * Fix buffer overflow when playing an edited sample
  * Fix crash when loading a project with missing plug-ins
  * Fix freeze when pressing 'play' during an audio recording
    session
  * Fix play/ending UI status of MIDI channels
  * Fix plug-in sorting on reload
  * Fix crash when reloading a sample in the Sample Editor
  * Fix messy 'R' button status when toggled
  * Fix missing icons and broken checkboxes
  * Optimize model updates on keyboard interaction
  * Always read Columns data from patch files
  * Show missing (and removable) plug-ins in Plug-in Window list
  * Create default empty columns on 'Reset to initial state'
  * Save relative Wave paths in project files
  * New internal engine<->UI architecture
  * New persistence layer
  * New MIDI queue for incoming live MIDI messages
  * Switch to std::thread
  * Absolute #include paths in source code
  * Removed Boost parameter from Sample Channel

-------------------------------------------------------------------
Mon Apr 22 12:26:40 UTC 2019 - Luigi Baldoni <aloisio@gmx.com>

- Update to version 0.15.4
  * New record-on-signal option for input and action recording
  * Initial support for plug-ins with mono I/O buses
  * PluginHost refactoring
  * Smart pointers for Wave and Plugin objects
  * Remove old and deprecated input delay compensation
  * Optimized audio IO processing in Mixer callback
  * Atomic I/O meters with improved accuracy
  * Fix memory leak when replacing samples in a Sample Channel
  * Fix plug-ins ordering method when re-opening Giada
  * Fix silent Sample Channel when recording actions a second
    time
  * Fix velocity always discarded when sending key-press to
    Sample Channel
  * Fix inability to record actions with quantizer enabled
  version 0.15.3:
  * Action recorder refactoring
  * Optional midimap parameters (thank you @tomek-szczesny)
  * Support for "inaudible" MIDI lightning events (thank you
    @tomek-szczesny)
  * Build AppImage for Linux on Travis CI instance
  * Huge optimization of the AppImage binary file
  * Fix Action Editor repaint on min/max zoom levels
  * "Resize recording" flag has been removed
  * Change text labels for channel operations
  * Smarter column assignment while loading a patch/project
  * Fix wrong resizer bar width between Action Editor widgets
    when zooming
  * Can't display custom channel name in Sample Channel (fixed)
  * Fix crash when cloning Sample Channel with audio data in it
  * Clone channel doesn't clone channel name (fix #219)
  version 0.15.2:
  * New sample-accurate Action Editor
  * New MIDI Velocity Editor widget
  * Ability to move MIDI events vertically in piano roll (i.e.
    change note)
  * Remove mute action recording
  * Better handling of MIDI devices that send NOTEON + velocity
    0 as NOTEOFF
  * Avoid calls to deprecated JUCE plug-ins methods
  * Removed useless pthreadGC2.dll from Windows package
  * Can't kill MIDI channels (fix #197)
  * Can't record MIDI actions (fix #202)
  * Fix missing first beat on metronome rendering
  * Fix crash on opening plug-in window on macOS
  version 0.15.1:
  * Deep code refactoring, featuring Channels processors
  * Many new unit tests added
  * Simplify mutex mechanism
  * Fix wrong quantizer value on patch/project load
  * Remove the old, buggy and glitchy internal crossfade
    algorithm
  * Fix many potential plug-in crashes on Linux
  * Properly close plug-in window on plug-in removal
  * Improve BPM changes while running as JACK client

- Drop giada-gcc48.patch (no longer useful)

-------------------------------------------------------------------
Sat Apr 21 16:33:19 UTC 2018 - jengelh@inai.de

- Ensure neutrality of description.

-------------------------------------------------------------------
Thu Apr 19 12:38:59 UTC 2018 - aloisio@gmx.com

- Update to version 0.15.0
  * Refactor audio engine into frame-based processing
  * Refactor channels readers/writers into channelManager namespace
  * Smarter Solo algorithm
  * Fix missing .wav extension on recorded audio takes
  * Fix wrong Channel status update after 'Clear all actions'
  version 0.14.6
  * MIDI velocity drives volume for one-shot sample channels
  * FLAC and Ogg support
  * Ability to use system-provided Catch library (GitHub #151)
  * Update Catch to version 2
  * Fix unreadable tabs title in Configuration Window (GitHub #168)
  * Fix crash on opening About window
  * Fix 'read actions' button behavior during ending and waiting statuses
  version 0.14.5
  * Support for multiple plug-in directories
  * New directory browser for adding plug-in directories
  * Update plug-in's parameters on program change in plug-in's window
  * Improved MIDI action management in Piano Roll
  * Simplified conditional rules in Makefile.am 
  * Fix crash on MIDI learn for plug-in parameters
  * Fix crash in MIDI input window if MIDI in params are 0
  * Fix unwanted new action when dragging piano items in Piano Roll
  * Fix crash while recording on existing project (GitHub #161) 

- Dropped giada.patch (no longer necessary)

- Added giada-gcc48.patch

- Spec cleanup

-------------------------------------------------------------------
Fri Oct 27 22:13:26 UTC 2017 - avvissu@yandex.by

- Update to 0.14.4:
  * see: /usr/share/doc/packages/giada/ChangeLog

-------------------------------------------------------------------
Fri Oct  6 05:02:20 UTC 2017 - avvissu@yandex.by

- Update to 0.14.3:
  * see: /usr/share/doc/packages/giada/ChangeLog

-------------------------------------------------------------------
Tue Aug 29 08:47:39 UTC 2017 - avvissu@yandex.by

- Update to 0.14.2:
  * see: /usr/share/doc/packages/giada/ChangeLog 

-------------------------------------------------------------------
Fri Jul 21 23:04:27 UTC 2017 - avvissu@yandex.by

- Update to 0.14.1:
  * see: /usr/share/doc/packages/giada/ChangeLog 

-------------------------------------------------------------------
Thu May 25 20:11:53 UTC 2017 - avvissu@yandex.by

- Update to 0.13.4:
  * see: /usr/share/doc/packages/giada/ChangeLog 

-------------------------------------------------------------------
Sat Oct 22 17:04:01 UTC 2016 - avvissu@yandex.by

- Update to 0.13.0:
  * see: /usr/share/doc/packages/giada/ChangeLog
- Fix compilation errors on GCC 6

-------------------------------------------------------------------
Fri Jun 17 16:18:33 UTC 2016 - avvissu@yandex.by

- Update to 0.12.2:
  * see: /usr/share/doc/packages/giada/ChangeLog
- Fix build on openSUSE > 13.2 (use a supported version of GCC)

-------------------------------------------------------------------
Wed Jan 27 20:23:56 UTC 2016 - avvissu@yandex.ru

- Update to 0.11.2:
  * see: /usr/share/doc/packages/giada/ChangeLog

-------------------------------------------------------------------
Fri Dec 25 15:36:43 UTC 2015 - avvissu@yandex.ru

- Update to 0.11.1:
  * see: /usr/share/doc/packages/giada/ChangeLog

-------------------------------------------------------------------
Sun Dec  6 05:37:16 UTC 2015 - avvissu@yandex.ru

- Update to 0.11.0:
  * see: /usr/share/doc/packages/giada/ChangeLog
- Add BuildRequires: pkgconfig(jansson)

-------------------------------------------------------------------
Wed Oct 21 17:34:52 UTC 2015 - avvissu@yandex.ru

- Update to 0.10.2:
  * see: /usr/share/doc/packages/giada/ChangeLog

-------------------------------------------------------------------
Sat Sep  5 02:20:09 UTC 2015 - avvissu@yandex.ru

- Update to 0.10.1:
  * see: /usr/share/doc/packages/giada/ChangeLog
- Del -Wno-parentheses to build with gcc5 (fixed in upstream)

-------------------------------------------------------------------
Mon Jul 20 21:35:16 UTC 2015 - avvissu@yandex.ru

- Update to 0.10.0:
  * MIDI lightning output
  * other minor fixes

-------------------------------------------------------------------
Thu Jun 25 05:47:57 UTC 2015 - avvissu@yandex.ru

- Update to 0.9.6:
  * see: /usr/share/doc/packages/giada/ChangeLog
- Remove patches:
  * giada-remove_build_timestamps.patch (use sed)
  * giada-add_missing_link_to_Xinerama.patch (fix to upstream)
- Add new package: rtmidi-devel libpulse-devel
- Build with gcc5: disable check:-Wno-parentheses
- Fix files is compiled without RPM_OPT_FLAGS
- Remove giada.desktop: use %%suse_update_desktop_file
- Add %%icon_theme_cache_(post,postun)
- Spec file cleanup

-------------------------------------------------------------------
Tue May 29 21:29:29 UTC 2012 - pascal.bleser@opensuse.org

- update to 0.4.10:
  - Ability to shift up an down VST plugins
  - Enhanced patch/conf architecture
  - Ability to edit a sample while playing
  - Mutex controls in VST processing
  - Lots of security issues fixed while changing pitch dynamically
  - Enhanced sub-window system
  - Several minor bugs fixed

- changes from 0.4.9:
  - No more mandatory inputs
  - Pitch value properly stored inside the patch
  - Several small VST host improvements
  - Enhanced window management
  - Ability to browse files while playing with main GUI (non-modal browser)
  - Improved error checking in KernelAudio
  - Wrong style for lower scrollbar in Browser (fixed)
  - Fixed compilation on 64 bit systems
  - Samplerate no longer hardcoded, auto-detected with JACK
  - Minor internal improvements and bugfixing

-------------------------------------------------------------------
Sat Apr 21 10:31:52 CET 2012 - pascal.bleser@opensuse.org

- initial version (0.4.8)

