<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>c0f1a588db4749f6dc597f3b76c266fd</srcmd5>
    <version>1.11</version>
    <time>1538374766</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.11:
  * Most of its changes are in the implementation of the toolchain,
    runtime, and libraries. As always, the release maintains the
    Go 1 promise of compatibility. We expect almost all Go programs
    to continue to compile and run as before.
  * For more details check: https://golang.org/doc/go1.11
- Use gcc8 instead of gcc7 for Factory/Tumbleweed.
- Update compiler-rt TSAN binary: the precompiled versions of
  LLVM's compiler-rt has updated to commit
  fe2c72c59aa7f4afa45e3f65a5d16a374b6cce26 in go1.11 source.
- Remove patch:
  * fix-sanitizer-build-against-latest-glibc.patch: upstream fixed.
- Add patch:
  * gcc8-go.patch: use gcc8 instead of gcc7 for Factory/Tumbleweed.</comment>
    <requestid>638969</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>561d7365740aed1acb353cd2fb3c3fb7</srcmd5>
    <version>1.11.1</version>
    <time>1539013502</time>
    <user>dimstar_suse</user>
    <comment>* Update to go1.11.1 (released 2018/10/01)
  - includes fixes to the compiler, documentation, go command, runtime,
    and the crypto/x509, encoding/json, go/types, net, net/http and reflect
    packages. 
* cmd/compile:
  - bad walkinrange rewrites on constant above 2**63
  - function compiled without bounds checking and -1 index access
  - missing bounds checks in 1.11
  - panic in cmd/compile/internal/gc.typecheck1
  - race detector detects race with close(chan) and len(chan)
* cmd/go:
  - 'go test -gcflags=all=-l' appears not to disable inlining
  - GOMIPS environment variable does not affect caching of mipsle code
  - TestScript/mod_install_versioned consistently failing on macOS High Sierra
  - build fails when setting linker to lld using ldflags
  - go list -json -compiled -test -e upspin.io/test fails with non-zero exit status
* doc:
   - GOFLAGS environment variable not in 1.11 release notes
   - downloads page claims that Go 1.11 supports unsupported operating systems Documentation
* encoding/json:
   - empty fields in json.UnmarshalTypeError
* go/types:
  - assertion failure setting up composite literal with incomplete element type
  - some facts are missing after an error
* net/http:
  - WASM Roundtripper crash when using &quot;no-cors&quot; mode
* net:
  - LookupTXT bug
  - empty DNS answers should fail fast
  - testSpliceReaderAtEOF closed connection: got err = splice: invalid argument
* reflect:
  - MethodByName().Interface() leads to fatal error: sweep increased allocation count
* runtime:
  - invalid pointer found on stack
  - timeouts in os/signal tests
</comment>
    <requestid>640142</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>15349462e7e8a00356f7454a38dd20b5</srcmd5>
    <version>1.11.2</version>
    <time>1544441142</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>653683</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>8444fc4026855ca5e25b0934ba8c69f1</srcmd5>
    <version>1.11.4</version>
    <time>1545866701</time>
    <user>dimstar_suse</user>
    <comment>(adding boo number no top of the previous sr)
- Make our profile.d/go.sh no longer set GOROOT=, in order to make switching
  between versions no longer break. This ends up removing the need for go.sh
  entirely (because GOPATH is also set automatically). boo#1119634

- go1.11.4 (released 2018/12/14) includes fixes to cgo, the compiler, linker,
  runtime, documentation, go command, and the net/http and go/types packages.
  It includes a fix to a bug introduced in Go 1.11.3 that broke go get for
  import path patterns containing &quot;...&quot; (boo#1119706). See the Go 1.11.4 milestone on our
  issue tracker for details.
  https://github.com/golang/go/issues?q=milestone%3AGo1.11.4+label%3ACherryPickApproved
  * go#29272 misc/cgo/test: issue24161 tests broken on Darwin
  * go#29248 cmd/go: &quot;go get&quot; fails on import path patterns with wildcards (&quot;...&quot;)
  * go#29191 cmd/go: symbolic links not dropped from repo
  * go#29112 cmd/link: too many open files on high object-count dependencies
  * go#28974 cmd/go: need to backport relaxing of go.mod go verb constraints to 1.11 series
  * go#28972 go/types: problem with alias type
  * go#28916 cmd/cgo: nested structure has too much alignment padding
  * go#28799 runtime: fatal error: out of memory on reslice with negative index
  * go#28752 reflect: scanning invalid return slots during a makeFunc call
  * go#28725 cmd/go: panic when argument doesn't match any packages
  * go#28694 cmd/compile: inline multiplication corrupts an argument on arm
  * go#28690 runtime: ThreadSanitizer CHECK failed
  * go#28673 x/net/http2: Transport is leaking streams on broken Body
  * go#28617 cmd/compile: panic during fuse with if true block containing a goto and a return
  * go#28586 cmd/compile: go binaries not working on exynos 64 bit CPUs
  * go#27395 cmd/cgo: typedef pointer arguments regression
  * go#27383 cmd/compile: failure on a function type alias

- Update to Go 1.11.3 (released 2018/12/13). This includes fixes to
  the crypto/x509 and cmd/go packages. See the Go 1.11.3 milestone</comment>
    <requestid>658901</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>c54be7130a028e818ab7ddce4cd74895</srcmd5>
    <version>1.11.5</version>
    <time>1549311839</time>
    <user>coolo</user>
    <comment>go1.11.5 go1.10.8 (released 2019/01/23) security release fixes CVE-2019-6486.
go#29903 crypto/elliptic: CPU DoS vulnerability affecting P-521 and P-384 (forwarded request 668235 from jfkw)</comment>
    <requestid>668241</requestid>
  </revision>
  <revision rev="6" vrev="2">
    <srcmd5>f0c718e8a1e3c554745eb23ce80b9097</srcmd5>
    <version>1.11.5</version>
    <time>1549916197</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>672864</requestid>
  </revision>
  <revision rev="7" vrev="3">
    <srcmd5>edea95e3c607ed63620d3fe9f00306dd</srcmd5>
    <version>1.11.5</version>
    <time>1551468364</time>
    <user>coolo</user>
    <comment>- Fix erroneous trailing backslash in %post script.
- Use better forms of -exec \; in some places.
- go1.11.5 (released 2019/01/23) security release fixes CVE-2019-6486 (bsc#1123013).
  * go#29903 crypto/elliptic: CPU DoS vulnerability affecting P-521 and P-384
- Make our profile.d/go.sh no longer set GOROOT=, in order to make switching
  between versions no longer break. This ends up removing the need for go.sh
  entirely (because GOPATH is also set automatically). boo#1119634
- go1.11.4 (released 2018/12/14) includes fixes to cgo, the compiler, linker,
  runtime, documentation, go command, and the net/http and go/types packages.
  It includes a fix to a bug introduced in Go 1.11.3 that broke go get for
  import path patterns containing &quot;...&quot; (boo#1119706). See the Go 1.11.4 milestone on our
  issue tracker for details.
  https://github.com/golang/go/issues?q=milestone%3AGo1.11.4+label%3ACherryPickApproved
  * go#29272 misc/cgo/test: issue24161 tests broken on Darwin
  * go#29248 cmd/go: &quot;go get&quot; fails on import path patterns with wildcards (&quot;...&quot;)
  * go#29191 cmd/go: symbolic links not dropped from repo
  * go#29112 cmd/link: too many open files on high object-count dependencies
  * go#28974 cmd/go: need to backport relaxing of go.mod go verb constraints to 1.11 series
  * go#28972 go/types: problem with alias type
  * go#28916 cmd/cgo: nested structure has too much alignment padding
  * go#28799 runtime: fatal error: out of memory on reslice with negative index
  * go#28752 reflect: scanning invalid return slots during a makeFunc call
  * go#28725 cmd/go: panic when argument doesn't match any packages
  * go#28694 cmd/compile: inline multiplication corrupts an argument on arm
  * go#28690 runtime: ThreadSanitizer CHECK failed
  * go#28673 x/net/http2: Transport is leaking streams on broken Body
  * go#28617 cmd/compile: panic during fuse with if true block containing a goto and a return
  * go#28586 cmd/compile: go binaries not working on exynos 64 bit CPUs
  * go#27395 cmd/cgo: typedef pointer arguments regression
  * go#27383 cmd/compile: failure on a function type alias
- Update to Go 1.11.3 (released 2018/12/13). This includes fixes to
  the crypto/x509 and cmd/go packages. See the Go 1.11.3 milestone
  on upstream tracker for details:
  https://github.com/golang/go/issues?q=milestone%3AGo1.11.3
  * bsc#1118897 CVE-2018-16873
    go#29230 cmd/go: remote command execution during &quot;go get -u&quot;
  * bsc#1118898 CVE-2018-16874
    go#29231 cmd/go: directory traversal in &quot;go get&quot; via curly braces in import paths
  * bsc#1118899 CVE-2018-16875
    go#29233 crypto/x509: CPU denial of service
  * Upstream is aware of a functionality regression in &quot;go get&quot; when
    executed in GOPATH mode on an import path pattern containing &quot;...&quot;
    (e.g., &quot;go get github.com/golang/pkg/...&quot;), when downloading
    packages not already present in the GOPATH workspace. This is go#29241
    and will be resolved in the next minor patch release go-1.11.4
- Fix build error with PIE linker flags on ppc64le. bsc#1113978 boo#1098017
  * gccgo on ppc64le with default PIE enabled fails with:
    error while loading shared libraries:
    R_PPC64_ADDR16_HA re10143fb0c for symbol `' out of range
  * linuxppc-dev discussion:
    &quot;PIE binaries are no longer mapped below 4 GiB on ppc64le&quot;
    https://lists.ozlabs.org/pipermail/linuxppc-dev/2018-November/180862.html
  * Add for ppc64le only: #!BuildIgnore: gcc-PIE
  * OBS environment defaults to PIE
  * Upstream fix for go buildmode PIE desired, track upstream go#28531
- Remove obsolete patch:
  * armv6l.patch
- Enable %arm build
- Build with go1.4 instead of gccgo for Tumbleweed (fix %arm build)
- Update to go1.11.2 (released 2018/11/02)
  * includes fixes to the compiler, linker, documentation, go command,
    and the database/sql and go/types packages.
- cmd/compile:
  * function argument hiding built-in function results in a compiler crash go#27399
  * go build panics when 'len' keyword was unintentionally shadowed go#27973
- cmd/go:
  * 'go test -coverprofile' emits slash-separated paths on Windows go#27487
  * `go help build` mentions -mod=release, which is not supported go#27398
  * for go mod download, -dir option does not exist go#27498
  * git export-subst causes hash mismatches go#28094
- cmd/trace:
  * SWEEP events' swept/reclaimed bytes info is not emitted go#27717
- database/sql:
  * confusing MaxIdleClosed statistic go#28325
- go/types:
  * embedded interface behavior now dependent on file name ordering go#28249
- misc/wasm:
  * Microsoft Edge 18 (latest) crashes due to TextEncoder not being supported go#27393
- net:
  * io.CopyN fails to copy from file to net.Conn on Windows go#27411
- runtime:
  * wasm: all goroutines asleep and no JavaScript callback pending - deadlock go#27425
- Fix formatting in go1.11.changes
- Update to go1.11.1 (released 2018/10/01)
  * includes fixes to the compiler, documentation, go command, runtime,
    and the crypto/x509, encoding/json, go/types, net, net/http and reflect
    packages.
- cmd/compile:
  * bad walkinrange rewrites on constant above 2**63
  * function compiled without bounds checking and -1 index access
  * missing bounds checks in 1.11
  * panic in cmd/compile/internal/gc.typecheck1
  * race detector detects race with close(chan) and len(chan)
- cmd/go:
  * 'go test -gcflags=all=-l' appears not to disable inlining
  * GOMIPS environment variable does not affect caching of mipsle code
  * TestScript/mod_install_versioned consistently failing on macOS High Sierra
  * build fails when setting linker to lld using ldflags
  * go list -json -compiled -test -e upspin.io/test fails with non-zero exit status
- doc:
  * GOFLAGS environment variable not in 1.11 release notes
  * downloads page claims that Go 1.11 supports unsupported operating systems Documentation
- encoding/json:
  * empty fields in json.UnmarshalTypeError
- go/types:
  * assertion failure setting up composite literal with incomplete element type
  * some facts are missing after an error
- net/http:
  * WASM Roundtripper crash when using &quot;no-cors&quot; mode
- net:
  * LookupTXT bug
  * empty DNS answers should fail fast
  * testSpliceReaderAtEOF closed connection: got err = splice: invalid argument
- reflect:
  * MethodByName().Interface() leads to fatal error: sweep increased allocation count
- runtime:
  * invalid pointer found on stack
  * timeouts in os/signal tests
- Update to version 1.11:
  * Most of its changes are in the implementation of the toolchain,
    runtime, and libraries. As always, the release maintains the
    Go 1 promise of compatibility. We expect almost all Go programs
    to continue to compile and run as before.
  * For more details check: https://golang.org/doc/go1.11
- Use gcc8 instead of gcc7 for Factory/Tumbleweed.
- Update compiler-rt TSAN binary: the precompiled versions of
  LLVM's compiler-rt has updated to commit
  fe2c72c59aa7f4afa45e3f65a5d16a374b6cce26 in go1.11 source.
- Remove patch:
  * fix-sanitizer-build-against-latest-glibc.patch: upstream fixed.
- Add patch:
  * gcc8-go.patch: use gcc8 instead of gcc7 for Factory/Tumbleweed.
- Update to version 1.10.4:
  * go1.10.4 (released 2018/08/24) includes fixes to the go command,
    linker, and the net/http, mime/multipart, ld/macho, bytes, and
    strings packages. See the Go 1.10.4 milestone on our issue
    tracker for details.
- Update to version1.10.3:
  * go1.10.3 (released 2018/06/05) includes fixes to the go command,
    and the crypto/tls, crypto/x509, and strings packages. In particular,
    it adds minimal support to the go command for the vgo transition.
    See the Go 1.10.3 milestone on our issue tracker for details.
- Update to version 1.10.2:
  * includes fixes to the compiler, linker, and go command.
- Changes in version 1.10.1:
  * includes fixes to the compiler, runtime, and the archive/zip,
    crypto/tls, crypto/x509, encoding/json, net, net/http, and net/http/pprof packages.
- Removed
  * go-1.5-install-dont-reinstall-stdlibs.patch: patch no longer needed.
- Changed
  * gcc7-go.patch: go1.10 source code changed, patch is no longer applies.
- Update to go1.10:
  * Most of its changes are in the implementation of the toolchain, runtime, and
    libraries. As always, the release maintains the Go 1 promise of compatibility.
    We expect almost all Go programs to continue to compile and run as before.
  * This release improves caching of built packages, adds caching of successful
    test results, runs vet automatically during tests, and permits passing
    string values directly between Go and C using cgo. A new compiler option
    whitelist may cause unexpected invalid flag errors in code that built
    successfully with older releases.
  * For more details check: https://golang.org/doc/go1.10
- Removed the following patches:
  * verbose-build.patch: build system changed, patch is no longer applies
  * go-1.5-install-dont-reinstall-stdlibs.patch: patch no longer needed
- Ensure go binaries are not stripped (eg: go tools trace), this cause
  some of them to misbehave
- Ensure go trace html template is shipped as part of the installation,
  otherwise the web UI won't work
- Fix license of go race
- update to go1.9.4
 * go1.9.2 (released 2017/10/25) includes fixes to the compiler,
   linker, runtime, documentation, go command, and the crypto/x509,
   database/sql, log, and net/smtp packages. It includes a fix to a bug
   introduced in Go 1.9.1 that broke go get of non-Git repositories
   under certain conditions.
 * go1.9.3 (released 2018/01/22) includes fixes to the compiler, runtime,
   and the database/sql, math/big, net/http, and net/url packages.
 * go1.9.4 (released 2018/02/07) includes a security fix to “go get”:
  CVE-2018-6574 (bsc#1080006)
- fix bsc#1082409: Review dependencies (requires, recommends and supports)
- Rename package to go1.9
- Update to go1.9.2
  go1.9.2 (released 2017/10/25) includes fixes to the compiler,
  linker, runtime, documentation, go command, and the crypto/x509,
  database/sql, log, and net/smtp packages. It includes a fix to a
  bug introduced in Go 1.9.1 that broke go get of non-Git
  repositories under certain conditions. See the Go 1.9.2 milestone
  on our issue tracker for details.
- Install $GOROOT/lib packages, to include upstream files such as the timezone
  database. bsc#1064522
- Update to go1.9.1
  go1.9.1 (released 2017/10/04) includes two security fixes. See
  the Go 1.9.1 milestone on our issue tracker for details.
  Fixes included:
  * net/smtp: fix PlainAuth to refuse to send passwords to non-TLS
    servers (CVE-2017-15042, bsc#1062087)
  * cmd/go: arbitrary code execution during “go get” or “go get -d”
    (CVE-2017-15041, bsc#1062085)
- Update to go1.9
  There are two changes to the language: adding support for type aliases and
  defining when implementations may fuse floating point operations. Most of the
  changes are in the implementation of the toolchain, runtime, and libraries. As
  always, the release maintains the Go 1 promise of compatibility. We expect
  almost all Go programs to continue to compile and run as before.
  The release adds transparent monotonic time support, parallelizes compilation
  of functions within a package, better supports test helper functions, includes
  a new bit manipulation package, and has a new concurrent map type.
  Remove patches:
    - fix_certificates_lookup.patch
    - runtime-bump-MaxGomaxprocs.patch
- Fixed incorrectly ghosted files
- add fix-sanitizer-build-against-latest-glibc.patch which fixes
  the sanitizer built against certain glibc versions
- go-race: add compiler-rt TSAN binary, necessary for the race detector builds
  to work. This requires building compiler-rt from source (becuase upstream Go
  stores precompiled binaries in the tree, and we cannot use them). In
  addition, a %check was added purely to ensure that we don't install the wrong
  version of compiler-rt. boo#1052528
- go-rpmlintrc: add some entries to address the .syso additions.
- Remove ruby requirement. golang-macros are not ruby anymore, plus
  this requirement should have been in the golang-packaging package
- Simplify all the &quot;ifdef suse_version&quot; by removing versions which
  have reach eol (13.* 42.1 sle11*)
- Add gcc6-go.patch for sle12 and leap42.x and use binutils-gold
  except for s390x/s390
  Remove gcc5-go.patch cause we use gcc6 for sle12 and leap42.x and
  gcc7 for newer versions (factory)
- build with binutils-gold on aarch64, which is hardcoded to
 be used for shared linking due to bugs in BFD binutils
- Build with gcc-7 on Tumbleweed
  + Add gcc7-go.patch
- Minor update to go1.8.3
  Fixes included:
  * go1.8.2 (released 2017/05/23) includes a security fix to the
    crypto/elliptic package (CVE-2017-8932, bsc#1040618).
  * go1.8.3 (released 2017/05/24) includes fixes to the compiler, runtime,
    documentation, and the database/sql package.
- Enable gccgo with gcc-6 for SLE12
- fix update-alternatives usage. This way, we can either use go1.7 or
  go 1.8 without having to change the docker spec file or any other
  package that requires go 1.7 but it will require go 1.8 in the
  future.
- Update to go1.8.1
  Most of its changes are in the implementation of the toolchain, runtime, and
  libraries. There are two minor changes to the language specification. As
  always, the release maintains the Go 1 promise of compatibility. We expect
  almost all Go programs to continue to compile and run as before.
  The release adds support for 32-bit MIPS, updates the compiler back end to
  generate more efficient code, reduces GC pauses by eliminating stop-the-world
  stack rescanning, adds HTTP/2 Push support, adds HTTP graceful shutdown, adds
  more context support, enables profiling mutexes, and simplifies sorting
  slices.
  more at: https://golang.org/doc/go1.8
  Update patches:
    - allow-binary-only-packages.patch
    - gcc5-go.patch
    - gcc6-go.patch
- Remove mercurial build dependency. Mercurial is a version control
  system, like git. We are not using this in the build service to
  get the sources.
- Do not set GOBIN. If GOBIN is unset, by default go assumes GOPATH/bin.
  This way, the user can change GOPATH without the need to change GOBIN.
  fix bsc#1026658
- minor update to go1.7.5 because this is required by
  docker-v17.04.00-ce (bsc#1034053)
  fixes included:
  * go1.7.1 (released 2016/09/07) includes fixes to the compiler, runtime,
    documentation, and the compress/flate, hash/crc32, io, net, net/http,
    path/filepath, reflect, and syscall packages.
    See the Go 1.7.1 milestone on our issue tracker for details:
      https://github.com/golang/go/issues?q=milestone%3AGo1.7.1
  * go1.7.2 was not released. No changelog.
  * go1.7.3 (released 2016/10/19) includes fixes to the compiler, runtime,
    and the crypto/cipher, crypto/tls, net/http, and strings packages.
    See the Go 1.7.3 milestone on our issue tracker for details:
      https://github.com/golang/go/issues?q=milestone%3AGo1.7.3
  * go1.7.4 (released 2016/12/01) includes two security fixes.
    See the Go 1.7.4 milestone on our issue tracker for details:
      https://github.com/golang/go/issues?q=milestone%3AGo1.7.4
  * go1.7.5 (released 2017/01/26) includes fixes to the compiler, runtime,
    and the crypto/x509 and time packages.
    See the Go 1.7.5 milestone on our issue tracker for details:
      https://github.com/golang/go/issues?q=milestone%3AGo1.7.5
- Add a patch to bump _MaxGomaxprocs so that things like Docker and k8s can run
  properly on NUMA machines. Don't bump this number too high. bsc#1028865
  + runtime-bump-MaxGomaxprocs.patch
- set libdir for s390x in go.sh
- define go_arch to s390x
- Added s390x to the list of architectures that get built.
- Disable stripping to fix __.PKGDEF issues. bsc#964546
  There is an upstream issue about it as well, with a patch which will
  hopefully make Go more resilient to this issue.
                   https://github.com/golang/go/issues/17890
- Make sure we build go using gcc-go in Factory cause there is no go1.4
- update to go1.7.0 (bsc#996303)
  Most of its changes are in the implementation of the toolchain,
  runtime, and libraries. There is one minor change to the language
  specification.
  The release adds a port to IBM LinuxOne; updates the x86-64 compiler
  back end to generate more efficient code; includes the context package,
  promoted from the x/net subrepository and now used in the standard
  library; and adds support in the testing package for creating
  hierarchies of tests and benchmarks. The release also finalizes
  the vendoring support started in Go 1.5, making it a standard feature.
  more at: https://golang.org/doc/go1.7
  Review patches:
    - armv6l.patch
    - fix_certificates_lookup.patch,
    - go-1.5-install-dont-reinstall-stdlibs.patch
    - gcc5-go.patch
- Reverting to use gcc-go instead of go1.4 for Factory and Leap
  The fallback boostrap method via go1.4 does not work for Factory because
  of a known bug with binutils 2.27 https://github.com/golang/go/issues/16906.
  Leap will work but we don't have go1.4 in there.
- update to gcc6-go for Factory
- add gcc6-go.patch for Factory
- build with gcc-go for aarch64, ppc64le and ppc64, but for x86_64
  always use go1.4, as it should be according to
  https://golang.org/doc/install/source#go14
- build ppc64le with gcc-go
- fix source location for 3rd-party libraries
- CVE-2016-5386.patch: fixes bsc#988487 aka https://httpoxy.org/
- update go go1.6.3 (released 2016/07/17) includes security fixes to the
&lt;code&gt;net/http/cgi&lt;/code&gt; package and &lt;code&gt;net/http&lt;/code&gt; package when used in
a CGI environment. This release also adds support for macOS Sierra.
See the &lt;a href=&quot;https://github.com/golang/go/issues?q=milestone%3AGo1.6.3&quot;&gt;Go
1.6.3 milestone&lt;/a&gt; on our issue tracker for details.
This fixes: bsc#988487 (CVE-2016-5386), so we remove CVE-2016-5386.patch)
- do not set with_shared for ppc64 (BE)
- bootstrap aarch64 even on SLE via gcc5-go
- install shared libraries.
- update version 1.6.2
  * fixes to the compiler, runtime, tools, documentation,
    and the mime/multipart, net/http, and sort packages.
- Enable build for ppc64le on SLE12 (bsc#981432)
- fix bsc#974232: CVE-2016-3959: go: Infinite loop in several big
  integer routines
- Update to version 1.6 (bsc#977394)
  * On Linux on little-endian 64-bit PowerPC (linux/ppc64le), Go 1.6 now supports cgo with external linking and is roughly feature complete.
  * Vendoring support
  * HTTP2 transparent support
  * fix gc and gccgo incompatibility regarding embedded unexported struct types containing exported fields
  * Linux on 64-bit MIPS and Android on 32-bit x86
  * enforced rules for sharing Go pointers with C
  * new mechanism for template reuse
  * performance improvements
  ... and more!
   see more in https://tip.golang.org/doc/go1.6
- fix bsc#974232 CVE-2016-3959: go: Infinite loop in several big
  integer routines
- Update to version 1.5.3 (bnc#968949):
  * CVE-2015-8618: go: Carry propagation in Int.Exp Montgomery code in
    math/big library (bnc#960151)
- macro.go and golang-macros.rb moved to golang-packaging
- macro.go:
  * added golang-macros.rb to deal with complicated macros
    that are hard to be written in shell script
  * support &quot;--with-buildid&quot; which is the former ugly
    &quot;WITH_FAKE_BUILDID&quot; environment variable hack
  * support &quot;--shared&quot; which is &quot;-buildmode=shared -linkshared&quot;
    in case anyone need it
  * add go_api_ver macro which is currently 1.5
- install shared stdlib on x86_64
- drop go-wiki-gadget.xml: it hasn't been used from the beginning
- add go.gdbinit for debug friendly
- Updated to 1.5.2:
	This release includes bug fixes to the compiler,
    linker, and the mime/multipart, net, and runtime packages.
    https://golang.org/doc/devel/release.html#go1.5.minor
- Updated to 1.5.1
 	This release includes bug fixes to the go command,
    the compiler, assembler, and the fmt, net/textproto,
    net/http, and runtime packages.
    https://golang.org/doc/devel/release.html#go1.5.minor
- Adapt to Leap
  * use gcc5-go than go1.4 is the proper requirement for Leap
- go.sh, macros.go, go.spec: add missing bits for aarch64
- enable build for aarch64
- rediff armv6l.patch
- enable ppc64 and ppc64le
- update to version 1.5
  * see https://golang.org/doc/go1.5
- add: go-1.5-build-dont-reinstall-stdlibs.patch
  drop: go-build-dont-reinstall-stdlibs.patch
  * refresh patch
- add: go-1.5-install-dont-reinstall-stdlibs.patch
  drop: go-install-dont-reinstall-stdlibs.patch
  * refresh patch
- drop: go-1.4.2-rel.plt-alignment.patch
  * fix by upstream
- add gcc5-go.patch
  * find /usr/bin/go-5 when bootstrapping with gcc5-go
- use update-alternatives for /usr/bin/go and profiles.d
  so it can be co-installed with go1.4
- fix update from 1.3.3
  Update from 1.3.3 was broken in this commit
  https://build.opensuse.org/package/rdiff/devel:languages:go/go?linkrev=base&amp;rev=205
  That commit fixed a dangling symlink in src (src/pkg) by instead
  symlinking src, which broke compatibility.
  This commit fixes it by, instead, symlinking all the files in src.
- macros.go: fix missing quotes in %goinstall (bsc#939067)
- macros.go: fix &quot;summary-not-capitalized&quot;
- macros.go:
  * *-doc can't properly describe what the sub-package really is,
    and they're mostly source codes instead of the claimed &quot;API,
    documentation, and examples&quot;. so rename to *-source. and not
    recommend to install them to save users' disk space.
  * %%go_requires should be handled automatically by golang-packaging
  * not recommend to install source package any more,
    so %%go_recommmends set to nil.
- macros.go:
  * add a &quot;WITH_FAKE_BUILDID&quot; option to enable the fake build ID
    compution.
  * to fake build ID, you have to make sure your package has only
    one binary. it is nonsense that two or more nonidentical
    binaries have the same build ID.
- enable debuginfo
  * the strip workaround (boo#818502) does not need any more
  * re-enable debug_packge/debug_install_post macros
- add patch: go-1.4.2-rel.plt-alignment.patch
  * cmd/ld: set alignment for the .rel.plt section on 32-bit architectures
  * https://github.com/golang/go/issues/9802
  * or i586 build will fail at extracting debuginfo
- macros.go:
  * re-enable debug_packge/debug_install_post macros from goprep()
  * add ldflags to gobuild() to compute BUILD ID for debuginfo package
- go itself doesn't support BUILD ID yet
- Remove fix_certificates_lookup_on_sles11.patch: this is superseded
  by fix_certificates.patch
- Add fix_certificates_lookup.patch: force Go to look for certificates only
  in the locations available on openSUSE and SLE. Also ensure certificates
  are found on SLE11 (previous fix_certificates_lookup_on_sles11.patch)
- Add fix_certificates_lookup_on_sles11.patch: this patch is required
  to have Go programs read the system certificates on SLE11.
  See issue https://github.com/golang/go/issues/6391
- Fix building of all the Go packages under devel:languages:go. The
  %goprep macro contained some unescaped lines, causing go install to
  attempt the installation of the build artifacts outside of the
  buildroot.
- disable debuginfo/debug package creation on all golang packages
  * .a files in golang doesn't contain debuginfo right now,
    so extract a debug package will cause
    &quot;Failed to write file: invalid section alignment&quot;
    and we don't need to bother stripping them.
  * we can't depend on good luck for all golang packages, hoping
    they'll pass the build and not randomly fail.
- remove &quot;go_disable_brp_strip_static_archive&quot; macro from macros.go,
  which contains redefinition of os_install_post too.
- disable debug package generation for all architectures, because:
  * build IDs are not generated at all, even for successful builds
  * &quot;Failed to write file: invalid section alignment&quot; on arm/i586.
- remove redefinition of os_install_post macro, which was used to
  override brp-strip-static-archive that has been manually removed
  from openSUSE distribution since 2011.05.
- This might fix i586 builds for openSUSE:Factory:
  * Too many levels of recursion in macro expansion
  * Failed to write file: invalid section alignment
- Added Obsoletes for go-vim/emacs, they went to separate projects
- Fix dangling-symlink /usr/lib64/go/src/pkg /usr/share/go/src/pkg
- allow-binary-only-packages.patch: Revert missed patch and update for 1.4
- Updated to 1.4.2:
  Support of editors has been dropped
- Updated to 1.3.3: includes further bug fixes to cgo, the runtime package,s
  and the nacl port.
- Changes associated with release 1.3.2: includes bug fixes to cgo and the
  crypto/tls packages. See the change history for details (bnc#898901 -
  CVE-2014-7189).
- avoid stripping debuginfo on arm, it fails (and is not necessary)
- add armv6l.patch
  * workaround for qemu-arm bug
  * under qemu on armv6 the number of unix signals isn't 64 but 63.
    thus there is an off-by-one error while building and testing.
    this fix now reduces the constant defining the number of signals
    by 1, but that of course means signal handling won't be 100%
    correct.
  * https://groups.google.com/forum/#!topic/golang-nuts/MqKTX_XIOKE
- Revert the /usr/share/go/contrib symlink as it caused problems
  during update. Moved all go sources to /usr/share/go/contrib/src
  instead of /usr/share/go/contrib/src/pkg and created pkg and src
  symlinks in contrib to add it to GOPATH
- Fixed %go_contribsrcdir value
- Copy temporary macros.go as go.macros to avoid it to be built
- Do not modify Source: files, because that makes the .src.rpm
  being tied to one specific arch.
- Removed extra src folder in /usr/share/go/contrib: the goal is to
  transform this folder into a proper entry for GOPATH. This folder
  is now linked to %{_libdir}/go/contrib
- go requires gcc to build sources using cgo
- tools-packaging.patch: Allow building cover and vet tools in
  $GOROOT_TARGET/pkg/tool instead of $GOROOT/pkg/tool. This will
  allow building go tools as a separate package
- add new macro godoc_package &amp; go_recommends to easy packaging
- Update to version 1.3.1:
  - bug fixes to the compiler and the runtime, net, and crypto/rsa packages
- Fix download url.
- Rename rpmlintrc to %{name}-rpmlintrc.
  Follow the packaging guidelines.
- Update to version 1.3:
  see http://golang.org/doc/go1.3
- refreshed patches to apply cleanly again:
  - go-build-dont-reinstall-stdlibs.patch
  - verbose-build.patch
- Update to version 1.2:
  + No real changes since RC2
- Add %go_tooldir macro and create the tools directory in %goprep
- Update to version 1.2rc2:
  + New packages: encoding, image/color/palette
  + Performance improvements
  + Three-index slices
  + godoc and vet commands moved to go-go.tools package
    * Removed godoc-path-locations.patch and godoc.service
  + Check golang.org/doc/go1.2 for a full list of changes
- Fix go_ver macro to provide the version number again
- Fix Factory i586 build failure by stripping binaries earlier.
- Rework %go_prep again, use &quot;shopt -s dotglob&quot; to catch hidden files
- Change %go_requires to &quot;Require: go &gt;= %go_ver&quot; instead of
  &quot;Require: go-devel = %go_ver&quot;. Go follows a stable release policy which
  means patch-level updates are (supposed to be) compatible.
- Update to version 1.1.2:
  + includes fixes to the gc compiler and cgo, and the bufio, runtime, syscall,
    and time packages. See the change history for details. If you use package
    syscall's Getrlimit and Setrlimit functions under Linux on the ARM or 386
    architectures, please note change 55ac276af5a7 that fixes issue 5949.
- Fix %go_prep again: Also move hidden files (.$BLA)
- Also set ExclusiveArch in %go_requires macro. Allows to drop
  %go_exclusivearch again
- Fix %go_prep macro: Find directories in %_builddir based on Go
  package name prefix (not exact match).
- Fix URL
- Add %go_exclusivearch macro. It's better to only specify ExclusiveArch
  in the &quot;go&quot; package instead of all Go packages. Avoids errors once
  Go becomes available on more architectures
- Fix godoc path locations patch
- Update to Go 1.1.1
- cmd/gc: compute initialization order for top-level blank vars
- cmd/gc: save local var list before inlining
- cmd/gc: fix missing slice/array types in export data.
- runtime: fix heap corruption during GC
- runtime: zeroize g-&gt;fnstart to not prevent GC of the closure.
- cmd/gc: repair make(T) in export data for inlining.i
- runtime: fix GC scanning of slices
- cmd/gc: do not corrupt init() with initializers of _ in closures.
- runtime: introduce cnewarray() to simplify allocation of typed
  arrays.
- Package changes
  - macros.go: update go version macro to cut trailing characters
    added by new style of &quot;go version&quot; identifier string
  - Update openSUSE specific patches to cleanly apply against Go 1.1
- Update package source and version to Go 1.1
- Full release notes for Go 1.1 can be found online here:
  http://golang.org/doc/go1.1
- There are too many bug fixes to list individually; details of all
  bugs fixed can be found on the issue tracker tagged with Go1.1
  http://code.google.com/p/go/issues/list?can=1&amp;q=label%3AGo1.1
- Language changes which may affect your existing programmes
  - Integer division by zero: http://golang.org/doc/go1.1#divzero
  - Surrogates in unicode literals: http://golang.org/doc/go1.1#unicode_literals
  - Method values: http://golang.org/doc/go1.1#method_values
  - Return requirements: http://golang.org/doc/go1.1#return
- The majority of improvements in this release are performance related
  with optimizations in the compiler and linker, garbage collection,
  goroutine scheduler, map/hashmap implementation and numerous speedups
  in the standard library. Please see the full release notes for details.
- One noteworthy addition to the toolchain is the addition of a race
  detector. This should help improve the memory safety and accuracy of
  your concurrent Go programmes. Race detection versions of the standard
  library are included in this package update. You can find instructions
  for building librarys and programmes with race detection in the manual:
  http://golang.org/doc/articles/race_detector.html
- Drop the go-kate package, the syntax is already shipped with
  libktexteditor package
- Remove misc documentation. It doesn't contain anything really useful
  and several files are found in other (sub-)packages (bnc#788344)
- Update to version 1.0.3:
  - Improved documentation
  - List of fixed issues:
    https://groups.google.com/forum/#!topic/golang-nuts/co3SvXbGrNk
  - More details can be found on this full list of changes:
    http://code.google.com/p/go/source/list?name=release-branch.go1
- Removed:
  - opensuse-vim.patch, merged upstream
  - Fix for bnc#686557, offending pdf was removed upstream
- BNC#776058
	- Add new patch to prevent the go install tool trying to reinstall
	  std library packages that are dependencies of third party packages.
	- Using touch on the precompiled archives introdoces additional
	  problems with the go install tool. Instead, we simply don't mark
	  std library files as stale when a third party package is evaluated
	  for installation. The behaviour remains unchanged for the root
	  user and while it is inadvisable to manually reinstall standard
	  libraries using the openSUSE packages, we do not disallow it.
- Spec changes
	- Remove redundant requires for ed/bison
	- Minor tweaks for cross distro builds based on FC/Mageia/Mandriva
- Macro changes
	- Tweak the BRP strip macro to work on RHEL based distros
- Add go-wiki xml widget
- BNC#776058
- spec changes, reverse positions of compiled items and package
  source in the %install section. touch compiled package archives
  after source is installed for go-doc, this prevents the go tool
  trying to re-compile/install std libraries.
- Patch vim Godoc and Import plugins.
- Update spec file.
  - Instead of using tarball generated from a repo checkout, switch
    tarball source and use upstream official tarball.
  - Remove dependance on VERSION file, make spec more robust for
    future updates.
- remove unavailable -x verbose flag from go fix macro
- fix some qemu-arm compilation errors by passing -x to go always
- Update to bugfix release 1.0.2
- This fixes two major bugs:
  3695 runtime: computed hash value for struct map key ignores
  some fields
  3573 runtime: use of large map key causes crash
- Additionally, this fixes numerous smaller documentation and code
  fixes, details can be found on this full list of changes:
  http://code.google.com/p/go/source/list?name=release-branch.go1
- Some Fedora_16 build fixes (i.e. added suse macros)
- Fix build time path locations in macros.go for packages that
  depend on other Go packages.
- enable verbose build (fixes compilation for ARM? O_o)
- fix build for ARM
- Update to version 1.0.1
- fix escape analysis bug that could cause memory corruption
- other minor updates see:
  http://code.google.com/p/go/source/list?name=release-branch.go1
- go.spec: remove arch dependent conditionals from %files section
  we don't have to select these anymore.
- spec/go.sh/macros
  change install location of third party libs to $GOROOT/contrib
  add $GOROOT/contrib as the last location in users $GOPATH
- re-add sachape's typo and version check fixes
- Update godoc patch and add contrib src dir
- Add %godoc macro to help with packaging API docs
- Fixed some typos
- Removed checks for outdated SUSE versions
- update profile.d go.sh with $GOBIN for users
- cmd/go - re-enable building from binary only packages
  we are a binary distro and the last minue change to go clean -i
  disabled building from third party binary packages. package management
  will be done via yast/zypper anyway and not go clean.
- change provides to match go release string as per VERSION file
- fix %pre, %post etc godoc service statement
- Export $GOBIN for the %gobuild() macro
- Go version 1
  http://golang.org/doc/go1.html
- Release candidate 2
- Bug fixes and resolved issues
  http://weekly.golang.org/doc/devel/weekly.html#2012-03-22
- No language changes
- Initial Go 1 beta offering
- Many bug fixes and resolved issues
  http://weekly.golang.org/doc/devel/weekly.html#2012-03-13
- Add additional Go vim scripts, tweak goversion macro
- update spec and macro file to provide working requires
- update gotest/gofix macro
- Update godoc &amp; go build patches
- removed dwarf pretty printer patch
- add godoc systemd service file
- Update to weekly.2012-03-04
- Changes to go/build required code refactoring
  see: http://weekly.golang.org/doc/devel/weekly.html#2012-03-04
- Wpdate to weekly.2012-02-22
- Some BC breaks and language changes, too many details to list
  see release announcement:
  http://weekly.golang.org/doc/devel/weekly.html#2012-02-22
- cmd/gc: fix comparison of struct with _ field
  fixes build of go-go-gtk and other packages that use cgo
- Update to tip @ 2012.02017
- sync: say that Cond.Wait can not return spuriously
- runtime: Permit default behaviour of SIGTSTP, SIGTTIN, SIGTTOU
- cmd/gc: correctly typecheck expression lists in returns
- syscall: fix bounds check in Error
- Update to weekly.2012-02-12
  http://weekly.golang.org/doc/devel/weekly.html#2012-02-12
This weekly snapshot includes a re-organization of the Go tools.
Only the go, godoc, and gofmt tools are installed to $GOROOT/bin (or $GOBIN).
The remainder are installed to $GOROOT/bin/tool.
This puts the lesser-used tools (6g, cgo, govet, etc.) outside the user PATH.
Instead these tools may be called through the go tool with 'go tool command'.
For example, to vet hello.go you would type 'go tool vet hello.go'.
Type 'go tool' see the list of available tools.
With the move, some tools were given simpler names:
       6cov    -&gt; cov
       6nm     -&gt; nm
       goapi   -&gt; api
       gofix   -&gt; fix
       gopack  -&gt; pack
       gopprof -&gt; pprof
       govet   -&gt; vet
       goyacc  -&gt; yacc
The os/signal package has been moved to	exp/signal.
A new tool named 'dist'	has been introduced to	handle building the gc
tool chain and to bootstrap the go tool. The old build scripts and make
files have been removed.
Full list of changes and fixes available:
http://weekly.golang.org/doc/devel/weekly.html#2012-02-07
- Satisfy Factory-Auto (only comment out %path, not Patch)
- Update to latest tip
- Now use cmd/dist to build toolchain, build scripts are removed
  build process is now as follows.
  build cmd/dist C based bootstrap tool
    -&gt; compile C based compilers and Go based bootstrap tool
	  -&gt; compile Go based core commands and libraries
- Remove patch that affects, cmd/go/{build,pkg}.go , this command
  is under active development and building against binary installs
  is slated to be included before Go1 release.
- Patch: quick hack to try and get packages building against third
  party libs if they are installed as binary archives without source
- Update some spec file entries for changing $GOROOT layout, mainly
  $GOROOT/bin/go-tools
- Add $GOBIN back for now
- spec tweaks, use default locations for go tooling
  (compilers, linkers, cgo etc all in $GOROOT now)
- remove $GOBIN from /etc/profile.d/go.sh
- Update to weekly.2012-01-27
- renamed the html package to exp/html
- Many fixes:
  - * http://weekly.golang.org/doc/devel/weekly.html#2012-01-27
- Add %goinstall() macro for new go tool
- Update godoc path locations patch
- Update go install patch (fixes building packages with &quot;go install&quot;)
- Update to weekly.2012-01-20
- The image package's Tiled type has been renamed to Repeated.
- The encoding/xml package has been changed to make more idiomatic
  use of struct tags, among other things. If you use the xml package
  please read the change description to see if your code is affected:
		http://code.google.com/p/go/source/detail?r=70e914beb409
- exp/sql package to database/sql
- Package net's SetTimeout methods were changed to SetDeadline.
- Many functions in package os now take a os.FileMode argument instead
  of a plain uint32. An os.ModeSticky constant is also now defined.
- The meaning of the first buffer element for image.YCbCr has changed to
  match the semantics of the other image types like image.RGBA.
- The NewMD5, NewSHA1 and NewSHA256 functions in crypto/hmac have been
  deprecated. Use New instead, explicitly passing the hash function.
- Patch new &quot;go install&quot; to allow -s option
  This prevents rebuild/reinstall of std libs and allows packages
  to be installed into a users $GOPATH
- Update to weekly.2011.12.22
- changes to the images/ycbcr and testing packages
  * &quot;gofix&quot; required for code using images/ycbr
  * Testing package &quot;B&quot; (benchmark) type now has same methods as &quot;T&quot;
- Compiler inlining: Enabled in .spec as &quot;export GCFLAGS=-l&quot;
  * Needs to be explicitly enabled at compile time with the above
    flag or using the &quot;-l&quot; compiler flag
- Initial implementation of 'go' command utility
- Many fixes and updates
  * http://weekly.golang.org/doc/devel/weekly.html#2011-12-22
- fix exclusivearch for %%arm
- fix filelist for %%arm
- Use $GOBIN as install target directory for binaries (Make.cmd)
  regardless of $TARGDIR (Second part of bnc#735320)
- Improve macros %go_make, %go_make_test and %go_make_install:
  * Set TARGDIR and GOBIN all macros (bnc#735320)
  * Make sure %{buildroot}%{_bindir} exists in any case
- The above should simplify spec files for Go packages that use, .e.g.,
  'make tools' to install additional stuff (like binaries)
- Set GOBIN correctly in Make.inc to point to _bindir instead
  of GOROOT/bin (bnc#735288)
- Forgot to update VERSION file
- Update to 05/12/2011 mercurial version:
  * No big changes
- Update to r60.3 + weekly.2011-12-02:
  * crypto/tls: cleanup certificate load on windows
  * exp/ssh: add Std{in,out,err}Pipe methods to Session
  * dashboard: don't choke on weird builder names.
  * exp/ssh: export type signal, now Signal
  * os: add ModeType constant to mask file type bits
  * text/template: replace Add with AddParseTree.
  * go/doc: detect headings and format them in html
- For more see http://golang.org/doc/devel/weekly.html
- Update to r60.3
- Fixes bug in the reflect package
  * disallow Interface method on Value obtained via unexported name
- Update to r60.2
- Fixes memory leak in certain map types
- Tweaks for gdb debugging
- go.spec changes:
  - move %go_arch definition to %prep section
  - pass correct location of go specific gdb pretty printer and
    functions to cpp as HOST_EXTRA_CFLAGS macro
  - install go gdb functions &amp; printer
- gdb-printer.patch
  - patch linker (src/cmd/ld/dwarf.c) to emit correct location of go
    gdb functions and pretty printer
- Add file 'VERSION' which is otherwise generated at runtime to fix
  building
- Update to weekly.2001-09-01 version
  * archive/tar: support symlinks.
  * big: fix nat.scan bug. (thanks Evan Shaw)
  * bufio: handle a &quot;\r\n&quot; that straddles the buffer. add openbsd. avoid
    redundant bss declarations. fix unused parameters. fix windows/amd64
    build with newest mingw-w64.
  * bytes: clarify that NewBuffer is not for beginners.
  * cgo: explain how to free something. fix GoBytes. fixes callback for windows
    amd64. note that CString result must be freed.
  * effective_go: convert to use tmpltohtml.
  * exp/norm: reduced the size of the byte buffer used by reorderBuffer
    by half by reusing space when combining. a few minor fixes to support the
    implementation of norm. added implementation for []byte versions of methods.
  * exp/template/html: add some tests for &quot;&gt;&quot; attributes. added handling for URL
    attributes. differentiate URL-valued attributes (such as href). reworked
    escapeText to recognize attr boundaries.
  * exp/template: moved from exp to the main tree.
  * exp/wingui: made compatible with windows/amd64.
  * flag: add Parsed, restore Usage.
  * gc: add openbsd. escape analysis. fix build on Plan 9. fix div bug. fix
    pc/line table. fix some spurious leaks. make static initialization more
    static. remove JCXZ; add JCXZW, JCXZL, and JCXZQ instructions. shuffle
    #includes. simplify escape analysis recursion.
  * go/ast cleanup: base File/PackageExports on FilterFile/FilterPackage code.
    adjustments to filter function. fix ast.MergePackageFiles to collect infos
    about imports. generalize ast.FilterFile.
  * go/build: add test support &amp; use in gotest. separate test imports out when scanning.
  * go/parser: fix type switch scoping. fix type switch scoping.
  * gob: explain that Debug isn't useful unless it's compiled in.
  * gobuilder: increase log limit.
  * godashboard: fix utf-8 in user names.
  * godoc: first step towards reducing index size. add dummy playground.js to
    silence godoc warning at start-up. added systematic throttling to indexing
    goroutine. fix bug in zip.go. support for reading/writing (splitted) index
    files. use virtual file system when generating package synopses.
  * gofix: forgot to rename the URL type. osopen: fixed=true when changing O_CREAT.
  * goinstall: error out with paths that end with '/'. report lack of $GOPATH
    on errors. select the tag that is closest to runtime.Version.
  * http: add MaxBytesReader to limit request body size. add file protocol
    transport. adjust test threshold for larger suse buffers. delete error
    kludge. on invalid request, send 400 response. return 413 instead of 400
    when the request body is too large. support setting Transport's TLS client
    config.
  * image/tiff: add a decode benchmark. decoder optimization.
  * image: add PalettedImage interface, and make image/png recognize it.
  * io: add TeeReader.
  * json: add struct tag option to wrap literals in strings.
          calculate Offset for Indent correctly.
          fix decode bug with struct tag names with ,opts being ignored.
  * ld: handle Plan 9 ar format. remove duplicate bss definitions.
  * libmach: support reading symbols from Windows .exe for nm.
  * math: fix Pow10 loop. (thanks Volker Dobler)
  * mime: ParseMediaType returns os.Error now, not a nil map. media type
    formatter. text charset defaults.
  * misc/dashboard: remove limit for json package list.
  * misc/emacs: refine label detection.
  * net: add ParseMAC function. change the internal form of IPMask for IPv4.
    disable &quot;tcp&quot; test on openbsd. fix windows build. join and leave a IPv6
    group address, on a specific interface. make use of IPv4len, IPv6len.
    move internal string manipulation routines to parse.go.
  * os: disable Hostname test on OpenBSD. fix WNOHANG Waitmsg.
  * reflect: add Value.Bytes, Value.SetBytes methods.
  * rpc: add benchmark for async rpc calls.
  * runtime: add openbsd 386 defs.h. add runtime support for openbsd 386. add
    runtime prefix to showframe. ctrlhandler for windows amd64. fix stack
    cleanup on windows/amd64. fix void warnings. go interface to cdecl calbacks.
    handle string + char literals in goc2c. make arm work on Ubuntu Natty qemu.
    openbsd thread tweaks. simplify stack traces. speed up cgo calls. use cgo
    runtime functions to call windows syscalls. windows/amd64 callbacks fixed
    and syscall fixed to allow using it in callbacks.
  * strconv: put decimal on stack.
  * spec: update section on Implementation Differences.
  * syscall: SOMAXCONN should be 0x7fffffff at winsock2. add openbsd 386. handle
    RTM_NEWROUTE in ParseNetlinkRouteAttr on Linux. handle routing entry in
    ParseRoutingSockaddr on BSD variants. openbsd amd64 syscall support. use the
    vdso page on linux x86 for faster syscalls instead of int $0x80.
  * template/parse: give if, range, and with a common representation.
  * template: grammar fix for template documentation. range over channel. remove
    else and end nodes from public view.
  * test: put GOROOT/bin before all others in run.
  * time: fix Plan 9 build. fix zone during windows test.
  * type switches: test for pathological case.
  * version.bash: update VERSION on -save if already present.
  * websocket: implements new version of WebSocket protocol.
  * windows/386: clean stack after syscall.
  * xml: marshal &quot;parent&gt;child&quot; tags correctly.
- Update to release r59:
  * Restricted usage of goto statement
  * Package reflect supports a new struct tag scheme that enables sharing of
    struct tags between multiple packages.
  * Package sort's IntArray type has been renamed to IntSlice, and similarly
    for Float64Slice and StringSlice
  * Package strings's Split function has itself been split into Split and
    SplitN. SplitN is the same as the old Split. The new Split is equivalent
    to SplitN with a final argument of -1.
  * Goinstall now installs packages and commands from arbitrary remote
    repositories (not just Google Code, Github, and so on). See the goinstall
    documentation for details.
  More at http://golang.org/doc/devel/release.html#r59
- Update to 2011-07-20 mercurial version:
  * ELF section header overlap fixed, GNU strip doesn't break binaries
    anymore
- Update to weekly.2011-07-19 mercurial version:
  * archive/zip: add Writer, add Mtime_ns function to get modified time in
    sensible format.
  * cgi: close stdout reader pipe when finished.
  * cgo: add missing semicolon in generated struct,
  * codereview: fix for Mercurial 1.9.
  * dashboard: list &quot;most installed this week&quot; with rolling count.
  * debug/elf: read ELF Program headers.
  * debug/proc: remove unused package.
  * doc/talks/io2010: update with gofix and handle the errors.
  * exp/eval, exp/ogle: remove packages eval and ogle.
  * exp/regexp/syntax: add Prog.NumCap.
  * exp/template: API changes, bug fixes, and tweaks.
  * flag: make -help nicer.
  * fmt: Scan(&amp;int) was mishandling a lone digit.
  * gc: fix closure bug, fix to build with clang, make size of struct{} and
    [0]byte 0 bytes , some enhancements to printing debug info.
  * gif: fix local color map and coordinates.
  * go/build: include processing of .c files for cgo packages, less aggressive
    failure when GOROOT not found.
  * go/printer: changed max. number of newlines from 3 to 2.
  * gob: register more slice types
  * godoc: support for file systems stored in .zip files.
  * hash/crc32: add SSE4.2 support.
  * html: update section references in comments to the latest HTML5 spec.
  * http: drain the pipe output in TestHandlerPanic to avoid logging deadlock,
    fix Content-Type of file extension, implement http.FileSystem for zip files,
    let FileServer work when path doesn't begin with a slash, support for
    periodic flushing in ReverseProxy.
  * image/draw: add benchmarks.
  * json: add omitempty struct tag option, allow using '$' and '-' as the struct
    field's tag encode \r and \n in strings as e.g. &quot;\n&quot;, not &quot;\u000A&quot; escape
    &lt; and &gt; in any JSON string for XSS prevention.
  * ld: allow seek within write buffer&lt; add a PT_LOAD PHDR entry for the PHDR
  * os: plan9: add Process.Signal as a way to send notes
  * os: don't permit Process.Signal after a successful Wait.
  * reflect: add Value.NumMethod, panic if Method index is out of range for a
    type.
  * runtime: faster entersyscall, exitsyscall, fix panic for make(chan [0]byte),
    fix subtle select bug, make TestSideEffectOrder work twice, several
    parallelism-related optimizations and fixes, string-related optimizations,
    track running goroutine count.
  * strconv: handle [-+]Infinity in atof.
  * sync: add fast paths to WaitGroup, improve RWMutex performance.
  * syscall: add Flock on Linux, parse and encode SCM_RIGHTS and SCM_CREDENTIALS
  More at http://golang.org/doc/devel/release.html#r58.1
- Update to 2011/07/10 mercurial version (post r58 and weekly.2011-07-07):
  * Package exec has been redesigned with a more convenient and succinct API.
  * Package os/signal's Signal and UnixSignal types have been moved
    to the os package.
  * Package image/draw is the new name for exp/draw. The GUI-related
    code from exp/draw is now located in the exp/gui package.
  More at http://golang.org/doc/devel/release.html#r58
- No need to set $PATH before building anymore
- DISABLE_NET_TESTS was dropped, this causes net tests to fail
  on openSUSE:Factory currently. Disable tests temporarily.
- Update to 24/06/2011 mercurial version
  * http: buffer Request.Write (issue 1996)
  * libmach: fix disassembly of FCMOVcc and FCOMI
  * libmach: fix tracing on linux (for cov)
  * ld: don't attempt to build dynamic sections unnecessarily
  * syscall: add tty support to StartProcess
  * crypto/openpgp: add ElGamal support
  * http: add Server.ListenAndServeTLS (issue 1964)
- %go_requires can't depend on %requires_ge, it isn't available on
  Fedora and RHEL.
- Really set CFLAGS through HOST_EXTRA_CFLAGS environment variable
  for building Go itself and for Go macros (used by Go packages)
- Added go-fix-werrors.patch to fix fatal compiler warnings, not
  used yet as -Wno-error is passed currently
- Adhere to SUSE patch comment conventions
- Changed %go_requires macro from '%requires_eq go' to
  '%requires_ge go'
- Update to 15/06/2011 mercurial version
  * Increase max no of windows callbacks (issue 1912)
  * gc: compact stackframe
  * http: fix regression permitting io.Copy on HEAD response
  * Go memory model: minor clarification (issue 1941)
  * go spec: clarif rules for append, scope rules for :=
    (issue 1936, issue 1940)
  * gc: handle go print() and go println() (issue 1952)
  * net: export all fields in Interface (issue 1942)
- Spec file cleanup:
  * Remove *.6 and *.8 files from misc documentation
- Added macro %go_disable_brp_strip_static_archive to disable the
  strip check, it breaks on Fedora-based distros and generates
  a warning for SUSE-based ones. It can be removed if go binaries
  become really stripable
- Update to 08/05/2011 mercurial version
  * ld: fix and simplify ELF symbol generation
  * cgo: support non intel gcc machine flags
  * gc: enable building under clang/2.9
  * countless bugfixes, documentation and speed improvements
- Don't build twice (thru all.bash and make.bash)
- Generate %go_ver macro from Go package version
- Use %requires_eq for %go_requires
- Switch %go_make* macros from make to gomake
- Undo not installing *.h/*.c, remove hard links
- Update to 21/05/2011 mercurial version
- Added macro %go_make_test
- Package more documentation
- Moved devel package back into main package until a better
  solution pops up
  * godoc and goinstall belong to base package and need only
    sources in the $GOROOT/srcpkg tree
  * No need to install *.h/*.c files
- Fixed %{go_provides} macro to provide a specific version
- Changed GOROOT path also in gotry script
- Removed double provides for devel-static package
- Provide a specific version for devel-static package
- Less build dependencies, own directories directly
- Added comments for rpmlint checks, removed old ones
- Disable brp-strip-static-archive also on RHEL and CentOS
- Fix %go_make_install macro, wrong TARGDIR
- Update to 20/05/2011 mercurial version
- Macro %go_arch in macros.go now properly set to correct value
- Fix RPM macros, add arm support
- Added RPM macros file to simply Go packaging
- Provide devel-static file in main package
- Spec file cleanup
- Remove devel-file-in-non-devel-package rpmlint filter
- Use proper package versioning scheme (needs reinstall)
- Disable brp-strip-static-archive on Fedora
- Re-add STRIP=/bin/true to fix Fedora build
- Let devel package provide devel-static
- Fix typo in devel package description
- Update to 18/05/2011 upstream mercurial release
- Rebased godoc patch
- Removed doc/talks/go_talk-20091030.pdf, fixes bnc#686557
- No chrpath necessary anymore
- Use fdupes
- Drop executable-stack rpmlint filter, not needed anymore
- Update to 29/04/2011 upstream mercurial release
- Changed RPM variables to macros
- Changed license from BSD to BSD3c
- Remove pkg_version macro, use %%{version} directly
- No Requires on %%{release}
- Update to 07/03/2011 .1 upstream mercurual release
- Update godoc patch to reflect changes to path package
- Update to 24/02/2011 upstream mercurial release
- Update to 15/12/2011 upstream mercurial release
- Remove redundant workarounds from .spec
- add go-devel for pkg and cmd source installation, this is
  intended to support goinstall(once patched).
- Move goinstall binary to go-devel package and install to
  %{_sbindir}
- Change the godoc patch to generate API docs from the source
  install location of go-devel
- Updated to release 20/01/2011
- run full test suite (without net dependant tests)
- remove redundant libcgo.so from .spec
- Updated to 08/12/2010 mercurial version
- Updated to 02/12/2010 mercurial version
- Updated to 16/11/2010 mercurial version
- Updated to 09/11/2010 mercurial version
- Simplified spec file
- Fixed tarball (no hg history and build files)
- Updated to 08/11/2010 mercurial version
- Updated to 13/08/2010 mercurial version
- Example scripts permissions fixed
- Updated to 10/08/2010 mercurial version
- Initial package based on 09/06/2010 release
- Initial Go hg release spec template
</comment>
    <requestid>679777</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>a1b15b445a96ca2d2b118462090c8c96</srcmd5>
    <version>1.11.6</version>
    <time>1553262872</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>687006</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>22bc355a17e98d8e1439f9bef8d1563f</srcmd5>
    <version>1.11.7</version>
    <time>1554930588</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>692117</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>7687916ca0ae9906fc20abc4ffadc0fb</srcmd5>
    <version>1.11.9</version>
    <time>1555492905</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>694158</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>35e473a8e0799aeb9c5027e809fab8b7</srcmd5>
    <version>1.11.10</version>
    <time>1557389360</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>701448</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>08fc3a3840a8607e9f49c05205f35a16</srcmd5>
    <version>1.11.11</version>
    <time>1561194346</time>
    <user>dimstar_suse</user>
    <comment>- BuildRequire pkgconfig(systemd) instead of systemd: allow OBS to
  shortcut the build queues by allowing usage of systemd-mini.
  Originally from Dominique Leuenberger &amp;lt;dimstar@opensuse.org&amp;gt;

- go1.11.11 (released 2019/06/11) includes a fix to the crypto/x509 package.
  * go#32366 net/http: make Transport ignore 408 timeout messages from server
  * go#32281 crypto/x509: macos 10.14 SIGSEGV in crypto/x509._Cfunc_FetchPEMRoots
  * go#30525 cmd/go: MacOS binaries invalid for eventual Apple Notary
  * go#29618 cmd/go: downloads follow plain-HTTP redirects even when the -insecure flag is not set (forwarded request 710660 from jfkw)</comment>
    <requestid>710705</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>c6933fef8f9467556520d84027fe5d3d</srcmd5>
    <version>1.11.12</version>
    <time>1564413826</time>
    <user>dimstar_suse</user>
    <comment>- go1.11.12 (released 2019/07/08) includes fixes to the compiler and
  the linker.
  * go#32711 cmd/compile: wrong calculation result for bit operation
    that's inlined and has all constant shifts in rewrite rules
  * go#32696 debug/dwarf: cgo produces malformed DWARF data
  * go#32582 cmd/compile: `switch` statement on a custom `int32` type
    with negative values behaves differently in two consecutive calls
- Remove trailing whitespace in changes file (forwarded request 714523 from jfkw)</comment>
    <requestid>714524</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>8cd33aa5f9b2d8b9ce0abed16f500448</srcmd5>
    <version>1.11.13</version>
    <time>1565864861</time>
    <user>dimstar_suse</user>
    <comment>- go1.11.13 (released 2019/08/13) includes security fixes to the
  net/http and net/url packages addressing:
  CVE-2019-9512 CVE-2019-9514 CVE-2019-14809
  Refs boo#1141688.
  * go#33632 net/url: URL.Parse Multiple Parsing Issues
  * go#33630 net/http: Denial of Service vulnerabilities in the HTTP/2 implementation (forwarded request 723154 from jfkw)</comment>
    <requestid>723156</requestid>
  </revision>
  <revision rev="15" vrev="2">
    <srcmd5>12c1cfe9a7cbf82dcaf4cfb4df27ed3a</srcmd5>
    <version>1.11.13</version>
    <time>1566463875</time>
    <user>dimstar_suse</user>
    <comment>Update changelog to reference existing bnc# CVE tracking issues (forwarded request 724678 from jfkw)</comment>
    <requestid>724682</requestid>
  </revision>
  <revision rev="16" vrev="3">
    <srcmd5>560677ca7286e561f6c8ab5f8129cb04</srcmd5>
    <version>1.11.13</version>
    <time>1572021480</time>
    <user>dimstar_suse</user>
    <comment>- Fix broken go_api evaluation (1.11 &amp;lt; 1.5, when evaluated as floats),
  let RPM evaluate the expression, drop no longer required bc.
- Own the gdbinit.d directory, avoid the build dependency on gdb. (forwarded request 741607 from StefanBruens)</comment>
    <requestid>741610</requestid>
  </revision>
</revisionlist>
