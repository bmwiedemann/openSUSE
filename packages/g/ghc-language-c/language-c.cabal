cabal-version:   2.2
name:            language-c
version:         0.10.0
x-revision: 1
license:         BSD-3-Clause
license-file:    LICENSE
copyright:       LICENSE
maintainer:      language.c@monoid.al
author:          AUTHORS
tested-with:
    ghc ==9.12.1 ghc ==9.10.1 ghc ==9.8.2 ghc ==9.6.6 ghc ==9.4.8
    ghc ==9.2.8 ghc ==9.0.2 ghc ==8.10.7 ghc ==8.8.4 ghc ==8.6.5
    ghc ==8.4.4 ghc ==8.2.2 ghc ==8.0.2

homepage:        https://visq.github.io/language-c/
bug-reports:     https://github.com/visq/language-c/issues/
synopsis:        Analysis and generation of C code
description:
    Language C is a Haskell library for the analysis and generation of C code.
    It features a complete, well tested parser and pretty printer for all of C99 and a large
    set of C11 and clang/GNU extensions.

category:        Language
build-type:      Simple
extra-doc-files:
    ChangeLog.md
    README.md
    AUTHORS
    AUTHORS.c2hs

source-repository head
    type:     git
    location: https://github.com/visq/language-c.git

flag usebytestrings
    description: Use ByteString as InputStream datatype
    manual:      True

flag iecfpextension
    description:
        Support IEC 60559 floating point extension (defines _Float128)

    manual:      True

library
    exposed-modules:
        Language.C
        Language.C.Data
        Language.C.Data.Position
        Language.C.Data.Ident
        Language.C.Data.Error
        Language.C.Data.Name
        Language.C.Data.Node
        Language.C.Data.InputStream
        Language.C.Syntax
        Language.C.Syntax.AST
        Language.C.Syntax.Constants
        Language.C.Syntax.Ops
        Language.C.Syntax.Utils
        Language.C.Parser
        Language.C.Pretty
        Language.C.System.Preprocess
        Language.C.System.GCC
        Language.C.Analysis
        Language.C.Analysis.ConstEval
        Language.C.Analysis.Builtins
        Language.C.Analysis.SemError
        Language.C.Analysis.SemRep
        Language.C.Analysis.DefTable
        Language.C.Analysis.TravMonad
        Language.C.Analysis.AstAnalysis
        Language.C.Analysis.DeclAnalysis
        Language.C.Analysis.Debug
        Language.C.Analysis.TypeCheck
        Language.C.Analysis.TypeConversions
        Language.C.Analysis.TypeUtils
        Language.C.Analysis.NameSpaceMap
        Language.C.Analysis.MachineDescs
        Language.C.Analysis.Export

    build-tool-depends: happy:happy, alex:alex
    hs-source-dirs:     src
    other-modules:
        Language.C.Data.RList
        Language.C.Parser.Builtin
        Language.C.Parser.Lexer
        Language.C.Parser.ParserMonad
        Language.C.Parser.Tokens
        Language.C.Parser.Parser

    default-language:   Haskell2010
    default-extensions:
        CPP DeriveDataTypeable DeriveGeneric PatternGuards BangPatterns
        ExistentialQuantification GeneralizedNewtypeDeriving
        ScopedTypeVariables

    ghc-options:        -Wall -Wno-redundant-constraints
    build-depends:
        base >=4.9 && <5,
        array <0.6,
        containers >=0.3 && <0.9,
        deepseq >=1.4.0.0 && <1.6,
        directory <1.4,
        filepath <1.6,
        mtl <2.4,
        pretty <1.2.0,
        process <1.7

    if flag(usebytestrings)
        build-depends: bytestring >=0.9.0 && <0.13

    else
        cpp-options: -DNO_BYTESTRING

    if flag(iecfpextension)
        cpp-options: -DIEC_60559_TYPES_EXT

test-suite language-c-harness
    type:             exitcode-stdio-1.0
    main-is:          test/harness/run-harness.hs
    default-language: Haskell2010
    build-depends:
        base <5,
        directory,
        process,
        filepath
