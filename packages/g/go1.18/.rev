<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>c0af3a95b919681633d6bd1fb82da148</srcmd5>
    <version>1.18beta1</version>
    <time>1639616436</time>
    <user>dimstar_suse</user>
    <comment>New package go1.18, version go1.18beta1

- go1.18beta1 (released 2021-12-14) is a beta version of go1.18 cut
  from the master branch at the revision tagged go1.18beta1.
  Refs boo#1193742 go1.18 release tracking</comment>
    <requestid>940590</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>df25aaa12c6f91c62afa07080fdb2621</srcmd5>
    <version>1.18beta2</version>
    <time>1643666253</time>
    <user>dimstar_suse</user>
    <comment>- go1.18beta2 (released 2022-01-31) is a beta version of go1.18 cut
  from the master branch at the revision tagged go1.18beta1.
  Refs boo#1193742 go1.18 release tracking (forwarded request 950293 from jfkw)</comment>
    <requestid>950295</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>a73115baa34249d3c918988d6815904a</srcmd5>
    <version>1.18rc1</version>
    <time>1645137633</time>
    <user>dimstar_suse</user>
    <comment>- go1.18rc1 (released 2022-02-16) is a release candidate version of
  go1.18 cut from the master branch at the revision tagged
  go1.18rc1.
  Refs boo#1193742 go1.18 release tracking (forwarded request 955696 from jfkw)</comment>
    <requestid>955697</requestid>
  </revision>
  <revision rev="4" vrev="2">
    <srcmd5>412785a8c10601fa92044d5a91eb1306</srcmd5>
    <version>1.18rc1</version>
    <time>1645221773</time>
    <user>dimstar_suse</user>
    <comment>- Add .bin assembler pattern table file and test data to packaging.
  * Error manifests building some Go applications as:
    src/crypto/elliptic/p256_asm.go:24:12:
    pattern p256_asm_table.bin: no matching files found
  * A Quick Guide to Go's Assembler https://go.dev/doc/asm
  * New assembler pattern file added to packaging with mode 644:
    src/crypto/elliptic/p256_asm_table.bin
  * Existing test data files added to packaging with mode 644:
    src/compress/bzip2/testdata/pass-random2.bin
    src/compress/bzip2/testdata/pass-random1.bin
    src/debug/dwarf/testdata/line-gcc-win.bin (forwarded request 955775 from jfkw)</comment>
    <requestid>955776</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>64a7ea5302c67f1b8323ead56c6a34b8</srcmd5>
    <version>1.18</version>
    <time>1647458437</time>
    <user>dimstar_suse</user>
    <comment>- add dont-force-gold-on-arm64.patch (bsc#1183043)
- drop binutils-gold dependency (forwarded request 962202 from dirkmueller)</comment>
    <requestid>962260</requestid>
  </revision>
  <revision rev="6" vrev="2">
    <srcmd5>66a0a09e7b6cec6c42648ffe8c26bb92</srcmd5>
    <version>1.18</version>
    <time>1649093188</time>
    <user>dimstar_suse</user>
    <comment>- Add %define go_label as a configurable Go toolchain directory
  * go_label can be used to package multiple Go toolchains with
    the same go_api
  * go_label should be defined as go_api with an optional suffix
    e.g. %{go_api} or %{go_api}-foo
  * Default go_label = go_api makes no changes to package layout (forwarded request 966742 from jfkw)</comment>
    <requestid>966745</requestid>
  </revision>
  <revision rev="7" vrev="3">
    <srcmd5>0dffd40e73c298f4ed5adc440b4bac00</srcmd5>
    <version>1.18</version>
    <time>1649450728</time>
    <user>dimstar_suse</user>
    <comment>- Template gcc-go.patch to substitute gcc_go_version and eliminate
  multiple similar patches each with hardcoded gcc go binary name.
  gcc-go.patch inserts gcc-go binary name e.g. go-8 to compensate
  for current lack of gcc-go update-alternatives usage.
  * add gcc-go.patch
  * drop gcc6-go.patch
  * drop gcc7-go.patch

- For SLE-12 set gcc_go_version to 8 to bootstrap using gcc8-go.
  gcc6-go and gcc7-go no longer successfully bootstrap go1.17 or
  go1.18 on SLE-12 aarch64 ppc64le or s390x.
  * gcc6-go fails with errors e.g. libnoder.a(_go_.o):(.toc+0x0):
    undefined reference to `__go_pimt__I4_DiagFrN4_boolee3 (forwarded request 967904 from jfkw)</comment>
    <requestid>967905</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>ce933d0b88617c183192ab6fe43a7c51</srcmd5>
    <version>1.18.1</version>
    <time>1649876705</time>
    <user>dimstar_suse</user>
    <comment>- go1.18.1 (released 2022-04-12) includes security fixes to the
  crypto/elliptic, crypto/x509, and encoding/pem packages, as well
  as bug fixes to the compiler, linker, runtime, the go command,
  vet, and the bytes, crypto/x509, and go/types packages.
  Refs boo#1193742 go1.18 release tracking
  CVE-2022-24675 CVE-2022-28327 CVE-2022-27536
  * boo#1198423 go#51853 CVE-2022-24675
  * go#52037 encoding/pem: stack overflow
    boo#1198424 go#52075 CVE-2022-28327
  * go#52077 crypto/elliptic: generic P-256 panic when scalar has too many leading zeroes
  * boo#1198427 go#51759 CVE-2022-27536
  * go#51763 crypto/x509: Certificate.Verify crash on macOS with Go 1.18
  * go#52140 cmd/go: go work use -r panics when given a directory that does not exist
  * go#52119 go/types, cmd/compile: type set overlapping implementation for interface types might be not correct
  * go#52032 go/types: spurious diagnostics for untyped shift operands with GoVersion &lt; go1.13
  * go#52007 go/types, types2: scope is unset on receivers of instantiated methods
  * go#51874 cmd/go: Segfault on ppc64le during Go 1.18 build on Alpine Linux
  * go#51855 cmd/compile: internal compiler error: panic: runtime error: index out of range [0] with length 0
  * go#51852 crypto/x509: reject SHA-1 signatures in Verify
  * go#51847 cmd/compile: cannot import &quot;package&quot; (type parameter bound more than once)
  * go#51846 cmd/compile: internal compiler error: walkExpr: switch 1 unknown op RECOVER
  * go#51796 bytes: Trim returns empty slice instead of nil in 1.18
  * go#51767 cmd/go: &quot;go test&quot; seems to now require git due to -buildvcs
  * go#51764 cmd/go: go work use panics when given a file
  * go#51741 cmd/cgo: pointer to incomplete C type is mangled when passed through interface type and generic type assert
  * go#51737 plugin: tls handshake panic: unreachable method called. linker bug?
  * go#51727 cmd/vet, go/types: go vet crash when using self-recursive anonymous types in constraints
  * go#51697 runtime: some tests fails on Windows with CGO_ENABLED=0
  * go#51669 cmd/compile: irgen uses wrong dict param to generate code for getting dict type
  * go#51665 go/types, types2: gopls crash in recordTypeAndValue (forwarded request 969623 from jfkw)</comment>
    <requestid>969626</requestid>
  </revision>
  <revision rev="9" vrev="2">
    <srcmd5>15432d63fb3fee348479e77750eb247b</srcmd5>
    <version>1.18.1</version>
    <time>1651784717</time>
    <user>dimstar_suse</user>
    <comment>- Remove remaining use of gold linker when bootstrapping with
  gccgo. The binutils-gold package will be removed in the future.
  * History: go1.8.3 2017-06-18 added conditional if gccgo defined
    BuildRequires: binutils-gold for arches other than s390x
  * No information available why binutils-gold was used initially
  * Unrelated to upstream recent hardcoded gold dependency for ARM (forwarded request 974489 from jfkw)</comment>
    <requestid>974492</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>2b5b9af29683d7c5f736290863c905d6</srcmd5>
    <version>1.18.2</version>
    <time>1652389081</time>
    <user>dimstar_suse</user>
    <comment>- go1.18.2 (released 2022-05-10) includes security fixes to the
  syscall package, as well as bug fixes to the compiler, runtime,
  the go command, and the crypto/x509, go/types, net/http/httptest,
  reflect, and sync/atomic packages.
  Refs boo#1193742 go1.18 release tracking
  CVE-2022-29526
  * boo#1199413 go#52313 CVE-2022-29526
  * go#52440 syscall: Faccessat checks wrong group
  * go#51738 runtime: wrong type assertion result when using generic types
  * go#51798 cmd/go: add (and default to) -buildvcs=auto
  * go#51859 crypto/x509: x509 certificate with issuerUniqueID and/or subjectUniqueID parse error
  * go#51897 net/http/httptest: race in Close
  * go#52028 go/types: documentation on instance de-duplication is unclear about guarantees
  * go#52149 syscall: TestGroupCleanupUserNamespace failure on linux-s390x-ibm
  * go#52244 go/types, types2: go generic assert compile escape
  * go#52305 runtime: doAllThreadsSyscall has an unaligned atomic load on 32-bit architectures
  * go#52366 cmd/compile/internal/ssa: occurred the wrong rewrite cycle detection
  * go#52375 runtime: executable compiled under Go 1.17.7 will occasionally wedge
  * go#52386 reflect: can set map elem with string key of a different string type
  * go#52441 cmd/compile: incorrect handling of iota in 1.18
  * go#52468 cmd/go: go run -mod=mod [files...] does not update go.mod and go.sum
  * go#52558 cmd/compile: cannot convert v (variable of type *Bar[T]) to type *Foo[T]
  * go#52606 cmd/compile: internal compiler error: weird package in name: .dict0 =&gt; .dict0 from &quot;&quot;, not &quot;test/p&quot;
  * go#52615 sync/atomic: compare and swap of inconsistently typed values with uninitialized Value
  * go#52691 cmd/compile: generic function appears to use incorrect type descriptor
  * go#52699 runtime: support debugCall on arm64
  * go#52706 net: TestDialCancel is not compatible with new macOS ARM64 builders
  * go#52804 go/types: NewMethodSet doesn't terminate for recursively embedded generics (forwarded request 976170 from jfkw)</comment>
    <requestid>976173</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>33f27608746458dc333ff5fcc9d0c244</srcmd5>
    <version>1.18.3</version>
    <time>1654258534</time>
    <user>dimstar_suse</user>
    <comment>- go1.18.3 (released 2022-06-01) includes security fixes to the
  crypto/rand, crypto/tls, os/exec, and path/filepath packages, as
  well as bug fixes to the compiler, and the crypto/tls and
  text/template/parse packages.
  Refs boo#1193742 go1.18 release tracking
  CVE-2022-30634 CVE-2022-30629 CVE-2022-30580 CVE-2022-29804
  * boo#1200134 go#52561 CVE-2022-30634
  * go#52933 crypto/rand: Read hangs when passed buffer larger than 1&lt;&lt;32 - 1
  * boo#1200135 go#52814 CVE-2022-30629
  * go#52833 crypto/tls: randomly generate ticket_age_add
  * boo#1200136 go#52574 CVE-2022-30580
  * go#53057 os/exec: Cmd.{Run,Start} should fail if Cmd.Path is unset
  * boo#1200137 go#52476 CVE-2022-29804
  * go#52479 path/filepath: Clean(.\c:) returns c: on Windows
  * go#51849 cmd/compile: crash on pointer conversion in call to mapaccess2
  * go#52242 cmd/compile: compiler crash on valid code
  * go#52286 cmd/compile: compiler crash with &quot;Dictionary should have already been generated&quot;
  * go#52791 crypto/tls: 500% increase in allocations from (*tls.Conn).Read in go 1.17
  * go#52878 text/template: break/continue require no whitespace around them
  * go#53043 misc/cgo/testsanitizers: occasional hangs in TestTSAN/tsan12
  * go#53115 misc/cgo/testsanitizers: deadlock in TestTSAN/tsan11 (forwarded request 980418 from jfkw)</comment>
    <requestid>980420</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>4b3b62f70bd1f77e04159f2c59700e13</srcmd5>
    <version>1.18.4</version>
    <time>1657809193</time>
    <user>dimstar_suse</user>
    <comment>- go1.18.4 (released 2022-07-12) includes security fixes to the
  compress/gzip, encoding/gob, encoding/xml, go/parser, io/fs,
  net/http, and path/filepath packages, as well as bug fixes to the
  compiler, the go command, the linker, the runtime, and the
  runtime/metrics package.
  Refs boo#1193742 go1.18 release tracking
  CVE-2022-1705 CVE-2022-32148 CVE-2022-30631 CVE-2022-30633 CVE-2022-28131 CVE-2022-30635 CVE-2022-30632 CVE-2022-30630 CVE-2022-1962 (forwarded request 988807 from jfkw)</comment>
    <requestid>988809</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>cdda62514ebc0bdb53f4bf100795c3c1</srcmd5>
    <version>1.18.5</version>
    <time>1659554176</time>
    <user>dimstar_suse</user>
    <comment>- go1.18.5 (released 2022-08-01) includes security fixes to the
  encoding/gob and math/big packages, as well as bug fixes to the
  compiler, the go command, the runtime, and the testing package.
  Refs boo#1193742 go1.18 release tracking
  CVE-2022-32189
  * boo#1202035 CVE-2022-32189 go#53871
  * go#54095 math/big: index out of range in Float.GobDecode
  * go#53883 cmd/compile: interface conversion with generics reports &quot;types from different scopes&quot;
  * go#53875 cmd/go: livelock when computing module graph in a workspace with GOPROXY=off
  * go#53852 cmd/compile: internal compiler error: assertion failed
  * go#53847 runtime: modified timer results in extreme cpu load
  * go#53119 cmd/go: Build information embedded by Go 1.18 impairs build reproducibility with cgo flags
  * go#53112 runtime: gentraceback() dead loop on arm64 casued the process hang
  * go#52986 testing: TempDir RemoveAll cleanup failures with &quot;The process cannot access the file because it is being used by another process.&quot;
  * go#52961 cmd/compile: miscompilation in pointer operations (forwarded request 992076 from jfkw)</comment>
    <requestid>992080</requestid>
  </revision>
  <revision rev="14" vrev="2">
    <srcmd5>bba4e9771397815a590e3c716b1ba0c0</srcmd5>
    <version>1.18.5</version>
    <time>1661346632</time>
    <user>dimstar_suse</user>
    <comment>- Define go_bootstrap_version go1.16 without suse_version checks
- Simplify conditional gcc_go_version 12 on Tumbleweed, 11 elsewhere (forwarded request 998732 from jfkw)</comment>
    <requestid>998735</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>a8b9d69fa424aedb2b75d5635b71d747</srcmd5>
    <version>1.18.6</version>
    <time>1662639678</time>
    <user>dimstar_suse</user>
    <comment>- go1.18.6 (released 2022-09-06) includes security fixes to the
  net/http package, as well as bug fixes to the compiler, the go
  command, the pprof command, the runtime, and the crypto/tls,
  encoding/xml, and net packages.
  Refs boo#1193742 go1.18 release tracking
  CVE-2022-27664
  * go#53977 bsc#1203185 CVE-2022-27664 net/http: handle server errors after sending GOAWAY
  * go#54733 cmd/go: git fetch errors dropped when producing pseudo-versions for commits
  * go#54725 cmd/compile: compile failed with &quot;Value live at entry&quot;
  * go#54674 runtime: morestack_noctxt missing SPWRITE, causes &quot;traceback stuck&quot; assert
  * go#54664 runtime: segfault running ppc64/linux binaries with kernel 5.18
  * go#54659 cmd/go: go test -race does not set implicit race build tag
  * go#54642 crypto/tls: support ECDHE key exchanges when ec_point_formats is missing in ClientHello extension
  * go#54636 cmd/go: data race in TestScript
  * go#54603 cmd/compile: miscompilation of partially-overlapping array assignments
  * go#54502 cmd/link: Trampoline insertion breaks DWARF Line Program Table output on Darwin/ARM64
  * go#54464 cmd/pprof: graphviz node names are funny with generics
  * go#54128 encoding/xml: crash on android/arm64 due to https://go.dev/cl/417062
  * go#54074 net: WriteMsgUDPAddrPort should accept IPv4 destination addresses on IPv6 UDP sockets
  * go#54056 misc/cgo: TestSignalForwardingExternal sometimes fails with wrong signal SIGINT
  * go#53397 go/reflect: Incorrect behavior on arm64 when using MakeFunc / Call (forwarded request 1001531 from jfkw)</comment>
    <requestid>1001533</requestid>
  </revision>
</revisionlist>
