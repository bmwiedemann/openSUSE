-------------------------------------------------------------------
Tue Aug 18 10:46:15 UTC 2020 - Peter Simons <psimons@suse.com>

- Replace %setup -q with the more modern %autosetup macro.

-------------------------------------------------------------------
Tue Jun 16 11:14:41 UTC 2020 - Peter Simons <psimons@suse.com>

- Re-generate file with latest version of spec-cleaner.

-------------------------------------------------------------------
Fri Feb  7 08:06:47 UTC 2020 - psimons@suse.com

- Update th-abstraction to version 0.3.2.0.
  ## 0.3.2.0 -- 2020-02-06
  * Support substituting into and extracting free variables from `ForallVisT`s
    on `template-haskell-2.16.0.0` (GHC 8.10) or later.
  * Fix a bug in which `freeVariables` could report duplicate kind variables when
    they occur in the kinds of the type variable binders in a `ForallT`.
  * Fix a bug in which `resolveInfixT` would not resolve `UInfixT`s occurring in
    the kinds of type variable binders in a `ForallT`.
  * Fix a bug in which the `TypeSubstitution ConstructorInfo` instance would not
    detect free kind variables in the `constructorVars`.

-------------------------------------------------------------------
Fri Nov  8 16:14:57 UTC 2019 - Peter Simons <psimons@suse.com>

- Drop obsolete group attributes.

-------------------------------------------------------------------
Tue Apr 30 09:23:09 UTC 2019 - psimons@suse.com

- Update th-abstraction to version 0.3.1.0.
  ## 0.3.1.0 -- 2019-04-28
  * Fix a bug which would cause data family information to be reified incorrectly
    with GHC 8.8+ in some situations.

  ## 0.3.0.0 -- 2019-04-26
  * Breaking change: the `datatypeVars` field of `DatatypeInfo` is now of type
    `[TyVarBndr]` instead of `[Type]`, as it now refers to all of the bound type
    variables in the data type. The old `datatypeVars` field has been renamed to
    `datatypeInstTypes` to better reflect its purpose.

    In addition, the type of `normalizeCon` now has an additional `[TyVarBndr]`
    argument, since `DatatypeInfo` now requires it.
  * Support `template-haskell-2.15`.
  * Fix a bug in which `normalizeDec` would not detect existential type variables
    in a GADT constructor if they were implicitly quantified.
  * Fix a bug in which `normalizeDec` would report an incorrect number of
    `datatypeVars` for GADT declarations with explicit return kinds (such as
    `data Foo :: * -> * where`).

-------------------------------------------------------------------
Wed Feb 27 03:02:53 UTC 2019 - psimons@suse.com

- Update th-abstraction to version 0.2.11.0.
  ## 0.2.11.0 -- 2019-02-26
  * Fix a bug in which `freeVariablesWellScoped` would sometimes not preserve
    the left-to-right ordering of `Name`s generated with `newName`.

-------------------------------------------------------------------
Fri Dec 21 03:02:45 UTC 2018 - psimons@suse.com

- Update th-abstraction to version 0.2.10.0.
  ## 0.2.10.0 -- 2018-12-20
  * Optimization: `quantifyType` now collapses consecutive `forall`s. For
    instance, calling `quantifyType` on `forall b. a -> b -> T a` now produces
    `forall a b. a -> b -> T a` instead of `forall a. forall b. a -> b -> T a`.

  ## 0.2.9.0 -- 2018-12-20
  * Fix a bug in which `resolveTypeSynonyms` would not look into `ForallT`s,
    `SigT`s, `InfixT`s, or `ParensT`s.
  * Fix a bug in which `quantifyType` would not respect the dependency order of
    type variables (e.g., `Proxy (a :: k)` would have erroneously been quantified
    as `forall a k. Proxy (a :: k)`).
  * Fix a bug in which `asEqualPred` would return incorrect results with GHC 8.7.
  * Add a `freeVariablesWellScoped` function which computes the free variables of
    a list of types and sorts them according to dependency order.
  * Add a `resolveKindSynonyms` function which expands all type synonyms in a
    `Kind`. This is mostly useful for supporting old GHCs where `Type` and `Kind`
    were not the same.

-------------------------------------------------------------------
Sat Oct 20 11:32:05 UTC 2018 - Peter Simons <psimons@suse.com>

- Use https URL to refer to bugs.opensuse.org.

-------------------------------------------------------------------
Wed Jul 18 14:26:43 UTC 2018 - psimons@suse.com

- Cosmetic: replace tabs with blanks, strip trailing white space,
  and update copyright headers with spec-cleaner.

-------------------------------------------------------------------
Fri Jul 13 14:31:53 UTC 2018 - psimons@suse.com

- Update th-abstraction to version 0.2.8.0.
  ## 0.2.8.0 -- 2018-06-29
  * GADT reification is now much more robust with respect to `PolyKinds`:
    * A bug in which universally quantified kind variables were mistakenly
      flagged as existential has been fixed.
    * A bug in which the kinds of existentially quantified type variables
      were not substituted properly has been fixed.
    * More kind equalities are detected than before. For example, in the
      following data type:

      ```haskell
      data T (a :: k) where
        MkT :: forall (a :: Bool). T a
      ```

      We now catch the `k ~ Bool` equality.
  * Tweak `resolveTypeSynonyms` so that failing to reify a type constructor
    name so longer results in an error. Among other benefits, this makes
    it possible to pass data types with GADT syntax to `normalizeDec`.

  ## 0.2.7.0 -- 2018-06-17
  * Fix bug in which data family instances with duplicate occurrences of type
    variables in the left-hand side would have redundant equality constraints
    in their contexts.

-------------------------------------------------------------------
Mon May 14 17:02:11 UTC 2018 - psimons@suse.com

- Update th-abstraction to version 0.2.6.0 revision 1.
  * Fix bug in which `applySubstitution` and `freeVariables` would ignore
    type variables in the kinds of type variable binders.
  * Added `pragLineDCompat`, `newtypeDCompat` and `tySynInstDCompat`
  * Fix bug that caused GADT equality constraints to be incorrect in some cases.
  * Expose `Unpackedness` and `Strictness` (which were unexported by accident).
  * Add `resolvePredSynonyms`
  * Add `reifyConstructor`, which allows reification of `ConstructorInfo` from
    a constructor name, and `lookupByConstructorName`, which allows directly
    looking up a `ConstructorInfo` from a `DatatypeInfo` value for a given
    constructor `Name`.
  * Augment `reifyDatatype` to be able to look up `DatatypeInfo` from the `Name`
    of a record selector for one of its constructors. Also add `reifyRecord` for
    reification of of `ConstructorInfo` from a record name, and
    `lookupByRecordName`, which allows directly looking up a `ConstructorInfo`
    from a `DatatypeInfo` value for a given record `Name`.
  * Fix bug that caused `th-abstraction` to fail on GHC 7.0 and 7.2 when passing
    a vanilla constructor name to `reifyDatatype`
  * Make `normalizeDec` and `normalizeCon` more robust with respect to
    data family instances on GHC 7.6 and 7.8

-------------------------------------------------------------------
Fri Jun 30 03:01:59 UTC 2017 - psimons@suse.com

- Update to version 0.2.3.0.

-------------------------------------------------------------------
Mon Jun 19 21:01:50 UTC 2017 - psimons@suse.com

- Update to version 0.2.2.0.
