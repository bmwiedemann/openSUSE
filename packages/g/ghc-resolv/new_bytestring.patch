From 3773e358c1c0c7132fed4ad5e48354180bc780f1 Mon Sep 17 00:00:00 2001
From: Oleg Grenrus <oleg.grenrus@iki.fi>
Date: Thu, 17 Sep 2020 12:39:04 +0300
Subject: [PATCH] Allow base16-bytestring-1.0

Also fix build issue with older bytestring,
which doesn't have IsString instance
---
 resolv.cabal               | 4 ++--
 src/Network/DNS/Message.hs | 6 +++++-
 2 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/resolv.cabal b/resolv.cabal
index d7bf419..561ec57 100644
--- a/resolv.cabal
+++ b/resolv.cabal
@@ -93,7 +93,7 @@ library
 
   -- we need binary-0.7.3 for isolate
   build-depends:     base               >= 4.5 && <4.15
-                   , base16-bytestring ^>= 0.1
+                   , base16-bytestring ^>= 0.1 || ^>=1.0.0.0
                    , binary            ^>=0.7.3 || ^>= 0.8
                    , bytestring        ^>=0.9.2 || ^>= 0.10
                    , containers        ^>=0.4.2.1 || ^>= 0.5 || ^>= 0.6
@@ -113,7 +113,7 @@ test-suite resolv.
                , bytestring
 
   -- additional dependencies not inherited
-  build-depends: tasty        ^>= 1.2.3
+  build-depends: tasty        ^>= 1.2.3 || ^>=1.3.1
                , tasty-hunit  ^>= 0.10.0
                , directory    ^>= 1.1.0 || ^>= 1.2.0 || ^>= 1.3.0
                , filepath     ^>= 1.3.0 || ^>= 1.4.0
diff --git a/src/Network/DNS/Message.hs b/src/Network/DNS/Message.hs
index bcc120f..ab49d3f 100644
--- a/src/Network/DNS/Message.hs
+++ b/src/Network/DNS/Message.hs
@@ -17,6 +17,7 @@ module Network.DNS.Message where
 import qualified Data.ByteString.Base16 as B16
 
 import qualified Data.ByteString        as BS
+import qualified Data.ByteString.Char8  as BS.Char8
 import qualified Data.ByteString.Lazy   as BSL
 import           Data.Function
 import           Data.List              (groupBy)
@@ -83,7 +84,10 @@ newtype Name = Name BS.ByteString
 -- The limit of 255 octets is caused by the encoding which uses by a
 -- prefixed octet denoting the length.
 newtype CharStr = CharStr BS.ByteString
-                deriving (Eq,Ord,IsString)
+                deriving (Eq,Ord)
+
+instance IsString CharStr where
+    fromString = CharStr . BS.Char8.pack
 
 instance Show CharStr where
     showsPrec p (CharStr bs) = showsPrec p bs
