-------------------------------------------------------------------
Fri Feb 19 23:03:15 UTC 2021 - psimons@suse.com

- Update constraints to version 0.13.
  0.13 [2021.02.17]
  -----------------
  * `Data.Constraint.Symbol` now reexports the `GHC.TypeLits.AppendSymbol` type
    family from recent versions of `base` (or, on old versions of `base`, it
    defines a backwards-compatibile version of `AppendSymbol`). The existing
    `(++)` type family for `Data.Constraint.Symbol` is now a synonym for
    `AppendSymbol`.

    This is technically a breaking change, as `(++)` was previously defined like
    so:

    ```hs
    type family (++) :: Symbol -> Symbol -> Symbol
    ```

    This meant that `(++)` could be partially applied. However, for compatibility
    with the way that `AppendSymbol` is defined, `(++)` is now defined like so:

    ```hs
    type m ++ n = AppendSymbol m n
    ```

    As a result, `(++)` can no longer be partially applied.
  * Make the `(++)` type family in `Data.Constraint.Symbol` be `infixr 5`.
  * Add `implied :: (a => b) -> (a :- b)` to `Data.Constraint`, which converts
    a quantified constraint into an entailment. This is only available when
    compiled with GHC 8.6 or later.

-------------------------------------------------------------------
Thu Dec 17 12:20:00 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>
 
- disable %{ix86} build
 
-------------------------------------------------------------------
Tue Aug 18 10:44:26 UTC 2020 - Peter Simons <psimons@suse.com>

- Replace %setup -q with the more modern %autosetup macro.

-------------------------------------------------------------------
Tue Jun  9 09:26:13 UTC 2020 - psimons@suse.com

- Add constraints at version 0.12.

