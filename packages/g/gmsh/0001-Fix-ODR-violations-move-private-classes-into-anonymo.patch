From 80d4ea555cfac7f11488a879f3edcd71660f6191 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20Br=C3=BCns?= <stefan.bruens@rwth-aachen.de>
Date: Fri, 2 Aug 2019 14:22:48 +0200
Subject: [PATCH 1/2] Fix ODR violations, move private classes into anonymous
 namespace

The Triangulate and Tetrahedralize plugins both define a PointData class
with external linkage, and thus violate the ODR (One-Definition-Rule).
Move both into an anonymous namespace.

The point class from drawGlyph conflicts with the one from
Post/shapefunctions.h

The gl2gif colorhist_item and colorhist_list_item clash with the ones
from the contrib/mpeg_encode code.
---
 Graphics/drawGlyph.cpp    |  2 ++
 Graphics/gl2gif.cpp       | 17 +++++++++++++++++
 Graphics/gl2gif.h         | 18 ------------------
 Plugin/Tetrahedralize.cpp |  2 ++
 Plugin/Triangulate.cpp    |  2 ++
 5 files changed, 23 insertions(+), 18 deletions(-)

diff --git a/Graphics/drawGlyph.cpp b/Graphics/drawGlyph.cpp
index 049e6b1..369b6b7 100644
--- a/Graphics/drawGlyph.cpp
+++ b/Graphics/drawGlyph.cpp
@@ -747,6 +747,7 @@ void drawContext::drawVector(int Type, int Fill, double x, double y, double z,
   }
 }
 
+namespace {
 class point {
 public:
   double x, y, z;
@@ -783,6 +784,7 @@ public:
       return point();
   }
 };
+}
 
 void drawContext::drawBox(double xmin, double ymin, double zmin, double xmax,
                           double ymax, double zmax, bool labels)
diff --git a/Graphics/gl2gif.cpp b/Graphics/gl2gif.cpp
index 7119611..4ffc5a4 100644
--- a/Graphics/gl2gif.cpp
+++ b/Graphics/gl2gif.cpp
@@ -53,6 +53,25 @@
 #define HASH_SIZE 20023
 #define ppm_hashpixel(p) (((int)(p)&0x7fffffff) % HASH_SIZE)
 
+/* Color histogram stuff */
+namespace {
+    typedef struct colorhist_item *colorhist_vector;
+    struct colorhist_item {
+      pixel color;
+      int value;
+    };
+
+    typedef struct colorhist_list_item *colorhist_list;
+    struct colorhist_list_item {
+      struct colorhist_item ch;
+      colorhist_list next;
+    };
+}
+
+/* Color hash table stuff */
+
+typedef colorhist_list *colorhash_table;
+
 static int static_red[MAX_GIFCOLORS];
 static int static_green[MAX_GIFCOLORS];
 static int static_blue[MAX_GIFCOLORS];
diff --git a/Graphics/gl2gif.h b/Graphics/gl2gif.h
index 829c860..5c076c0 100644
--- a/Graphics/gl2gif.h
+++ b/Graphics/gl2gif.h
@@ -37,24 +37,6 @@ typedef long int count_int;
              ((int)PPM_GETG(p) * (newmaxval) + (oldmaxval) / 2) / (oldmaxval), \
              ((int)PPM_GETB(p) * (newmaxval) + (oldmaxval) / 2) / (oldmaxval))
 
-/* Color histogram stuff */
-
-typedef struct colorhist_item *colorhist_vector;
-struct colorhist_item {
-  pixel color;
-  int value;
-};
-
-typedef struct colorhist_list_item *colorhist_list;
-struct colorhist_list_item {
-  struct colorhist_item ch;
-  colorhist_list next;
-};
-
-/* Color hash table stuff */
-
-typedef colorhist_list *colorhash_table;
-
 /* Public function */
 
 void create_gif(FILE *outfile, PixelBuffer *buffer, int dither, int sort,
diff --git a/Plugin/Tetrahedralize.cpp b/Plugin/Tetrahedralize.cpp
index d6722a1..0240846 100644
--- a/Plugin/Tetrahedralize.cpp
+++ b/Plugin/Tetrahedralize.cpp
@@ -43,6 +43,7 @@ StringXNumber *GMSH_TetrahedralizePlugin::getOption(int iopt)
 
 #if defined(HAVE_MESH)
 
+namespace {
 class PointData : public MVertex {
 public:
   std::vector<double> val;
@@ -51,6 +52,7 @@ public:
     val.resize(numVal);
   }
 };
+}
 
 PView *GMSH_TetrahedralizePlugin::execute(PView *v)
 {
diff --git a/Plugin/Triangulate.cpp b/Plugin/Triangulate.cpp
index a87ff00..fe23e1c 100644
--- a/Plugin/Triangulate.cpp
+++ b/Plugin/Triangulate.cpp
@@ -53,6 +53,7 @@ StringXNumber *GMSH_TriangulatePlugin::getOption(int iopt)
 
 #if defined(HAVE_MESH)
 
+namespace {
 class PointData : public MVertex {
 public:
   std::vector<double> v;
@@ -64,6 +65,7 @@ public:
     v[2] = z;
   }
 };
+}
 
 PView *GMSH_TriangulatePlugin::execute(PView *v)
 {
-- 
2.22.0

