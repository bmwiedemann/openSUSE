-------------------------------------------------------------------
Tue Mar 28 09:04:54 UTC 2023 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Fix builds failing with GCC 13, add
  0001-Add-missing-cstdint-header.patch

-------------------------------------------------------------------
Wed Dec 28 10:39:26 UTC 2022 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Update to 4.11.1
  * Mesh.TransfiniteTri improvements
  * small bug fixes

-------------------------------------------------------------------
Tue Nov  8 17:26:09 UTC 2022 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Update to 4.11.0
  * new Fortran API
  * improved copying ("Duplicata") of multiple shapes with OCC
  * reduced default order for OCC surface filling
  * arbitrary string attributes can now be stored in models and
    MSH files
  * new Radioss export
  * added ability to specify spline tangents with OCC
  * new option Mesh.SaveWithoutOrphans to prune orphan entities
    (e.g. geometrical construction points) from MSH4 files
  * major overhaul of the reference manual
  * new official macOS ARM builds
  * small bug fixes.
  * New API functions:
    + model/getAttributeNames, model/getAttribute,
      model/setAttribute, model/removeAttribute
  * Incompatible API changes:
    + new argument to mesh/computeHomology
    + new optional arguments to occ/addSpline and
      occ/addThruSections

-------------------------------------------------------------------
Thu Sep  1 13:52:25 UTC 2022 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Update to 4.10.5
  * small bug fixes.
- Update to 4.10.4
  * improved graphical window tooltips
  * small bug fixes.
  * New API function: mesh/removeDuplicateElements

-------------------------------------------------------------------
Sat Jun 18 16:45:10 UTC 2022 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Update to 4.10.3
  * small bug fixes.
  * New API function: fltk/finalize
- Update to 4.10.2
  * fixed regression introduced in 4.9 for recombined meshes
    with boundary layers
  * new Geometry.OCCSafeUnbind option to disable boolean
    optimization introduced in 4.10.0 (for backward compatibility)
  * new HealShapes command in .geo files
  * simplified calculation of OCC STL bounding boxes generalized
    Crack plugin
  * small bug fixes.
- Update to 4.10.1
  * small bug fixes.
- Update to 4.10.0
  * more flexible homology/cohomology workflow in the API
  * "Attractor" field is now just a synonym for the newer (and more
    efficient) "Distance" field
  * periodic bsplines now use the same default multiplicities in
    OCC as in the built-in kernel
  * model/isInside now also handles discrete entities
  * speed-up repeated simple boolean operations
  * C++ api now throws std::runtime_error on errors
  * small bug fixes.
  * New API functions:
    geo/addGeometry, geo/addPointOnGeometry, mesh/addHomologyRequest,
    mesh/clearHomologyRequests, mesh/setVisibility,
    mesh/getElementQualities
  * Incompatible API changes:
    + additional const qualifiers in C API
    + removed mesh/computeCohomology
    + new arguments to occ/getCurveLoops and occ/getSurfaceLoops
    + changed arguments of mesh/computeHomology
    + new optional arguments to occ/addCircle, occ/addEllipse,
      occ/addDisk, occ/addTorus, occ/addWedge, model/addPhysicalGroup,
      model/geo/addPhysicalGroup, mesh/removeDuplicateNodes and
      mesh/setRecombine.
- Update to 4.9.5
  * dynamic Gmsh library now also only exports public symbols on
    macOS and Linux, like it does on Windows
  * better handling of max. thread settings
  * small bug fixes.
  * New API function: mesh/getDuplicateNodes
- Make demos and doc subpackages noarch
- Some more specfile cleanup

-------------------------------------------------------------------
Wed Jun 15 10:21:57 UTC 2022 - Atri Bhattacharya <badshah400@gmail.com>

- Disable julia subpackage and do not install related examples and
  tutorials when building for openSUSE >= 1550 where julia is no
  longer available.

-------------------------------------------------------------------
Sun Feb  6 15:21:35 UTC 2022 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Update to 4.9.4:
  * Improved BSpline filling; new options Mesh.MinimumLineNodes,
    Mesh.RecombineNodeRepositioning, Mesh.RecombineMinimumQuality
    and Mesh.StlLinearDeflectionRelative
  * updated bundled Eigen
  * small bug fixes
  * New API functions:
    gmsh/isInitialized, occ/convertToNURBS, occ/getCurveLoops,
    occ/getSurfaceLoops, mesh/importStl, parser/getNames,
    parser/setNumber, parser/setString, parser/getNumber,
    parser/getString, parser/clear, parser/parse,
    onelab/getChanged, onelab/setChanged.
- Drop 0001-mpeg_encode-Do-not-free-stack-allocated-frame.patch

-------------------------------------------------------------------
Sat Jan  8 18:33:04 UTC 2022 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Update to 4.9.3:
  * improved handling of degenerate curves in periodic surfaces and
    boundary layer extrusion
  * extended Mesh.SaveGroupsOfElements capabilities for INP export
  * extended Mesh.MeshSizeExtendFromBoundary + new "Extend" mesh
    size field to enable alternative mesh size extensions from boundary
  * enhanced X3D output
  * moved all kernel sources to src/ subdirectory
  * renamed demos/ as examples/ and tutorial/ as tutorials/
  * small bug fixes
- Update to 4.9.2:
  * faster projection on OCC entities
  * extended Mesh.SaveGroupsOfNodes capabilities for INP export
  * improved transfinite meshing of surfaces with boundary on
    periodic seam.
- Update to 4.9.1:
  * relax tolerance on curve parametrization match for periodic meshing
  * enable extruded boundary layers on generic model entities
  * activate IncludeBoundary by default in Restrict field
  * downgraded compiler for official Linux releases to gcc 6 to
    improve compatibility with older systems
  * small bug fixes (view tag generation with zero tag, model/setTag).
- Update to 4.9.0:
  * new initial 2D meshing algorithm
  * new quasi-structured quad algorithm
  * improved handling of imperfect curve reparametrization on
    surfaces in 2D periodic meshing algorithm
  * mesh renumbering now also renumbers dependent post-processing views
  * the mesh size callback is now per-model and its returned value
    is not gathered with the other size constraints in a global min
    reduction anymore: instead the callback takes as additional
    argument the mesh size lc that would be prescribed in the absence
    of the callback, which allows to perform any desired modification
    (the old behavior can be achieved by returning min(lc, value))
  * OCC STL representation is now generated using relative deflection
    tolerance
  * new TransformMesh command in .geo files
  * new behavior of Mesh.SaveGroupsOf{Nodes,Elements} in UNV and
    INP exports
  * partitioned MSH4 files now contain the full partition topology
    (i.e. all partition entities)
  * fixed metric calculation with Eigen (for anisotropic mesh generation)
  * official binary builds now support OpenMP parallelization and are
    64 bit only (build OS upgraded to Windows 10, macOS 10.15 and
    Linux glibc 2.24)
  * new experimental Fortran API
  * new API functions to handle view options by tag instead of by index
  * color options in the API can now be specified as in .geo files,
    in the form "Category.Color.Option"
  * small bug fixes.
- Update to 4.8.4:
  * set current model in gmsh/model/add
  * small bug fixes.
- Add 0001-mpeg_encode-Do-not-free-stack-allocated-frame.patch
- Rebase link_dynamic_gl2ps.patch
- Rebase gmsh-3.0.5-add-shebang-to-onelab.patch

-------------------------------------------------------------------
Mon Apr 26 21:00:19 UTC 2021 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Update to 4.8.3:
  * Small bug fixes.
- Update to 4.8.2:
  * Fixed regression in OCC transforms
  * Fixed cwrap API.
- Update to 4.8.1:
  * Improved performance when transforming many OCC entities
  * Fixed regression in high-order meshing of surfaces with
    singular parametrizations
  * Small bug fixes.
- Update to 4.8.0:
  * New interactive and fully parametrizable definition of boundary
    conditions, materials, etc. through ONELAB variables
  * New API functions for creating trimmed BSpline/Bezier patches,
    perform raw triangulations and tetrehedralizations, get upward
    adjacencies, and create extruded boundary layers and automatic
    curve loops in built-in kernel
  * Improved performance of high-order meshing of OCC models
  * Improved handling of high resolution displays
  * New structured CGNS exporter
  * New transfinite Beta law
  * Added support for embedded curves in HXT
  * Added automatic conversion from partitioned MSH2 files to new
    partitioned entities
  * Element groups can now be imported from UNV files
  * Fixed order of Gauss quadrature for quads and hexas
  * Code modernization (C++11)
  * Further uniformization of option names to match the documented
    terminology (Mesh.Point -> Mesh.Node, ...; old names are still
    accepted, but deprecated)
  * Deprecated Mesh.MinimumElementsPerTwoPi: set value directly to
    Mesh.MeshSizeFromCurvature instead
  * Python and Julia APIs now also define snake case aliases for
    all camelCase function names
  * Small bug fixes and improvements.
  * Incompatible API changes:
    + new optional arguments to mesh/classifySurfaces,
      occ/addBSplineSurface, occ/addBezierSurface, occ/addPipe
      and view/probe
    + renamed mesh/getEdgeNumber as mesh/getEdges.
- Rebase gmsh-3.0.5-add-shebang-to-onelab.patch

-------------------------------------------------------------------
Fri Jan 15 13:31:36 UTC 2021 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Update to 4.7.1:
  * small bug fixes and improvements.
- Update to 4.7.0:
  * API errors now throw exceptions with the last error message
    (instead of an integer error code)
  * API functions now print messages on the terminal by default, and
    throw exceptions on all errors unless in interactive mode
  * new API functions to retrieve "homogeneous" model-based data
    (for improved Python performance), to set interpolation matrices
    for high-order datasets, to assign "automatic" transfinite
    meshing constraints and to pass native (C++, C, Python or
    Julia) mesh size callback
  * added option to save high-order periodic nodes info
  * added support for scripted window splitting
  * improved VTK reader
  * new MatrixOfInertia command
  * uniformized commands, options and field option names to match
    the documented terminology (CharacteristicLength -> MeshSize,
    geometry Line -> Curve, ...; old names are still accepted, but
    deprecated)
  * improved handling of complex periodic cases
  * removed bundled Mmg3D and added support for stock Mmg 5
  * Gmsh now requires C++11 and CMake 3.1, and uses Eigen by default
    instead of Blas/Lapack for dense linear algebra
  * small bug fixes.
  * Incompatible API changes: new optional argument to
    geo/addCurveLoop
- Update to 4.6.0:
  * new options to only generate initial 2D or 3D meshes (without node
    insertion), and to only mesh non-meshed entities
  * added ability to only remesh parts of discrete models
  * added support for mesh size fields and embedded points and
    surfaces in HXT
  * improved reparametrization and partitioning code
  * new OCC API functions to reduce the number of synchronizations
    for complex models
  * new OCC spline surface interfaces; new functions and options
    to control the first tag of entities, nodes and elements
  * fixed duplicated entities in STEP output
  * improved mesh subdivision and high-order pipeline
  * MED output now preserves node and element tags
  * small bug fixes.
  * Incompatible API changes: new optional arguments to mesh/clear,
    mesh/createTopology, mesh/createGeometry, occ/addThruSections,
    mesh/getPeriodicNodes; new arguments to mesh/getBasisFunctions;
    removed mesh/preallocateBasisFunctions,
    mesh/precomputeBasisFunctions and
    mesh/getBasisFunctionsForElements;
    renamed occ/setMeshSize as occ/mesh/setSize
- Drop upstream patches:
  * move-globals-to-mmg3d-c.patch
  * 0001-MMG3D-Remove-some-duplicated-variables-from-global-s.patch
  * 0002-Remove-non-namespaced-endcod-function-duplicates-MMG.patch
  * 0003-Define-global-variables-mostly-used-by-MMG_analar-in.patch

-------------------------------------------------------------------
Sun Jun  7 23:07:15 UTC 2020 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Fix failing build due to GCC10 catching redefinitions, add
  * move-globals-to-mmg3d-c.patch
  * 0001-MMG3D-Remove-some-duplicated-variables-from-global-s.patch
  * 0002-Remove-non-namespaced-endcod-function-duplicates-MMG.patch
  * 0003-Define-global-variables-mostly-used-by-MMG_analar-in.patch
- Use OCC OpenCASCADE variant, like FreeCAD. OCE is mostly dormant.

-------------------------------------------------------------------
Tue Apr  7 08:43:01 UTC 2020 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Update to 4.5.6:
  * better calculation of OCC bounding boxes using STL
  * API tutorials
  * small bug fixes
- Update to 4.5.5:
  * tooltips in GUI to help discovery of scripting options
  * fixed MED IO of high-order elements
  * fixed OCC attribute search by bounding box
  * fix parsing of mac-encoded scripts
  * new RecombineMesh command
  * added support for extrusion of mixed-dimension entities with OCC
  * small bug fixes
- Update to 4.5.4:
  * periodic mesh optimization now ensures that the master mesh is
    not modified
  * code cleanup
  * small bug fixes
- Update to 4.5.3:
  * improved positioning of corresponding nodes on periodic entities
  * improved LaTeX output
  * improved curve splitting in reparametrization
  * new binary PLY reader
  * small compilation fixes.
- Drop upstreamed patches:
  * 0001-Fix-ODR-violations-move-private-classes-into-anonymo.patch
  * 0002-Fix-two-definition-mismatches-in-contrib-mmg3d.patch
  * 0001-Add-two-missing-header-includes-in-GModelIO_OCC.patch

-------------------------------------------------------------------
Tue Feb  4 20:17:40 UTC 2020 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Move Python and Julia bindings for the public gmsh API to
  separate packages.
- Remove any references to the unmaintained, swig based
  bindings.

-------------------------------------------------------------------
Mon Feb  3 22:37:06 UTC 2020 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Update to 4.5.2:
  + periodic meshes now obey reorientation constraints
  + physical group definitions now follow compound meshing
    constraints
  + small bug fixes and improvements
- Update to 4.5.1:
  + new Min and Max commands in .geo files
  + Mesh.MinimumCirclePoints now behaves the same with all
    geometry kernels
  + fixed issue with UTF16-encoded home directories on Windows.
- Update to 4.5.0:
  + changed default 2D meshing algorithm to Frontal-Delaunay
  + new compound Spline/BSpline commands
  + new MeshSizeFromBoundary command
  + new CGNS importer/exporter
  + new X3D exporter for geometries and meshes
  + improved surface mesh reclassification
  + new separate option to govern curvature adapted meshes
    (Mesh.MinimumElementsPerTwoPi and "-clcurv val")
  + improved handling of anisotropic surface meshes in 3D Delaunay
  + improved high-order periodic meshing
  + improved 2D boolean unions
  + file chooser type is now changeable at runtime
  + FLTK GUI can now be created and destroyed at will through the api
  + fixed regression in MeshAdapt for non-periodic surfaces with
    singularities
  + combining views now copies options
  + added API support for mesh compounds, per-surface mesh algorithm
    and mesh size from boundary
  + renamed plugin AnalyseCurvedMesh to AnalyseMeshQuality
  + fixed regression for built-in kernel BSplines on non-flat
    geometries (Sphere, PolarSphere)
  + small fixes and improvements.
- Add 0001-Add-two-missing-header-includes-in-GModelIO_OCC.patch
- Incompatible API changes:
  + removed mesh/smooth (now handled by mesh/optimize like all
    other mesh optimizers)
  + renamed logger/time to logger/getWallTime and logger/cputime
    to logger/getCpuTime
  + new arguments to mesh/optimize, mesh/getElementProperties and
    occ/healShapes
  + added optional argument to mesh/classifySurfaces and view/combine.
- Enable OpenMP support
- Cleanup spec file:
  + remove no longer relevant gmsh-3.0.5-doc-building.patch
  + rename and rebase gmsh-3.0.5-add-shebang-to-onelib.patch to
    gmsh-3.0.5-add-shebang-to-onelab.patch
  + run fdupes over demos and tutorials.
- Fix license, GPL-2.0-or-later, not GPL-2.0-only
- Fix Source: URL
- Reenable LTO, no more linker segfaults

-------------------------------------------------------------------
Mon Feb  3 04:11:24 UTC 2020 - Steve Kowalik <steven.kowalik@suse.com>

- Switch python-devel BuildRequires to python3-devel.
- Run spec-cleaner over the specfile.

-------------------------------------------------------------------
Sun Sep 15 03:07:57 UTC 2019 - Bernhard Wiedemann <bwiedemann@suse.com>

- Override build host name to make package build reproducible (boo#1084909)

-------------------------------------------------------------------
Fri Aug  2 12:31:48 UTC 2019 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Disable LTO for now, linker segfaults
- Fix several ODR violations and redefinitions
  0001-Fix-ODR-violations-move-private-classes-into-anonymo.patch
  0002-Fix-two-definition-mismatches-in-contrib-mmg3d.patch
- Prefer system metis over the one from gmsh/contrib/

-------------------------------------------------------------------
Sat Jul 27 14:22:37 UTC 2019 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Update to version 4.4.1 - to many changes to list here, see
  https://gitlab.onelab.info/gmsh/gmsh/blob/master/CHANGELOG.txt
  or included CHANGELOG.txt for details.
- Packaging changes:
  * Only build HTML documentation by default, add bcond for PDF
- Cleanup specfile
  * Remove unused/obsolete BuildRequires
  * Drop bogus gmsh-2.10.1-fix_spelling_errors.patch
  * Replace gmsh-2.10.1-delete_gl2ps_from_source.patch,
    gmsh-3.0.5-fix_FTBFS_linking.patch with link_dynamic_gl2ps.patch
  * Drop obsolete gmsh-3.0.5-add-missing-headers.patch

-------------------------------------------------------------------
Tue Oct 31 22:59:54 UTC 2017 - dan.weatherill@cantab.net

- add gmsh-3.0.5-add-shebang-to-onelib.patch which adds a shebang to
  the onelib.py script, silencing an rpmbuild warning

-------------------------------------------------------------------
Mon Oct 30 23:07:35 UTC 2017 - dan.weatherill@cantab.net
- separate documentation to doc package
- change BuildRequires from OpenCASCADE-devel to oce-devel to fix build
  resolution failure
- remove BuildRequires: gcc-fortran which isn't needed anymore
- replace patch gmsh-2.10.1-add-missing-headers.patch with
  gmsh-3.0.05-add-missing-headers.patch, some of the missing headers have
  been added by upstream, others are still missing
- replace patch gmsh-2.10.1-fix_FTBFS_linking.patch with
  gmsh-3.0.5-fix_FTBFS_linking.patch  which requires different linked libraries
  to fix FTBFS
- replace patch gmsh-2.10.1-doc-building.patch with gmsh-3.0.5-doc-building.patch
  since old patch no longer applies properly. Only apply this patch to openSUSE
  versions <= Leap 42.3 (not needed with newer texlive distribution)
- change build and install sections to use cmake RPM macros 
- move static library into separate devel-static package (as required by openSUSE
  packaging guidelines)
- update to version 3.0.5 (September 6, 2017)
  * bug fixes
  3.0.5
  * bug fixes, minor improvements
  3.0.4
  * minor fixes
  3.0.3
  * new element quality measures, minor fixes
  3.0.2
  * improved handling of meshing constraints, bug fixes
  3.0.1
  * fix OpenCASCADE plane surfaces with holes
  3.0.0
  * new CSG features
  * improved GUI
  * major refactoring
  * many bug fixes
  2.16.0
  * small improvements and bug fixes
  2.15.0
  * fixed regressions
  * improved 2D boundary layer field & removed 3D boundary layer field
  * faster rendering of large meshes
  2.14.1
  * fix regressions
  * small bug fixes
  2.14.0
  * new Tochnog file format export
  * update to ONELAB 1.3
  * faster "coherence mesh"
  2.13.2
  * small improvements
  * bug fixes
  2.13.1
  * small bug fixes
  2.13.1
  * small bug fixes
  2.12.0
  * improved definition of physical groups & ONELAB clients
  * improved full quad algorithm
  * support for list of strings
  * trihedra elements and X3D format
  * improved message console
  * new colormaps
  * bug fixes
  2.11.0
  * new Else/ElseIf commands
  * new OptimizeMesh command
  * new VTK and X3D outputs
  * new keyboard shortcuts
  * small bugfixes
  * plugin renames

-------------------------------------------------------------------
Fri Sep 25 16:45:04 UTC 2015 - kkhere.geo@gmail.com

- Changes from the previous update (by toddrme2178@gmail.com) are nowhere to be found
- update to 2.10.1 
  * minor fixes.
  2.10.0 (July 21, 2015) 
  * improved periodic meshing constraints
  * new Physical specification with both label and numeric id
  * images can now be used as glyphs in post-processing views, using text 
	annotations with the `file://' prefix
  * Views can be grouped and organized in subtrees
  * improved visibility browser navigation
  * geometrical entities and post-processing views can now react to 
	double-clicks, via new generic DoubleClicked options
  * new Get/SetNumber and Get/SetString for direct access to ONELAB variables
  * small bug fixes and code cleanups.
  2.9.3 (April 18, 2015)
  * updated versions of PETSc/SLEPc and OpenCASCADE/OCE libraries used in
	 official binary builds
  * new Find() command; miscellaneous code cleanups and small fixes.
  2.9.2 (March 31, 2015)
  * added support for extrusion of embedded points/curves
  * improved hex-dominant algorithm
  * fixed crashes in quad algorithm; fix regression in MED reader introduced
	 in 2.9.0
  * new dark interface mode.
  2.9.1 (March 18, 2015)
  * minor bug fixes.
  2.9.0 (March 12, 2015)
  * improved robustness of spatial searches 
	(extruded meshes, geometry coherence)
  * improved reproductibility of 2D and 3D meshes
  * added support for high resolution ("retina") graphics
  * interactive graph point commands
  * on-the-fly creation of onelab clients in scripts
  * general periodic meshes using afine transforms
  * scripted selection of entities in bounding boxes
  * extended string and list handling functions
  * many small improvements and bug fixes.
  2.8.5 (Jul 9, 2014)
  * improved stability and error handling
  * better Coherence function
  * updated onelab API version and inline parameter definitions
  * new background image modes
  * more robust Triangulate/Tetrahedralize plugins
  * new PGF output
  * improved support for string~index variable names in parser
  * small improvements and bug fixes all over the place.
- added patch to fix document build
  - gmsh-2.10.1-doc-building.patch
- refreshed patches and their versions
  - gmsh-2.10.1-add-missing-headers.patch 
  - gmsh-2.10.1-delete_gl2ps_from_source.patch
  - gmsh-2.10.1-fix_FTBFS_linking.patch
  - gmsh-2.10.1-fix_spelling_errors.patch
  - gmsh-2.10.1-implicit.patch 
- deleted patches no longer applicable
  - gmsh-2.6.1-alauzet.patch
  - gmsh-2.6.1-api_demos.patch
  - gmsh-2.6.1-cgns.patch 
  - gmsh-2.6.1-cmake-find-lapack.patch 
  - gmsh-2.6.1-no-return.patch 
- corrected library package name to follow openSUSE rules to libGmsh2_10

-------------------------------------------------------------------
Sat Feb 28 11:32:39 UTC 2015 - dmitry_r@opensuse.org

- Rename libGmsh-devel package to gmsh-devel

-------------------------------------------------------------------
Thu Mar 13 15:34:32 UTC 2014 - toddrme2178@gmail.com

- Update to 2.8.4
  * Better reproductibility of 2D meshes
  * new mandatory 'Name' attribute to define onelab variables in DefineConstant[] & co
  * small improvements and bug fixes.
- Update to 2.8.3
  * new quick access menu and multiple view selection in GUI
  * enhanced animation creation
  * many small enhancements and bug fixes.
- Update to 2.8.2
  * improved high order tools interface
  * minor bug fixes.
- Update to 2.8.1
  * improved compound surfaces and transfinite arrangements.
- Update to 2.8.0
  * improved Delaunay point insertion
  * fixed mesh orientation of plane surfaces
  * fixed mesh size prescribed at embedded points
  * improved display of vectors at COG
  * new experimental text string display engines
  * improved fullscreen mode
  * access time/step in transformations
  * new experimental features
    * AdaptMesh and Surface In Volume
    * accept unicode file paths on Windows
  * compilation and bug fixes.
- Update to 2.7.1
  * improved Delaunay point insertion
  * updated onelab
  * better Abaqus and UNV export
  * small bug and compilation fixes.
- Update to 2.7.0
  * new single-window GUI, with dynamically customizable widget tree
  * faster STEP/BRep import
  * arbitrary size image export
  * faster 2D Delaunay/Frontal algorithms
  * full option viewer/editor
  * many bug fixes.

-------------------------------------------------------------------
Thu Sep 13 21:07:26 UTC 2012 - scorot@free.fr

- add patch9 to allow detection of lapack on 12.1 

-------------------------------------------------------------------
Thu Aug 30 20:30:49 UTC 2012 - scorot@free.fr

- version 2.6.1
 * no changelog
- add many patches from debian and update existing ones

-------------------------------------------------------------------
Fri May 11 05:19:35 UTC 2012 - scorot@free.fr

- Modify BuildRequires to match recent name changes of lapack and
  blas in project. 

