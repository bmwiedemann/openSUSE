-------------------------------------------------------------------
Fri Jan 12 15:11:33 UTC 2024 - Lubos Kocman <lubos.kocman@suse.com>

- Normalize the license based on legaldb requirements

-------------------------------------------------------------------
Sun Nov 19 18:02:09 UTC 2023 - Andy Li <andy@onthewings.net>

- update to 4.3.3
  * General improvements:
    + all : improve extra field error range
    + all : better error messages for --connect
    + hl : improve error message when hl_version is missing
    + hl/c : compiler now adds hlc define when targeting hl/c
    + macro : update macro API restriction warnings when using -D haxe-next
  * Bugfixes:
    + all : handle non existing files for positions in pretty errors
    + all : metadata support for local static vars
    + all : catch trailing invalid syntax in string interpolation
    + eval : fix Array.resize retaining values
    + eval/hl : fix catching haxe.ValueException
    + hl : make genhl respect Meta.NoExpr
    + hl : don't add bindings for non existing methods
    + hl/c : add missing I64 mod support
    + hl/c : rework reserved keywords
    + hl/c : fix Int64 unsigned right shift overflow
    + java/cs: fix stack overflow from closures constraints
    + js : DOMElement insertAdjacentElement should not be pure
    + macro : catch trailing invalid syntax in Context.parseInlineString
    + macro : fix TDAbstract without flags in haxe.macro.Printer

-------------------------------------------------------------------
Thu Sep  7 16:07:07 UTC 2023 - Andrea Manzini <andrea.manzini@suse.com>

- update to 4.3.2
  * General improvements:
    + all : do not raise error on no-op reification outside macro
  * Bugfixes:
    + all : don't infer Null if it already is Null 
    + all : fix ?? inference and precedence 
    + all : bring back forced inline 
    + all : allow non constant "inline" var init with -D no-inline 
    + all : improve @:enum abstract deprecation warning handling 
    + all : fix some stack overflow with pretty errors
    + display : fix go to definition with final 
    + display : fix completion requests with @:forwardStatics 
    + eval : fix MainLoop.add not repeating 
    + hl/eval/neko : fix exception stack when wrapping native exceptions 
    + macro : map this when restoring typed expressions 
    + macro : safe navigation fix for ExprTools.map 
    + macro : safe navigation fix for haxe.macro.Printer 
    + macro : macro generated EVars position fixes 
    + macro : fix abstract casts for local statics 
    + macro : add flags to TDAbstract to be able to construct enum abstracts 
    + nullsafety : make break/continue expressions not-nullable 
    + nullsafety : handle return in assignment 

-------------------------------------------------------------------
Sun May 21 21:21:21 UTC 2023 - ohering@suse.de

- JaneStreet libraries are 64bit, this pkg depends on them

-------------------------------------------------------------------
Wed May  3 07:16:44 UTC 2023 - Jan Engelhardt <jengelh@inai.de>

- Remove old specfile constructs

-------------------------------------------------------------------
Tue May  2 20:21:45 UTC 2023 - Jaime Marquínez Ferrándiz <jaime.marquinez.ferrandiz@fastmail.net>

- Update to 4.3.1
  * Breaking changes:
    * all : namespace message reporting defines (gh#HaxeFoundation/haxe#11142)
  * General improvements:
    * all : support deprecation for defines
  * Bugfixes:
    * all : fix --times with compilation server (gh#HaxeFoundation/haxe#11091)
    * all : fix default type parameters not respecting imports (gh#HaxeFoundation/haxe#11161)
    * all : fix bytecode bindings issues (gh#HaxeFoundation/haxe#11098)
    * macro : allow local statics in macro functions (gh#HaxeFoundation/haxe#11096)
    * cpp : fix AtomicInt warnings on cppia (gh#HaxeFoundation/haxe#11105)
    * cpp : fix deprecated implicit casts of cpp.Int64 (gh#HaxeFoundation/haxe#10998)
    * cpp : add white space around template type syntax (gh#HaxeFoundation/haxe#11107)
    * java : don't check native signatures on extern functions (gh#HaxeFoundation/haxe#11131)
    * lua : remove non existent luautf8 charCodeAt extern (gh#HaxeFoundation/haxe#11097)

-------------------------------------------------------------------
Tue May  2 06:42:38 UTC 2023 - Jaime Marquínez Ferrándiz <jaime.marquinez.ferrandiz@fastmail.net>

- Require the mbedtls-devel version to be lower than 3.0.0

-------------------------------------------------------------------
Wed Apr 12 14:01:11 UTC 2023 - Andy Li <andy@onthewings.net>

- Update to 4.3.0
  * New features:
    * support defaults for type parameters
    * support @:op(a()) on abstracts
    * support abstract keyword to reference the abstract
    * support static var at expression-level
    * support ?. safe navigation operator
    * added ?? null coalescing operator
    * add -w compiler option to configure warnings
    * added new error reporting modes
    * support custom metadata and defines
  * Standard Library:
    * added atomic operations to several targets
    * added Vector.fill
    * added sys.thread.Condition and Semaphore
    * added Http.getResponseHeaderValues to deal with multiple values of same key
    * make Sys.environment consistent between targets
    * consistent way to unset environment variables with Sys.putEnv
  * Various improvements and bug fixes detailed in
    https://github.com/HaxeFoundation/haxe/blob/4.3.0/extra/CHANGES.txt
  * Update haxelib to 4.1.0
    * Added support for documenting custom defines and metadata (#573)
    * Fixed a segmentation fault on Linux systems

-------------------------------------------------------------------
Mon Mar 14 21:28:43 UTC 2022 - Jaime Marquínez Ferrándiz <jaime.marquinez.ferrandiz@fastmail.net>

- Update to 4.2.5
  * New features:
    * php : support PHP attributes generation gh#HaxeFoundation/haxe#9964
  * Bugfixes:
    * all : fixed compiler crash in complex constraints chains gh#HaxeFoundation/haxe#10445
    * all : fixed timers execution order for timers with small time delta gh#HaxeFoundation/haxe#10567
    * js : fixed constructors with rest arguments when compiling for ES3, ES5 gh#HaxeFoundation/haxe#10490
    * php : excluded E_DEPRECATED notices from error reporting gh#HaxeFoundation/haxe#10502
    * php : fixed safe casts to native arrays gh#HaxeFoundation/haxe#10576
    * nullsafety : fixed false error on extern var fields without initialization gh#HaxeFoundation/haxe#10448


-------------------------------------------------------------------
Mon Nov  1 16:12:18 UTC 2021 - Andy Li <andy@onthewings.net>

- Update to 4.2.4
  * hl : add clipboard support in hl 1.12
  * eval : added `%` operator to `eval.numbers.Int64` and `UInt64`
  * macro : support maps in `haxe.macro.Context.makeExpr`
  * js : added `-D js-global=globalThis` to customize global object name
  * php : added more externs for PHP buildins
  * Various bug fixes detailed in
    https://github.com/HaxeFoundation/haxe/blob/4.2.4/extra/CHANGES.txt

-------------------------------------------------------------------
Tue Apr 13 13:13:13 UTC 2021 - ohering@suse.de

- Update to 4.2.1
  * Added "classic" abstract classes and functions
  * Added module-level static declarations
  * Added rest arguments with `haxe.Rest` type
  * Added per-thread event loops `sys.thread.Thread.events`
  * Support method overloading for extern methods
  * Added `EIs` constructor to `haxe.macro.Expr`
  * Treat `Any` as `Dynamic` in variance unification
  * eval : added libuv bindings under `eval.luv` package
  * Various bug fixes detailed in
    https://github.com/HaxeFoundation/haxe/blob/4.2.1/extra/CHANGES.txt

-------------------------------------------------------------------
Mon Jan 11 10:44:50 UTC 2021 - Andy Li <andy@onthewings.net>

- Update to 4.1.5
  * added an error on `return` outside of a function
  * php/python: support @:native("") for extern classes
  * allowed `Any` as type parameter in `catch(e:SomeType<Any>)`
  * improved compilation speed for `try..catch` expressions
  * added an argument to `haxe.CallStack.exceptionStack` to return
    full stack up to the topmost call
  * compatibility with PHP 8
  * Various bug fixes detailed in
    https://github.com/HaxeFoundation/haxe/blob/4.1.5/extra/CHANGES.txt

-------------------------------------------------------------------
Sat Jun 20 08:49:31 UTC 2020 - Andy Li <andy@onthewings.net>

- Update to 4.1.2
  * added contains and keyValueIterator methods to
    haxe.ds.ReadOnlyArray
  * jvm : added "--java-lib-extern"
  * Various bug fixes detailed in
    https://github.com/HaxeFoundation/haxe/releases/tag/4.1.2 

-------------------------------------------------------------------
Wed May 27 10:26:19 UTC 2020 - Andy Li <andy@onthewings.net>

- Update to 4.1.1
  * jvm : added --jvm path/to.jar CLI argument
  * Various bug fixes detailed in
    https://github.com/HaxeFoundation/haxe/releases/tag/4.1.1 
- Drop quote_command_args.patch which was integrated in this
  release. 

-------------------------------------------------------------------
Fri May 22 05:25:31 UTC 2020 - Andy Li <andy@onthewings.net>

- Update to 4.1.0
  * added tail recursion elimination
  * added unified exception handling
  * allow try {} catch(e) {} as a shortcut
  * eval : added SSL support
  * jvm : the JVM target is no longer considered experimental
  * For more improvements and changes, see
    https://github.com/HaxeFoundation/haxe/releases/tag/4.1.0
- Add upstream patch (quote_command_args.patch) to fix building
  without git.

-------------------------------------------------------------------
Thu Dec 19 14:11:45 UTC 2019 - Andy Li <andy@onthewings.net>

- Update to 4.0.5
  * java : fix boolean arguments for Type.createInstance(cls, args)
  * jvm : fix static overloads
  * java/cs : fixed Reflect.makeVarArgs(fn) for calls of fn without
    arguments
  * js : fix ObjectMap.set(obj, v)
  * js : automatically wrap compound expressions with parentheses
    when passed to js.Syntax.code()

-------------------------------------------------------------------
Fri Nov 29 21:51:40 UTC 2019 - Andy Li <andy@onthewings.net>

- Update to 4.0.3
  * hl: profiler API
  * fixed EnumValue handling in constant propagation with analyzer
    enabled
  * fixed compiler crash upon Void items in array declarations
  * hl: fixed sys.thread.Lock implementation for Hashlink 1.11+
  * fixed Std.parseInt() for hexadecimals with leading whitespaces
  * java/cs : fixed Reflect.callMethod(o, method, args) for args
    not containing optional arguments
  * cs : fixed Json.stringify for @:struct-annotated classes
  * cs : fixed bitwise shifts for cs.types.Int64
  * python : fixed invalid generation of some inlined code blocks
  * fixed an exception from haxe.zip.Huffman on reading a zip
  * fixed null-safety checker for field access on a call to inlined
    function

-------------------------------------------------------------------
Tue Nov 12 04:10:09 UTC 2019 - Andy Li <andy@onthewings.net>

- Update to 4.0.2
  * php: Improved performance of haxe.io.Bytes and enum-related
    methods in Type class of standard library.
  * haxelib: Fixed too strict requirements to haxelib.json data
    for private libs.
  * Fixed @:using static extensions on Null<SomeType>.
  * php: Fixed static methods with the same name in parent and
    child classes.

-------------------------------------------------------------------
Mon Nov  4 21:55:48 UTC 2019 - Andy Li <andy@onthewings.net>

- Update to 4.0.1
  * haxelib : Fixed git dependencies in haxelib.json.
  * jvm : Fixed compilation failure caused by a specific usage of
    Array<Dynamic>.
  * Fixed compiler crash on loops with continue in all branches of
    the body.
  * Fixed erasing typedef in AST on field access to forwarded
    abstract fields. 

-------------------------------------------------------------------
Sat Nov  2 02:58:18 UTC 2019 - Andy Li <andy@onthewings.net>

- Update to 4.0.0
  * New features: https://github.com/HaxeFoundation/haxe/wiki/
    What's-new-in-Haxe-4
  * Breaking changes: https://github.com/HaxeFoundation/haxe/wiki/
    Breaking-changes-in-Haxe-4.0.0
  * Remove unneeded patches:
    527acc3ce0bb881aafe14d7919447075774519f7.patch
    9bc4999af40324af5e48ed0e3087a4b76f84d9b8.patch

-------------------------------------------------------------------
Wed Oct 23 11:12:13 UTC 2019 - olaf@aepfle.de

- build with camlp5, use --unsafe-strings
  add 527acc3ce0bb881aafe14d7919447075774519f7.patch
  add 9bc4999af40324af5e48ed0e3087a4b76f84d9b8.patch
  add ocamllibs-2502c82e45d2cfca6dfe6ecb558f56104d0c43f9.tar.gz
  remove ocamllibs-ab5be31c6dd1fcd761c2ba16c5d767bcf6792490.tar.gz

-------------------------------------------------------------------
Fri Feb 23 09:31:36 UTC 2018 - andy@onthewings.net

- Update to 3.4.7
  * Backward compatible to Haxe 3.4.5.
  * Fixed compiler cannot find std lib when executed by another
    program.
  * Fixed compiler failure for some output directories.
  * Bugfixes to php, as3 targets as well as code completion.
  * Detail available at https://github.com/HaxeFoundation/haxe/
    blob/3.4.7/extra/CHANGES.txt#L1-L18 
 
-------------------------------------------------------------------
Mon Feb  5 08:59:40 UTC 2018 - andy@onthewings.net

- Update to 3.4.5
  * Backward compatible to Haxe 3.4.4.
  * Bugfixes and improvements to php and js targets as well as dce.
  * Detail available at https://github.com/HaxeFoundation/haxe/
    blob/3.4.5/extra/CHANGES.txt#L1-L16
- Compile haxelib as a valid binary using `nekotools boot -c ...`.

-------------------------------------------------------------------
Mon Oct  9 03:26:56 UTC 2017 - andy@onthewings.net

- Updated to 3.4.4
  * Backward compatible to Haxe 3.4.3.
  * Fix flash target broken when compiled with OCaml 4.05.
  * Detail available at https://github.com/HaxeFoundation/haxe/
    blob/3.4.4/extra/CHANGES.txt#L1-L8

-------------------------------------------------------------------
Mon Oct  2 21:41:13 UTC 2017 - jengelh@inai.de

- Trim filler wording from description.

-------------------------------------------------------------------
Tue Sep 26 08:39:49 UTC 2017 - andy@onthewings.net

- Updated to 3.4.3
  * Backward compatible to Haxe 3.4.2.
  * Various fixes, mostly related to php output.
  * Detail available at https://github.com/HaxeFoundation/haxe/
    blob/3.4.3/extra/CHANGES.txt#L1-L20

-------------------------------------------------------------------
Thu Mar 23 06:55:35 UTC 2017 - andy@onthewings.net

- Updated to 3.4.2
  * Backward compatible to Haxe 3.4.0.
  * Improvements:
    + Various fixes in cpp and php7 output.
    + Added source maps generation for php7.
  * Detail available at https://github.com/HaxeFoundation/haxe/
    blob/3.4.2/extra/CHANGES.txt#L1-L35

-------------------------------------------------------------------
Sat Feb  4 19:13:45 UTC 2017 - andy@onthewings.net

- Updated to 3.4.0
  * Backward compatible to Haxe 3.2.
  * Improvements and new features:
    + Three new targets: 1. HashLink, 2. Lua, 3. PHP7
    + Major improvements to compiler services for IDE support
    + Improved C++ output.
    + Improved static code analysis.
    + New language additions: Any, import.hx, @:structInit, etc.
  * Detail available at https://haxe.org/blog/haxe-3.4-release/

-------------------------------------------------------------------
Mon Nov 23 16:04:43 UTC 2015 - andy@onthewings.net

- Updated to 3.2.1.
- Moved the haxe standard library files to _datadir.
- Generate man pages using help2man.
- Spec file clean-up.
  * Clarified license.
  * Manually cp files instead of using "make install".
  * Added BuildRoot as suggested in openSUSE specfile guidelines.

-------------------------------------------------------------------
Sun Jun  7 10:59:20 UTC 2015 - pvince81@opensuse.org

- Fix haxelib shell script to properly pass arguments

-------------------------------------------------------------------
Sat May 16 10:19:57 UTC 2015 - dap.darkness@gmail.com

- Updated to 4.2.0:
  * New features:
    + all: added @:noPrivateAccess to re-enable access
      restrictions within @:privateAccess
    + cpp: some support for @:nativeGen metadata
  * Bugfixes:
    + all: @:generic classes with constructor constraints detection
    + all: variable initialization check issue in loop condition
    + all: pattern matching on @:enum abstracts via field access
    + all: missing implicit casts in Map literals (#4100)
    + all: various minor issues in haxe.xml.Parser
    + all: class path issue when HAXE_STD_PATH is set (#4163)
    + js: DCE issue related to printing enums (#4197)
    + js: various issues with the new Bytes implementation
    + php: EOF handling in FileInput.readByte (#4082)
    + cs/java: Math.fround implementation (#4177)
    + cs/java: some cases of Std.parseInt failing (#4132)
    + cpp: compilation without -main (#4199)
  * General improvements and optimizations:
    + all: --macro keep no longer causes types to be included
      for compilation
    + php: support interpolation in php code
    + js: added variable number of arguments support
      in js.html.* classes
    + js: refined new HTML externs
  * Macro features and changes:
    + macro: [breaking] synced FClosure and FInstance
      with the compiler updates
- %install section refactoring.
- general spec file clean-up.

-------------------------------------------------------------------
Sun May 10 20:18:03 UTC 2015 - dap.darkness@gmail.com

- Added missing files to resolve builds issue.
- Fixed various warnings.

-------------------------------------------------------------------
Sat Jan 24 20:36:26 UTC 2015 - prusnak@opensuse.org

- imported package from dmacvicar
- update to version 3.1.3

