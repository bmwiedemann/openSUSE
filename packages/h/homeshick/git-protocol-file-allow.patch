diff --git a/lib/commands/clone.sh b/lib/commands/clone.sh
index a4e1c1b..4e8f10f 100644
--- a/lib/commands/clone.sh
+++ b/lib/commands/clone.sh
@@ -22,16 +22,16 @@ function clone {
 	local git_out
 	version_compare "$GIT_VERSION" 1.6.5
 	if [[ $? != 2 ]]; then
-		git_out=$(git clone --recursive "$git_repo" "$repo_path" 2>&1) || \
+		git_out=$(git -c protocol.file.allow=always clone --recursive "$git_repo" "$repo_path" 2>&1) || \
 			err "$EX_SOFTWARE" "Unable to clone $git_repo. Git says:" "$git_out"
 		success
 	else
-		git_out=$(git clone "$git_repo" "$repo_path" 2>&1) || \
+		git_out=$(git -c protocol.file.allow=always clone "$git_repo" "$repo_path" 2>&1) || \
 			err "$EX_SOFTWARE" "Unable to clone $git_repo. Git says:" "$git_out"
 		success
 
 		pending 'submodules' "$git_repo"
-		git_out=$(cd "$repo_path"; git submodule update --init 2>&1) || \
+		git_out=$(cd "$repo_path"; git -c protocol.file.allow=always submodule update --init 2>&1) || \
 			err "$EX_SOFTWARE" "Unable to clone submodules for $git_repo. Git says:" "$git_out"
 		success
 	fi
diff --git a/test/fixtures/dotfiles.sh b/test/fixtures/dotfiles.sh
index cd7442f..cc131d6 100644
--- a/test/fixtures/dotfiles.sh
+++ b/test/fixtures/dotfiles.sh
@@ -75,7 +75,7 @@ EOF
 	)
 
 	cd "$dotfiles"
-	git submodule add "$dotfiles_vim_submodule" home/.vim
+	git -c protocol.file.allow=always submodule add "$dotfiles_vim_submodule" home/.vim
 	git commit -m 'New vim configuration submodule'
 }
 
diff --git a/test/fixtures/module-files.sh b/test/fixtures/module-files.sh
index f4d2b6a..a14658a 100644
--- a/test/fixtures/module-files.sh
+++ b/test/fixtures/module-files.sh
@@ -24,7 +24,7 @@ EOF
 	)
 
 
-	git submodule add "$my_module"
+	git -c protocol.file.allow=always submodule add "$my_module"
 	git commit -m 'my_module (git submodule) added for my new module-files repo'
 
 	mkdir home
diff --git a/test/fixtures/nested-submodules.sh b/test/fixtures/nested-submodules.sh
index f821ecb..5eec1b5 100644
--- a/test/fixtures/nested-submodules.sh
+++ b/test/fixtures/nested-submodules.sh
@@ -40,11 +40,11 @@ EOF
 			git commit -m 'Add info file for level2 repo'
 		)
 
-		git submodule add "$level2" level2
+		git -c protocol.file.allow=always submodule add "$level2" level2
 		git commit -m 'level2 submodule added for level1'
 	)
 
-	git submodule add "$level1" level1
+	git -c protocol.file.allow=always submodule add "$level1" level1
 	git commit -m 'level1 submodule added for level0'
 
 	local home="$REPO_FIXTURES/home-for-nested-submodule"
@@ -84,15 +84,15 @@ EOF
 				git commit -m 'Add info file for subsub repo'
 			)
 
-			git submodule add "$subsub" .subdir2
+			git -c protocol.file.allow=always submodule add "$subsub" .subdir2
 			git commit -m 'subsub submodule added for level2'
 		)
 
-		git submodule add "$homesub" .subdir1
+		git -c protocol.file.allow=always submodule add "$homesub" .subdir1
 		git commit -m 'homesub submodule added for level1'
 	)
 
-	git submodule add "$home" home
+	git -c protocol.file.allow=always submodule add "$home" home
 	git commit -m 'home submodule added for level0'
 }
 
diff --git a/test/fixtures/submodule-outside-home.sh b/test/fixtures/submodule-outside-home.sh
index af06798..bbdb2b4 100644
--- a/test/fixtures/submodule-outside-home.sh
+++ b/test/fixtures/submodule-outside-home.sh
@@ -24,7 +24,7 @@ EOF
 	)
 
 
-	git submodule add "$the_submodule"
+	git -c protocol.file.allow=always submodule add "$the_submodule"
 	git commit -m 'the-submodule (git submodule) added for my new module-files repo'
 
 	mkdir home
