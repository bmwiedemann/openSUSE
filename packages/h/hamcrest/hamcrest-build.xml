<?xml version="1.0" encoding="UTF-8"?>

<project name="hamcrest" default="package" basedir=".">

  <!-- ====================================================================== -->
  <!-- Build environment properties                                           -->
  <!-- ====================================================================== -->

  <property file="build.properties"/>

  <property name="project.groupId" value="org.hamcrest"/>
  <property name="project.artifactId" value="hamcrest"/>
  <property name="project.version" value="3.0"/>

  <property name="bundle.version" value="${project.version}.0"/>

  <property name="compiler.release" value="8"/>
  <property name="compiler.source" value="1.${compiler.release}"/>
  <property name="compiler.target" value="${compiler.source}"/>

  <property name="build.finalName" value="${project.artifactId}-${project.version}"/>
  <property name="build.dir" value="target"/>
  <property name="build.outputDir" value="${build.dir}/classes"/>
  <property name="build.srcDir" value="src/main/java"/>
  <property name="build.resourceDir" value="src/main/resources"/>
  <property name="build.testOutputDir" value="${build.dir}/test-classes"/>
  <property name="build.testDir" value="src/test/java"/>
  <property name="build.testResourceDir" value="src/test/resources"/>
  <property name="test.reports" value="${build.dir}/test-reports"/>
  <property name="reporting.outputDirectory" value="${build.dir}/site"/>

  <!-- ====================================================================== -->
  <!-- Cleaning up target                                                     -->
  <!-- ====================================================================== -->

  <target name="clean" description="Clean the output directory">
    <delete dir="${build.dir}"/>
  </target>

  <!-- ====================================================================== -->
  <!-- Compilation target                                                     -->
  <!-- ====================================================================== -->

  <target name="compile" description="Compile the code">
    <mkdir dir="${build.outputDir}"/>
    <javac destdir="${build.outputDir}"
           nowarn="false"
           debug="true"
           optimize="false"
           deprecation="true"
           release="${compiler.release}"
           target="${compiler.target}"
           verbose="false"
           fork="false"
           source="${compiler.source}">
      <src>
        <pathelement location="${build.srcDir}"/>
      </src>
    </javac>
  </target>

  <!-- ====================================================================== -->
  <!-- Test-compilation target                                                -->
  <!-- ====================================================================== -->

  <target name="compile-tests"
          depends="compile"
          description="Compile the test code"
          unless="test.skip">
    <mkdir dir="${build.testOutputDir}"/>
    <javac destdir="${build.testOutputDir}"
           nowarn="false"
           debug="true"
           optimize="false"
           deprecation="true"
           release="${compiler.release}"
           target="${compiler.target}"
           verbose="false"
           fork="false"
           source="${compiler.source}">
      <src>
        <pathelement location="${build.testDir}"/>
      </src>
      <classpath>
        <pathelement location="${build.outputDir}"/>
      </classpath>
    </javac>
  </target>

  <!-- ====================================================================== -->
  <!-- Run all tests                                                          -->
  <!-- ====================================================================== -->

  <target name="test"
          depends="compile-tests, junit-missing"
          unless="junit.skipped"
          description="Run the test cases">
    <mkdir dir="${test.reports}"/>
    <junit printSummary="yes" haltonerror="true" haltonfailure="true" fork="true" dir=".">
      <sysproperty key="basedir" value="."/>
      <formatter type="xml"/>
      <formatter type="brief" usefile="false"/>
      <classpath>
        <pathelement location="${build.outputDir}"/>
        <pathelement location="${build.testOutputDir}"/>
      </classpath>
      <batchtest todir="${test.reports}" unless="test">
        <fileset dir="${build.testDir}">
          <include name="**/Test*.java"/>
          <include name="**/*Test.java"/>
          <include name="**/*TestCase.java"/>
          <exclude name="**/*Abstract*Test.java"/>
        </fileset>
      </batchtest>
      <batchtest todir="${test.reports}" if="test">
        <fileset dir="${build.testDir}">
          <include name="**/${test}.java"/>
          <exclude name="**/*Abstract*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="test-junit-present">
    <available classname="junit.framework.Test" property="junit.present"/>
  </target>

  <target name="test-junit-status"
          depends="test-junit-present">
    <condition property="junit.missing">
      <and>
        <isfalse value="${junit.present}"/>
        <isfalse value="${test.skip}"/>
      </and>
    </condition>
    <condition property="junit.skipped">
      <or>
        <isfalse value="${junit.present}"/>
        <istrue value="${test.skip}"/>
      </or>
    </condition>
  </target>

  <target name="junit-missing"
          depends="test-junit-status"
          if="junit.missing">
    <echo>=================================== WARNING ===================================</echo>
    <echo> JUnit is not present in the test classpath or your $ANT_HOME/lib directory. Tests not executed.</echo>
    <echo>===============================================================================</echo>
  </target>

  <!-- ====================================================================== -->
  <!-- Javadoc target                                                         -->
  <!-- ====================================================================== -->

  <target name="javadoc" description="Generates the Javadoc of the application">
    <javadoc sourcepath="${build.srcDir}"
             packagenames="*"
             destdir="${reporting.outputDirectory}/apidocs"
             access="protected"
             source="${compiler.source}"
             verbose="false"
             version="true"
             use="true"
             author="true"
             splitindex="false"
             nodeprecated="false"
             nodeprecatedlist="false"
             notree="false"
             noindex="false"
             nohelp="false"
             nonavbar="false"
             serialwarn="false"
             charset="ISO-8859-1"
             linksource="false"
             doctitle="Hamcrest ${project.version} API"
             breakiterator="false"/>
  </target>

  <!-- ====================================================================== -->
  <!-- Package target                                                         -->
  <!-- ====================================================================== -->

  <target name="package" depends="compile,test" description="Package the application">
    <jar jarfile="${build.dir}/${build.finalName}.jar"
         compress="true"
         index="false"
         basedir="${build.outputDir}"
         excludes="**/package.html">
      <manifest>
        <attribute name="Automatic-Module-Name" value="${project.groupId}"/>
        <attribute name="Bundle-ManifestVersion" value="2"/>
        <attribute name="Bundle-Name" value="${project.artifactId}"/>
        <attribute name="Bundle-SymbolicName" value="${project.groupId}"/>
        <attribute name="Bundle-Version" value="${bundle.version}"/>
        <attribute name="Export-Package" value="org.hamcrest.beans;uses:=&quot;org.hamcrest&quot;;version=&quot;${bundle.version}&quot;,org.hamcrest.collection;uses:=&quot;org.hamcrest&quot;;version=&quot;${bundle.version}&quot;,org.hamcrest.comparator;uses:=&quot;org.hamcrest&quot;;version=&quot;${bundle.version}&quot;,org.hamcrest.core;uses:=&quot;org.hamcrest&quot;;version=&quot;${bundle.version}&quot;,org.hamcrest.internal;uses:=&quot;org.hamcrest&quot;;version=&quot;${bundle.version}&quot;,org.hamcrest.io;uses:=&quot;org.hamcrest&quot;;version=&quot;${bundle.version}&quot;,org.hamcrest.number;uses:=&quot;org.hamcrest&quot;;version=&quot;${bundle.version}&quot;,org.hamcrest.object;uses:=&quot;org.hamcrest&quot;;version=&quot;${bundle.version}&quot;,org.hamcrest.text;uses:=&quot;org.hamcrest&quot;;version=&quot;${bundle.version}&quot;,org.hamcrest.xml;uses:=&quot;javax.xml.namespace,org.hamcrest,org.w3c.dom&quot;;version=&quot;${bundle.version}&quot;,org.hamcrest;uses:=&quot;javax.xml.namespace,org.hamcrest.collection,org.hamcrest.core,org.hamcrest.internal,org.w3c.dom&quot;;version=&quot;${bundle.version}&quot;"/>
        <attribute name="Import-Package" value="javax.xml.namespace;resolution:=optional,javax.xml.xpath;resolution:=optional,org.hamcrest,org.hamcrest.beans,org.hamcrest.collection,org.hamcrest.comparator,org.hamcrest.core,org.hamcrest.internal,org.hamcrest.number,org.hamcrest.object,org.hamcrest.text,org.hamcrest.xml,org.w3c.dom;resolution:=optional"/>
        <attribute name="Implementation-Title" value="${project.artifactId}"/>
        <attribute name="Implementation-Vendor" value="${project.groupId}"/>
        <attribute name="Implementation-Version" value="${project.version}"/>
        <attribute name="JavaPackages-ArtifactId" value="${project.artifactId}"/>
        <attribute name="JavaPackages-GroupId" value="${project.groupId}"/>
        <attribute name="JavaPackages-Version" value="${project.version}"/>
        <attribute name="Require-Capability" value="osgi.ee;filter:=&quot;(&amp;(osgi.ee=JavaSE)(version=${compiler.target}))&quot;"/>
      </manifest>
    </jar>
  </target>

  <!-- ====================================================================== -->
  <!-- A dummy target for the package named after the type it creates         -->
  <!-- ====================================================================== -->

  <target name="jar" depends="package" description="Builds the jar for the application"/>

</project>
