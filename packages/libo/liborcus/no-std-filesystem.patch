Index: liborcus-0.18.1/doc_example/Makefile.am
===================================================================
--- liborcus-0.18.1.orig/doc_example/Makefile.am
+++ liborcus-0.18.1/doc_example/Makefile.am
@@ -56,7 +56,7 @@ SPDOC_LDADD = \
 spreadsheet_doc_1_SOURCES = \
 	spreadsheet_doc_1.cpp
 
-spreadsheet_doc_1_LDADD = $(SPDOC_LDADD)
+spreadsheet_doc_1_LDADD = $(SPDOC_LDADD) $(BOOST_FILESYSTEM_LIBS)
 
 spreadsheet_doc_1_num_and_formula_SOURCES = \
 	spreadsheet_doc_1_num_and_formula.cpp
@@ -75,7 +75,7 @@ spreadsheet_doc_2_sheets_no_string_pool_
 
 spreadsheet_doc_2_sheets_no_string_pool_LDADD = \
 	../src/parser/liborcus-parser-@ORCUS_API_VERSION@.la \
-	../src/liborcus/liborcus-@ORCUS_API_VERSION@.la
+	../src/liborcus/liborcus-@ORCUS_API_VERSION@.la $(BOOST_FILESYSTEM_LIBS)
 
 spreadsheet_doc_2_sheets_with_string_pool_SOURCES = \
 	spreadsheet_doc_2_sheets_with_string_pool.cpp
Index: liborcus-0.18.1/doc_example/spreadsheet_doc_1.cpp
===================================================================
--- liborcus-0.18.1.orig/doc_example/spreadsheet_doc_1.cpp
+++ liborcus-0.18.1/doc_example/spreadsheet_doc_1.cpp
@@ -8,13 +8,13 @@
 
 #include <iostream>
 #include <cstdlib>
-#include <filesystem>
+#include <boost/filesystem.hpp>
 
 using namespace orcus;
 
 int main()
 {
-    std::filesystem::path input_dir = std::getenv("INPUTDIR");
+    boost::filesystem::path input_dir = std::getenv("INPUTDIR");
 
     //!code-start: instantiate
     spreadsheet::range_size_t ss{1048576, 16384};
@@ -28,7 +28,7 @@ int main()
 
     //!code-start: read-file
     auto filepath = input_dir / "document.ods";
-    loader.read_file(filepath.native());
+    loader.read_file(filepath.string());
     //!code-end: read-file
 
     //!code-start: model-context
Index: liborcus-0.18.1/doc_example/spreadsheet_doc_1_num_and_formula.cpp
===================================================================
--- liborcus-0.18.1.orig/doc_example/spreadsheet_doc_1_num_and_formula.cpp
+++ liborcus-0.18.1/doc_example/spreadsheet_doc_1_num_and_formula.cpp
@@ -9,13 +9,13 @@
 #include <ixion/cell.hpp>
 
 #include <iostream>
-#include <filesystem>
+#include <boost/filesystem.hpp>
 
 using namespace orcus;
 
 int main()
 {
-    std::filesystem::path input_dir = std::getenv("INPUTDIR");
+    boost::filesystem::path input_dir = std::getenv("INPUTDIR");
 
     // Instantiate a document, and wrap it with a factory.
     spreadsheet::range_size_t ss{1048576, 16384};
@@ -26,7 +26,7 @@ int main()
     // to populate the document.
     orcus_ods loader(&factory);
     auto filepath = input_dir / "document.ods";
-    loader.read_file(filepath.native());
+    loader.read_file(filepath.string());
     doc.recalc_formula_cells();
 
     // Now that the document is fully populated, access its content.
Index: liborcus-0.18.1/doc_example/spreadsheet_doc_2.cpp
===================================================================
--- liborcus-0.18.1.orig/doc_example/spreadsheet_doc_2.cpp
+++ liborcus-0.18.1/doc_example/spreadsheet_doc_2.cpp
@@ -2,7 +2,7 @@
 #include <orcus/spreadsheet/import_interface.hpp>
 #include <orcus/orcus_ods.hpp>
 
-#include <filesystem>
+#include <boost/filesystem.hpp>
 #include <iostream>
 
 namespace ss = orcus::spreadsheet;
@@ -33,12 +33,12 @@ public:
 
 int main()
 {
-    std::filesystem::path input_dir = std::getenv("INPUTDIR");
+    boost::filesystem::path input_dir = std::getenv("INPUTDIR");
     auto filepath = input_dir / "multi-sheets.ods";
 
     my_empty_import_factory factory;
     orcus::orcus_ods loader(&factory);
-    loader.read_file(filepath.native());
+    loader.read_file(filepath.string());
 
     return EXIT_SUCCESS;
 }
Index: liborcus-0.18.1/doc_example/spreadsheet_doc_2_sheets_no_string_pool.cpp
===================================================================
--- liborcus-0.18.1.orig/doc_example/spreadsheet_doc_2_sheets_no_string_pool.cpp
+++ liborcus-0.18.1/doc_example/spreadsheet_doc_2_sheets_no_string_pool.cpp
@@ -4,7 +4,7 @@
 
 #include <iostream>
 #include <memory>
-#include <filesystem>
+#include <boost/filesystem.hpp>
 
 //!code-start: cell_value
 namespace ss = orcus::spreadsheet;
@@ -112,12 +112,12 @@ public:
 
 int main()
 {
-    std::filesystem::path input_dir = std::getenv("INPUTDIR");
+    boost::filesystem::path input_dir = std::getenv("INPUTDIR");
     auto filepath = input_dir / "multi-sheets.ods";
 
     my_import_factory factory;
     orcus::orcus_ods loader(&factory);
-    loader.read_file(filepath.native());
+    loader.read_file(filepath.string());
 
     return EXIT_SUCCESS;
 }
Index: liborcus-0.18.1/doc_example/spreadsheet_doc_2_sheets_with_formula.cpp
===================================================================
--- liborcus-0.18.1.orig/doc_example/spreadsheet_doc_2_sheets_with_formula.cpp
+++ liborcus-0.18.1/doc_example/spreadsheet_doc_2_sheets_with_formula.cpp
@@ -6,7 +6,7 @@
 #include <memory>
 #include <unordered_map>
 #include <deque>
-#include <filesystem>
+#include <boost/filesystem.hpp>
 
 namespace ss = orcus::spreadsheet;
 
@@ -279,12 +279,12 @@ public:
 
 int main()
 {
-    std::filesystem::path input_dir = std::getenv("INPUTDIR");
+    boost::filesystem::path input_dir = std::getenv("INPUTDIR");
     auto filepath = input_dir / "multi-sheets.ods";
 
     my_import_factory factory;
     orcus::orcus_ods loader(&factory);
-    loader.read_file(filepath.native());
+    loader.read_file(filepath.string());
 
     return EXIT_SUCCESS;
 }
Index: liborcus-0.18.1/doc_example/spreadsheet_doc_2_sheets_with_string_pool.cpp
===================================================================
--- liborcus-0.18.1.orig/doc_example/spreadsheet_doc_2_sheets_with_string_pool.cpp
+++ liborcus-0.18.1/doc_example/spreadsheet_doc_2_sheets_with_string_pool.cpp
@@ -6,7 +6,7 @@
 #include <memory>
 #include <unordered_map>
 #include <deque>
-#include <filesystem>
+#include <boost/filesystem.hpp>
 
 namespace ss = orcus::spreadsheet;
 
@@ -193,12 +193,12 @@ public:
 
 int main()
 {
-    std::filesystem::path input_dir = std::getenv("INPUTDIR");
+    boost::filesystem::path input_dir = std::getenv("INPUTDIR");
     auto filepath = input_dir / "multi-sheets.ods";
 
     my_import_factory factory;
     orcus::orcus_ods loader(&factory);
-    loader.read_file(filepath.native());
+    loader.read_file(filepath.string());
 
     return EXIT_SUCCESS;
 }
