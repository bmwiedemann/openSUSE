<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>82b498abfa18b1e25c3df4a24afa75a7</srcmd5>
    <version>0.2.7774~beta22</version>
    <time>1495133178</time>
    <user>dimstar_suse</user>
    <comment>libmodplug replacement</comment>
    <requestid>492493</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>9169228ae7960be38076507225daebf4</srcmd5>
    <version>0.2.8043~beta23</version>
    <time>1496327314</time>
    <user>dimstar_suse</user>
    <comment>- Add patch fixing issue bsc#1040149 wrong includedir propagation:
  * libmodpulg-pcfile.patch

- Version update to 0.2.8043-beta23
  * foo_openmpt: Interpolation filter and volume ramping settings were
    confused in previous versions. This version resets both to the defaults.
- Make mpg123 on by default</comment>
    <requestid>497306</requestid>
  </revision>
  <revision rev="3" vrev="2">
    <srcmd5>d1a93998e3bcf803580479f4b63d2dae</srcmd5>
    <version>0.2.8043~beta23</version>
    <time>1497786592</time>
    <user>dimstar_suse</user>
    <comment>- baselibs.conf for libmodplug.so.1</comment>
    <requestid>503696</requestid>
  </revision>
  <revision rev="4" vrev="3">
    <srcmd5>9516f2eeca896af7c3d6297d8b4048ef</srcmd5>
    <version>0.2.8043~beta23</version>
    <time>1497944477</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>504878</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>cab77ad484567b9891b1b5d0900527d4</srcmd5>
    <version>0.2.8461~beta26</version>
    <time>1500274973</time>
    <user>dimstar_suse</user>
    <comment>- Version update to 0.2.8461-beta26 bsc#1048666 CVE-2017-11311:
  * various small fixes and seciruity tweaks</comment>
    <requestid>510210</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>232f5f684d8939e37d5e67914fc0c8b6</srcmd5>
    <version>0.3.7</version>
    <time>1521904050</time>
    <user>dimstar_suse</user>
    <comment>- Version update to 0.3.11:
  * Various speedup improvements and features all around
  * Fuzzying fixes</comment>
    <requestid>589661</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>d719b0bd1a38701d9b843ee316f0503b</srcmd5>
    <version>0.3.8</version>
    <time>1524400429</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.3.8
  * [Sec] Possible out-of-bounds memory read with IT / ITP / MO3
    files containing pattern loops.
  * Keep track of active SFx macro during seeking.
  * The &quot;note cut&quot; duplicate note action did not volume-ramp the
    previously playing sample.
  * A song starting with non-existing patterns could not be played.
  * DSM: Support restart position and 16-bit samples.
  * DTM: Import global volume.
- Version update to 0.3.7:
  * Various speedup improvements and features all around
  * Fuzzying fixes
- Version update to 0.2.8461-beta26 bsc#1048666 CVE-2017-11311:
  * various small fixes and seciruity tweaks
- Add libopenmpt0 and libopenmpt_modplug1 to baselibs.conf too.
- baselibs.conf for libmodplug.so.1
- Add patch fixing issue bsc#1040149 wrong includedir propagation:
  * libmodpulg-pcfile.patch
- Version update to 0.2.8043-beta23
  * foo_openmpt: Interpolation filter and volume ramping settings were
    confused in previous versions. This version resets both to the defaults.
- Make mpg123 on by default
- Update to 0.2.7774-beta22
- Make mpg123 conditional and disabled for now by default
- Fix the Factory build with the new rpm
- Update summaries and descriptions.
- Enable the SDL2 driver as an option, as the portaudio driver
  appears to hang with ALSA (and not everyone runs Pulseaudio).
- Initial package containing libopenmod more updated secure alternative
  bsc#1022032
</comment>
    <requestid>598004</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>46e9b80ad2b5f7a91a5fa87f85e0c204</srcmd5>
    <version>0.3.9</version>
    <time>1527673277</time>
    <user>dimstar_suse</user>
    <comment>- Up to 0.3.9:
  * [Sec] Possible write near address 0 in out-of-memory situations when reading AMS files (r10149).
  * [Bug] openmpt123: Fixed build failure in C++17 due to use of removed feature std::random_shuffle.
  * STM: Having both Bxx and Cxx commands in a pattern imported the Bxx command incorrectly.
  * STM: Last character of sample name was missing.
  * Speed up reading of truncated ULT files.
  * ULT: Portamento import was sometimes broken.
  * The resonant filter was sometimes unstable when combining low-volume samples, low cutoff and high mixing rates.</comment>
    <requestid>612641</requestid>
  </revision>
  <revision rev="9" vrev="2">
    <srcmd5>56a0bac508c0dfe3cd9bf8656ffb09a7</srcmd5>
    <version>0.3.9</version>
    <time>1527934549</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>613640</requestid>
  </revision>
  <revision rev="10" vrev="3">
    <srcmd5>4e4bfeef84bb106e54e35865c4fef353</srcmd5>
    <version>0.3.9</version>
    <time>1528195963</time>
    <user>dimstar_suse</user>
    <comment>    when reading AMS files (bsc#1095644 CVE-2018-11710)</comment>
    <requestid>613979</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>8375c50820d53879bdded809ba3371bb</srcmd5>
    <version>0.3.11</version>
    <time>1533214073</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>625937</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>78e0a277a6fe02c1b1431a6b85e6ed5f</srcmd5>
    <version>0.3.12</version>
    <time>1538502203</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.3.12:
  * [Bug] libmodplug: Setting SNDMIX_NORESAMPLING in the C++ API
    always resulted in linear interpolation instead of nearest
    neighbour.
  * libopenmpt now compiles without warnings with GCC 8.
  * Jump commands on the same row as the end of a pattern loop
    covering the restart position of the module could cause the
    module to loop even when looping was disabled.
  * MO3: Reject overly long MP3 and Vorbis samples.
  * play_note from the libopenmpt_ext interface sometimes silenced
    the start of a triggered sample.
</comment>
    <requestid>637766</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>bbe3cc4265fb3b47dccb9b96bb9784b8</srcmd5>
    <version>0.3.13</version>
    <time>1541509001</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.3.13:
  * [Sec] Crash with malformed MED files.
  * Transposed samples in AMF ASYLUM modules were not played
    correctly.
  * Notes triggered by libopenmpt_ext play_note could be played
    with a panbrello effect if the same virtual channel was
    previously used with panbrello.
  * Clicks when stopping channels that didn’t end at zero volume.
  * XM: Do not import non-standard commands N and M as channel
    volume commands.
</comment>
    <requestid>643804</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>c8fe2303be841ac74e599e69728aac08</srcmd5>
    <version>0.4.0</version>
    <time>1545996713</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.4.0:
  * [New] libopenmpt now includes emulation of the OPL chip and
    thus plays OPL instruments in S3M, C67 and MPTM files.
    OPL chip emulation volume can be changed with the new ctl
    render.opl.volume_factor.
  * [New] libopenmpt now supports CDFM / Composer 670 module files.
  * [New] libopenmpt: New ctl play.at_end can be used to change
    what happens when the song end is reached:
    - “fadeout”: Fades the module out for a short while.
      Subsequent reads after the fadeout will return 0 rendered
      frames. This is the default and identical to the behaviour
      in previous libopenmpt versions.
    - “continue”: Returns 0 rendered frames when the song end is
      reached. Subsequent reads will continue playing from the song
      start or loop start. This can be used for custom loop logic,
      such as loop auto-detection and longer fadeouts.
    - “stop”: Returns 0 rendered frames when the song end is
      reached. Subsequent reads will return 0 rendered frames.
  * [New] Add new metadata fields &quot;originaltype&quot; and
    &quot;originaltype_long&quot; which allow more clearly reflecting what
    is going on with converted formats like MO3 and GDM.
  * [Change] openmpt123: openmpt123 now rejects --output-type in
    --ui and --batch modes and also rejects --output in --render
    mode. These combinations of options really made no sense and
    were rather confusing.
  * [Regression] Support for libmpg123 older than 1.14.0 has been
    removed.
  * [Regression] libmodplug: Support for emulating libmodplug
    0.8.7 API/ABI has been removed.
  * [Bug] xmp-openmpt: Sample rate and number of output channels
    were not applied correctly when using per-file settings.
  * [Bug] Internal mixer state was not initialized properly when
    initially rendering in 44100kHz stereo format.
  * [Bug] openmpt123: Prevent libsdl2 and libsdl from being enabled
    at the same time because they conflict with each other.
  * [Bug] libmodplug: Setting SNDMIX_NORESAMPLING in the C++ API
    always resulted in linear interpolation instead of nearest
    neighbour
  * IT: In Compatible Gxx mode, allow sample changes next to a tone
    portamento effect if a previous sample has already stopped
    playing.
  * IT: Fix broken volume envelopes with negative values as found
    in breakdwn.it by Elysis.
  * MOD: Slides and delayed notes are executed on every repetition
    of a row with row delay (fixes “ode to protracker”).
  * XM: If the sustain point of the panning envelope is reached
    before key-off, it is never released.
  * XM: Do not default recall volume / panning for delayed
    instrument-less notes
  * XM :E60 loop bug was not considered in song length calucation.
  * S3M: Notes without instrument number use previous note’s sample
    offset.
  * Tighten M15 and MOD file rejection heuristics.
  * J2B: Ignore frequency limits from file header.
    Fixes Medivo.j2b, broken since libopenmpt-0.2.6401-beta17.
  * STM: More accurate tempo calculation.
  * STM: Better support for early format revisions (no such files
    have been found in the wild, though).
  * STM: Last character of sample name was missing.
  * SFX: Work around bad conversions of the “Operation Stealth”
    soundtrack by turning pattern breaks into note stops.
  * IMF: Filter cutoff was upside down and the cutoff range was
    too small.
  * ParamEq plugin center frequency was not limited correctly.
  * Keep track of active SFx macro during seeking.
  * The “note cut” duplicate note action did not volume-ramp the
    previously playing sample.
  * A song starting with non-existing patterns could not be played.
  * DSM: Support restart position and 16-bit samples.
  * DTM: Import global volume.
  * MOD: Support notes in octave 2, like in FastTracker 2
    (fixes DOPE.MOD).
  * Do not apply Amiga playback heuristics to MOD files that have
    clearly been written with a PC tracker.
  * MPTM: More logical release node behaviour.
  * Subsong search is now less thorough. It could previously find
    many subsongs that are technically correct (unplayed rows at
    the beginning of patterns that have been jumped over due to
    pattern breaks), but so far no real-world module that would
    require such a thorough subsong detection was found. The old
    mechanism caused way more false positives than intended with
    real-world modules, though.
  * Restrict the unpacked size of compressed DMF, IT, MDL and MO3
    samples to avoid huge allocations with malformed small files.
</comment>
    <requestid>660873</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>f2d59892cc81357a77d66b409d642ccb</srcmd5>
    <version>0.4.1</version>
    <time>1546946369</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.4.1:
  * [Bug] libmodplug: Public symbols of the C++ API had
    visibility=hidden set on non-MSVC systems, which made them not
    publicly accessible.
  * MO3: Apply playback changes based on “ModPlug-made” header flag
- Drop libmodplug-no-exported-cpp-api-quickfix-v1.patch
- Add libmodplug-no-exported-cpp-api-quickfix-v1.patch: Add missing
  CSoundFile compat API (bug #1180).
</comment>
    <requestid>663192</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>487c09ab9e05d9953d1abe69f695ad02</srcmd5>
    <version>0.4.2</version>
    <time>1548537505</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.4.2:
  * [Sec] DSM: Assertion failure during file parsing with debug
    STLs.
  * [Sec] J2B: Assertion failure during file parsing with debug
    STLs.
  * S3M: Allow volume change of OPL instruments after Note Cut.
</comment>
    <requestid>667846</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>b314067b70bede7fd474d89b4d0930d9</srcmd5>
    <version>0.4.3</version>
    <time>1551023907</time>
    <user>coolo</user>
    <comment>- Update to version 0.4.3:
  * [Sec] Possible crash due to null-pointer access when doing a
    portamento from an OPL instrument to an empty instrument note
    map slot.
  * IT: Various fixes for note-off + instrument number in
    Old Effects mode.
  * MO3: Import IT row highlights as written by MO3 2.4.1.2 or
    newer. Required for modules using modern tempo mode.
</comment>
    <requestid>673313</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>6de1abec381048994a97a35523f11066</srcmd5>
    <version>0.4.4</version>
    <time>1554930602</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.4.4:
  * [Bug] Channel VU meters were swapped.
  * Startrekker: Clamp speed to 31 ticks per row.
  * MTM: Ignore unused Exy commands on import.
    Command E5x (Set Finetune) is now applied correctly.
  * MOD: Sample swapping was always enabled since it has been
    separated from the ProTracker 1/2 compatibility flag. Now it is
    always enabled for Amiga-style modules and otherwise the old
    heuristic is used again.
</comment>
    <requestid>692149</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>5528bfb7f9ac1a0df43a2f3bd64ceaa8</srcmd5>
    <version>0.4.5</version>
    <time>1559374957</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.4.5:
  * [Sec] Possible crash during playback due out-of-bounds read in
    XM and MT2 files
  * Breaking out of a sustain loop through Note-Off sometimes
    didn’t continue in the regular sample loop
  * Seeking did not stop notes playing with XM Key Off (Kxx) effect
</comment>
    <requestid>705645</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>5cc26895ce68c484f3ea75777008a60e</srcmd5>
    <version>0.4.6</version>
    <time>1565694645</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.4.6:
  * Detect IT files unpacked with early UNMO3 versions.</comment>
    <requestid>722225</requestid>
  </revision>
  <revision rev="21" vrev="2">
    <srcmd5>68daf4fe297f9f37d1d3ff0f75dc38e0</srcmd5>
    <version>0.4.6</version>
    <time>1565864902</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.4.2 bsc#1143582 CVE-2019-14382 bsc#1143584
  CVE-2019-14383:
- Update to version 0.4.0 bsc#1143581 CVE-2018-20860:
- Update to version 0.3.11 bsc#1143578 CVE-2018-20861:</comment>
    <requestid>723239</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>ee1b1adb711021ab676f423182695f00</srcmd5>
    <version>0.4.9</version>
    <time>1570701074</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.4.9 bsc#1153102 CVE-2019-17113
  * [Sec] libmodplug: C API: Limit the length of strings copied to
    the output buffer of ModPlug_InstrumentName() and
    ModPlug_SampleName() to 32 bytes (including terminating null)
    as is done by original libmodplug. This avoids potential buffer
    overflows in software relying on this limit instead of querying
    the required buffer size beforehand. libopenmpt can return
    strings longer than 32 bytes here beacuse the internal limit of
    32 bytes applies to strings encoded in arbitrary character
    encodings but the API returns them converted to UTF-8, which
    can be longer. (reported by Antonio Morales Maldonado of Semmle
    Security Research Team) (r12129)
  * [Sec] libmodplug: C++ API: Do not return 0 in
    CSoundFile::GetSampleName() and CSoundFile::GetInstrumentName()
    when a null output pointer is provided. This behaviour differed
    from libmodplug and made it impossible to determine the
    required buffer size. (r12130)

- Update to version 0.4.8:
  * [Sec] Possible crash due to out-of-bounds read when playing an
    OPL note with active filter in S3M or MPTM files (r12118).
- Update to version 0.4.7:
  * J2B: Ignore notes with non-existing instrument
    (fixes Ending.j2b)</comment>
    <requestid>736008</requestid>
  </revision>
</revisionlist>
