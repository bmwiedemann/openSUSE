---
 src/Makefile.in |    2 +-
 src/fips.c      |   39 ++++++++++++++++++++++++++++++++-------
 2 files changed, 33 insertions(+), 8 deletions(-)

Index: libgcrypt-1.6.2/src/Makefile.in
===================================================================
--- libgcrypt-1.6.2.orig/src/Makefile.in	2014-11-05 20:33:18.000000000 +0000
+++ libgcrypt-1.6.2/src/Makefile.in	2014-11-05 20:34:04.000000000 +0000
@@ -449,7 +449,7 @@ libgcrypt_la_LIBADD = $(gcrypt_res) \
 	../cipher/libcipher.la \
 	../random/librandom.la \
 	../mpi/libmpi.la \
-	../compat/libcompat.la  $(GPG_ERROR_LIBS)
+	../compat/libcompat.la  $(GPG_ERROR_LIBS) -ldl
 
 dumpsexp_SOURCES = dumpsexp.c
 dumpsexp_CFLAGS = $(arch_gpg_error_cflags)
Index: libgcrypt-1.6.2/src/fips.c
===================================================================
--- libgcrypt-1.6.2.orig/src/fips.c	2014-11-05 20:33:18.000000000 +0000
+++ libgcrypt-1.6.2/src/fips.c	2014-11-05 20:34:04.000000000 +0000
@@ -589,23 +589,48 @@ run_random_selftests (void)
   return !!err;
 }
 
+static int
+get_library_path(const char *libname, const char *symbolname, char *path, size_t pathlen)
+{
+    Dl_info info;
+    void *dl, *sym;
+    int rv = -1;
+
+        dl = dlopen(libname, RTLD_LAZY);
+        if (dl == NULL) {
+            return -1;
+        }       
+
+    sym = dlsym(dl, symbolname);
+
+    if (sym != NULL && dladdr(sym, &info)) {
+	strncpy(path, info.dli_fname, pathlen-1);
+	path[pathlen-1] = '\0';
+	rv = 0;
+    }
+
+    dlclose(dl);	
+    
+    return rv;
+}
+
 /* Run an integrity check on the binary.  Returns 0 on success.  */
 static int
 check_binary_integrity (void)
 {
 #ifdef ENABLE_HMAC_BINARY_CHECK
   gpg_error_t err;
-  Dl_info info;
+  char libpath[4096];
   unsigned char digest[32];
   int dlen;
   char *fname = NULL;
-  const char key[] = "What am I, a doctor or a moonshuttle conductor?";
-
-  if (!dladdr ("gcry_check_version", &info))
+  const char key[] = "orboDeJITITejsirpADONivirpUkvarP";
+  
+  if (get_library_path ("libgcrypt.so.20", "gcry_check_version", libpath, sizeof(libpath)))
     err = gpg_error_from_syserror ();
   else
     {
-      dlen = _gcry_hmac256_file (digest, sizeof digest, info.dli_fname,
+      dlen = _gcry_hmac256_file (digest, sizeof digest, libpath,
                                  key, strlen (key));
       if (dlen < 0)
         err = gpg_error_from_syserror ();
@@ -613,7 +638,7 @@ check_binary_integrity (void)
         err = gpg_error (GPG_ERR_INTERNAL);
       else
         {
-          fname = xtrymalloc (strlen (info.dli_fname) + 1 + 5 + 1 );
+          fname = xtrymalloc (strlen (libpath) + 1 + 5 + 1 );
           if (!fname)
             err = gpg_error_from_syserror ();
           else
@@ -622,7 +647,7 @@ check_binary_integrity (void)
               char *p;
 
               /* Prefix the basename with a dot.  */
-              strcpy (fname, info.dli_fname);
+              strcpy (fname, libpath);
               p = strrchr (fname, '/');
               if (p)
                 p++;
