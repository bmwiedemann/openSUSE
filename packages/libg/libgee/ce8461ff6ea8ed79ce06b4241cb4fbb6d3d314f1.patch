From ce8461ff6ea8ed79ce06b4241cb4fbb6d3d314f1 Mon Sep 17 00:00:00 2001
From: Rico Tzschichholz <ricotz@ubuntu.com>
Date: Wed, 20 Mar 2024 12:43:47 +0100
Subject: [PATCH] Drop unsupported inline modifier on constructor and
 destructor declarations

---
 gee/concurrentlist.vala | 6 +++---
 gee/concurrentset.vala  | 6 +++---
 gee/hazardpointer.vala  | 2 +-
 3 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/gee/concurrentlist.vala b/gee/concurrentlist.vala
index 583f827..9b5c0f9 100644
--- a/gee/concurrentlist.vala
+++ b/gee/concurrentlist.vala
@@ -420,7 +420,7 @@ public class Gee.ConcurrentList<G> : AbstractList<G> {
 	}
 
 	private class Node<G> {
-		public inline Node (G data) {
+		public Node (G data) {
 			AtomicPointer.set (&_succ, null);
 			AtomicPointer.set (&_backlink, null);
 			G data_copy = data;
@@ -431,7 +431,7 @@ public class Gee.ConcurrentList<G> : AbstractList<G> {
 			AtomicPointer.set (&_data, (owned)data_ptr);
 		}
 
-		public inline Node.head () {
+		public Node.head () {
 			AtomicPointer.set (&_succ, null);
 			AtomicPointer.set (&_backlink, null);
 			AtomicPointer.set (&_data, null);
@@ -440,7 +440,7 @@ public class Gee.ConcurrentList<G> : AbstractList<G> {
 #endif
 		}
 
-		inline ~Node () {
+		~Node () {
 			HazardPointer.set_pointer<Node<G>?> (&_succ, null, 3);
 			HazardPointer.set_pointer<Node<G>?> (&_backlink, null);
 #if DEBUG
diff --git a/gee/concurrentset.vala b/gee/concurrentset.vala
index 131d73e..465e566 100644
--- a/gee/concurrentset.vala
+++ b/gee/concurrentset.vala
@@ -1145,14 +1145,14 @@ public class Gee.ConcurrentSet<G> : AbstractSortedSet<G> {
 	}
 
 	private class Tower<G> {
-		public inline Tower (G data, uint8 height) {
+		public Tower (G data, uint8 height) {
 			_nodes = new TowerNode<G>[height];
 			_data = data;
 			_height = 0;
 			AtomicPointer.set (&_nodes[0]._backlink, null); // FIXME: This should be memory barrier
 		}
 
-		public inline Tower.head () {
+		public Tower.head () {
 			_nodes = new TowerNode<G>[_MAX_HEIGHT];
 			_height = -1;
 #if DEBUG
@@ -1160,7 +1160,7 @@ public class Gee.ConcurrentSet<G> : AbstractSortedSet<G> {
 #endif
 		}
 
-		inline ~Tower () {
+		~Tower () {
 			int height = get_height();
 			for (uint8 i = 0; i < height; i++) {
 				set_succ (null, State.NONE, i);
diff --git a/gee/hazardpointer.vala b/gee/hazardpointer.vala
index 3df5827..1710362 100644
--- a/gee/hazardpointer.vala
+++ b/gee/hazardpointer.vala
@@ -733,7 +733,7 @@ public class Gee.HazardPointer<G> { // FIXME: Make it a struct
 			AtomicInt.set (ref _active, 1);
 		}
 		
-		inline ~Node () {
+		~Node () {
 			delete _next;
 		}
 
-- 
GitLab

