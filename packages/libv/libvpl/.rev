<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>7b7b955f4db3e34445ab5456e5edf380</srcmd5>
    <version>2021.6.0</version>
    <time>1632431051</time>
    <user>dimstar_suse</user>
    <comment>- created package libvpl (jira#SLE/SLE-19446)
  * oneAPI Video Processing Library (oneVPL) dispatcher, tools, and
    examples: The oneAPI Video Processing Library (oneVPL) provides
    a single video processing API for encode, decode, and video
    processing that works across a wide range of accelerators.</comment>
    <requestid>921157</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>e95a9e81da4978d2b799f63766ba3122</srcmd5>
    <version>2021.6.0</version>
    <time>1633466025</time>
    <user>dimstar_suse</user>
    <comment>- fixed JIRA number in previous changelog</comment>
    <requestid>923066</requestid>
  </revision>
  <revision rev="3" vrev="3">
    <srcmd5>6c5bb591a5342f39b7a895861d08557c</srcmd5>
    <version>2021.6.0</version>
    <time>1635956737</time>
    <user>dimstar_suse</user>
    <comment>- remove third-party-programs.txt during setup
  * When not building on Windows using Visual Studio, the Visual
    Studio runtimes are not needed to be installed so we can remove
    these licenses from being mentioned. On Linux we're using
    cmake/make/gcc for building/installation and we don't have any
    (need for) MS Visual Studio runtime. (oneapi-src/oneVPL issue#27)
    --&gt; https://github.com/oneapi-src/oneVPL/issues/27</comment>
    <requestid>928847</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>036032e4e12d046493492be2f8acad4c</srcmd5>
    <version>2022.1.5</version>
    <time>1657559392</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2022.1.5
  * oneVPL 2022.1.0 has been updated to include functional and
    security updates.
  * part of oneVPL GPU Runtime 2022Q2 Release - 22.4.4
- third-party-programs.txt issue has been fixed; license.txt removed
  as well
- examples moved to /usr/share/vpl
- packaged new config scripts /usr/etc/modulefiles/vpl and
  /usr/etc/vpl/vars.sh</comment>
    <requestid>988343</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>26d7c9b0199de56d6192a6e0a1ee76ed</srcmd5>
    <version>2022.2.4</version>
    <time>1664210910</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1006035</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>4a09c7f53724a894efedbf1f88f0a6e5</srcmd5>
    <version>2023.0.0</version>
    <time>1667398151</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2023.0.0
  * new bump from master branch</comment>
    <requestid>1032890</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>0b5f55df572fcb0a5c0ebca1ae4cb3b6</srcmd5>
    <version>2023.0.0</version>
    <time>1667832960</time>
    <user>dimstar_suse</user>
    <comment>- needed for jira#PED-1174 (Video decoding/encoding support 
  (VA-API, ...) for Intel GPUs is outside of Mesa)</comment>
    <requestid>1034196</requestid>
  </revision>
  <revision rev="8" vrev="3">
    <srcmd5>70248bb5a1a38551d4f84c50b86b59e5</srcmd5>
    <version>2023.0.0</version>
    <time>1667903454</time>
    <user>dimstar_suse</user>
    <comment>- limit build again to x86_64 on older products than factory</comment>
    <requestid>1034455</requestid>
  </revision>
  <revision rev="9" vrev="4">
    <srcmd5>762fc0ce2acbc034f5a695dc33581d93</srcmd5>
    <version>2023.0.0</version>
    <time>1668609772</time>
    <user>dimstar_suse</user>
    <comment>- missed part of specfile to limit build to x86_64 on older
  products than factory</comment>
    <requestid>1035830</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>9d4982399911f04414847cabf40b9926</srcmd5>
    <version>2023.1.1</version>
    <time>1674043963</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1059333</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>263e1fe459ddd19e31830617a36fbfe0</srcmd5>
    <version>2023.2.0</version>
    <time>1681213878</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1078355</requestid>
  </revision>
  <revision rev="12" vrev="2">
    <srcmd5>c877e9347c616bbf19c4451631811832</srcmd5>
    <version>2023.2.0</version>
    <time>1701378063</time>
    <user>anag+factory</user>
    <comment>- only build %ix86 for Tumbleweed; otherwise just build it for
  x86_64 (bsc#1217662)</comment>
    <requestid>1129855</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>e2e166adf9d372071c54f21f3df1fad3</srcmd5>
    <version>2023.4.0</version>
    <time>1701727320</time>
    <user>anag+factory</user>
    <comment>- This includes latest version of one of the components needed for
  Video (processing) hardware support on Intel GPUs (bsc#1217770)

- Update to version 2023.4.0
  * Added
    + oneVPL API 2.10 support
    + New command line parameters to sample_multi_transcode for setting
      B Frame QP Offsets based on Pyramid Level
    + New command line parameters to the sample_vpp tool to enable video
      signal information
    + New APIs for importing and exporting shared surfaces
    + New APIs for string-based parameter configuration
  * Removed
    + Environment module support
    + Unused files and folders
  * Fixed
    + NV12 wayland render for MTL
    + Buffer starvation when wayland window is moved
    + Missing profile strings in vpl-inspect tool
    + Rdrm to use card node instead of render node
    + Rdrm tile4 selection based DRM/KMS query
    + Rdrm NV12 and P010 render for MTL
  * Changed
    + Directory layout and name of dispatcher directory
    + Location of image files used by documentation
    + Runtime library search path to remove current directory</comment>
    <requestid>1130754</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>8d7eb6fb471bc9ccb5e606957be52581</srcmd5>
    <version>2.10.1</version>
    <time>1705951818</time>
    <user>anag+factory</user>
    <comment>- u_buildfix-i586.patch
  * fixed build on i586 

- Update to version 2.10.1
  + Changed
    * Project name to Intel® Video Processing Library (Intel® VPL)
    * Project versioning scheme to align with library and API
      version
  + Added
    * Intel® VPL specification and associated build scripts
  + Known Issues
    * sample_decode may report &quot;DeliverOutput return error = -1&quot;
      when run using -r option
    * vpl-infer example will fail to load model if built with CMake
      version higher than 3.25.3 on Windows
- Add libva build dep</comment>
    <requestid>1140080</requestid>
  </revision>
  <revision rev="15" vrev="2">
    <srcmd5>fc7fcd891176d4f9d5aa2db27cee418d</srcmd5>
    <version>2.10.1</version>
    <time>1707233576</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1144276</requestid>
  </revision>
</revisionlist>
