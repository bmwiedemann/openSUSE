Index: lilypond-2.18.2/stepmake/stepmake/c++-vars.make
===================================================================
--- lilypond-2.18.2.orig/stepmake/stepmake/c++-vars.make
+++ lilypond-2.18.2/stepmake/stepmake/c++-vars.make
@@ -11,7 +11,7 @@ ALL_CXXFLAGS = $(CXXFLAGS) $(ALL_CXXPPFL
 
 TCC_FILES := $(call src-wildcard,*.tcc)
 HH_FILES := $(call src-wildcard,*.hh)
-CC_FILES := $(call src-wildcard,*.cc)
+CC_FILES := $(sort $(call src-wildcard,*.cc))
 INL_FILES := $(call src-wildcard,*.icc)
 YY_FILES := $(call src-wildcard,*.yy)
 LL_FILES := $(call src-wildcard,*.ll)
Index: lilypond-2.18.2/scripts/build/help2man.pl
===================================================================
--- lilypond-2.18.2.orig/scripts/build/help2man.pl
+++ lilypond-2.18.2/scripts/build/help2man.pl
@@ -218,7 +218,7 @@ $version_text ||= get_option_value $ARGV
 # the English version expands to the month as a word and the full year.  It
 # is used on the footer of the generated manual pages.  If in doubt, you may
 # just use %x as the value (which should be the full locale-specific date).
-my $date = enc strftime _("%B %Y"), localtime;
+my $date = enc strftime _("%B %Y"), gmtime($ENV{SOURCE_DATE_EPOCH} || time);
 (my $program = $ARGV[0]) =~ s!.*/!!;
 my $package = $program;
 my $version;
Index: lilypond-2.18.2/scripts/build/mf2pt1.pl
===================================================================
--- lilypond-2.18.2.orig/scripts/build/mf2pt1.pl
+++ lilypond-2.18.2/scripts/build/mf2pt1.pl
@@ -800,7 +800,9 @@ assign_default $creationdate, scalar loc
 assign_default $comment, $opthash{comment}, "Font converted to Type 1 by mf2pt1, written by Scott Pakin.";
 assign_default $weight, $opthash{weight}, "Medium";
 assign_default $fixedpitch, $opthash{fixedpitch}, 0;
-assign_default $uniqueID, $opthash{uniqueid}, int(rand(1000000)) + 4000000;
+use Digest::MD5 qw(md5);
+my @md5 = unpack("C*", md5($filebase));
+assign_default $uniqueID, $opthash{uniqueid}, int(($md5[0]<<22)+($md5[1]<<15)+($md5[2]<<7)+$md5[3]) + 4000000;
 assign_default $designsize, $opthash{designsize};
 die "${progname}: a design size must be specified in $mffile or on the command line\n" if !defined $designsize;
 die "${progname}: the design size must be a positive number\n" if $designsize<=0.0;
