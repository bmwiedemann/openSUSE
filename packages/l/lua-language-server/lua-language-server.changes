-------------------------------------------------------------------
Tue Jul 22 12:27:33 UTC 2025 - Matej Cepl <mcepl@cepl.eu>

- Update to 3.15.0:
  - [fix] Linux debugging server not starting by @jpeletier
  - feat: support hex color with # by @seblyng
  - Fix gcc15 build by @CppCXY
  - docs: add missing locale. by @qwertycxz
  - Support Custom Addons Path for Enhanced Editor Flexibility by
    @IronBlood
  - Prevent class methods from triggering missing fields
    diagnostics (Fixes #3175) by @CWood-sdf
  - fix: large unions no longer erroneously fail to match later
    variants by @DoubleThoughtTheProgrammer
  - Traditional Chinese translation by @AlexCai2019
- Switch to storing upstream soruces as a tarball â€¦ saving 60MB
  on each version is just too much to overlook.

-------------------------------------------------------------------
Mon Apr 14 06:27:26 UTC 2025 - Richard Rahl <rrahl0@opensuse.org>

- update to 3.14.0:
  * feat: provide ES localisation
  * Diagnostics for unnecessary assert
  * fix: return empty response to textDocument/formatting if no changes
  * fix: return empty response to textDocument/completion if completion
    disabled
- move tests to a bcond_with condition, as they are very flaky, even
  on x86_64, most of the time it runs on second try, sometimes 5+

-------------------------------------------------------------------
Wed Mar 26 20:37:12 UTC 2025 - Richard Rahl <rrahl0@opensuse.org>

- update to 3.13.9:
  * remove the limit for analyzing the literal table
- update to 3.13.8:
  * fix: respect ignoreDir in --check CLI
  * Merge branch 'master' into fix-ignore-in-check
  * Chore: Update help messages
  * limit 100 items for performance reason
- update to 3.13.7:
  * Fix changelog links
  * fix: incorrect arg skip pattern for --check_out_path=
  * fix: incorrect file names in doc.json
  * fix: reimplement section luals.config in doc.json
  * fix: use fs.canonical() instead of fs.absolute()
  * fix: incorrect error message for --doc-update.
  * chore: refactoring
  * fix: default path for --doc_out_path is the current directory
  * fix: remove extra ./ prefix in check report when using --check=.
  * fix_doc_config
  * fix_doc_defaultpath
  * fix: osdate is not allowed in os.time
  * fix: another regression related to type narrow and generic since v3.10.1
  * fix: fix type annotations for bit module
  * fix: correct pattern links for string methods
  * Correct version for math.type and math.ult
  * Update changelog.md
  * fix: type narrowing bugs with literal fields
  * feat: add --help

-------------------------------------------------------------------
Tue Mar  4 13:23:11 UTC 2025 - Richard Rahl <rrahl0@opensuse.org>

- fix wrapper script to launch the server
- install a missing file, otherwise the server doesn't start

-------------------------------------------------------------------
Wed Feb 19 18:07:29 UTC 2025 - Matej Cepl <mcepl@cepl.eu>

- Add missing Source for README.suse-maint.md.

-------------------------------------------------------------------
Wed Feb 19 09:24:52 UTC 2025 - Richard Rahl <rrahl0@opensuse.org>

- update to 3.13.6:
  * Exit 1 when check error
  * Send the correct insertTextFormat
  * Fixed the error that the configuration file pointed to by the --configpath
    option was not read and loaded
  * unittest: support test specify unit test
  * Improve generic pattern to support "T.*-"
  * Mark function completion items as snippets
  * Basic partial class support
  * Fix typo in doc exporter
  * LuaDoc. Fixed the start position of the comment first symbol in docs
  * Improve generic pattern to support optional, union, array. Fixed regression.
  * fix: bind variables with @class using tail comments
  * Mark postfix completions as snippets
  * Avoid truncating output in ---doc mode
  * feat: add --check_format=json|pretty
  * feat: add variable substitution support for vscode's ${workspaceFolder:x}
  * fix: missing field completion for generic class object
- update to 3.13.5:
  * fix: incorrect infer of function array annotation on tables
  * add settingLua.hint.awaitPropagate
  * Add serverInfo.version to initialize response
- update to 3.13.4:
  * hover supports detail level
  * pass tests
  * Can adjust the level of detail of Hover
- update to 3.13.3:
  * Update Love2d version
  * Fix missing-fields diagnostic not warning about missing inherited fields
  * Added support for arrays in meta build tool
- update to 3.13.2:
  * doc: fulfill translations of zh-cn
  * fix: add missing errs ~= nil checks to script/vm/type checkTableShape
- update to 3.13.0:
  * Fix table array infer
  * fix: improve type narrow with literal alias param during completion and
    signature help
  * config: add custom repository support for addonManager
  * add translate bot
  * feat: infer function param when the function is passed as call arg
- update to 3.12.0:
  * fix: regression related to type narrow and generic since v3.10.1
  * Fix vararg indices being unknown when iterated
  * [reference] Check also in tablefield
  * fix: parse storage path
  * Imports in Quick Fix are now allowed
- update to 3.11.1:
  * update format 1.5.6
  * Fix syntax errors in the Japanese locale
  * Add storagePath handling and memoization to resolvePathPlaceholders
  * Return markdown from getFunctionComment to temporarily preserve trailing
    newlines
- update to 3.11.0:
  * Add Japanese translations
  * Remove luamake install from make.sh and make.bat
  * Use string.format to fix floating point error in test output
  * Infer function parameter types when overriding the same-named class
    function in an instance of that class
  * feat: type narrow types with literal fields
  * add: placeholder for ${addons} for paths
  * lint: cleanup unused code and redefined locals
  * Support using ---@class on rawset(_G, ...) to annotate the created global variable
  * fix: type narrow on fields with multiple literals
- update to 3.10.6:
  * custom luadoc generation
  * Fix setfenv definition
  * Fix VM plugins
  * fix: improve function type narrow by checking params' literal identical
  * Fix incorrect function params' type infer when there is only @overload
  * Fix correctly display enums for function overload arguments
  * Only call workspace/configuration when available
  * fix(completion): remove logic causing wrong text edits
  * Fixed injects into child classes
- update to 3.10.4:
  * FIX: Changed hello param to valid JSONRPC
  * fix(hint): attempt to index a nil value
  * fix: improve textDocument/definition ordering
  * Fix lua-language-server --check
  * Revert "fix: improve textDocument/definition ordering"
  * check that the shape of the table corresponds to the class
- update to 3.10.3:
  * fix memory leak with ---@enum
- update to 3.10.2:
  * feat: flip binary operator check if failed
- update to 3.10.1:
  * Disable indentation fixing for Non-VSCode
- update to 3.10.0:
  * Fix plugin arg arrays when paths contain numbers passing along only one argument
  * Add postfix snippet for unpack
  * Add support for lambda-style functions
  * fix: default severity in CLI with partial 'diagnostics.severity' config
  * Perf: Improve performance of multithreaded --check and undefined-field diagnostic
  * fix: respect showParams config for local function completion
  * update format
  * Remove nodiscard from string.gsub
  * Align inlay hint spacing with other LSPs
  * fix: add a missing check for 'inject-field' diagnostics
  * added lua regular expression support for Lua.doc.Name
  * fix a specific case for getVisibleType
  * Fixed wholeMatch function
  * fix: inconsistent type narrow due to outdated node caches of call.args
  * Fix typos in annotation descriptions
  * fix: incorrect CompletionItemKind for postfix snippets
  * improve the missing-fields logic to be able to correctly handle classes
    defined several times
- update to 3.9.3:
  * FIX Sometimes providing incorrect autocompletion when chaining calls
- update to 3.9.2:
  * Disable await.delay() when running --check
  * Update love2d-api to 11.5
  * add: workflow to assert changelog updates
  * Add schema link to .luarc.json
  * Bump EmmyLuaCodeStyle
  * add: resolve links to symbols in markdown descriptions
  * Throttle calls to await.delay() in some diagnostics
  * don't do diagnostics when workspace is not ready
- update to 3.9.1:
  * Add globalsRegex to diagnostics
  * Add multi-process support to --check
  * Fix linux-arm64 build
  * add: load ENV variables as args
  * fix: convert ENV value to bool
- update to 3.9.0:
  * Fix linux-arm64 build
  * Add multi-process support to --check
  * Add setting to find globals using regex
  * add: load ENV variables as args
- update to 3.8.3:
  * update bee
- update to 3.8.0:
  * bit meta: tohex returns a string
  * Pad return type annotations when required
  * plugin: add OnTransformAst interface
  * update format 1.4.3
  * astHelper: addParamTypeDoc
  * support multi plugins
  * Automatic derivation function param type
  * Never sematic virtual ast and comment
  * fix guide.getParams
  * Plugin on node compile function param
  * Add table.move() to LuaJIT compatibility
  * Add --visualize command that outputs the AST of a given file as graphviz
  * Add group param for luadoc generated by plugins
  * Added 'desc' and 'rawdesc' keys for variables in JSON output
  * Added 'visible' key (public, protected, ...) in JSON output
  * CLI option --doc_out_path
  * support tuple type
  * Enable plugins during --check
  * update format 1.5.0
  * Desc/rawdesc for vararg expressions in JSON output
  * Add "deprecated" key in JSON output
  * add infer function param type
  * update test
  * Add "async" key in JSON output
  * Revert "Add "async" key in JSON output."
  * Revert "Add "deprecated" key in JSON output."
  * Add "async" and "deprecated" key to JSON output
  * Only load files in workspace for --check (skip libraries)
  * Add CLI option to trust all plugins
  * Flush stdout in check progress indicator
  * Update doc.json
  * Fix potential crash issues on Windows
  * doc param support generic pattern
  * update format 1.5.2
  * Fix typo in config.json
  * Allow plugins to resolve require paths
  * Update compiler.lua
  * Detect discard-returns in all block types
  * meta: improve typing for unpack
  * Run diagnostics on unopened files when explicitly requested by the user
  * Output more details while running --check
- rewrite the _service file, so we can include the submodules, and move to
  manual service runs, as disabled is going to be deprecated
- write the wrapper so we can have multiple instances
- remove limitations on the buildarches, as they build fine (outside of the tests)
- test only on x86_64, as the other arches too flaky (while x86_64 also quite often flakes)
- update README.suse-maint.md file to reflect how to update the package
- use newer upstream url

-------------------------------------------------------------------
Fri Jan  5 07:30:11 UTC 2024 - Kyle Scheuing <kyle@kylescheuing.com>

- Upgrade to 3.7.4:
  - fix: doc.type.function resolve only existing arg.extends
  - Add a rawdesc field to exported docs
  - support c like comments
  - translated some options to zh-cn

-------------------------------------------------------------------
Sun Dec 31 01:45:39 UTC 2023 - Kyle Scheuing <kyle@kylescheuing.com>

- Upgrade to 3.7.3:
  - fix: can not infer arg type in some cases

-------------------------------------------------------------------
Sat Apr  1 11:19:41 UTC 2023 - Matej Cepl <mcepl@suse.com>

- Upgrade to 3.6.18:
  - Make functions in string api accept numbers
  - Don't override lm.bindir and lm.EXE_DIR in make.lua
  - add: description for config.addonManager.enable
  - Don't override lm.bindir and lm.EXE_DIR in make.lua
  - add: description for config.addonManager.enable
  - add: addon manager setting to template
  - README updates
  - Array of a class type does not get completion
  - Improve math.abs annotation
  - meta: newproxy can accept a userdata value

-------------------------------------------------------------------
Mon Feb 13 10:08:13 UTC 2023 - Andreas Schneider <asn@cryptomilk.org>

- Update to version 3.6.11:
  * https://github.com/sumneko/lua-language-server/blob/3.6.11/changelog.md
    or packaged changelog.md

-------------------------------------------------------------------
Thu Jan 26 18:50:47 UTC 2023 - Andreas Schneider <asn@cryptomilk.org>

- Update to version 3.6.7:
  * https://github.com/sumneko/lua-language-server/blob/3.6.7/changelog.md
    or packaged changelog.md
- Added %check section
- Moved lua-language-server binary to /usr/libexec

-------------------------------------------------------------------
Sat Sep 24 10:17:33 UTC 2022 - Soc Virnyl Estela <socvirnyl.estela@gmail.com>

- Update to version 3.5.6:
  * fix #1506
  * meta template: luajit add cdata type
  * fix #1537
  * Replace old variable return syntax
  * fix: string.match return type
  * string.find returns any for now
  * update submodules
  * update 3rd-api

- Remove time_includes.patch

-------------------------------------------------------------------
Tue Jul 26 00:08:48 UTC 2022 - Matej Cepl <mcepl@suse.com>

- Update to 3.5.0:
  - meta: openresty add api run_worker_thread
  - bugfix:allow get() in sharedict return value and nil
  - table new/clear function actual use scenarios
  - #1325: add missing paramter type for getfenv
  - Meta: make osdate accept strings
  - More tag descriptions
  - fix typos in annotation
- Update to 3.4.1:
  - Fix dofile returns multiple values ---@return any ...
  - add 3rd luafilesystem
  - OpenResty type annotation updates
  - fixing grammar in error message
- Add time_includes.patch to fix missing #includes
  (gh#sumneko/lua-language-server#1377).

-------------------------------------------------------------------
Wed Jun 29 21:05:12 UTC 2022 - Matej Cepl <mcepl@suse.com>

- Update to 3.4.0:
  - NEW diagnostics:
        cast-local-type
        assign-type-mismatch
        param-type-mismatch
        unknown-cast-variable
        cast-type-mismatch
        missing-return-value
        redundant-return-value
        missing-return
        return-type-mismatch
  - NEW settings:
        diagnostics.groupSeverity
        diagnostics.groupFileStatus
        type.castNumberToInteger
        type.weakUnionCheck
        hint.semicolon
  - CHG infer nil as redundant return value

    local function f() end
    local x = f() -- `x` is `nil` instead of `unknown`

  - CHG infer called function by params num

    ---@overload fun(x: number, y: number):string
    ---@overload fun(x: number):number
    ---@return boolean
    local function f() end

    local n1 = f()     -- `n1` is `boolean`
    local n2 = f(0)    -- `n2` is `number`
    local n3 = f(0, 0) -- `n3` is `string`

  - CHG semicolons and parentheses can be used in DocTable

    ---@type { (x: number); (y: boolean) }

    CHG return names and parentheses can be used in DocFunction

    ---@type fun():(x: number, y: number, ...: number)

  - CHG supports ---@return boolean ...
  - CHG improve experience for diagnostics and semantic-tokens
  - FIX diagnostics flash when opening a file
  - FIX sometimes workspace diagnostics are not triggered

- Update to 3.3.0:
  - NEW LuaDoc supports `CODE`

    ---@type `CONST.X` | `CONST.Y`
    local x

    if x == -- suggest `CONST.X` and `CONST.Y` here

  - CHG infer type by error

    ---@type integer|nil
    local n

    if not n then
        error('n is nil')
    end

    print(n) -- `n` is `integer` here

  - CHG infer type by t and t.x

    ---@type table|nil
    local t

    local s = t and t.x or 1 -- `t` in `t.x` is `table`

  - CHG infer type by type(x)

    local x

    if type(x) == 'string' then
        print(x) -- `x` is `string` here
    end

    local tp = type(x)

    if tp == 'boolean' then
        print(x) -- `x` is `boolean` here
    end

  - CHG infer type by >/</>=/<=
    FIX with clients that support LSP 3.17 (VSCode), workspace
        diagnostics are triggered every time when opening a file.
    FIX #1204
    FIX #1208

- Update to 3.2.5:
  - NEW provide config docs in LUA_LANGUAGE_SERVER/doc/

-------------------------------------------------------------------
Sat May 28 06:07:09 UTC 2022 - Soc Virnyl Estela <socvirnyl.estela@gmail.com>

- Update to version 3.2.4:
  * Include files required to compile by @sharksforarms in #1157 
  * NEW settings:
      - workspace.supportScheme: ["file", "untitled", "git"]
      - diagnostics.disableScheme: ["git"]
  * NEW folding: support folding ---@alias
  * CHG if rootUri or workspaceFolder is set to ROOT or HOME, this extension will refuse to load these directories and show an error message.
  * CHG show warning message when scanning more than 100,000 files.
  * CHG upgrade LSP to 3.17
  * FIX hover: can not union table with other basic types
  * FIX #1125
  * FIX #1131
  * FIX #1134
  * FIX #1141
  * FIX #1144
  * FIX #1150
  * FIX #1155

-------------------------------------------------------------------
Mon Apr 11 11:55:56 UTC 2022 - Andreas Schneider <asn@cryptomilk.org>

- Update to version 3.0.1:
  * FIX #1033
  * FIX #1034
  * FIX #1035
  * FIX #1036
  * FIX runtime errors reported by telemetry, see #1037

-------------------------------------------------------------------
Mon Apr 11 04:54:54 UTC 2022 - Andreas Schneider <asn@cryptomilk.org>

- Update to version 3.0.0:
  * fix(completion): push (#1022) to 3.0 by @kevinhwang91 in #1026
  * fixed #976 by @xiyaowong in #983
  * Ensure that a completion result has 'isIncomplete' by @yoshi1123 in #995
  * update meta basic.lua by @fesily in #1004
  * fix(semantic-tokens): coreect token type priority by @kevinhwang91 in #1009
  * Event emitter support fix by @Cassolette in #1011
  * fix meta debuginfo in jit version by @fesily in #1007
  * chore(editorconfig): use lf for end_of_line by @kevinhwang91 in #1010
  * feat(completion): truncate arguments for callSnippet by @kevinhwang91
    in #1014
  * fix(completion): use args table instead of args string to parse snippet
    by @kevinhwang91 in #1016
  * fix(completion): avoid unnecessary file sep as trigger chars by
    @kevinhwang91 in #1017
  * fix(completion): limit extra lines by @kevinhwang91 in #1019
  * fix(files): check uri whether equal or not by @kevinhwang91 in #1020
  * chore(postfix): pretty postfix description by @kevinhwang91 in #1021
  * feat(completion): use Lua code as snippet description by @kevinhwang91
    in #1022
  * FIX #1023 by @CppCXY in #1024

-------------------------------------------------------------------
Thu Feb 10 08:40:40 UTC 2022 - Matej Cepl <mcepl@suse.com>

- Update to version 2.6.4:
  * fix(semantic-tokens): limit comments range
  * fix(semantic-tokens): data field can't be nil
  * Fix regular expression to find root directory in
    make/bootstrap.lua
  * feat(postfix): add templates

-------------------------------------------------------------------
Mon Jan 24 12:45:42 UTC 2022 - Andreas Schneider <asn@cryptomilk.org>

- Update to version 2.6.1:
  * update ngx/openresty annotations
  * add more skynet function defines
  * Build for linux-arm64
  * add skynet sc and mongo desc

-------------------------------------------------------------------
Tue Dec 28 10:59:34 UTC 2021 - Matej Cepl <mcepl@suse.com>

- With help of upstream, I finally found the released upstream
  zip archive.

-------------------------------------------------------------------
Mon Dec 27 18:27:10 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Update to version 2.5.6:
  - chore: update lua-resty-websocket library annotations
  - Update OpenResty typedefs, annotations, and configuration

-------------------------------------------------------------------
Fri Dec 17 14:50:40 UTC 2021 - Andreas Schneider <asn@cryptomilk.org>

- Update to version 2.5.5
  * FIX does not work in VSCode

-------------------------------------------------------------------
Thu Dec 16 14:28:20 UTC 2021 - Andreas Schneider <asn@cryptomilk.org>

- Update to version 2.5.4
  o 2.5.4
  * `FIX` [#847](https://github.com/sumneko/lua-language-server/issues/847)
  * `FIX` [#848](https://github.com/sumneko/lua-language-server/issues/848)
  * `FIX` completion: incorrect cache
  * `FIX` hover: always view string

  o 2.5.3
  * `FIX` [#842](https://github.com/sumneko/lua-language-server/issues/844)
  * `FIX` [#844](https://github.com/sumneko/lua-language-server/issues/844)

  o 2.5.2
  * `FIX` [#815](https://github.com/sumneko/lua-language-server/issues/815)
  * `FIX` [#825](https://github.com/sumneko/lua-language-server/issues/825)
  * `FIX` [#826](https://github.com/sumneko/lua-language-server/issues/826)
  * `FIX` [#827](https://github.com/sumneko/lua-language-server/issues/827)
  * `FIX` [#831](https://github.com/sumneko/lua-language-server/issues/831)
  * `FIX` [#837](https://github.com/sumneko/lua-language-server/issues/837)
  * `FIX` [#838](https://github.com/sumneko/lua-language-server/issues/838)
  * `FIX` postfix
  * `FIX` runtime errors

  o 2.5.1
  * `FIX` incorrect syntax error

  o 2.5.0
  * `NEW` settings:
    + `Lua.runtime.pathStrict`: not check subdirectories when using `runtime.path`
    + `Lua.hint.await`: display `await` when calling a function marked as async
    + `Lua.completion.postfix`: the symbol that triggers postfix, default is `@`
  * `NEW` add supports for `lovr`
  * `NEW` file encoding supports `utf16le` and `utf16be`
  * `NEW` full IntelliSense supports for literal tables, see [#720](https://github.com/sumneko/lua-language-server/issues/720) and [#727](https://github.com/sumneko/lua-language-server/issues/727)
  * `NEW` `LuaDoc` annotations:
    + `---@async`: mark a function as async
    + `---@nodiscard`: the return value of the marking function cannot be discarded
  * `NEW` diagnostics:
    + `await-in-sync`: check whether calls async function in sync function. disabled by default.
    + `not-yieldable`: check whether the function supports async functions as parameters. disabled by default.
    + `discard-returns`: check whether the return value is discarded.
  * `NEW` locale `pt-br`, thanks [Jeferson Ferreira](https://github.com/jefersonf)
  * `NEW` supports [utf-8-offsets](https://clangd.llvm.org/extensions#utf-8-offsets)
  * `NEW` supports quickfix for `.luarc.json`
  * `NEW` completion postifx: `@function`, `@method`, `@pcall`, `@xpcall`, `@insert`, `@remove`, `@concat`, `++`, `++?`
  * `CHG` `LuaDoc`:
    + `---@class` can be re-declared
    + supports unicode
    + supports `---@param ... number`, equivalent to `---@vararg number`
    + supports `fun(...: string)`
    + supports `fun(x, y, ...)`, equivalent to `fun(x: any, y: any, ...: any)`
  * `CHG` settings from `--configpath`, `.luarc.json`, `client` no longer prevent subsequent settings, instead they are merged in order
  * `CHG` no longer asks to trust plugin in VSCode, because VSCode already provides the workspace trust feature
  * `CHG` skip huge files (>= 10 MB)
  * `CHG` after using `Lua.runtime.nonstandardSymbol` to treat `//` as a comment, `//` is no longer parsed as an operator

  o 2.4.11
  * `FIX` [#816](https://github.com/sumneko/lua-language-server/issues/816)
  * `FIX` [#817](https://github.com/sumneko/lua-language-server/issues/817)
  * `FIX` [#818](https://github.com/sumneko/lua-language-server/issues/818)
  * `FIX` [#820](https://github.com/sumneko/lua-language-server/issues/820)

  o 2.4.10
  * `FIX` [#790](https://github.com/sumneko/lua-language-server/issues/790)
  * `FIX` [#798](https://github.com/sumneko/lua-language-server/issues/798)
  * `FIX` [#804](https://github.com/sumneko/lua-language-server/issues/804)
  * `FIX` [#805](https://github.com/sumneko/lua-language-server/issues/805)
  * `FIX` [#806](https://github.com/sumneko/lua-language-server/issues/806)
  * `FIX` [#807](https://github.com/sumneko/lua-language-server/issues/807)
  * `FIX` [#809](https://github.com/sumneko/lua-language-server/issues/809)

  o 2.4.9
  * `CHG` for performance reasons, some of the features that are not cost-effective in IntelliSense have been disabled by default, and you can re-enable them through the following settings:
    + `Lua.IntelliSense.traceLocalSet`
    + `Lua.IntelliSense.traceReturn`
    + `Lua.IntelliSense.traceBeSetted`
    + `Lua.IntelliSense.traceFieldInject`

  o 2.4.8
  * `FIX` incorrect IntelliSense in specific situations
  * `FIX` [#777](https://github.com/sumneko/lua-language-server/issues/777)
  * `FIX` [#778](https://github.com/sumneko/lua-language-server/issues/778)
  * `FIX` [#779](https://github.com/sumneko/lua-language-server/issues/779)
  * `FIX` [#780](https://github.com/sumneko/lua-language-server/issues/780)

  o 2.4.7
  * `FIX` [#762](https://github.com/sumneko/lua-language-server/issues/762)

  o 2.4.6
  * `NEW` diagnostic: `redundant-return`
  * `FIX` [#744](https://github.com/sumneko/lua-language-server/issues/744)
  * `FIX` [#748](https://github.com/sumneko/lua-language-server/issues/748)
  * `FIX` [#749](https://github.com/sumneko/lua-language-server/issues/749)
  * `FIX` [#752](https://github.com/sumneko/lua-language-server/issues/752)
  * `FIX` [#753](https://github.com/sumneko/lua-language-server/issues/753)
  * `FIX` [#756](https://github.com/sumneko/lua-language-server/issues/756)
  * `FIX` [#758](https://github.com/sumneko/lua-language-server/issues/758)
  * `FIX` [#760](https://github.com/sumneko/lua-language-server/issues/760)

  o 2.4.5
  `2021-10-18`
  * `FIX` accidentally load lua files from user workspace

  o 2.4.4
  * `CHG` improve `.luarc.json`
  * `FIX` [#722](https://github.com/sumneko/lua-language-server/issues/722)

  o 2.4.3
  * `FIX` [#713](https://github.com/sumneko/lua-language-server/issues/713)
  * `FIX` [#718](https://github.com/sumneko/lua-language-server/issues/718)
  * `FIX` [#719](https://github.com/sumneko/lua-language-server/issues/719)
  * `FIX` [#725](https://github.com/sumneko/lua-language-server/issues/725)
  * `FIX` [#729](https://github.com/sumneko/lua-language-server/issues/729)
  * `FIX` [#730](https://github.com/sumneko/lua-language-server/issues/730)
  * `FIX` runtime errors

  o 2.4.2
  * `FIX` [#702](https://github.com/sumneko/lua-language-server/issues/702)
  * `FIX` [#706](https://github.com/sumneko/lua-language-server/issues/706)
  * `FIX` [#707](https://github.com/sumneko/lua-language-server/issues/707)
  * `FIX` [#709](https://github.com/sumneko/lua-language-server/issues/709)
  * `FIX` [#712](https://github.com/sumneko/lua-language-server/issues/712)

  o 2.4.1
  * `FIX` broken with single file
  * `FIX` [#698](https://github.com/sumneko/lua-language-server/issues/698)
  * `FIX` [#699](https://github.com/sumneko/lua-language-server/issues/699)

  o 2.4.0
  * `NEW` loading settings from `.luarc.json`
  * `NEW` settings:
    + `Lua.diagnostics.libraryFiles`
    + `Lua.diagnostics.ignoredFiles`
    + `Lua.completion.showWord`
    + `Lua.completion.requireSeparator`
  * `NEW` diagnostics:
    + `different-requires`
  * `NEW` `---@CustomClass<string, number>`
  * `NEW` supports `$/cancelRequest`
  * `NEW` `EventEmitter`
      ```lua
      --- @class Emit
      --- @field on fun(eventName: string, cb: function)
      --- @field on fun(eventName: '"died"', cb: fun(i: integer))
      --- @field on fun(eventName: '"won"', cb: fun(s: string))
      local emit = {}

      emit:on(--[[support autocomplete fr "died" and "won"]])

      emit:on("died", function (i)
          -- should be i: integer
      end)

      emit:on('won', function (s)
          -- should be s: string
      end)
      ```
  * `NEW` `---@module 'moduleName'`
      ```lua
      ---@module 'mylib'
      local lib -- the same as `local lib = require 'mylib'`
      ```
  * `NEW` add supports of `skynet`
  * `CHG` hover: improve showing multi defines
  * `CHG` hover: improve showing multi comments at enums
  * `CHG` hover: shows method
  * `CHG` hint: `Lua.hint.paramName` now supports `Disable`, `Literal` and `All`
  * `CHG` only search first file by `require`
  * `CHG` no longer infer by usage
  * `CHG` no longer ignore file names case in Windows
  * `CHG` watching library changes
  * `CHG` completion: improve misspelling results
  * `CHG` completion: `Lua.completion.displayContext` default to `0`
  * `CHG` completion: `autoRequire` has better inserting position
  * `CHG` diagnostics:
    + `redundant-parameter` default severity to `Warning`
    + `redundant-value` default severity to `Warning`
  * `CHG` infer: more strict of calculation results
  * `CHG` [#663](https://github.com/sumneko/lua-language-server/issues/663)
  * `FIX` runtime errors
  * `FIX` hint: may show param-2 as `self`
  * `FIX` semantic: may fail when scrolling
  * `FIX` [#647](https://github.com/sumneko/lua-language-server/issues/647)
  * `FIX` [#660](https://github.com/sumneko/lua-language-server/issues/660)
  * `FIX` [#673](https://github.com/sumneko/lua-language-server/issues/673)

  o 2.3.7
  * `CHG` improve performance
  * `FIX` [#244](https://github.com/sumneko/lua-language-server/issues/244)

  o 2.3.6
  * `FIX` completion: can not find global fields
  * `FIX` globals and class may lost

  o 2.3.5
  * `CHG` improve memory usage
  * `CHG` completion: call snip triggers signature (VSCode only)
  * `FIX` completion: may not find results

  o 2.3.4
  * `CHG` improve performance
  * `FIX` [#625](https://github.com/sumneko/lua-language-server/issues/625)

  o 2.3.3
  * `NEW` config supports prop
  * `FIX` [#612](https://github.com/sumneko/lua-language-server/issues/612)
  * `FIX` [#613](https://github.com/sumneko/lua-language-server/issues/613)
  * `FIX` [#618](https://github.com/sumneko/lua-language-server/issues/618)
  * `FIX` [#620](https://github.com/sumneko/lua-language-server/issues/620)

  o 2.3.2
  * `NEW` `LuaDoc`: supports `['string']` as field:
      ```lua
      ---@class keyboard
      ---@field ['!'] number
      ---@field ['?'] number
      ---@field ['#'] number
      ```
  * `NEW` add supports of `love2d`
  * `FIX` gitignore pattern `\` broken initialization
  * `FIX` runtime errors

  o 2.3.1
  * `NEW` setting `Lua.workspace.userThirdParty`, add private user [third-parth](https://github.com/sumneko/lua-language-server/tree/master/meta/3rd) by this setting
  * `CHG` path in config supports `~/xxxx`
  * `FIX` `autoRequire` inserted incorrect code
  * `FIX` `autoRequire` may provide dumplicated options
  * `FIX` [#606](https://github.com/sumneko/lua-language-server/issues/606)
  * `FIX` [#607](https://github.com/sumneko/lua-language-server/issues/607)
- Removed obsolete fix_i586_test.patch

-------------------------------------------------------------------
Fri Jul 16 18:15:52 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Add fix_i586_test.patch to switch off testing architecture in bee.lua

-------------------------------------------------------------------
Fri Jul 16 12:26:44 UTC 2021 - Andreas Schneider <asn@cryptomilk.org>

- Update to version 2.3.0
  - https://github.com/sumneko/lua-language-server/blob/2.3.0/changelog.md
- Use obs_scm in _service file (tar_scm is deprecated)

-------------------------------------------------------------------
Thu Jul 15 14:33:21 UTC 2021 - Andreas Schneider <asn@cryptomilk.org>

- Initial package
