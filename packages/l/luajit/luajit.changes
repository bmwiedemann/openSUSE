-------------------------------------------------------------------
Tue Nov  1 16:01:53 UTC 2022 - Michael Gorse <mgorse@suse.com>

- Add ppc64 and ppc64le to ExcludeArch for now. This can be
  removed if we rebase the ppc64 patch, but it is no longer being
  maintained and seems unlikely to land upstream (bsc#1204557).

-------------------------------------------------------------------
Tue Oct  4 19:00:14 UTC 2022 - Dirk MÃ¼ller <dmueller@suse.com>

- exclude luajit from building on riscv64 - not yet supported

-------------------------------------------------------------------
Wed Mar 23 21:33:11 UTC 2022 - mcepl@cepl.eu

- Update to version 2.1.0~beta3+git.1647772157.43ebb949:
  * Fix soft-float IR_POW splitting.
  * Fix BC_UCLO insertion for returns.
  * Fix compiler warning.
  * Revert to trival pow() optimizations to prevent inaccuracies.
  * Fix string buffer COW handling, part 2.
  * Fix install docs for Android.
  * *BSD: Fix getentropy() declaration.
  * Fix string buffer COW handling.
  * Fix command-line argv handling.
  * Don't export internal symbol.
  * Fix pow() optimization inconsistencies.
  * Always exit after machine code page protection change fails.
  * Fix FOLD rule for BUFHDR append with intervening buffer use.
  * Fix compiled error handling for buffer methods.
  * Prevent unroll across BC_ITERN.
  * Prevent replay of buffer operation for PHI operands.
  * Save trace recorder state around VM event call.
  * Bump copyright date.
  * FFI: Ensure library is loaded before de-serializing FFI types.
  * Fix HREFK forwarding vs. table.clear().
  * Fix FOLD rule for BUFHDR append.
  * OSX: Disable unreliable assertion for external frame unwinding.
  * Limit exponent range in number parsing.
  * Fix tonumber("-0") in dual-number mode.
  * Limit work done in SINK pass.
  * Fix ABC FOLD rule with constants.
  * Prevent CSE of a REF_BASE operand across IR_RETF.
  * Windows: Fix binary output of jit.bcsave to stdout.
  * Fix FOLD rule for x-0.
  * Update Android build docs.
  * Update Android build docs.
  * ARM64: Fix pcall() error case.
  * OSX/ARM64: Fix external unwinding.
  * Fix string buffer method recording.
  * Fix interaction of profiler and ITERN recording.
  * Fix compilation of multi-result call to next().
  * ARM64: Fix IR_HREF code generation.
  * MIPS64: Fix soft-float IR_TOSTR.
  * MIPS: Fix register allocation in assembly of HREF.
  * Fix compiler warning.
  * Windows/x64: Document MSVC flags for C++ exception interoperability.
  * FFI: Ensure returned string is alive in ffi.typeinfo().
  * OSX/ARM64: Disable unwind info.
  * Fix stack allocation after on-trace stack check.
  * Fix ITERN blacklisting.
  * Ensure ITERN forward progress on interpreter bailout.
  * ARM64: Reorder interpreter stack frame and fix unwinding.
  * Don't bail out to interpreter to JLOOP originating from ITERN.
  * FFI: Don't load PC from non-function object in FFI continuation.
  * FFI: Don't load PC from non-function object in FFI continuation.
  * FFI: Fix missing cts->L initialization in argv2ctype().
  * OSX/ARM64: Disable external unwinding for now.
  * Compile table traversals: next(), pairs(), BC_ISNEXT/BC_ITERN.
  * Use IR_HIOP for generalized two-register returns.
  * Refactor table traversal.
  * ARM: Fix symbol display in trace disassembly.
  * Refactor IR_TMPREF generation.
  * Refactor IR_VLOAD to take an offset.
  * MIPS: Fix trace linking.
  * String buffers, part 4b: Improve de-serialization checks.
  * String buffers, part 4a: Add metatable serialization dictionary.
  * Consider slots used by upvalues in use-def analysis.
  * Prevent loop in snap_usedef().
  * Fix io.close() error message.
  * Fix io.close().
  * Fix minilua vararg stack handling.
  * PS4: Fix compile.
  * Avoid out-of-range number of results when compiling select(k, ...).
  * String buffers, part 3d: Compile string buffer methods and functions.
  * Minor improvements of optimizations.
  * Fix error message in lj_lib_checkintrange().
  * String buffers, part 2f: Prevent self-put of buffer.
  * String buffers, part 3c: Add IRBUFHDR_WRITE mode.
  * Fix IRXLOAD_* mode bits description.
  * String buffers, part 3b: Change IR_BUFHDR op2 mode bits to mode.
  * String buffers, part 3a: Add IR_TMPREF for passing TValues to helpers.
  * Add IRCONV_NONE for pass-through INT to I64/U64 type change.
  * Fix jit.dump() output for IR_CONV.
- Patches broken in the need of rebase (temporarily switched off):
  - 0004-Add-ppc64-support-based-on-koriakin-GitHub-patchset.patch
  - luajit-ppc64-replace-asserts.patch

-------------------------------------------------------------------
Wed Oct 27 20:20:36 UTC 2021 - Fabian Vogt <fvogt@suse.com>

- Replace luajit-ppc64-remove-asserts.patch with
  luajit-ppc64-replace-asserts.patch to use the proper assert
  functions instead of removing them.

-------------------------------------------------------------------
Mon Oct 25 21:55:16 UTC 2021 - Michael Gorse <mgorse@suse.com>

- Add luajit-ppc64-remove-asserts.patch: remove calls to
  lua_assert. Fixes the build with our revision (bsc#1191615).
- Add luajit-s390x.patch: add s390x support, based on Fedora's
  patch and ported to our revision.
- Remove ExcludeArch, since package currently builds on s390x.

-------------------------------------------------------------------
Thu Oct  7 15:09:55 UTC 2021 - Michael Gorse <mgorse@suse.com>

- Exclude s390x for now. There is a not-yet-upstreamed port
  available, but we would need to rebase it for our release.

-------------------------------------------------------------------
Mon Jul 12 17:15:55 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Clean up SPEC. We don't need update-alternatives after all.

-------------------------------------------------------------------
Tue Jun 29 17:17:36 UTC 2021 - munix9@googlemail.com

- Update to version 2.1.0~beta3+git294.e9577376:
  * Disable unreliable assertion for external frame unwinding.
  * Flush and close output file after profiling run.
  * Avoid conflict between 64 bit lightuserdata and ITERN key.

-------------------------------------------------------------------
Thu Jun 24 10:15:35 UTC 2021 - munix9@googlemail.com

- Update to version 2.1.0~beta3+git291.3f9389ed:
  * Throw any errors before stack changes in trace stitching.
  * DynASM/x86: Add missing escape in pattern.
  * Fix HTML.
  * String buffers, part 2e: add serialization string dictionary.
  * DynASM/ARM64: Fix LSL/BFI* encoding with variable shifts.
  * Fix MinGW static build.
  * Fix dependencies.
  * Fix IR_BUFHDR assembly.

