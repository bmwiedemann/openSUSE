-------------------------------------------------------------------
Thu May 16 17:46:29 UTC 2024 - Jan Engelhardt <jengelh@inai.de>

- Update to release 24.05
  * New filter for RISC-V executables

-------------------------------------------------------------------
Tue Apr 30 10:42:48 UTC 2024 - Jan Engelhardt <jengelh@inai.de>

- Update to release 23.01
  * New filter for ARM64 executables. BCJ2 filter was improved
    for better compression ratio. Some bugs were fixed.
- Add lzma-simd.patch to fix compiler error on old gcc

-------------------------------------------------------------------
Wed Mar 15 14:40:12 UTC 2023 - Martin Pluskal <mpluskal@suse.com>

- Update to version 22.01:
  * No upstream changelog available
  * Some RISC-V updates
  * Workaround an issue when using a jwasm-based assembler with
    binutils

-------------------------------------------------------------------
Fri Mar 10 13:35:05 UTC 2023 - Martin Pluskal <mpluskal@suse.com>

- Build AVX2 enabled hwcaps library for x86_64-v3

-------------------------------------------------------------------
Tue Dec 28 12:07:35 UTC 2021 - Luigi Baldoni <aloisio@gmx.com>

- Update to version 21.07
  * New switches: -spm and -im!{file_path} to exclude
    directories from processing for specified paths that don't
    contain path separator character at the end of path.
  * The sorting order of files in archives was slightly changed
    to be more consistent for cases where the name of some
    directory is the same as the prefix part of the name of
    another directory or file.

-------------------------------------------------------------------
Sat Dec 11 22:04:00 UTC 2021 - Jan Engelhardt <jengelh@inai.de>

- Update lzma-sdk-shlib.patch to use Sha256Opt.c for generating
  libclzma.so. boo#1193657

-------------------------------------------------------------------
Mon Nov 29 11:37:21 UTC 2021 - Luigi Baldoni <aloisio@gmx.com>

- Update to version 21.06
  * Bug in LZMA encoder in file LzmaEnc.c was fixed:
    LzmaEnc_MemEncode(), LzmaEncode() and LzmaCompress() could
    work incorrectly, if size value for output buffer is smaller
    than size required for all compressed data. LzmaEnc_Encode()
    could work incorrectly, if callback ISeqOutStream::Write()
    doesn't write all compressed data.
    NCompress::NLzma::CEncoder::Code() could work incorrectly,
    if callback ISequentialOutStream::Write() returns error
    code.
  * Bug in versions 21.00-21.05 was fixed:
    7-Zip didn't set attributes of directories during archive
    extracting.
  version 21.04 beta:
  * 7-Zip now reduces the number of working CPU threads for
    compression, if RAM size is not enough for compression with
    big LZMA2 dictionary.
  * 7-Zip now can create and check "file.sha256" text files that
    contain the list of file names and SHA-256 checksums in
    format compatible with sha256sum program.
  version 21.03 beta:
  * The maximum dictionary size for LZMA/LZMA2 compressing was
    increased to 4 GB (3840 MiB).
  * Minor speed optimizations in LZMA/LZMA2 compressing.
  version 21.02 alpha:
  * The speed for LZMA and LZMA2 decompression in arm64 versions
    was increased by 20%-60%.
  version 21.01 alpha:
  * The improvements for speed of ARM64 version using hardware
    CPU instructions  for AES, CRC-32, SHA-1 and SHA-256.
  * Some bugs were fixed.
  version 20.02 alpha:
  * The default number of LZMA2 chunks per solid block in 7z
    archive was increased to 64. It allows to increase the
    compression speed for big 7z archives, if there is a big
    number  of CPU cores and threads.
  * The speed of PPMd compressing/decompressing was increased
    for 7z archives.
  * The new -ssp switch. If the switch -ssp is specified, 7-Zip
    doesn't allow the system  to modify "Last Access Time"
    property of source files for archiving and hashing operations. 
  * Some bugs were fixed.
  version 20.00 alpha;
  * 7-Zip now supports new optional match finders for LZMA/LZMA2
    compression: bt5 and hc5,  that can work faster than bt4 and
    hc4 match finders for the data with big redundancy.
  * The compression ratio was improved for Fast and Fastest
    compression levels with the following default settings:
    + Fastest level (-mx1) : hc5 match finder with 256 KB
      dictionary.
    + Fast level (-mx3) : hc5 match finder with 4 MB
      dictionary.
  * Minor speed optimizations in multithreaded LZMA/LZMA2
    compression for Normal/Maximum/Ultra compression levels.

-------------------------------------------------------------------
Fri Feb 22 11:22:49 UTC 2019 - Luigi Baldoni <aloisio@gmx.com>

- Update to version 19.00
  * Encryption strength for 7z archives was increased:
    the size of random initialization vector was increased from
    64-bit to 128-bit, and the pseudo-random number generator was
    improved.
  * The bug in 7zIn.c code was fixed.

-------------------------------------------------------------------
Sun Dec 30 10:13:52 UTC 2018 - Luigi Baldoni <aloisio@gmx.com>

- Update to version 18.06
  * The speed for LZMA/LZMA2 compressing was increased by 3-10%,
    and there are minor changes in compression ratio.
  * Some bugs were fixed.
  * The bug in 7-Zip 18.02-18.05 was fixed:
    There was memory leak in multithreading xz decoder -
    XzDecMt_Decode(), if xz stream contains only one block.
  * The changes for MSVS compiler makefiles:
    + the makefiles now use "PLATFORM" macroname with values
      (x64, x86, arm64) instead of "CPU" macroname with values
      (AMD64, ARM64).
    + the makefiles by default now use static version of the
      run-time library.

-------------------------------------------------------------------
Mon Jun 11 12:47:46 UTC 2018 - aloisio@gmx.com

- Fixed unpacking problem

-------------------------------------------------------------------
Tue May  1 11:19:07 UTC 2018 - aloisio@gmx.com

- Update to version 18.05
  * The speed for LZMA/LZMA2 compressing was increased
    by 8% for fastest/fast compression levels and
    by 3% for normal/maximum compression levels.
  * The BUG was fixed in Lzma2Enc.c
    Lzma2Enc_Encode2() function worked incorretly,
      if (inStream == NULL) and the number of block threads is
      more than 1.

- Refreshed lzma-sdk-shlib.patch

-------------------------------------------------------------------
Sat Mar 10 18:55:18 UTC 2018 - aloisio@gmx.com

- Update to version 18.03
  * Asm\x86\LzmaDecOpt.asm: new optimized LZMA decoder written in
    asm for x64 with about 30% higher speed than main version of
    LZMA decoder written in C.
  * The speed for single-thread LZMA/LZMA2 decoder written in C
    was increased by 3%.

- Refreshed lzma-sdk-shlib.patch

-------------------------------------------------------------------
Mon Jan 29 20:45:47 UTC 2018 - aloisio@gmx.com

- Update to version 18.01
  * Some changes in LZMA2/xz multithreading code for compressing.
    Some bugs were fixed.

-------------------------------------------------------------------
Mon Jan  8 08:02:11 UTC 2018 - jengelh@inai.de

- Update to new upstream release 17.01
  * Some bugs were fixed.
- Replace lzma-sdk-16.04-sharedlib.patch with lzma-sdk-shlib.patch.

-------------------------------------------------------------------
Tue May 16 14:56:41 UTC 2017 - jengelh@inai.de

- Trim/update description. Redo .pc file generation so that the
  resulting file looks like other .pc files on openSUSE.

-------------------------------------------------------------------
Thu May 11 06:30:24 UTC 2017 - aloisio@gmx.com

- Refreshed lzma-sdk-16.04-sharedlib.patch to add source to
  the library to have extra functions and exported extra
  symbols

-------------------------------------------------------------------
Fri Mar 17 09:25:07 UTC 2017 - aloisio@gmx.com

- Initial package (version 16.04)

