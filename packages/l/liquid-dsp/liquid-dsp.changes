-------------------------------------------------------------------
Mon Jul 29 21:36:52 UTC 2019 - Martin Hauke <mardnh@gmx.de>

- Update to latest tagged release version 1.3.2
  * autotest
    - runs with random seeds (based on time) for diveristy
    - output .json file for post-analysis
  * build
    - cleaned up compiler warnings across most platforms
    - incorporated continuous integration script
    - compact header APIs across all interfaces in liquid.h
    - consistent build across Linux and macOS
  * agc
    - added more convenience methods, improved autotest stability
  * fft
    - spwaterfall less verbose with more convenience methods
  * filter
    - new rresamp family of objects to implement rational rate
      resampling; very useful for fixed buffer sizes
    - resamp now uses fixed-point phase for faster computation
    - fixed issues with msresamp2 ordering to have expected roll-off
      performance
    - added notch filter design option for firfilt (with autotest)
  * framing
    - completely reworked msource family of objects to use firpfbch2
      family of objects for computationally efficient
    - added preliminary fskframe generator and synchronizer objects
  * math
    - improved functions for speed, is_prime()
    - improved stability and consistency of root-finding algorithms
  * multichannel
    - added new firpfbchr family of objects for arbitrarily setting
      number of channels and down-sampling rates
  * modem
    - refactored objects for amplitude modulation/demodulation to use
      Hilbert transform, added autotest scripts
  * nco
    - improving consistency across platforms
- Run spec-cleaner
- Update patch:
  * liquid-dsp-fix-destdir.diff

-------------------------------------------------------------------
Sat Aug 18 03:27:36 UTC 2018 - bwiedemann@suse.com

- Add reproducible.patch to always compile with SSE3 (boo#1100677)

-------------------------------------------------------------------
Tue Nov 21 16:46:54 UTC 2017 - jengelh@inai.de

- Update description and RPM groups.

-------------------------------------------------------------------
Sat Nov 18 22:14:49 UTC 2017 - mardnh@gmx.de

- Remove not needed sections from spec file

-------------------------------------------------------------------
Tue Nov 14 10:52:42 UTC 2017 - mardnh@gmx.de

- Mention MIT license, see http://liquidsdr.org/license/

-------------------------------------------------------------------
Mon Nov 13 19:14:45 UTC 2017 - mardnh@gmx.de

- Rename changelog

-------------------------------------------------------------------
Thu Oct 26 18:17:14 UTC 2017 - mardnh@gmx.de

- Update to version 1.3.1.git1508199169.4c9a7514:
  * agc: adding squelch autotests (derived from example)
  * agc/example: improving squelch example program
  * agc: adding squelch functionality back into gain control object
  * spwaterfall: reducing to double-buffer; taking log-avg for consolidation
  * fft: adding new spwaterfall object
  * packetizer/recreate(): forcing return for any condition; keeps compiler happy
  * symtrack example: fixing typo with using undeclared/unused variables
  * iir filter order doc match param
  * fix typo channel frequency docs

-------------------------------------------------------------------
Mon Jul 03 19:18:08 UTC 2017 - mardnh@gmx.de

- Update to version 1.3.0.git1494700891.b8300673:
  * dispatch to correct destroy call for fec objects
  * prevent nans from escaping detector
  * if rescaling induces a nan, just call it 0
  * clean up after float sum
  * makefile.in: Fix overloading of LDFLAGS and CFLAGS
  * resamp: add adjust_timing_phase()
  * resamp: adding set_timing_phase() method, global comments
  * iirfilt: adding internal init() method for setting internal pointers to NULL
  * iirfiltsos: moving structure definition inside source file
  * iirfilt: defaulting to using internal dotprod object
  * iirfiltsos: adding code for using internal dotprod (generally slower)
  * build: adding 'LIQUID_' prefix in mangling macro for consistency
  * Update firpfb.c
  * Removed unnecessary line
  * build: minor adjustments to global include for API parser
  * build: trivial adjustments to global include for API parser (linking objects)
  * cbuffer: cleaning method comments in global header
  * channel: cleaning method comments in global header
  * typo
  * Removed tau and rate variable
  * Added reset_all() to completely reset spgram object including window buffer
- Remove patch:
  - 0001-add-msse-flag-to-makefile.patch (fixed upstream)

-------------------------------------------------------------------
Thu Apr 13 18:17:18 UTC 2017 - mardnh@gmx.de

- add patch to fix compilation on Factory
  - 0001-add-msse-flag-to-makefile.patch

-------------------------------------------------------------------
Thu Apr 13 17:52:37 UTC 2017 - mardnh@gmx.de

- Update to version 1.3.0 (tagged release)
- specfile cleanup

-------------------------------------------------------------------
Wed Mar 29 17:29:58 UTC 2017 - mardnh@gmx.de

- Update to version 1.3.0.git1490785401.9c80330:
  * expose frame detection process
  * allow android build via cross compile
  * channel: cleaning up interface to permit fixed input/output buffer sizes
  * ofdmflexframegen: improving API for output buffer of any length
  * ofdmframe: adding method to initialize sctype with freq occupation
  * ofdmflexframegen: NULL pointers initialize random header, payload
  * oframegen: fixing bug where frame assembled flag wasn't being cleared
  * packetizer: applying sequence whitening (scramble) to all packets
  * flexframegen: NULL pointers initialize random header, payload
  * ofdmflexframegen: reset() now indicates new symbol needs to be generated
  * packetizer: adding internal packetizer version to bump framing protocols
  * flexframsync: cleaning up code for frame detection
  * window: clear() -> reset()
  * cbuffer: clear() -> reset()
  * wdelay: clear() -> reset()
  * firdecim: clear() -> reset()
  * resamp2: clear() -> reset()
  * chromosome: clear() -> reset()
  * bsequence: clear() -> reset()
  * add -msse flag to makefile
  * sandbox: updating sandbox to new APIs, cleaning a few examples
  * firpfb: adding execute_block() method
  * build: moving freqmod and freqdem to be adjacent in liquid.h
  * build: trivial change in comment ('CP-FSK' should be 'FSK')
  * build: updating history for changes since v1.2.0
  * Update iirdes.pll.c
  * iirdecim/iirinterp: trivial formatting change in global header
  * build: fixing trivial typo in comment in internal header
  * build: adding autocorr source as explicit filter target
  * build: updating history description to reflect v1.3.0 release
  * only set ecx/edx if not unknown
  * asgram: fixing functionality to actually generate ascii string
  * symtrack: setting bandwidth appropriately
  * asgram: clarifying ref/div
  * spgram: fixing typo in comment describing create() method
  * asgram: increasing resolution of result
  * asgram: adding method to set display character set
  * qdetector: adding benchmark program
  * build: trivial changes to global header, text alignment, comments
  * build: bumping internal version number to 1.3.0 in internal header
  * firdespm/example: clarifying filter design in plot title
  * firdespm: adding prototype method for generating low-pass filter
  * firdespm: adding lowpass example program
  * firdespm/example: making example a bit more interesting
  * must add sse3 cflag if we are going to use sse3 intrinsics ...
  * firdespm: adding callback funtion for generic desired response
  * define order for msequence
  * framegen/framesync: define order for msequence
  * eqlms/autotest: define order for msequence
  * firdespm: improving callback function example
  * run post-detection samples through state machine
  * remove spurious new variable
  * build: replacing configure's --enable-debug with --enable-debug-messages
  * remove static -mss3 flag from makefile

-------------------------------------------------------------------
Sat Dec 24 20:07:07 UTC 2016 - mardnh@gmx.de

- Update to version 0.0.0.git1478519418.6b55d1c:
  * sandbox: adding initial Golay(24,12) product code example
  * sandbox/g2412p: implementing basic iteration for code
  * examples/modem: making 16-QAM modem as default
  * ampmodem: demodulating SSB AM with suppressed carrier without carrier estimation
  * agc/autotest: increasing time for convergence
  * sandbox: generate working version of Golay(24,12) product code
  * sandbox/g2412product_test: testing soft-decion demod performance
  * build: updating copyright on primary build files
  * cpfskdem: adding functionality for coherent demodulation (needs testing)
  * cpfskmodem: computing and compensating for delay appropriately
  * cpfskdem: simplfying demodulator interface
  * autotest: adding cpfskmodem tests
  * sandbox/mskmodem_test: trying to normalize output level of 'matched' filter
  * build: cpfsk_psd_example > cpfskmodem_psd_example
  * autotest/cpfsk: adding more autotest scripts (higher modulation order)
  * qpacketmodem: adding methods to encode/decode just symbol indices
  * const correctness for framegen
  * math/poly: wrapping isnan in T_ABS to help compilation w/ certain gcc versions
  * rkaiser: adding necessary breaks to rho approximation switch (thanks Jay Kickliter)
  * bpacket: fixing malloc/realloc to assign proper length type (not pointer)
  * lpc: adding basic length checking before blindly allocating array
  * qdetector: clarifying purpose of quadratic polynomial interpolation
  * iirdes: fixing dead initialization for dzpk2sosf()
  * iirdes: clarifying filter parameter transformation for band-pass/band-stop
  * rkaiser: moving boundary condition check to be inside main search loop
  * iirdes/ellip: cleaning up debugging statements
  * provide _is_assembled for gmskframegen
  * constify gmskframegen_assemble
  * build: removing config script to guess gcc version
  * Fixed array allocators in IIR Filter creator.
  * Enable build and install in one step
  * filter/ellip: moving unused variable inside macro
  * build: cleaning up makefile indentation; making easier to read (hopefully)
  * build: adding explicit target for qpacketmodem
  * framing/fec: constifying input arrays
  * fskdem: cleaning up code to rid compiler of annoying warnings
  * cpfskmodem: cleaning up example, making code more legible
  * sandbox: cleaning up sandbox code, ridding compiler of warnings
  * fskdem/benchmark: commenting out unused variable
  * autotest: cleaning up printf formatting
  * spgram: adding waterfall plot example (gnuplot)
  * channel: adding time-varying multi-path channel object
  * define flat-top window
  * introduced flat-top window
  * define 7 term blackman-harris
  * introduced 7term blackman harris
  * define triangular window
  * introduced triangular window
  * windowing: cleaning up windowing methods somewhat, fixing triangular
  * spgram: adding option to export to gnuplot
  * spgram: updating to simpler interface; needs some work
  * spgram: adding print() method, cleaning up examples a bit
  * math: moving windowing function definitions to separate file, utilities
  * spgram: cleaning up create() interfaces
  * spgram: updated create() method to include delay between transforms
  * spgram: not clearing internal window on reset, improving waterfall example
  * spgram: fixing bug; forgot to increment counters
  * spgramcf/example: formatting sample index in steps of thousands
  * spgram: incrementing total number of transforms taken
  * msource: fixing bug with not admitting enable/disable of source
  * build: checking canonical target outside of SIMD override setting

-------------------------------------------------------------------
Mon Dec 14 22:50:05 UTC 2015 - mardnh@gmx.de

- Update to version 0.0.0.git1449876928.d1031be:
  + sandbox: adding test for generic MSK modulation
  + sandbox/mskmodem_test: using built-in spgram spectral estimate method
  + sandbox/mskmodem_test: adding options for tx filter type
  + sandbox/mskmodem_test: fixing integration but for square pulses
  + sandbox/mskmodem_test: found square pulse workaround
  + sandbox/mskmodem_test: trying to compensate for delay with demod
  + sandbox/mskmodem_test: fixing partial-response RCOS pulse timing
  + sandbox/mskmodem_test: hacking GMSK pulse with half-symbol timing delay
  + sandbox/mskmodem_test: fixing GMSK pulse timing, counting actual errors
  + sandbox/mskmodem_test: adding command-line options for filter, mod. index
  + sandbox/mskmodem_test: using gmsk compensating filter on receiver
  + sandbox/mskmodem_test: adding options for M-CPFSK (not yet functional)
  + modem/build: adding cpfsk[mod|dem] objects
  + modem/build: removing abandoned cpmodem from project
  + cpfsk: adding example program (not yet functional)
  + cpfsk: generating initial filters
  + cpfskmod: adding method to design filter (needs work and testing)
  + sandbox/mskmodem_test: adding plot of integrated pulse
  + cpfskmodem: splitting full- and partial-response raised-cosine
  + cpfskmod: fleshing out modulate() method
  + cpfskmod: implementing proper pulse shaping for modulation
  + cpfskmod: implementing reset() method (clearing internal state)
  + cpfskdem: framing basic functionality
  + cpfskmodem/example: fixing power spectral density scaling
  + sandbox/mskmodem_test: adding command-line options for channel offsets
  + cpfskmodem/example: adding command-line options for channel impairments
  + sandbox/mskmodem_test: removing redundant SNR line in help/usage
  + symtrack: adding basic function prototypes
  + missing header file.
  + added am block functions.
  + symtrack: adding initial object creation
  + symtrack: adding basic example for testing
  + build: updating script to update copyright license; needs copy
  + build: adding basic copy for test license
  + symtrack: updating filter types to comply with new APIs
  + symtrack: creating internal objects
  + symtrack: fleshing out basic implementation
  + symsync: trying to correct for carrier frequency/phase offsets
  + symtrack: stepping LMS equalizer; needs further testing
  + build: adding new module 'channel' to make channel modeling much easier
  + build: simplifying copyright replacement with python block string
  + build|copyright: only printing spaces in comments when appropriate
  + channel: adding carrier frequency/phase offsets
  + channel: adding multi-path channel impairment
  + channel: trying to determine reason for strange behavior
  + channel: block-commenting out multi-path to help find bug
  + symtrack: invoking reset() when object created
  + channel: re-enabling multi-path channel
  + symtrack: fixing typo in set_bandwidth() error message
  + symtrack: adding method to explicitly set modulation scheme
  + symtrack: adding primitive data type to symtrack macro
  + symtrack: adding method to adjust internal NCO phase
  + build: updating script to update copyright license; needs copy
  + build: adding basic copy for test license
  + build: simplifying copyright replacement with python block string
  + build|copyright: only printing spaces in comments when appropriate
  + cpfskmodem/example: updating spgram to new API
  + cpfskmodem: moving prototype to 'modem' module section in header
  + cpfskmodem/example: fixing PSD plot scaling
  + mskmodem/sandbox: updating to new spgram API, fixing PSD plot scaling
  + mskmodem/sandbox: fixing equalizing filter bandwidth, scaling, etc.
  + build|copyright: updating terminal date to 2015 in preparation for release
  + build: adding basic non-coherent M-ary FSK simulation
  + fskmodem/sandbox: adding high SNR method for demodulation
  + fskmodem/sandbox: compute proper least-squares demodulator
  + fskmodem/sandbox: better error checking on input options, etc.
  + build: adding fskmod/fskdem objects
  + fskmod: fleshing out M-ary FSK modulator
  + fskdem: fleshing out M-ary FSK demodulator
  + fskmodem: adding set of autotests
  + fskmodem: adding set of benchmarks for modulation/demodulation
  + fskmodem: using fftwf in demodulator if available
  + fskmodem: clarifying M-ary FSK modem in example, sandbox
  + fskdem: clarifying demodulator is not (necessarily) continuous phase
  + fskdem: adding method to return frequency error estimate
  + iirfilt: adding simple low-pass create() method
  + iirfilt: using default low-pass prototype where applicable
  + iirdecim: adding simplified create_default() method (Butterworth)
  + iirinterp: adding simplified create_default() method (Butterworth)
  + fec/bench: fixing bug with decoding array that caused crash
  + packetizer/bench: passing proper output array to decode method
  + build/bench: preventing 'unused variable' compiler warnings
  + firfarrow/example: cleaning up example somewhat
  + build/sandbox: preventing 'unused variable' compiler warnings
  + fftfilt/autotest: preventing 'unused variable' compiler warnings
  + iirfilt/dcblocker-example: cleaning up and improving example
  + benchmark/iirfilt: adding DC-blocking filter benchmark
  + firpfbch2: fixing typo in example and autotest programs
  + resamp2/example: adding cccf example
  + resamp2/example: cleaning cccf plotting display
  + build|copyright: cleaning script, removing unused variables, etc.
  + build/license: updating license in main top-level project files
  + build/license: updating license in agc module
  + build/license: updating license in audio module
  + build/license: updating license in buffer module
  + build/license: updating license in dotprod module
  + build/license: updating license in equalization module
  + build/license: updating license in fec module
  + build/license: updating license in fft module
  + build/license: updating license in filter module
  + build/license: updating license in framing module
  + build/license: updating license in math module
  + build/license: updating license in matrix module
  + build/license: updating license in modem module
  + build/license: updating license in multichannel module
  + build/license: updating license in nco module
  + build/license: updating license in optim module
  + build/license: updating license in quantization module
  + build/license: updating license in random module
  + build/license: updating license in sequence module
  + build/license: updating license in utility module
  + build/license: updating license in vector module
  + build/license: updating license in autotest library
  + build/license: updating license in sandbox programs
  + build/license: updating license in benchmark library
  + build/license: updating license in scripts
  + qpacketmodem: new object to simplify encoding and modulating
  + qpacketmodem: adding autotest script
  + qpacketmodem/autotest: adding autotests for different modulation schemes
  + flexframesync: adding autotest (noise-free detection, decoding)
  + qpilot[gen|sync]: new objects to inject pilots and recover symbols
  + qpilotsync: fleshing out carrier freq/phase, gain recovery
  + qpilotsync: wrapping print statements in debug preprocessor exclusion
  + qpilotgen/qpilotsync: cleaning print outputs
  + frame64: using new qpacketmodem and qpilotgen/qpilotsync objects
  + qpacketmodem: adding performance simulation for BER vs. SNR
  + qpacketmodem: adding soft-decision demodulation/decoding
  + fskmodem/example: cleaning up example command-line options
  + build: adding an option to override SIMD extensions in configure
  + build: splitting ARM target versions in configure (neon supported with v7+)
  + gmsk/sandbox: adding two new programs
  + eqlms: adding new create_lowpass() method to init with low-pass filter
  + build: adding missing objects to 'clean' target in makefile
  + firpfbch/examples: cleaning example code a bit
  + qdetector: adding initial code (not yet functional)
  + qdetector: fleshing out execute() method
  + qdetector: breaking buffer into halves, basic signal scaling
  + qdetector: fleshing out alignment code, offset estimation
  + qpilotsync: fixing bug with indexing (had hard coded fft size)
  + firpfb: adding set_scale() method for convenience
  + qdetector: returning pointer to data array upon detection, offset estimates
  + qdetector: recovering symbols from detector output in example
  + framesync64: incorporating qdetector_cccf object into synchronizer
  + firpfb: adding set_scale() method for convenience
  + framesync64: setting output matched filter scaling appropriately
  + framesync64: correcting timing offset appropriately
  + frame64: using QPSK for preamble p/n sequence
  + framesync64: cleaning up code for clarity
  + framesync64: adding basic eqlms_cccf object in receiver
  + qdetector: removing verbose print statements (debugging)
  + frame64: extending frame for longer filter, better response
  + qdetector: increasing fft size to be at least double sequence length
  + frame64: extending frame length to help flush buffers
  + firdes: cleaning up code a bit
  + firdespm: fabsf() -> fabs() for double-precision operation
  + math/poly: adding macros for abs (fabsf, cabsf, etc.) for specific data types
  + matrix: adding descriptions to methods in global header
  + matrix: adding macros for abs (fabsf, cabsf, etc.) for specific data types
  + qdetector: adding basic autotest scripts
  + qdetector: improving debug print/export features
  + framesync64: adding pre-processor macro for enabling/disabling equalizer
  + qdetector: adding method to set detection threshold
  + qdetector: adding methods to retrieve sequence and length
  + qdetector: separating create() methods for generic create vs. w/ symbols
  + qdetector: cleaning up example program
  + qpilotsync: adding methods to return estimated parameters
  + qpilotsync/autotest: adding initial autotest script
  + qpilotsync/autotest: extending to include more cases
  + flexframe: complete overhaul of framing protocol
  + qpacketmodem: cleaning packet modem code a bit
  + packetizer: adding simple fec/crc scheme access methods
  + modem: cleaning up header code, adding get_scheme() access method
  + qpacketmodem: printing mod/fec/crc types to stdout
  + qpacketmodem: adding regular acess methods for crc/fec/mod etc.
  + flexframesync: returning frame types (modulation/coding/check schemes)
  + flexframesync: computing error vector magnitude for frame
  + flexframe: cleaning up source code, removing unnecessary declarations
  + flexframesync/debug: consolidating all figures into single plot
  + flexframegen: resetting object on assemble() if frame is already assembled
  + flexframegen: modifying API to write frame in arbitrary block size
  + flexframesync: fixing bug where callback passed wrong flag for header validity
  + framedatastats: adding new object for accumulating frame data statistics
  + flexframesync: adding data statistics accumulator to internal object
  + flexframesync/example: restoring channel impairments to received signal
  + flexframesync: adding methods to reset and retrieve frame data stats
  + flexframesync: updating frame statistics in proper location
  + qdetector: create_symbols() -> create_linear()
  + qdetector: adding create_gmsk() method, adding autotests
  + flexframesync: fixing bug with updating frame data payload stats
  + flexframesync/example: significantly cleaning up reconfig example
  + framing: adding new symstream object to modulate random symbols
  + symstream: adding basic example
  + symtrack/example: using new symstream object for generating input
  + ofdmflexframe: changing VERSION macro to PROTOCOL
  + ofdmflexframe: moving internal methods defs out of global header
  + framing: removing antiquated readme
  + agc: applying limit to prevent gain explosion
  + eqlms: adding push_block() method; need decim mode
  + eqlms: adding autotest (qpsk symbols, blind equalization)
  + firdecim: cleaning up trivial typo in commented description
  + eqlms/autotest: cleaning up test to use complex channel
  + qdetector: adding create_gmsk() method, adding autotests
  + qdetector: adding method to set carrier offset search range
  + build|copyright: updating script's output to be more compact
  + build|copyright: updating copy on newer files
  + build|copyright: adding basic error checking to script
  + build|copyright: fixing formatted print typo in script
  + build|copyright: updating channel and framing to new copyright
  + build: trivial license clarification in main README
  + build: adding channel module to list in main README
  + channel: splitting plot in example program
  + channel: generating repeatable channel coefficients using msequence
  + channel: adding resampling option; needs timing phase offset setting
  + channel: adjusting parameters in example program
  + channel: fixing application of carrier frequency offset
  + symtrack: defaulting equalizer to low-pass filter
  + eqlms: adding decision-directed equalization autotest
  + symtrack: adding option to run at any integer samples/symbol
  + symtrack/example: using symstream to generate symbols
  + build: fixing typo in README regarding license
  + crc: adding method to simply append key to end of message (and check)
  + spgram: adding option to create default spgram
  + examples: adding new conversion example program
  + channel/example: cleaning up symtrack example (trivial)
  + symtrack/example: fleshing out example description
  + framing: adding new multi-source signal generator for convenience testing
  + msource: cleaning up example, interface allows gain in dB
  + channel: cleaning up channel example a smidge
  + channel/example: using symstream for signal generation
  + msource: using symstream for internal signal generation
  + msource: adding method to remove objects in source list
  + ofdm[flex]framesync: fix typos
  + ofdmflexframesync: buffer payload symbols and pass them along with framestats
  + channel: fixing trivial typo
  + channel: adding basic code for log-normal shadowing
  + sandbox: adding shadowing test for distribution and PSD
  + autotest: wrapping macros in braces to ensure proper scope
  + Fix LDFLAGS in makefile.in to respect environment variables.
  + cpfskmodem/example: cleaning up example code somewhat
  + cpfsk: adding new example to plot psd for different pulse shapes
  + examples/resamp_crcf: cleaning up output plots
  + resamp: setrate() -> set_rate() for consistency
  + resamp: adding method to adjust resampling rate
  + channel: adding method to get nominal delay (samples)
  + ofdmframesync: fixing typo with debug_disable (thanks, Andre)
  + autotest: adding option to print output .json file
  + firfilt: adding option to create firfilt with rect coefficients
  + channel: adding separate method to create object with specific delay
  + eqlms: adding new method to execute block using blind method
  + eqlms: adding special method for stepping with blind estimation
  + firpfb: adding method to create filterbank with Kaiser filter coefficients
  + filter/firdes: consolidating firdes_nyquist() and firdes_rnyquist()
  + firinterp: create_prototype() -> create_kaiser()
  + firdecim: create_prototype() -> create_kaiser()
  + firinterp: create_[r]nyquist() -> create_prototype()
  + firdecim: create_[r]nyquist() -> create_prototype()
  + sandbox: adding program to test recursive QPSK constellation
  + sandbox/recursive_qpsk_test: adding QPSK BER to plot
  + math: adding simple raised-cosine tapering window
  + msresamp2: increasing half-band multi-stage resampling stages to 16
  + optim/gasearch: adding random chromosome at end of population
  + configure.ac: use AC_CONFIG_MACRO_DIR
  + examples: fixing typo in README.md
  + use header modem to generate random header symbols

-------------------------------------------------------------------
Sun Feb 08 21:35:19 UTC 2015 - mardnh@gmx.de

- Update to version 0.0.0.git1423332981.39dd78f:
  + iirfilt/example: cleaning up example code, improving plots
  + nco: simplifying internal phase-locked loop
  + nco/pll/autotest: tightening tolerance, printing phase/freq errors
  + autotest: adding option to randomize tests
  + autotest: fixing bug with printing results (random mode)
  + autotest: adding methods to print list of tests/packages
  + iirfilt: adding DC-blocking example program
  + resamp: adding create_default() method for simple operation
  + lpc/example: refining example slightly
  + firfilt: adding cccf example to demonstrate cross-correlation

-------------------------------------------------------------------
Wed Jan 14 21:46:56 UTC 2015 - mardnh@gmx.de

- Update to version 0.0.0.git1417963874.0379b88:
  + gmskframe: adding readme to describe framing structure
  + fft/spgram: moving object declaration to macro
  + fft/spgram: moving internal object definition to macro
  + fft/spgram: adding spgramf object (real inputs) and example
  + agc/build: fixing trivial typo, formatting
  + fft/asgram: moving internal object definition to macro
  + fft/asgram: adding 'print' method for API simplicity
  + fft/spgram: fixing bug with output array size in execute()
  + fft/asgram: adding real-valued ascii spectrogram example
  + fft/asgram: cleaning up examples descriptions
  + fft/spgram/asgram: separating push() from write() methods
  + fft/spgram: adding simple method to convert to dB with FFT shift
  + fft/spgram: fixing fftshift bug with execute_psd()
  + fft/spgram: adding simple weighting factor for PSD estimate
  + eqlms: adding internal timer for weight adjustment
  + firhilb: adding [interp|decim]_execute_block() methods
  + filter|firhilb: cleaning up Hilbert transform example
  + firpfbch/sandbox: adding forward declaration of internal methods
  + symsync: adding symbol synchronizer autotest
  + symsync: adding simpler symsync example, improving description
  + symsync/autotest: running different timing scenarios
  + symsync/autotest: adding rrrf class test suite
  + symsync: adding rate adjustment to help pull in sample rate offsets
  + resamp: clarifying internal enumumerated state
  + fft/spgram: scaling gain by sqrt(2) so output level matches
  + buffer/wdelay: cleaning up code, adding descriptive comments
  + build: add DESTDIR support in makefile for RPMs, custom installation
  + fft/spgram: moving object declaration to macro
  + fft/spgram: moving internal object definition to macro
  + fft/spgram: adding spgramf object (real inputs) and example
  + build: removing unnecessary vpath make directive
  + ofdmframesync: cleaning up synchronization example a bit
  + ofdmframesync: simplifying frame sync example

-------------------------------------------------------------------
Thu Jul  3 19:01:48 UTC 2014 - mardnh@gmx.de

- initial package
- version liquid-dsp-0.0.0+git.1400958927.05cca9

