-------------------------------------------------------------------
Tue Jul 17 17:53:33 UTC 2018 - junghans@votca.org

- Drop reproducible.patch and replace by CMake options

-------------------------------------------------------------------
Tue Jul 10 18:30:46 UTC 2018 - bwiedemann@suse.com

- Add reproducible.patch to compile independent of build system CPU
  (boo#1100677)

-------------------------------------------------------------------
Wed Jun 13 15:39:50 UTC 2018 - guillaume.gardet@opensuse.org

- Workaround GCC8 bug in TW with patch:
  * gcc-8.patch

-------------------------------------------------------------------
Mon Jun  4 15:04:47 UTC 2018 - nmoreychaisemartin@suse.com
- Update to legion 18.05.0
  * Legion
    - Migrated all node-local Legion reservations to use Realm fast reservations and removed no longer necessary continuations
    - Added support for mapper attached data to all Mappable types
    - Added support for assigning a block of IDs to a library in a consistent way across nodes via generate_library_task_ids and friends
  * Realm
    - Added support for "fast" reservations that have better performance characteristics for reservations local to a node
  * C API
    - Updated projection functor API to match Legion C++ API
  * Regent
    - Regent now generates disjointness constraints for affine expressions in partition accesses. E.g. p[i] and p[i+1] are now known to be disjoint at compile time as long as p is a disjoint partition
    - Support for non-trivial projection functors in index space launches such as f(p[i+1])
    - Improvements to compile time spent in various optimization passes
    - Support for parallel compilation with the flag -fjobs N
    - Miscellaneous fixes 

-------------------------------------------------------------------
Wed Feb  7 09:20:28 UTC 2018 - nmoreychaisemartin@suse.com

- Update to legion 18.02.0
  * Legion
    - Support for PowerPC vector intrinsics
    - FieldAccessors support "view" coordinates and equivalent bounds checks
    - Improved schedule priorities for Legion meta-tasks
  * Realm
    - Operation priority can now be adjust after a task/copy is launched
    - Assorted bug/memory leak fixes
    - AffineAccessors support an optional translation from "view" coordinates
        to actual coordinates in the instance being accessed
  * Regent
    - Experimental support for calling Regent tasks from C/C++
    - Support for building with CMake
    - Support for running on PowerPC
  * Bindings
    - Obsolete Lua and Terra bindings have been removed. The remaining Terra
      bindings have been renamed to Regent and now produce libregent.so

-------------------------------------------------------------------
Fri Nov 10 10:43:49 UTC 2017 - nmoreychaisemartin@suse.com

- Remove build parallelism as it uses too much memory

-------------------------------------------------------------------
Sat Oct 28 00:29:48 UTC 2017 - junghans@votca.org

- Version bump to 17.10.0
  * Legion
    - Introduction of new partitioning API based on dependent partitioning
    - Deprecation of old partitioning API, LegionRuntime::{Arrays,Accessors} namespaces
  * Realm
    - Dependent partitioning API, including dimension-aware IndexSpace
    - Point/Rect types moved to Realm namespace
    - Instance creation allows caller to choose precise memory layout
    - Accessors moved to Realm namespace, changed to match new instance layouts
  * C API
    - The C API is now accessed via the legion.h header file. Note that this is still a redirect back to the current legion/legion_c.h header
  * Legion Prof
   - Added support for minimally invasive dumping of intermediate profiling data while the application is still running for long runs
  * Python
    - New Python API bindings and native support for Python processors
    - Compile with USE_PYTHON=1 and run with -ll:py 1 to enable Python
    - Also see examples/python_interop for an example
- Add legion-fix-potential-return-of-random-data.patch to workaround
  a rpmlint error

-------------------------------------------------------------------
Thu Oct  5 13:04:42 UTC 2017 - nmoreychaisemartin@suse.com

- Force load of MPI environment
- Use OpenMPI2 instead of OpenMPI1 except for ppc64be (unsupported by OpenMPI >= 2)

-------------------------------------------------------------------
Tue Sep  5 12:40:35 UTC 2017 - nmoreychaisemartin@suse.com

- Add _service to allow easier updates from github

-------------------------------------------------------------------
Fri Aug 25 00:27:54 UTC 2017 - junghans@votca.org

- Version bump to 17.08.0 
  * Build system
    - Added HDF_ROOT variable to customize HDF5 install location
  * Legion
    - New error message format and online reference at
        http://legion.stanford.edu/messages
  * Legion Prof
    - Added new compact binary format for profile logs
    - Added flag: -hl:prof_logfile prof_%.gz
  * Realm
    - Fixes to support big-endian systems
    - Several performance improvements to DMA subsystem
    - Added REALM_DEFAULT_ARGS environment variable
        containing flags to be inserted at front of command line
  * Regent
    - Removed new operator. Unstructured regions are now
        fully allocated by default
    - Added optimization to automatically skip empty tasks
    - Initial support for extern tasks that are defined elsewhere
    - Tasks that use __demand(__openmp) are now constrained
        to run on OpenMP processors by default
    - RDIR: Better support for deeper nested region trees
- drop realm-detect-big-endian-systems-and-reverse-order-of-ID-fields.patch, upstream
- drop tutorial-fix-bad-type-size-causing-crash-on-big-endian-systems.patch, upstream

-------------------------------------------------------------------
Thu Jun 22 15:01:27 UTC 2017 - nmoreychaisemartin@suse.com

- Fix support on big endian systems by adding:
  * realm-detect-big-endian-systems-and-reverse-order-of-ID-fields.patch
  * tutorial-fix-bad-type-size-causing-crash-on-big-endian-systems.patch

-------------------------------------------------------------------
Tue Jun 13 12:16:17 UTC 2017 - nmoreychaisemartin@suse.com

- Disable build on ppc64 and s390x.
  See upstream bug https://github.com/StanfordLegion/legion/issues/265

-------------------------------------------------------------------
Fri May 26 21:53:42 UTC 2017 - junghans@votca.org

- Version bump to 17.05.0: no changelog available
  * see https://github.com/StanfordLegion/legion/compare/legion-17.02.0...legion-17.05.0

-------------------------------------------------------------------
Fri Feb 24 23:29:59 UTC 2017 - junghans@votca.org

- Version bump to 17.02.0
  * Drop 204.patch, merged upstream

-------------------------------------------------------------------
Tue Nov  1 21:18:09 UTC 2016 - junghans@votca.org

- 204.patch: upstream patch to fix build on arm

-------------------------------------------------------------------
Sun Oct 30 17:16:06 UTC 2016 - jengelh@inai.de

- Update descriptions. (Trim main description since only the SRPM
  will use it.)

-------------------------------------------------------------------
Fri Oct  7 14:37:02 UTC 2016 - junghans@votca.org

- Update to v16.10
  * Dropped all merge patches
  * Realm
    - HDF5 support: moved to Realm module, added DMA channels
    - PAPI support: basic profiling (instructions, caches, branches) added
  * Build flow
    - Fixes to support compilation in 32-bit mode
    - Numerous improvements to CMake build
  * Regent
    - Improvements to vectorization of structured codes
  * Apps
    - Removed bit-rotted applications - some have been replaced by examples
        or Regent applications
  * Tests
    - New test infrastructure and top-level test script `test.py`

-------------------------------------------------------------------
Sat Sep  3 21:56:32 UTC 2016 - junghans@votca.org

- v16.08.0 - initial import

