<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>f83bd1954fb6d2b37847b36819da2107</srcmd5>
    <version>unknown</version>
    <time>1292252914</time>
    <user>darix</user>
    <comment>Accepted submit request 55579 from user pgajdos
</comment>
    <requestid>55579</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>a7c2774e9c4ac7e340366418dd7f0953</srcmd5>
    <version>unknown</version>
    <time>1292252924</time>
    <user>darix</user>
    <comment>Autobuild autoformatter for 55579
</comment>
  </revision>
  <revision rev="3" vrev="5">
    <srcmd5>a7c2774e9c4ac7e340366418dd7f0953</srcmd5>
    <version>unknown</version>
    <time>1297941525</time>
    <user>autobuild</user>
    <comment>11.4 source split</comment>
  </revision>
  <revision rev="4" vrev="6">
    <srcmd5>37fedf7cf7f1684d89079b6f6d0ed0e4</srcmd5>
    <version>unknown</version>
    <time>1299226598</time>
    <user>saschpe</user>
    <comment>Accepted submit request 63341 from user pgajdos
</comment>
    <requestid>63341</requestid>
  </revision>
  <revision rev="5" vrev="7">
    <srcmd5>8261c733c95d04b4b93572531c1f5323</srcmd5>
    <version>unknown</version>
    <time>1299226604</time>
    <user>saschpe</user>
    <comment>Autobuild autoformatter for 63341
</comment>
  </revision>
  <revision rev="6" vrev="8">
    <srcmd5>461783af5463a6f1d28309f8c209b9ad</srcmd5>
    <version>1.1.1</version>
    <time>1316459537</time>
    <user>lrupp</user>
    <comment></comment>
    <requestid>82442</requestid>
  </revision>
  <revision rev="7" vrev="9">
    <srcmd5>2c193bc043be521eb6cfc2892af6afc2</srcmd5>
    <version>1.1.1</version>
    <time>1316459543</time>
    <user>lrupp</user>
    <comment>Autobuild autoformatter for 82442
</comment>
  </revision>
  <revision rev="8" vrev="11">
    <srcmd5>2c193bc043be521eb6cfc2892af6afc2</srcmd5>
    <version>1.1.1</version>
    <time>1319182105</time>
    <user>adrianSuSE</user>
  </revision>
  <revision rev="9" vrev="12">
    <srcmd5>42a847b62f48f835422f2ef3671cb615</srcmd5>
    <version>unknown</version>
    <time>1321460335</time>
    <user>coolo</user>
    <comment>- Open all file descriptors with O_CLOEXEC, extended description
  in the patch file.</comment>
    <requestid>91368</requestid>
  </revision>
  <revision rev="10" vrev="13">
    <srcmd5>d3ec04a915ba6c68526ea8475dd3b78a</srcmd5>
    <version>unknown</version>
    <time>1321875286</time>
    <user>coolo</user>
    <comment>- add libtool as buildrequire to avoid implicit dependency (forwarded request 92534 from coolo)</comment>
    <requestid>92551</requestid>
  </revision>
  <revision rev="11" vrev="14">
    <srcmd5>1c6d2b9f6df0765643df388283b8f8da</srcmd5>
    <version>unknown</version>
    <time>1323192258</time>
    <user>coolo</user>
    <comment>replace license with spdx.org variant</comment>
  </revision>
  <revision rev="12" vrev="16">
    <srcmd5>1c6d2b9f6df0765643df388283b8f8da</srcmd5>
    <version>unknown</version>
    <time>1340183599</time>
    <user>adrianSuSE</user>
    <comment>branched from openSUSE:Factory</comment>
  </revision>
  <revision rev="13" vrev="17">
    <srcmd5>119e7f67e46b9e89d877b5184f3522e5</srcmd5>
    <version>unknown</version>
    <time>1343162647</time>
    <user>namtrac</user>
    <comment>- Update to version 1.2.1:
    * fixed heap overflow [bnc#771791]

- Update to version 1.2.0 
    * Fixed out-of-bounds read in SSE2 SIMD code
    * Added a compile-time macro (LIBJPEG_TURBO_VERSION) that can 
      be used to check the version of libjpeg-turbo against which 
      an application was compiled.
    * Added new RGBA/BGRA/ABGR/ARGB colorspace extension constants
    * libjpeg-turbo will now correctly decompress erroneous 
      CMYK/YCCK JPEGs whose K component is assigned a component ID 
      of 1 instead of 4.  
    * Added SIMD routines for RGB-to-grayscale color conversion
    * Improved the performance of the C color conversion routines
    * Added a function to the TurboJPEG API that performs lossless 
      transforms.
    * Added support for 4:4:0 (transposed 4:2:2) subsampling</comment>
    <requestid>128748</requestid>
  </revision>
  <revision rev="14" vrev="18">
    <srcmd5>8a4105ce2a2e14af3b12bd5c441b7e87</srcmd5>
    <version>unknown</version>
    <time>1344947207</time>
    <user>namtrac</user>
    <comment>- selfconflicts are not possible, remove it (forwarded request 130734 from dirkmueller)</comment>
    <requestid>130738</requestid>
  </revision>
  <revision rev="15" vrev="20">
    <srcmd5>8a4105ce2a2e14af3b12bd5c441b7e87</srcmd5>
    <version>unknown</version>
    <time>1359109292</time>
    <user>adrianSuSE</user>
    <comment>Split 12.3 from Factory</comment>
  </revision>
  <revision rev="16" vrev="21">
    <srcmd5>f7c7c74fde448ceeca98ef2211ad9402</srcmd5>
    <version>unknown</version>
    <time>1368861691</time>
    <user>coolo</user>
    <comment>- libjpeg62-turbo package created [bnc#807183]


- remove
   %{_bindir}/*
   %doc %{_mandir}/man1/*
  https://bugzilla.novell.com/show_bug.cgi?id=807183#c14

- libjpeg62-turbo package created [bnc#807183]

- selfconflicts are not possible, remove it

- Update to version 1.2.1:
    * fixed heap overflow [bnc#771791]

- Update to version 1.2.0 
    * Fixed out-of-bounds read in SSE2 SIMD code
    * Added a compile-time macro (LIBJPEG_TURBO_VERSION) that can 
      be used to check the version of libjpeg-turbo against which 
      an application was compiled.
    * Added new RGBA/BGRA/ABGR/ARGB colorspace extension constants
    * libjpeg-turbo will now correctly decompress erroneous 
      CMYK/YCCK JPEGs whose K component is assigned a component ID 
      of 1 instead of 4.  
    * Added SIMD routines for RGB-to-grayscale color conversion
    * Improved the performance of the C color conversion routines
    * Added a function to the TurboJPEG API that performs lossless 
      transforms.
    * Added support for 4:4:0 (transposed 4:2:2) subsampling</comment>
    <requestid>175952</requestid>
  </revision>
  <revision rev="17" vrev="22">
    <srcmd5>24689bf1d37358db2e9445eec72959fc</srcmd5>
    <version>unknown</version>
    <time>1370426042</time>
    <user>coolo</user>
    <comment>- Build with full RELRO as this library is exposed to 
  possible malicious images.

- Build with full RELRO as this library is exposed toÂ· 
  possible malicious images. (forwarded request 176777 from elvigia)</comment>
    <requestid>176800</requestid>
  </revision>
  <revision rev="18" vrev="23">
    <srcmd5>9f5874867421c37797ddd6d0b551dd48</srcmd5>
    <version>unknown</version>
    <time>1371561574</time>
    <user>coolo</user>
    <comment>- by change from Wed Mar  6 11:19:02 UTC 2013, libjpeg62-turbo
  do not provide any binaries, so it should not provide jpeg</comment>
    <requestid>178942</requestid>
  </revision>
  <revision rev="19" vrev="25">
    <srcmd5>9f5874867421c37797ddd6d0b551dd48</srcmd5>
    <version>unknown</version>
    <time>1379662984</time>
    <user>adrianSuSE</user>
    <comment>Split 13.1 from Factory</comment>
  </revision>
  <revision rev="20" vrev="26">
    <srcmd5>3c472ffa539c6e6897eb7a90f8ac390e</srcmd5>
    <version>unknown</version>
    <time>1387453260</time>
    <user>coolo</user>
    <comment>- update do 1.3.0:
  * Fixed a Huffman encoder bug that prevented I/O suspension from 
    working properly.
  *  Added support for additional scaling factors (3/8, 5/8, 3/4, 
     7/8, 9/8, 5/4, 11/8, 3/2, 13/8, 7/4, 15/8, and 2) when 
     decompressing.  Note that the IDCT will not be SIMD-accelerated 
     when using any of these new scaling factors.
  * The tjDecompressToYUV() function now supports the TJFLAG_FASTDCT
    flag.
  * cjpeg can now be used to generate JPEG files with the RGB 
    colorspace (feature ported from jpeg-8d.)
  * etc. see ChangeLog.txt

- update do 1.3.0:
  * Fixed a Huffman encoder bug that prevented I/O suspension from
    working properly.
  *  Added support for additional scaling factors (3/8, 5/8, 3/4,
     7/8, 9/8, 5/4, 11/8, 3/2, 13/8, 7/4, 15/8, and 2) when
     decompressing.  Note that the IDCT will not be SIMD-accelerated
     when using any of these new scaling factors.
  * The tjDecompressToYUV() function now supports the TJFLAG_FASTDCT
    flag.
  * cjpeg can now be used to generate JPEG files with the RGB
    colorspace (feature ported from jpeg-8d.)
  * etc. see ChangeLog.txt</comment>
    <requestid>211386</requestid>
  </revision>
  <revision rev="21" vrev="27">
    <srcmd5>aba1a24acbbbc8791ac98639b01c7f49</srcmd5>
    <version>unknown</version>
    <time>1392112568</time>
    <user>coolo</user>
    <comment>Require libturbojpeg in libjpeg-devel (forwarded request 221248 from scarabeus_iv)</comment>
    <requestid>221307</requestid>
  </revision>
  <revision rev="22" vrev="28">
    <srcmd5>246b242fdd42f60c0697532f62b2c301</srcmd5>
    <version>unknown</version>
    <time>1393098258</time>
    <user>coolo</user>
    <comment>- Provide right name for turbo library 32bit generating. (forwarded request 223308 from scarabeus_iv)</comment>
    <requestid>223331</requestid>
  </revision>
  <revision rev="23" vrev="29">
    <srcmd5>127a69a630402a55d961a651be4c98a9</srcmd5>
    <version>unknown</version>
    <time>1396535913</time>
    <user>coolo</user>
    <comment>- update to 1.3.1:
  *  Fixed a bug whereby attempting to encode a progressive JPEG 
     with arithmetic entropy coding (by passing arguments of 
     -progressive -arithmetic to cjpeg or jpegtran, for instance) 
     would result in an error, &quot;Requested feature was omitted at 
     compile time&quot;.
  * Fixed a couple of issues whereby malformed JPEG images would 
    cause libjpeg-turbo to use uninitialized memory during 
    decompression.
  *  Fixed an error (&quot;Buffer passed to JPEG library is too small&quot;)
     that occurred when calling the TurboJPEG YUV encoding function 
     with a very small (&lt; 5x5) source image, and added a unit test 
     to check for this error.
  * etc. see ChangeLog.txt

-  update to 1.3.1:
  *  Fixed a bug whereby attempting to encode a progressive JPEG
     with arithmetic entropy coding (by passing arguments of
     -progressive -arithmetic to cjpeg or jpegtran, for instance)
     would result in an error, &quot;Requested feature was omitted at
     compile time&quot;.
  * Fixed a couple of issues whereby malformed JPEG images would
    cause libjpeg-turbo to use uninitialized memory during
    decompression.
  *  Fixed an error (&quot;Buffer passed to JPEG library is too small&quot;)
     that occurred when calling the TurboJPEG YUV encoding function
     with a very small (&lt; 5x5) source image, and added a unit test
     to check for this error.
  * etc. see ChangeLog.txt</comment>
    <requestid>228281</requestid>
  </revision>
  <revision rev="24" vrev="31">
    <srcmd5>127a69a630402a55d961a651be4c98a9</srcmd5>
    <version>unknown</version>
    <time>1409301597</time>
    <user>adrianSuSE</user>
    <comment>Split 13.2 from Factory</comment>
  </revision>
  <revision rev="25" vrev="32">
    <srcmd5>ec2e99f9e7f6fb61beb58c798c38941c</srcmd5>
    <version>unknown</version>
    <time>1412699027</time>
    <user>coolo</user>
    <comment>- to obsolete old versions better use obsoletes (forwarded request 254475 from coolo)</comment>
    <requestid>254477</requestid>
  </revision>
  <revision rev="26" vrev="33">
    <srcmd5>11dbaef75c417a00e6c1e0b41a49bc58</srcmd5>
    <version>unknown</version>
    <time>1413616095</time>
    <user>coolo</user>
    <comment>- Obsolete jpeg version 6b, 8.0.1 and 8.0.2 to avoid conflicts
  during zypper dup</comment>
    <requestid>256713</requestid>
  </revision>
  <revision rev="27" vrev="34">
    <srcmd5>b497556671f03552ba4367cc5943ba1b</srcmd5>
    <version>unknown</version>
    <time>1417160669</time>
    <user>dimstar_suse</user>
    <comment>- security update CVE-2014-9092 [bnc#906761]
  * added libjpeg-turbo-CVE-2014-9092.patch

- security update CVE-2014-9092 [bnc#906761]
  * added libjpeg-turbo-CVE-2014-9092.patch</comment>
    <requestid>263204</requestid>
  </revision>
  <revision rev="28" vrev="35">
    <srcmd5>ce23d671050b45e068d0a9865cc3d42a</srcmd5>
    <version>unknown</version>
    <time>1421333900</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>280697</requestid>
  </revision>
  <revision rev="29" vrev="36">
    <srcmd5>2366f3acae605c2ea616f3d89d8b37ef</srcmd5>
    <version>unknown</version>
    <time>1425566032</time>
    <user>dimstar_suse</user>
    <comment>-  Remove float tests with new libjpeg-turbo-remove-test.patch
   same as Fedora bug 1161585 related to upstream issue
   https://sourceforge.net/p/libjpeg-turbo/bugs/83/ (forwarded request 288518 from michel_mno)</comment>
    <requestid>288604</requestid>
  </revision>
  <revision rev="30" vrev="37">
    <srcmd5>75f9259cb414a06496e0392a6e5615a5</srcmd5>
    <version>unknown</version>
    <time>1426174660</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>290155</requestid>
  </revision>
  <revision rev="31" vrev="38">
    <srcmd5>a925c46c037c1d76a121633e1431d5da</srcmd5>
    <version>unknown</version>
    <time>1458120372</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.4.2
  + Crash fixes
  + clang compatibility fixes
  + See the included ChangeLog.txt for the details
- Drop libjpeg-turbo-1.4.0-int32.patch, not needed anymore.
- Drop libjpeg-turbo-remove-test.patch, fixed upstream.

- Update to version 1.4.2
  + Crash fixes
  + clang compatibility fixes
  + See the included ChangeLog.txt for the details
- Drop libjpeg-turbo-1.4.0-int32.patch, not needed anymore.</comment>
    <requestid>369636</requestid>
  </revision>
  <revision rev="32" vrev="39">
    <srcmd5>01713c56ab27398b3439e5ee08b3a187</srcmd5>
    <version>unknown</version>
    <time>1465847325</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.5.0
  + Fixed an issue whereby a malformed motion-JPEG frame could
    cause the &quot;fast path&quot; of libjpeg-turbo's Huffman decoder to
    read from uninitialized memory.
  + Added libjpeg-turbo version and build information to the global
    string table of the libjpeg and TurboJPEG API libraries.
  + Fixed a couple of issues in the PPM reader that would cause
    buffer overruns in cjpeg if one of the values in a binary
    PPM/PGM input file exceeded the maximum value defined in the
    file's header. libjpeg-turbo 1.4.2 already included a similar
    fix for ASCII PPM/PGM files. Note that these issues were not
    security bugs, since they were confined to the cjpeg program
    and did not affect any of the libjpeg-turbo libraries.
  + Fixed an issue whereby attempting to decompress a JPEG file with
    a corrupt header using the tjDecompressToYUV2() function would
    cause the function to abort without returning an error and,
    under certain circumstances, corrupt the stack. This only
    occurred if tjDecompressToYUV2() was called prior to calling
    tjDecompressHeader3(), or if the return value from
    tjDecompressHeader3() was ignored (both cases represent
    incorrect usage of the TurboJPEG API.)
  + The jpeg_stdio_src(), jpeg_mem_src(), jpeg_stdio_dest(),
    and jpeg_mem_dest() functions in the libjpeg API will now
    throw an error if a source/destination manager has already
    been assigned to the compress or decompress object by a
    different function or by the calling program. 

- Update to version 1.5.0
  + Fixed an issue whereby a malformed motion-JPEG frame could
    cause the &quot;fast path&quot; of libjpeg-turbo's Huffman decoder to</comment>
    <requestid>400622</requestid>
  </revision>
  <revision rev="33" vrev="40">
    <srcmd5>c7c13a29dd87a71ef5aea912ea072921</srcmd5>
    <version>unknown</version>
    <time>1474806487</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.5.1
  + Fix for PowerPC platforms lacking AltiVec instructions
  + Fix ABI problem with clang/llvm on aarch64.
  + Fancy upsampling is now supported when decompressing JPEG
    images that use 4:4:0 (h1v2) chroma subsampling.
  + If merged upsampling isn't SIMD-accelerated but YCbCr-to-RGB
    conversion is, then libjpeg-turbo will now disable merged
    upsampling when decompressing YCbCr JPEG images into RGB
    or extended RGB output images. This significantly speeds up
    the decompression of 4:2:0 and 4:2:2 JPEGs on ARM platforms
    if fancy upsampling is not used 
    (for example, if the -nosmooth option to djpeg is specified.)
  + The TurboJPEG API will now decompress 4:2:2 and 4:4:0 JPEG
    images with 2x2 luminance sampling factors and 2x1 or 1x2
    chrominance sampling factors.
  + Fixed an unsigned integer overflow in the libjpeg memory manager.
  + Fixed additional negative left shifts and other issues reported
    by the GCC and Clang undefined behavior sanitizers when
    attempting to decompress specially-crafted malformed JPEG
    images. None of these issues posed a security threat, but
    removing the warnings makes it easier to detect actual
    security issues, should they arise in the future.
  + Fixed an out-of-bounds array reference, introduced by
    1.4.902 and detected by the Clang undefined behavior sanitizer,
    that could be triggered by a specially-crafted malformed
    JPEG image with more than four components. Because the
    out-of-bounds reference was still within the same structure,
    it was not known to pose a security threat, but removing
    the warning makes it easier to detect actual security issues,
    should they arise in the future.</comment>
    <requestid>429280</requestid>
  </revision>
  <revision rev="34" vrev="41">
    <srcmd5>67850fd6800934bd08a4fadfeef611ef</srcmd5>
    <version>unknown</version>
    <time>1485379881</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>451226</requestid>
  </revision>
  <revision rev="35" vrev="42">
    <srcmd5>1163558e36e8740bd65c716a973d1ef9</srcmd5>
    <version>unknown</version>
    <time>1498045790</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>504426</requestid>
  </revision>
  <revision rev="36" vrev="43">
    <srcmd5>cf8965ec142b6fc46803e94fb4b102cd</srcmd5>
    <version>unknown</version>
    <time>1507755716</time>
    <user>dimstar_suse</user>
    <comment>Mention eco fate number for backport to sle12 (forwarded request 532986 from scarabeus_iv)</comment>
    <requestid>532990</requestid>
  </revision>
  <revision rev="37" vrev="44">
    <srcmd5>db1809fe02a94bb7fc6f55444f020bc9</srcmd5>
    <version>unknown</version>
    <time>1508323821</time>
    <user>dimstar_suse</user>
    <comment>- security update:
  * CVE-2017-15232 [bsc#1062937]
    + libjpeg-turbo-CVE-2017-15232.patch

- Update to version 1.5.2
  + Fixed several memory leaks in the TurboJPEG API library that
    could occur if the library was built with certain compilers
    and optimization levels.
  + The libjpeg-turbo memory manager will now honor the
    max_memory_to_use structure member in jpeg_memory_mgr, 
    which can be set to the maximum amount of memory (in bytes)
    that libjpeg-turbo should use during decompression or 
    multi-pass (including progressive) compression. This limit 
    can also be set using the JPEGMEM environment variable or 
    using the -maxmemory switch in cjpeg/djpeg/jpegtran.
  + TJBench will now run each benchmark for 1 second prior to 
    starting the timer, in order to improve the consistency of
    the results. Furthermore, the -warmup option is now used to
    specify the amount of warmup time rather than the number of
    warmup iterations.
  + Fixed an error (short jump is out of range) that occurred 
    when assembling the 32-bit x86 SIMD extensions with NASM
    versions prior to 2.04.
  + Fixed a regression introduced by 1.5 beta1[11] that prevented
    the Java version of TJBench from outputting any reference images
    (the -nowrite switch was accidentally enabled by default.)
    libjpeg-turbo should now build and run with full AltiVec SIMD
    acceleration on PowerPC-based AmigaOS 4 and OpenBSD systems.

- security update:</comment>
    <requestid>533647</requestid>
  </revision>
  <revision rev="38" vrev="45">
    <srcmd5>4674e2ecf8d76211157aa05f47ace3bf</srcmd5>
    <version>unknown</version>
    <time>1514027885</time>
    <user>dimstar_suse</user>
    <comment>- - update to version 1.5.3
  1. Fixed a NullPointerException in the TurboJPEG Java wrapper that occurred
  when using the YUVImage constructor that creates an instance backed by separate
  image planes and allocates memory for the image planes.
  2. Fixed an issue whereby the Java version of TJUnitTest would fail when
  testing BufferedImage encoding/decoding on big endian systems.
  3. Fixed a segfault in djpeg that would occur if an output format other than
  PPM/PGM was selected along with the `-crop` option.  The `-crop` option now
  works with the GIF and Targa formats as well (unfortunately, it cannot be made
  to work with the BMP and RLE formats due to the fact that those output engines
  write scanlines in bottom-up order.)  djpeg will now exit gracefully if an
  output format other than PPM/PGM, GIF, or Targa is selected along with the
  `-crop` option.
  4. Fixed an issue whereby `jpeg_skip_scanlines()` would segfault if color
  quantization was enabled.
  5. TJBench (both C and Java versions) will now display usage information if any
  command-line argument is unrecognized.  This prevents the program from silently
  ignoring typos.
  6. Fixed an access violation in tjbench.exe (Windows) that occurred when the
  program was used to decompress an existing JPEG image.
  7. Fixed an ArrayIndexOutOfBoundsException in the TJExample Java program that
  occurred when attempting to decompress a JPEG image that had been compressed
  with 4:1:1 chrominance subsampling.
  8. Fixed an issue whereby, when using `jpeg_skip_scanlines()` to skip to the
  end of a single-scan (non-progressive) image, subsequent calls to
  `jpeg_consume_input()` would return `JPEG_SUSPENDED` rather than
  `JPEG_REACHED_EOI`.
  9. `jpeg_crop_scanlines()` now works correctly when decompressing grayscale
  JPEG images that were compressed with a sampling factor other than 1 (for
  instance, with `cjpeg -grayscale -sample 2x2`).</comment>
    <requestid>558098</requestid>
  </revision>
  <revision rev="39" vrev="46">
    <srcmd5>c78f244e2f1cd001bf480f60b0e44038</srcmd5>
    <version>unknown</version>
    <time>1529666186</time>
    <user>maxlin_factory</user>
    <comment>- security update:
  * CVE-2018-1152 [bsc#1098155]
    + libjpeg-turbo-CVE-2018-1152.patch

- security update:
  * CVE-2018-11813 [bsc#1096209]
    + libjpeg-turbo-CVE-2018-11813.patch
  * remove redundant libjpeg-turbo-CVE-2017-15232.patch
    [bsc#1062937#c17]

- security update:
  * CVE-2018-1152 [bsc#1098155]
    + libjpeg-turbo-CVE-2018-1152.patch

- security update:
  * CVE-2018-11813 [bsc#1096209]
    + libjpeg-turbo-CVE-2018-11813.patch
  * remove redundant libjpeg-turbo-CVE-2017-15232.patch
    [bsc#1062937#c17]</comment>
    <requestid>617768</requestid>
  </revision>
  <revision rev="40" vrev="47">
    <srcmd5>0a507f28ba15e46bbfcbf9d8c73e51cf</srcmd5>
    <version>unknown</version>
    <time>1533627600</time>
    <user>dimstar_suse</user>
    <comment>- Version update to 2.0.0:
  * Cmake as a buildsystem
  * avx support
  * Better error handling
  * More use of SSE2
- Drop patch libjpeg-1.4.0-ocloexec.patch; conflicts, would be better
  handled by upstream anyway
- Drop patches merged upstream:
  * libjpeg-turbo-CVE-2018-11813.patch
  * libjpeg-turbo-CVE-2018-1152.patch

- Version update to 2.0.0:
  * Cmake as a buildsystem
  * avx support
  * Better error handling
  * More use of SSE2
- Drop patch libjpeg-1.4.0-ocloexec.patch; conflicts, would be better
  handled by upstream anyway
- Drop patches merged upstream:
  * libjpeg-turbo-CVE-2018-11813.patch
  * libjpeg-turbo-CVE-2018-1152.patch (forwarded request 626889 from scarabeus_iv)</comment>
    <requestid>626896</requestid>
  </revision>
  <revision rev="41" vrev="48">
    <srcmd5>d58bbcc55ae5387c02aa30c8587a7eaa</srcmd5>
    <version>unknown</version>
    <time>1533887140</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>628245</requestid>
  </revision>
  <revision rev="42" vrev="49">
    <srcmd5>6c07a4665aafe440e0b80fc70a8f9f59</srcmd5>
    <version>unknown</version>
    <time>1538377531</time>
    <user>dimstar_suse</user>
    <comment>- Define FLOATTEST=64bit on ppc
- ctest-depends.patch: Add missing testsuite depedencies (forwarded request 637382 from Andreas_Schwab)</comment>
    <requestid>637384</requestid>
  </revision>
  <revision rev="43" vrev="50">
    <srcmd5>ac2666abd74d824045f3797fc544593f</srcmd5>
    <version>unknown</version>
    <time>1542579664</time>
    <user>dimstar_suse</user>
    <comment>- update to version 2.0.1:
  * jsimd_quantize_float_dspr2() and jsimd_convsamp_float_dspr2()
    functions in the MIPS DSPr2 SIMD extensions are now disabled
    at compile time if the soft float ABI is enabled
  * Fixed a regression in the SIMD feature detection code,
    introduced by the AVX2 SIMD extensions
  * Fixed out-of-bounds read in cjpeg that occurred when attempting
    to compress a specially-crafted malformed color-index
    (8-bit-per-sample) Targa file

- update to version 2.0.1:
  * jsimd_quantize_float_dspr2() and jsimd_convsamp_float_dspr2() 
    functions in the MIPS DSPr2 SIMD extensions are now disabled
    at compile time if the soft float ABI is enabled
  * Fixed a regression in the SIMD feature detection code,
    introduced by the AVX2 SIMD extensions
  * Fixed out-of-bounds read in cjpeg that occurred when attempting
    to compress a specially-crafted malformed color-index
    (8-bit-per-sample) Targa file</comment>
    <requestid>648719</requestid>
  </revision>
  <revision rev="44" vrev="51">
    <srcmd5>ad59997ddd90e0ee2288789427518de9</srcmd5>
    <version>unknown</version>
    <time>1545222274</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>656851</requestid>
  </revision>
  <revision rev="45" vrev="52">
    <srcmd5>69ef78f6d707160725d2dc09597502e4</srcmd5>
    <version>unknown</version>
    <time>1546946349</time>
    <user>dimstar_suse</user>
    <comment>- security update
  * CVE-2018-20330 [bsc#1120646]
    + libjpeg-turbo-CVE-2018-20330.patch

- security update
  * CVE-2018-19644 [bsc#1117890]
    + libjpeg-turbo-CVE-2018-19644.patch

- security update
  * CVE-2018-20330 [bsc#1120646]
    + libjpeg-turbo-CVE-2018-20330.patch

- security update
  * CVE-2018-19644 [bsc#1117890]
    + libjpeg-turbo-CVE-2018-19644.patch</comment>
    <requestid>662705</requestid>
  </revision>
  <revision rev="46" vrev="53">
    <srcmd5>2f514bd4acce012ff44f349323360c29</srcmd5>
    <version>unknown</version>
    <time>1548537602</time>
    <user>dimstar_suse</user>
    <comment>- Use -Og for debug_build (forwarded request 668258 from jengelh)</comment>
    <requestid>668260</requestid>
  </revision>
  <revision rev="47" vrev="54">
    <srcmd5>c44c0ebbb7dfe2dda8b57b44b7203ee3</srcmd5>
    <version>unknown</version>
    <time>1552901775</time>
    <user>dimstar_suse</user>
    <comment>- updated to version 2.0.2:
  1. Fixed a regression introduced by 2.0.1[5] that prevented a runtime search
  path (rpath) from being embedded in the libjpeg-turbo shared libraries and
  executables for macOS and iOS.  This caused a fatal error of the form
  &quot;dyld: Library not loaded&quot; when attempting to use one of the executables,
  unless `DYLD_LIBRARY_PATH` was explicitly set to the location of the
  libjpeg-turbo shared libraries.
  2. Fixed an integer overflow and subsequent segfault (CVE-2018-20330) that
  occurred when attempting to load a BMP file with more than 1 billion pixels
  using the `tjLoadImage()` function.
  3. Fixed a buffer overrun (CVE-2018-19664) that occurred when attempting to
  decompress a specially-crafted malformed JPEG image to a 256-color BMP using
  djpeg.
  4. Fixed a floating point exception that occurred when attempting to
  decompress a specially-crafted malformed JPEG image with a specified image
  width or height of 0 using the C version of TJBench.
  5. The TurboJPEG API will now decompress 4:4:4 JPEG images with 2x1, 1x2, 3x1,
  or 1x3 luminance and chrominance sampling factors.  This is a non-standard way
  of specifying 1x subsampling (normally 4:4:4 JPEGs have 1x1 luminance and
  chrominance sampling factors), but the JPEG format and the libjpeg API both
  allow it.
  6. Fixed a regression introduced by 2.0 beta1[7] that caused djpeg to generate
  incorrect PPM images when used with the `-colors` option.
  7. Fixed an issue whereby a static build of libjpeg-turbo (a build in which
  `ENABLE_SHARED` is `0`) could not be installed using the Visual Studio IDE.
  8. Fixed a severe performance issue in the Loongson MMI SIMD extensions that
  occurred when compressing RGB images whose image rows were not 64-bit-aligned.
- modified patches
  % ctest-depends.patch (refreshed)
- deleted patches</comment>
    <requestid>684675</requestid>
  </revision>
  <revision rev="48" vrev="55">
    <srcmd5>cc727b3c949f1cb1a1ce1d05ea42fdd7</srcmd5>
    <version>unknown</version>
    <time>1553809485</time>
    <user>dimstar_suse</user>
    <comment>- use -O0 for debugging like everywhere (better experience)</comment>
    <requestid>689002</requestid>
  </revision>
  <revision rev="49" vrev="56">
    <srcmd5>3a6c004ed776cbc8a50455201bd74441</srcmd5>
    <version>unknown</version>
    <time>1571049055</time>
    <user>dimstar_suse</user>
    <comment>New upstream release (forwarded request 735401 from iznogood)</comment>
    <requestid>735600</requestid>
  </revision>
  <revision rev="50" vrev="57">
    <srcmd5>f8bc95c772c9b6c70055be6e8dc53d68</srcmd5>
    <version>unknown</version>
    <time>1573853602</time>
    <user>dimstar_suse</user>
    <comment>- fix upstream bug 388 [bsc#1156402]
- added patches
  https://github.com/libjpeg-turbo/libjpeg-turbo/issues/388
  + libjpeg-turbo-issue-388.patch</comment>
    <requestid>748021</requestid>
  </revision>
  <revision rev="51" vrev="58">
    <srcmd5>01a7959ed095603ffa0dab7b3bc2b792</srcmd5>
    <version>unknown</version>
    <time>1585668756</time>
    <user>dimstar_suse</user>
    <comment>- Upate to version 2.0.4:
- bug 388 was fixed upstream
  https://github.com/libjpeg-turbo/libjpeg-turbo/issues/388
- removed patches, as it is included in this release.
  * Fixed a regression in the Windows packaging system 
   (introduced by 2.0 beta1[2]) whereby, if both the 64-bit libjpeg-turbo 
   SDK for GCC and the 64-bit libjpeg-turbo SDK for Visual C++ were installed 
   on the same system, only one of them could be uninstalled.
  * Fixed a signed integer overflow and subsequent segfault that occurred when 
    attempting to decompress images with more than 715827882 pixels using the 64-bit C version of TJBench.
  * Fixed out-of-bounds write in tjDecompressToYUV2() and tjDecompressToYUVPlanes() 
    (sometimes manifesting as a double free) that occurred when attempting to decompress 
    grayscale JPEG images that were compressed with a sampling factor other than 1 
    (for instance, with cjpeg -grayscale -sample 2x2).
  * Fixed a regression introduced by 2.0.2[5] that caused the TurboJPEG API to incorrectly 
    identify some JPEG images with unusual sampling factors as 4:4:4 JPEG images. 
    This was known to cause a buffer overflow when attempting to decompress some such images using 
    tjDecompressToYUV2() or tjDecompressToYUVPlanes().
  * Fixed an issue, detected by ASan, whereby attempting to losslessly transform a specially-crafted 
    malformed JPEG image containing an extremely-high-frequency coefficient block 
    (junk image data that could never be generated by a legitimate JPEG compressor) could cause the 
    Huffman encoder's local buffer to be overrun. (Refer to 1.4.0[9] and 1.4beta1[15].) 
    Given that the buffer overrun was fully contained within the stack and did not cause a segfault 
    or other user-visible errant behavior, and given that the lossless transformer (unlike the decompressor) 
    is not generally exposed to arbitrary data exploits, this issue did not likely pose a security risk.
    The ARM 64-bit (ARMv8) NEON SIMD assembly code now stores constants in a separate read-only data 
    section rather than in the text section, to support execute-only memory layouts.
- libjpeg-turbo-issue-388.patch upstreamed

- Added If statments for Fedora not having sertain openSUSE macros</comment>
    <requestid>789669</requestid>
  </revision>
  <revision rev="52" vrev="59">
    <srcmd5>c2f0692d27cb49c7b3f199b1ce37027e</srcmd5>
    <version>unknown</version>
    <time>1591742081</time>
    <user>dimstar_suse</user>
    <comment>- security update
- added patches
  fix CVE-2020-13790 [bsc#1172491], heap-based buffer over-read in get_rgb_row() in rdppm.c via a malformed PPM input file
  + libjpeg-turbo-CVE-2020-13790.patch

- security update
- added patches
  fix CVE-2020-13790 [bsc#1172491], heap-based buffer over-read in get_rgb_row() in rdppm.c via a malformed PPM input file
  + libjpeg-turbo-CVE-2020-13790.patch</comment>
    <requestid>812575</requestid>
  </revision>
</revisionlist>
