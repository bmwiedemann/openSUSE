-------------------------------------------------------------------
Thu May 15 14:10:28 UTC 2025 - Paolo Stivanin <info@paolostivanin.com>

- Update to 2.14.1:
  * Fix thread safety of encoding and decoding when uselocale() or newlocale()
    is used to switch locales inside the threads (#674, #675, #677).
  * Use David M. Gayâ€™s dtoa() algorithm to avoid misprinting issues of
    real numbers that are not exactly representable as a double() (#680).

-------------------------------------------------------------------
Tue Jan 18 21:11:51 UTC 2022 - Antoine Belvire <antoine.belvire@opensuse.org>

- Update to 2.14:
  * New Features:
    + Add `json_object_getn`, `json_object_setn`, `json_object_deln`, and the
      corresponding `nocheck` functions.
  * Fixes:
    + Handle `sprintf` corner cases.
  * Build:
    + Symbol versioning for all exported symbols (gh#akheron/jansson#523).
    + Fix compiler warnings.
  * Documentation:
    + Small fixes.
    + Sphinx 3 compatibility (gh#akheron/jansson#530).
- Use GitHub as source URLs: Release hasn't been uploaded to digip.org.
- Cleanup with spec-cleaner.
- Add check section.

-------------------------------------------------------------------
Fri May  8 11:48:39 UTC 2020 - Paolo Stivanin <info@paolostivanin.com>

- Update to 2.13.1
  * New Features:
    - Add jansson_version_str() and jansson_version_cmp() for runtime
      version checking
    - Add json_object_update_new(), json_object_update_existing_new()
      and json_object_update_missing_new() functions
    - Add json_object_update_recursive()
  * Bug fixes:
    - Add infinite loop check in json_deep_copy()
    - Enhance JANSSON_ATTRS macro to support earlier C standard(C89)
    - Update version detection for sphinx-build
  * Documentation improvements

-------------------------------------------------------------------
Thu Jan 24 07:55:39 UTC 2019 - info@paolostivanin.com

- update to new upstream release 2.12
  * Bug fixes:
    - Fix error message in `json_pack()` for NULL object (#409).
    - Avoid invalid memory read in `json_pack()` (#421).
    - Call va_end after va_copy in `json_vsprintf()` (#427).
    - Improve handling of formats with '?' and '*' in `json_pack()`
      (#438).
    - Remove inappropriate `jsonp_free()` which caused
      segmentation fault in error handling (#444).

-------------------------------------------------------------------
Fri Nov  9 17:35:19 UTC 2018 - kstreitova@suse.com

- update to new upstream release 2.11
  * New features:
    - Add `json_pack()` format specifiers s*, o* and O* for values
      that can be omitted if null (#339).
    - Add `json_error_code()` to retrieve numeric error codes
      (#365, #380, #381).
    - Enable thread safety for `json_dump()` on all systems.
      Enable thread safe `json_decref()` and `json_incref()` for
      modern compilers (#389).
    - Add `json_sprintf()` and `json_vsprintf()` (#393).
  * Bug Fixes:
    - Fix incorrect report of success from `json_dump_file()` when
      an error is returned by `fclose()` (#359).
    - Make json_equal() const-correct (#344).
    - Fix incomplete stealing of references by `json_pack()` (#374)

- changelog from 2.9
  * New features:
    - Add JSON_EMBED encoding flag allowing arrays and objects to
      be encoded into existing streams (#329).
    - Add `json_dumpb()` function for dumping to a pre-allocated
      buffer (#328).
    - Add `json_dumpfd()` and `json_loadfd()` functions for dumping
      to streaming file descriptors (#328).
    - Add support for parsing buffers larger than 2GB (#309).

-------------------------------------------------------------------
Wed Mar  1 16:04:10 UTC 2017 - coolo@suse.com

- update to new upstream release 2.9
 * New features:
    Add json_auto_t to automatically decref a value that goes out of scope. 
    Available only on GCC and Clang. (#301)
 * Small documentation fixes.

- changelog from 2.8
 * New features:
   - Always preserve insertion order of object items. json_object_iter() 
     and friends, json_object_foreach() and json_dumps() and friends now 
     always work in the insertion order of object items (#293).
   - Add json_object_foreach_safe() macro that allows json_object_del() 
     calls during iteration (#230).
   - Add json_get_alloc_funcs() to allow reading the allocation functions 
     set by json_set_alloc_funcs() (#262, #264).
   - Add json_pack() format specifiers s?, o? and O? for values that can 
     be null (#261, #270).
 * Bug fixes:
   - Fix a crash when parsing inputs consisting of very deeply nested 
     arrays or objects (#282, #284).
   - Never convert numbers to integers in the parser when 
     JSON_DECODE_INT_AS_REAL is set. 
   - Fix a use-after-free in json_pack() error handling.
   - Fix subnormal number parsing on mingw32.
   - Handle out-of-memory situations gracefully in the hashtable 
     implementation

-------------------------------------------------------------------
Wed Nov 05 10:18:23 UTC 2014 - efimovov@gmail.com

- Update to new upstream release 2.7
* The json_pack et al functions recognize the specifiers "s%", "+%"
  and "+#"
* Add length-aware string constructors "json_stringn()" and
  "json_stringn_nocheck()", length-aware string mutators
  "json_string_setn()" and "json_string_setn_nocheck()",
  and a function for getting string's length "json_string_length()"
* Support ""\u0000"" escapes in the decoder. The support can be
  enabled by using the ""JSON_ALLOW_NUL"" decoding flag
* Add "json_boolean_value()" as an alias for "json_is_true()"
* Add JSON_REAL_PRECISION encoding flag/macro for controlling real
  number precision
* Define the maximum indentation as JSON_MAX_INDENT.
* Fix cases when some malformed ""\uNNNN"" escapes could crash
  the decoder with an assertion failure
* Avoid integer overflows with very long strings in UTF-8 decoder
   and hashtable
* Check for *NULL* key in "json_object_get()"
  and "json_object_del()"
* "json_unpack()": Allow mixing JSON_STRICT with optional keys.
* Fix int/int32 mismatch
* Parse subnormal numbers correctly

-------------------------------------------------------------------
Thu Sep 11 18:59:04 UTC 2014 - hrvoje.senjan@gmail.com

- Add baselibs.conf

-------------------------------------------------------------------
Sun Jul 20 10:50:34 UTC 2014 - jengelh@inai.de

- Update to new upstream release 2.6
* Fixed CVE-2013-6401: avoid bad performance in large JSON objects
* The json_pack et al functions recognize the specifiers "s#", "+"
  and "+#"
* Add the "JSON_DECODE_INT_AS_REAL" flag
* Add "json_array_foreach()" function
* Add the "json_boolean()" macro that returns the JSON true or
  false value based on its argument
* Add "json_load_callback()" that calls a callback function
  repeatedly to read the JSON input.
* Add JSON_ESCAPE_SLASH encoding flag to escape all occurences of
  '/' with '\/'.
- Drop defunct gpg-offline and use local source_validator instead

-------------------------------------------------------------------
Wed Nov 28 19:42:17 CET 2012 - sbrabec@suse.cz

- Verify GPG signature.

-------------------------------------------------------------------
Sat May 12 15:18:44 UTC 2012 - jengelh@inai.de

- Update to new upstream release 2.3.1
* Add support for optional object keys with the "{s?o}" syntax
  in json_unpack and the like
* Add json_object_update_existing() and json_object_update_missing()
  for updating only existing keys or only adding missing keys to an
  object.
* Add json_object_foreach() for more convenient iteration over
  objects.
* When decoding JSON, write the number of bytes that were read from
  input to "error.position" also on success. This is handy with
  JSON_DISABLE_EOF_CHECK.
* Add support for decoding any JSON value, not just arrays or
  objects. The support is enabled with the new "JSON_DECODE_ANY"
  flag.
* Avoid problems with object's serial number growing too big.
* Remove "+" and leading zeros from exponents in the encoder.
* Decoding functions now return NULL if the first argument is NULL.

-------------------------------------------------------------------
Tue Jan 31 16:50:56 UTC 2012 - jengelh@medozas.de

- Provide pkgconfig symbols

-------------------------------------------------------------------
Fri Oct 21 16:03:16 UTC 2011 - jengelh@medozas.de

- Remove redundant tags/sections (cf. specfile guidelines)
- Centralize the shlib package name

-------------------------------------------------------------------
Mon Oct 17 14:53:08 UTC 2011 - fcastelli@suse.com

- Create initial package (v2.2.1)

