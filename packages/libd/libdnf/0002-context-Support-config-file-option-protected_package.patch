From c48791a37827b2d18683cae3a4883ebd0b0b78c0 Mon Sep 17 00:00:00 2001
From: Jaroslav Rohel <jrohel@redhat.com>
Date: Fri, 4 Dec 2020 09:36:50 +0100
Subject: [PATCH 2/2] [context] Support config file option "protected_packages"

The "protected_packages" were ignored.
Now dnf_goal_depsolve() takes into account the "protected_packages"
configuration.

= changelog =
msg: Support main config file option "protected_packages".
     Changes behaviour of microdnf and PackageKit.
type: bugfix
---
 libdnf/dnf-goal.cpp | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/libdnf/dnf-goal.cpp b/libdnf/dnf-goal.cpp
index e27727f3..b877eaca 100644
--- a/libdnf/dnf-goal.cpp
+++ b/libdnf/dnf-goal.cpp
@@ -40,11 +40,14 @@
 #include "dnf-package.h"
 #include "hy-packageset-private.hpp"
 #include "hy-iutil-private.hpp"
+#include "dnf-context.hpp"
 #include "dnf-sack-private.hpp"
 #include "dnf-utils.h"
 #include "utils/bgettext/bgettext-lib.h"
 #include "../goal/Goal.hpp"
 
+#include <vector>
+
 /**
  * dnf_goal_depsolve:
  * @goal: a #HyGoal.
@@ -63,6 +66,20 @@ dnf_goal_depsolve(HyGoal goal, DnfGoalActions flags, GError **error) try
     gint rc;
     g_autoptr(GString) string = NULL;
 
+    DnfSack * sack = hy_goal_get_sack(goal);
+
+    libdnf::Query query(sack);
+    const auto & protected_packages = libdnf::getGlobalMainConfig().protected_packages().getValue();
+    std::vector<const char *> cprotected_packages;
+    cprotected_packages.reserve(protected_packages.size() + 1);
+    for (const auto & package : protected_packages) {
+        cprotected_packages.push_back(package.c_str());
+    }
+    cprotected_packages.push_back(nullptr);
+    query.addFilter(HY_PKG_NAME, HY_EQ, cprotected_packages.data());
+    auto pkgset = *query.runSet();
+    goal->addProtected(pkgset);
+
     rc = hy_goal_run_flags(goal, flags);
     if (rc) {
         string = g_string_new(_("Could not depsolve transaction; "));
@@ -101,7 +118,6 @@ dnf_goal_depsolve(HyGoal goal, DnfGoalActions flags, GError **error) try
                             "The transaction was empty");
         return FALSE;
     }
-    DnfSack * sack = hy_goal_get_sack(goal);
     auto moduleContainer = dnf_sack_get_module_container(sack);
     if (moduleContainer) {
         auto installSet = goal->listInstalls();
-- 
2.29.2

