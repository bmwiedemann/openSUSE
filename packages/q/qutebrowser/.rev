<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>79fbac92ac5cf97a1ed441a0058bbbf3</srcmd5>
    <version>0.6.1</version>
    <time>1462051757</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>391512</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>d9e29c51b9827e654a8f9ca085cf734e</srcmd5>
    <version>0.6.2</version>
    <time>1462865251</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>394116</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>272bc1443ea0088c1f5a86962e46b985</srcmd5>
    <version>0.7.0</version>
    <time>1465750531</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>401262</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>2a130baf2294bae6d9688f561fb0ebb7</srcmd5>
    <version>0.8.1</version>
    <time>1470217467</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>416070</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>3f75fa1152ea4dcc0e13f11b86f7977b</srcmd5>
    <version>0.10.0</version>
    <time>1488479789</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>460538</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>9027637fcfe49daad8523db8f01ae0bf</srcmd5>
    <version>0.10.1</version>
    <time>1493819866</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>492417</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>dae1de2b55fdb2bddc5d6e9648af53a3</srcmd5>
    <version>0.11.0</version>
    <time>1502707252</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>516639</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>508a008dc4f8e075bb42df9032dbcfd3</srcmd5>
    <version>1.0.0</version>
    <time>1507897214</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>533748</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>39a9e13e3c50bc89071f27424946d890</srcmd5>
    <version>1.0.2</version>
    <time>1508316864</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>534475</requestid>
  </revision>
  <revision rev="10" vrev="2">
    <srcmd5>11e77d774de217b5a6a6c62178ccea1f</srcmd5>
    <version>1.0.2</version>
    <time>1508770322</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>535736</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>abc024c427ce5f8f149f788a197ddf3c</srcmd5>
    <version>1.0.3</version>
    <time>1510045184</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>538970</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>4ad8fa016c478a664203b93778b9f4e6</srcmd5>
    <version>1.0.4</version>
    <time>1512042293</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>546225</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>76869a43e955ed2cae898942fde6cab1</srcmd5>
    <version>1.1.0</version>
    <time>1516222616</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>565835</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>d877e7324b0d8499869452955754948b</srcmd5>
    <version>1.1.1</version>
    <time>1516804124</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.1.1:
  * Fixed crashes with Qt 5.10 when closing a tab before it
    finished loading.
</comment>
    <requestid>567918</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>2a46b17f7f7be2a677a890e4661a62a9</srcmd5>
    <version>1.1.2</version>
    <time>1520021543</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.1.2:
  Fixed:
    * QtWebEngine: Crash with Qt 5.10.1 when using :undo on some
      tabs.
    * Compatibility with Python 3.7
- Use %license macro
</comment>
    <requestid>581855</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>2ccd838824fdf0bb20a4b17fef13089d</srcmd5>
    <version>1.2.0</version>
    <time>1520778351</time>
    <user>dimstar_suse</user>
    <comment>- Update keyring
- Update to version 1.2.0:
  Added:
    * Initial implementation of per-domain settings:
      + :set and :config-cycle now have a -u/--pattern argument
        taking a URL match pattern for supported settings.
      + config.set in config.py now takes a third argument which is
        the pattern.
      + New with config.pattern('...') as p: context manager for
        config.py to use the shorthand syntax with a pattern.
      + New tsh keybinding to toggle scripts for the current host.
        With a capital S, the toggle is saved. With a capital H,
        subdomains are included. With u instead of h, the exact
        current URL is used.
      + New tph keybinding to toggle plugins, with the same
        additional binding described above.
    * New QtWebEngine features:
      + Caret/visual mode
      + Authentication via ~/.netrc
      + Retrying downloads with Qt 5.10 or newer
      + Hinting and other features inside same-origin frames
    * New flags for existing commands:
      + :session-load has a new --delete flag which deletes the
        session after loading it.
      + New --no-last flag for :tab-focus to not focus the last tab
        when focusing the currently focused one.
      + New --edit flag for :view-source to open the source in an
        external editor.
      + New --select flag for :follow-hint which acts like the
        given string was entered but doesn't necessary follow the
        hint.
    * New special pages:
      + qute://bindings (opened via :bind) which shows all
        keybindings.
      + qute://tabs (opened via :buffer) which lists all tabs.
    * New settings:
      + statusbar.widgets to configure which widgets should be
        shown in which order in the statusbar.
      + tabs.mode_on_change which replaces
        tabs.persist_mode_on_change. It can now be set to restore
        which remembers input modes (input/passthrough) per tab.
      + input.insert_mode.auto_enter which makes it possible to
        disable entering insert mode automatically when an editable
        element was clicked. Together with
        input.forward_unbound_keys, this should allow for
        emacs-like &quot;modeless&quot; keybindings.
    * New :prompt-yank command (bound to Alt-y by default) to yank
      URLs referenced in prompts.
    * The hostblock_blame script which was removed in v1.0 was
      updated for the new config and re-added.
    * New cycle-inputs.js script in scripts/ which can be used with
      :jseval -f to cycle through inputs.
  Changed:
    * Complete refactoring of key input handling, with various
      effects:
      + emacs-like keychains such as &lt;Ctrl-X&gt;&lt;Ctrl-C&gt; can now be
        bound.
      + Key chains can now be bound in any mode (this allows
        binding unused keys in hint mode).
      + Yes/no prompts don't use keybindings from the prompt
        section anymore, they have their own yesno section instead.
      + Trying to bind invalid keys now shows an error.
      + The bindings.default setting can now only be set in a
        config.py, and existing values in autoconfig.yml are
        ignored.
    * Improvements for GreaseMonkey support:
      + @include and @exclude now support regex matches.
        With QtWebEngine and Qt 5.8 and newer, Qt handles the
        matching, but similar functionality will be added in
        Qt 5.11.
      + Support for @requires
      + Support for the GreaseMonkey 4.0 API
    * The sqlite history now uses write-ahead logging which should
      be a performance and stability improvement.
    * When an editor is spawned with :open-editor and :config-edit,
      the changes are now applied as soon as the file is saved in
      the editor.
    * The hist_importer.py script now only imports URL schemes
      qutebrowser can handle.
    * Deleting a prefix (:, / or ?) via backspace now leaves
      command mode.
    * Angular 1 elements and &lt;summary&gt;/&lt;details&gt; now get hints
      assigned.
    * :tab-only with pinned tabs now still closes unpinned tabs.
    * The url.incdec_segments option now also can take port as
      possible segment.
    * QtWebEngine: :view-source now uses Chromium's view-source:
      scheme.
    * Tabs now show their full title as tooltip.
    * When there are multiple unknown keys in a autoconfig.yml,
      they now all get reported in one error.
    * More performance improvements when opening/closing many tabs.
    * The :version page now has a button to pastebin the
      information.
    * Replacements like {url} can now be escaped as {{url}}.
  Fixed:
    * QtWebEngine bugfixes:
      + Improved fullscreen handling with Qt 5.10.
      + Hinting and scrolling now works properly on special
        view-source: pages.
      + Scroll positions are now restored correctly from sessions.
      + :follow-selected should now work in more cases with
        Qt &gt; 5.10.
      + Incremental search now flickers less and doesn't move to
        the second result when pressing Enter.
      + Keys like Ctrl-V or Shift-Insert are now correctly
        handled/filtered with Qt 5.10.
      + Fixed hangs/segfaults on exit with Qt 5.10.1.
      + Fixed favicons sometimes getting cleared with Qt 5.10.
      + Qt download objects are now cleaned up properly when a
        download is removed.
      + JavaScript messages are now not double-HTML escaped anymore
        on Qt &lt; 5.11
    * QtWebKit bugfixes:
      + Fixed GreaseMonkey-related crashes.
      + :view-source now displays a valid URL.
    * URLs containing ampersands and other special chars are now
      shown correctly when filtering them in the completion.
    * :bookmark-add &quot;&quot; foo can now be used to save the current URL
      with a custom title.
    * :spawn -o now waits until the process has finished before
      trying to show the output. Previously, it incorrectly showed
      the previous output immediately.
    * Suspended pages now should always load the correct page when
      being un-suspended.
    * Exception types are now shown properly with :config-source
      and :config-edit.
    * When using :bookmark-add --toggle, bookmarks are now saved
      properly.
    * Crash with an empty completion.timestamp_format.
    * Crash when completion.min_chars is set in some cases.
    * HTML/JS resource files are now read into RAM on start to
      avoid crashes when changing qutebrowser versions while it's
      open.
    * Setting bindings.key_mappings to an empty value is now
      allowed.
    * Bindings to an empty commands are now ignored rather than
      crashing.
  Removed:
    * QUTE_SELECTED_HTML is now not set for userscripts anymore
      except when called via hints.
    * The qutebrowser_viewsource userscript has been removed as
      :view-source --edit can now be used.
    * The tabs.persist_mode_on_change setting has been removed and
      replaced by tabs.mode_on_change.
</comment>
    <requestid>585199</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>d5a3ae6edb38d59bec26fde1faed6fa5</srcmd5>
    <version>1.2.1</version>
    <time>1521193373</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.2.1:
  Fixed:
    * qutebrowser now starts properly when the PyQt5
      QOpenGLFunctions package wasn't found.
    * The keybinding cheatsheet on the quickstart page is now
      loaded from a local qute:// URL again.
    * Unbinding keys which were bound in older qutebrowser versions
      now doesn't crash anymore.
    * Fixed a crash when reloading a page which wasn't fully
      loaded with v1.2.0
    * Keys on the numeric keypad now fall back to the same bindings
      without Num+ if no Num+ binding was found.
    * Fixed hinting on some pages with Qt &lt; 5.10.
    * Titles are now displayed correctly again for tabs which are
      cloned or loaded from sessions.
</comment>
    <requestid>587069</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>bfa88954ab28e491e9ad6fb8d782a390</srcmd5>
    <version>1.3.0</version>
    <time>1526220288</time>
    <user>dimstar_suse</user>
    <comment>- Use upstream Makefile to install
  * Package scripts and manpage
- Package AppStream metadata
- Update to version 1.3.0:
  Added:
    * New :scroll-to-anchor command to scroll to an anchor in the
      document.
    * New url.open_base_url option to open the base URL of a
      searchengine when no search term is given.
    * New tabs.min_width setting to configure the minimal width
      for tabs.
    * New userscripts:
        + getbib to download bibtex information for DOIs on a page.
        + qute-keepass to get passwords from KeePassX.
  Changed:
    * QtWebEngine: Support for JavaScript Shared Web Workers have
      been disabled on Qt versions older than 5.11 because of
      security issues in in Chromium. You can get the same effect
      in earlier versions via
      &quot;:set qt.args ['disable-shared-workers']&quot;. An equivalent
      workaround is also contained in Qt 5.9.5 and 5.10.1.
    * The file dialog for downloads now has basic tab completion
      based on the entered text.
    * :version now shows OS information for POSIX OS other than
      Linux/macOS.
    * When there's an error inserting the text from an external
      editor, a backup file is now saved.
    * The window.hide_wayland_decoration setting got renamed to
      window.hide_decoration and now also works outside of wayland.
    * The tabs.favicons.show setting now can take three values:
      'always' (was True), 'never' (was False) and 'pinned'
      (to only show favicons for pinned tabs).
    * Hover tooltips on tabs now always show the webpage's title.
    * The default value for content.host_blocking.lists was
      changed to only include https://github.com/StevenBlack/hosts
      which combines various sources.
    * Error messages when trying to wrap when tabs.wrap is False
      are now logged to debug instead of messages.
  Fixed:
    * Using hints before a page is fully loaded is now possible
      again.
    * Selecting hints with the number keypad now works again.
    * Tab titles for tabs loaded from sessions should now really be
      correct instead of showing the URL.
    * Loading URLs with customized settings from a session now
      avoids an additional reload.
    * The window icon and title now get set correctly again.
    * The tabs.switching_delay setting now has a correct maximum
      value limit set.
    * The taskadd script now works properly when there's multi-line
      output.
    * QtWebEngine: Worked around issues with
      GreaseMonkey/stylesheets not being loaded correctly in some
      situations.
    * The statusbar now more closely reflects the caret mode state.
    * The icon on Windows should now be displayed in a higher
      resolution.
    * The QtWebEngine development tools (inspector) now also work
      when JavaScript is disabled globally.
    * Building .exe files now works when upx is installed on the
      system.
    * The keyhint widget now shows the correct text for chained
      modifiers.
    * Loading GreaseMonkey scripts now also works with Jinja2 2.8
      (e.g. on Debian Stable).
    * Adding styles with GreaseMonkey on fast sites now works
      properly.
    * Window ID 0 is now excluded properly from &quot;:tab-take&quot;
      completion.
    * A rare crash when cancelling a download has been fixed.
    * The Makefile (intended for packagers) now supports PREFIX
      properly.
    * The workaround for a black window with Nvidia graphics is now
      enabled on non-Linux systems (like FreeBSD) as well.
    * Initial support for Qt 5.11.
    * Checking for a new version after sending a crash report now
      works properly again.
    * &quot;@match&quot; in Greasemonkey scripts now more closely matches the
      proper pattern syntax.
    * Searching via / or ? now doesn't handle any characters in a
      special way.
    * Fixed crash when trying to retry some failed downloads on
      QtWebEngine.
    * An invalid spellcheck dictionary filename now doesn't crash
      anymore. When no spellcheck dictionaries are configured,
      it's now disabled internally. This works around an issue with
      entering special characters on Facebook messenger.
</comment>
    <requestid>604030</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>f3cb14f4727ba3931cc15bd0d816754f</srcmd5>
    <version>1.3.1</version>
    <time>1527605585</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.3.1:
  * Work around a bug in Qt 5.11 where only the top/bottom half of
    the window is used. This workaround is incomplete, but fixes
    the majority of the cases where this happens.
  * Work around keyboard focus issues with Qt 5.11.
  * Work around an issue in Qt 5.11 where e.g. activating
    JavaScript per-domain needed a manual reload in some cases.
  * Don't crash when a ² key is pressed (e.g. on AZERTY keyboards).
  * Don't crash when a tab is opened and quickly closed again.
</comment>
    <requestid>612820</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>bdbd7229ee11ac051cbd0f41f105f2b0</srcmd5>
    <version>1.3.2</version>
    <time>1529402377</time>
    <user>maxlin_factory</user>
    <comment>- Update to version 1.3.2:
  * QtWebEngine: Improved workaround for a bug in Qt 5.11 where
    only the top/bottom half of the window is used.
  * QtWebEngine: Work around a bug in Qt 5.11 where an endless
    loading-loop is triggered when clicking a link with an unknown
    scheme.
  * QtWebEngine: When switching between pages with changed
    settings, less unnecessary reloads are done now.
  * QtWebEngine: It's now possible to open external links such as
    magnet:// or mailto: via hints.
</comment>
    <requestid>616627</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>dcb5434a3264734c732a6e9a40bcd405</srcmd5>
    <version>1.3.3</version>
    <time>1529919599</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.3.3:
  Security:
    * An XSS vulnerability on the qute://history page allowed
      websites to inject HTML into the page via a crafted title
      tag. This could allow them to steal your browsing history.
      If you're currently unable to upgrade, avoid using :history.
      This issue has been assigned CVE-2018-1000559.
  Fixed:
    * Crash in a workaround for a Qt 5.11 bug in rare
      circumstances.
    * Workaround for a Qt bug which preserves searches between page
      loads.
</comment>
    <requestid>618472</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>093b6c69966a7d47d5cfdc45e92f4127</srcmd5>
    <version>1.4.0</version>
    <time>1530741340</time>
    <user>dimstar_suse</user>
    <comment>- Update %description
- Update to version 1.4.0:
  Added:
    * Support for the bundled sip module in PyQt 5.11 and other
      changes in Qt/PyQt 5.11.x.
    * New --debug-flag log-requests to log requests to the debug
      log for debugging.
    * New --first flag for :hint (bound to gi for inputs) which
      automatically selects the first hint.
    * New input.escape_quits_reporter setting which can be used to
      avoid accidentally quitting the crash reporter when pressing
      escape.
    * New qute-lastpass userscript which uses the LastPass CLI to
      fill passwords.
    * The Makefile now installs a
      /usr/share/metainfo/qutebrowser.appdata.xml file.
    * QtWebEngine: Support for printing from webpages via
      window.print.
    * QtWebEngine: Support for muting tabs:
      + New {audio} field for window.title_format and
        tabs.title.format which displays [M]/[A] for
        muted/recently audible tabs.
      + New :tab-mute command (bound to &lt;Alt-m&gt;) to mute/unmute a
        tab.
    * QtWebEngine: Support for content.cookies.accept with
      third-party cookies blocked by default (requires Qt 5.11).
    * QtWebEngine: New settings:
      + Support for requesting persistent storage via
        navigator.webkitPersistentStorage.requestQuota with a new
        content.persistent_storage setting (requires Qt 5.11).
        This setting also supports URL patterns.
      + Support for registering custom protocol handlers via
        navigator.registerProtocolHandler with a new
        content.register_protocol_handler setting (requires
        Qt 5.11). This setting also supports URL patterns.
      + Support for WebRTC screen sharing with a new
        content.desktop_capture setting (requires Qt 5.10).
        This setting also supports URL patterns.
      + New content.autoplay setting to enable/disable automatic
        video playback (requires Qt 5.10).
      + New content.webrtc_public_interfaces_only setting to only
        expose public interfaces over WebRTC (requires Qt 5.9.2
        or 5.11).
      + New content.canvas_reading setting to disable reading from
        canvas elements.
  Changed:
    * The following settings now support URL patterns:
      + content.headers.do_not_track
      + content.headers.custom
      + content.headers.accept_language
      + content.headers.user_agent
      + content.ssl_strict
      + content.geolocation
      + content.notifications
      + content.media_capture
    * New short flags for commandline arguments: -B and -T for
      --basedir and --temp-basedir; -d and -D for --debug and
      --debug-flag.
    * Deleting history items via :history-clear or
      :completion-item-del now also removes that URL from
      QtWebEngine's visited links.
    * There's now completion for commands taking a variable count
      of arguments (like :config-cycle).
    * QtWebEngine: On Qt 5.11.1, no reloads are needed anymore
      when switching between pages with changed settings
      (e.g. content.javascript.enabled).
    * The qt.force_software_rendering setting changed from a
      boolean to taking different values (software-opengl,
      qt-quick and chromium) for different kinds of software
      rendering workarounds.
    * On Qt 5.11, using wayland with QtWebEngine is now possible
      when using software rendering.
    * GreaseMonkey scripts now get their own global scope (based on
      the page's one), which allows scripts like OneeChan to work.
    * Rapid hinting is now supported with the yank and yank-primary
      targets, copying newline-separated links.
    * QtWebEngine: On Qt 5.11, the developer tools (inspector) can
      now be used securely and without requiring the
      --enable-webengine-inspector option.
    * The &lt;Enter&gt; key (:follow-selected) now follows the currently
      focused element if there's no selection.
    * The --logfilter argument now can be prepended with an
      exclamation mark (e.g. --logfilter '!init,destroy') to
      invert the filter.
    * :view-source now has a --pygments flag which uses the &quot;old&quot;
      way of rendering sources even with QtWebEngine.
    * Improved error messages when a setting needs a newer Qt
      version.
    * QtWebEngine: Various improvements to make the cursor more
      visible in caret browsing.
    * When a prompt is opened in insert/passthrough mode, the mode
      is restored after closing the prompt.
    * On Qt 5.10 or newer, dictionaries are now read from the
      qutebrowser data directory (e.g. ~/.local/share/qutebrowser)
      instead of /usr/share/qt.
      Existing dictionaries are copied over.
    * If an error while parsing ~/.netrc occurs, the cause of the
      error is now logged.
    * On Qt 5.9 or newer, certificate errors now show Chromium's
      detailed error page.
    * Greasemonkey scripts now support a &quot;@qute-js-world&quot; tag to
      run them in a different JavaScript context.
  Fixed:
    * Various subtle keyboard focus issues.
    * The security fix in v1.3.3 caused URLs with ampersands
      (www.example.com?one=1&amp;two=2) to send the wrong arguments
      when clicked on the qute://history page.
    * Crash when opening a PDF page with PDF.js enabled
      (on QtWebKit), but no PDF.js installed.
    * Crash when closing a tab shortly after opening it.
  Removed:
    * :tab-detach which has been deprecated in v1.1.0 has been
      removed.
    * The content.developer_extras setting got removed.
      On QtWebKit, developer extras are now automatically enabled
      when opening the inspector.
</comment>
    <requestid>620511</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>e85ef6ef12b22e3fa02e9476ea1e6c37</srcmd5>
    <version>1.4.1</version>
    <time>1531470070</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.4.1:
  Security:
    * CVE-2018-10895: Fix CSRF issue on the qute://settings page,
      leading to possible arbitrary code execution.
      See the related GitHub issue for details:
      https://github.com/qutebrowser/qutebrowser/issues/4060
  Fixed:
    * Rare crash when an error occurs in downloads.
    * Newlines are now stripped from the :version pastebin URL.
    * Worked around a Qt issue which redirects to a
      chrome-error:// page when trying to use U2F.
    * The link_pyqt.py script now works correctly with PyQt 5.11.
</comment>
    <requestid>622158</requestid>
  </revision>
  <revision rev="24" vrev="2">
    <srcmd5>b1bfbd8490d503c390f53cac647d2e6d</srcmd5>
    <version>1.4.1</version>
    <time>1532033726</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>623521</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>70f376ac0a4e413bd345772f1422a5ed</srcmd5>
    <version>1.4.2</version>
    <time>1535963796</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.4.2:
  Changed:
    * The content.xss_auditing setting is now enabled by default,
      to mirror Chromium's rather than Qt's default behavior.
    * Long URLs in the statusbar are now elided at the end rather
      than in the middle, to make sure the hostname is completely
      visible whenever possible.
  Fixed:
    * Crash in Qt 5.7.1 when a website uses window.print().
    * The workaround for Nouveau graphic drivers now works properly
      again.
    * Crash when using :follow-selected with a link which is
      outside of the view.
    * Workaround for windows not showing as urgent with some window
      managers (like i3).
    * Crash when opening URLs with some unicode characters
      (IDNA 2008). Those URLs still won't open though, due to
      missing support in Qt.
    * Crash when a download directory which can't be created is
      configured.
    * Crash in the importer.py script when importing Chrome
      bookmarks from newer Chrome versions.
    * The content.webrtc_public_interfaces_only option didn't work
      on Qt 5.11 previously (it now does). Note it still does not
      work on Qt 5.10 (due to a Qt bug) and Qt &lt; 5.9.2.
    * Repeated escaping of entries in qute://log when refreshing
      page.
    * The host blocker doesn't block 0.0.0.0 anymore.
    * Crash when using :// as URL pattern.
    * The :buffer completion now sorts tabs with indices &gt;= 10
      correctly again.
</comment>
    <requestid>632747</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>f99286379556d931f4cbe89b307950bb</srcmd5>
    <version>1.5.0</version>
    <time>1538672505</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.5.0:
  Added:
    * Rewritten PDF.js support:
      + PDF.js support and the content.pdfjs setting are now
        available with QtWebEngine.
      + Opening a PDF file now doesn't start a second request
        anymore.
      + Opening PDFs on https:// sites now works properly.
      + New --pdfjs flag for prompt-open-download, so PDFs can be
        opened in PDF.js with &lt;Ctrl-P&gt; in the download prompt.
    * New settings:
      + content.mouse_lock to handle HTML5 pointer locking.
      + completion.web_history.exclude which hides a list of URL
        patterns from the completion.
      + qt.process_model which can be used to change Chromium's
        process model.
      + qt.low_end_device_mode which turns on Chromium's low-end
        device mode. This mode uses less RAM, but the expense of
        performance.
      + content.webrtc_ip_handling_policy, which allows more
        fine-grained/restrictive control about which IPs are
        exposed via WebRTC.
      + tabs.max_width which allows to have a more &quot;normal&quot; look
        for tabs.
      + content.mute which allows to mute pages (or all tabs) by
        default.
    * Running qutebrowser with QtWebKit or Qt &lt; 5.9 now shows a
      warning (only once), as support for those is going to be
      removed in a future release.
    * New t[iI][hHu] default bindings (similar to tsh etc.) to
      toggle images.
    * The qute-pass userscript now has optional OTP support.
    * When :spawn --userscript is called with a count, that count
      is now passed to userscripts as $QUTE_COUNT.
  Changed:
    * Various performance improvements when many tabs are opened.
    * The content.headers.referer setting now works on QtWebEngine.
    * The :repeat command now takes a count which is multiplied
      with the given &quot;times&quot; argument.
    * The default keybinding to leave passthrough mode was changed
      from &lt;Ctrl-V&gt; to &lt;Shift-Escape&gt;, which makes pasting from the
      clipboard easier in passthrough mode and is also unlikely to
      conflict with webpage bindings.
    * The app_id is now set to qutebrowser for Wayland.
    * Using :set option now shows the value of the setting
      (like :set option? already did).
    * The completion.web_history_max_items setting got renamed to
      completion.web_history.max_items.
    * Regenerating completion history now shows a progress dialog.
    * The content.autoplay setting now supports URL patterns on
      Qt &gt;= 5.11.
    * The content.host_blocking.whitelist setting now takes a list
      of URL patterns instead of globs.
    * In passthrough mode, Ctrl + Mousewheel now also gets passed
      through to the page instead of zooming.
    * Editing text in an external editor now simulates a JS &quot;input&quot;
      event, which improves compatibility with websites reacting
      via JS to input.
    * The qute://settings page is now properly sorted on Python 3.5
    * :zoom, :zoom-in and :zoom-out now have a --quiet switch which
      causes them to not display a message.
    * The scrolling.bar setting now takes three values instead of
      being a boolean: always, never, and when-searching (which
      only displays it while a search is active).
    * '@@' now repeats the last run macro.
    * The content.host_blocking.lists setting now accepts a file://
      URL to a directory, and reads all files in that directory.
    * The :tab-give and :tab-take command now have a new flag
      --keep which causes them to keep the old tab around.
    * :navigate now clears the URL query.
  Fixed:
    * qute:// pages now work properly on Qt 5.11.2
    * Error when passing a substring with spaces to :tab-take.
    * Greasemonkey scripts which start with an UTF-8 BOM are now
      handled correctly.
    * When no documentation has been generated, the plaintext
      documentation now can be shown for more files such as
      qute://help/userscripts.html.
    * Crash when doing initial run on Wayland without XWayland.
    * Crash when trying to load an empty session file.
    * :hint with an invalid --mode= value now shows a proper error.
    * Rare crash on Qt 5.11.2 when clicking on &lt;select&gt; elements.
    * Rare crash related to the completion.
  Removed:
    * Support for importing pre-v1.0.0 history files has been
      removed.
    * The content.webrtc_public_interfaces_only setting has been
      removed and replaced by content.webrtc_ip_handling_policy.
</comment>
    <requestid>639810</requestid>
  </revision>
  <revision rev="27" vrev="1">
    <srcmd5>5ef26c4ac38583ecce68233c5acec2c6</srcmd5>
    <version>1.5.1</version>
    <time>1539251994</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.5.1:
  Fixed:
    * Flickering when opening/closing tabs (as soon as more than
      10 are open) on some pages.
    * Improved logging for PDF.js resources which fail to load.
    * Crash when closing a tab after doing a search.
    * Tabs appearing when hidden after e.g. closing tabs.
</comment>
    <requestid>641128</requestid>
  </revision>
  <revision rev="28" vrev="1">
    <srcmd5>bdd5866691e0b46d4a6986ba096733eb</srcmd5>
    <version>1.5.2</version>
    <time>1540988118</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.5.2:
  * The content.cookies.accept setting is now set to all instead
    of no-3rdparty by default, as no-3rdparty breaks various pages
    such as GMail.
</comment>
    <requestid>645376</requestid>
  </revision>
  <revision rev="29" vrev="1">
    <srcmd5>0f6e08859ccdc64b54925a2215b5a1f2</srcmd5>
    <version>1.6.0</version>
    <time>1552464944</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.6.0
Added
  * New settings:
    + tabs.new_position.stacking which controls whether new tabs
      opened from a page should stack on each other or not.
    + completion.open_categories which allows to configure which
      categories are shown in the :open completion, and how they
      are ordered.
    + tabs.pinned.frozen to allow/deny navigating in pinned tabs.
    + hints.selectors which allows to configure what CSS selectors
      are used for hints, and also allows adding custom hint groups
    + input.insert_mode.leave_on_load to turn off leaving insert
      mode when a new page is loaded.
  * New config manipulation commands:
    + :config-dict-add and :config-list-add to a new element to a
      dict/list setting.
    + :config-dict-remove and :config-list-remove to remove an
      element from a dict/list setting.
    + New :yank markdown feature which yanks the current URL and
      title in markdown format.
    + Support for new QtWebEngine features in Qt 5.12:
      ~ Basic support for client certificates. Selecting the
        certificate to use when there are multiple matching
        certificates isn't implemented yet.
      ~ Support for DNS prefetching (plus new content.dns_prefetch
        setting).
Changed
  * :q now closes the current window instead of quitting
    qutebrowser completely (:close), while :qa quits (:quit).
    The behavior of :wq remains unchanged (:quit --save), as
    closing a window while saving the session doesn't make sense.
  * Completion highlighting is now done differently (using
    QSyntaxHighlighter), which should fix some highlighting
    corner-cases.
  * The QtColor config type now also understands colors like
    rgb(...).
  * :yank now has a --quiet option which causes it to not display
    a message.
  * The :open completion now also shows search engines by default.
  * The content.host_blocking.enabled setting now supports URL
    patterns, so the adblocker can be disabled on a given page.
  * Elements with a tabindex attribute now also get hints by
    default.
  * Various small performance improvements for hints and the
    completion.
  * The Wayland check for QtWebEngine is now disabled on
    Qt &gt;= 5.11.2, as those versions should work without any issues.
  * The JavaScript console object is now available in PAC files.
  * PAC proxies currently don't work properly on QtWebEngine (and
    never did), so an error is now shown when trying to configure
    a PAC proxy.
  * The metainfo file qutebrowser.appdata.xml is now renamed to
    org.qutebrowser.qutebrowser.appdata.xml.
  * The qute-pass userscript now understands domains in gpg
    filenames in addition to directory names.
  * The autocompletion for content.headers.user_agent got updated
    to only include the default and Chrome, as setting the UA to
    Firefox has various bad side-effects.
  * Combining Qt 5.12 with an older PyQt can lead to issues, so a
    warning is now shown when starting qutebrowser with that
    combination.
Fixed
  * Invalid world IDs now get rejected for :jseval and GreaseMonkey
    scripts.
  * When websites suggest download filenames with invalid
    characters, those are now correctly replaced.
  * Invalid hint length calculation in certain rare cases.
  * Dragging tabs in the tab bar (which was broken in v1.5.0)
  * Using Shift-Home in command mode now works properly.
  * Workaround for a Qt bug which prevented
    content.cookies.accept = no-3rdparty from working properly on
    some pages like GMail. However, the default for
    content.cookies.accept is still all to be in line with what
    other browsers do.
  * :navigate not incrementing in anchors or queries.
  * Crash when trying to use a proxy requiring authentication with
    QtWebKit.
  * Slashes in search terms are now percent-escaped.
  * When scrolling.bar = True was set in versions before v1.5.0,
    this now correctly gets migrated to always instead of
    when-searching.
  * Completion highlighting now works again on Qt 5.11.3 and 5.12.1
  * The non-standard header X-Do-Not-Track is no longer sent.
  * PAC proxies were never correctly supported with QtWebEngine,
    but are now explicitly disallowed.
  * Issues with fullscreen handling when exiting a video player.
  * Various fixes for Qt 5.12 issues:
    + A javascript error on page load was fixed.
    + window.print() works with Qt 5.12 now.
    + Fixed handling of duplicate download filenames.
    + Fixed broken qute://history page.
    + Fixed PDF.js not working properly.
    + The download button in PDF.js now works (it's not possible
      to make it work with earlier Qt versions).
    + Since Greasemonkey scripts modifying the DOM fail when being
      run at document-start, some known-broken scripts (Iridium,
      userstyles.org) are now forced to run at document-end.
- Require python3-qtwebengine-qt5 on TW
  (package split since PyQt5 5.12)
</comment>
    <requestid>684447</requestid>
  </revision>
  <revision rev="30" vrev="1">
    <srcmd5>2edfda24f8f2c63439e043b43c151739</srcmd5>
    <version>1.6.1</version>
    <time>1553084503</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.6.1
Fixed
  * Crash when using :config-{dict,list}-{add,remove} with an invalid setting.
  * Functionality like hinting on pages with an element with ID _qutebrowser
    (such as qutebrowser.org) on Qt 5.12.
  * The .desktop file in v1.6.0 was missing the &quot;Actions&quot; key.
  * The SVG icon now has a size of 256x256px set to comply with freedesktop
    standards.
  * Setting colors.statusbar.*.bg to a gradient now has the expected effect of
    the gradient spanning the entire statusbar.
</comment>
    <requestid>686851</requestid>
  </revision>
  <revision rev="31" vrev="2">
    <srcmd5>45d700b1eb233620ea0145b99932edcf</srcmd5>
    <version>1.6.1</version>
    <time>1554189826</time>
    <user>dimstar_suse</user>
    <comment>- Force sqlite backend to be installed, otherwise qtbrowser segfaults
  bsc#1126269
</comment>
    <requestid>690446</requestid>
  </revision>
  <revision rev="32" vrev="1">
    <srcmd5>1ab9e656fda74f660b0968e855ba9e7e</srcmd5>
    <version>1.6.2</version>
    <time>1557263934</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.6.2
Fixed
  * Crash when SQL errors occur while using the completion.
  * Crash when cancelling a download prompt started in an already
    closed window.
  * Crash when many prompts are opened at the same time.
  * Running without Qt installed now displays a proper error again.
  * High CPU usage when using the keyhint widget with a low delay.
</comment>
    <requestid>701155</requestid>
  </revision>
  <revision rev="33" vrev="1">
    <srcmd5>b435fc562baf198efa7a5bc7e97b8579</srcmd5>
    <version>1.6.3</version>
    <time>1560971326</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.6.3
Fixed
  * Crash when hinting and changing/closing the tab before hints
    are displayed.
  * Crash on redirects with Qt 5.13.
  * Hide bogus AA_ShareOpenGLContexts warning with Qt 5.12.4.
  * Workaround for renderer process crashes with Qt 5.12.4.
    If you're unable to update, you can remove ~/.cache/qutebrowser
    for the same result.
</comment>
    <requestid>710564</requestid>
  </revision>
  <revision rev="34" vrev="1">
    <srcmd5>7a44c934458e0e5bc79696ac545c778e</srcmd5>
    <version>1.7.0</version>
    <time>1563701628</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.7.0
Added
  * New settings:
    + colors.tabs.pinned.* to control colors of pinned tabs.
    + hints.leave_on_load which allows disabling leaving of hint
      mode when a new page is loaded.
    + colors.completion.item.selected.match.fg which allows
      configuring the text color for the matching text in the
      currently selected completion item.
    + tabs.undo_stack_size to limit how many undo entries are kept
      for closed tabs.
  * New commands:
    + :reverse-selection (o in caret mode) to swap the
      stationary/moving ends of a selection.
  * New commandline replacements:
    + {url:domain}, {url:auth}, {url:scheme}, {url:username},
      {url:password}, {url:host}, {url:port}, {url:path},
      {url:query} for the respective parts of the current URL.
    + {title} for the current page title.
  * The {title} field in tabs.title.format,
    tabs.title.format_pinned and window.title_format got renamed to
    {current_title} (mirroring {current_url}) in order to not
    conflict with the new {title} commandline replacement.
  * New delete target for :hint which removes the hinted element
    from the DOM.
  * New --config-py commandline argument to use a custom config.py
    file.
  * Qt 5.13: Support for notifications (shown via system tray).
Changed
  * The desktop file qutebrowser.desktop is now renamed to
    org.qutebrowser.qutebrowser.desktop.
  * Pinned tabs now always show a favicon (even if the site doesn't
    provide one) when shrinking.
  * Setting downloads.location.directory now changes the directory
    displayed in the download prompt even if
    downloads.location.remember is set.
  * The yank command gained a new inline argument, which allows to
    e.g. use :yank inline [{title}]({url}).
  * Duplicate consecutive history entries with the same URL are now
    ignored.
  * More detailed error messages when spawning a process failed.
  * The content.pdfjs setting now supports domain patterns.
  * Improved process status output with :spawn -o.
  * The colors.tabs.bar.bg setting is now of type QssColor and thus
    supports gradients.
  * The :fullscreen command now understands a new --enter flag
    which causes it to always enter fullscreen instead of toggling
    the current state.
  * --debug-flag stack is now needed to show stack traces on
    renderer process crashes.
  * --debug-flag chromium can be used to easily turn on verbose
    Chromium logging.
  * Permission prompts can now be answered with
    Y (:prompt-accept --save yes) and N (:prompt-accept --save no)
    to save the answer as a per-domain setting.
  * content.dns_prefetch is now turned off by default, as it causes
    crashes inside QtWebEngine.
  * The (still unofficial) interceptor plugin API now contains
    resource_type for a request and allows redirecting requests.
  * :bookmark-remove now shows a message for consistency with
    :bookmark-add.
  * Very early segfaults are now also caught by the crash handler.
  * The appdata XML now contains proper release information and an
    (empty) OARS content rating.
  * Improved Linux distribution detection.
  * Qt 5.13: Request filtering now happens in the UI rather than
    IO thread.
  * Qt 5.13: Support for PDFium (Chromium's PDF viewer) is disabled
    for now so that PDFs can still be downloaded
    (or shown with PDF.js) properly.
  * Various performance improvements (e.g. for showing hints or
    the :open completion).
Deprecated
  * :yank markdown got deprecated, as :yank inline [{title}]({url})
    can now be used instead.
Fixed
  * Various QtWebEngine load signals are now handled differently,
    which should fix issues with insert mode being left while
    typing on sites like Google Translate.
  * Race condition causing a colored statusbar in normal mode when
    entering/exiting caret mode quickly.
  * Using 100% for a hue in a hsv(...) config value now corresponds
    to 359 (rather than 255), matching the fixed behavior in
    Qt 5.13.
  * Chaining commands with ;; used to abort with some failing
    commands. It now runs the second command no matter whether the
    first one succeeded or not.
  * Handling of profiles and private windows (and resulting crashes
    with Qt 5.12.2).
  * Fixes for corner-cases when using :navigate increment/decrement
  * The type for the colors.hints.match.fg setting was changed to
    QtColor.
  * Gradients were never supported for this setting, and with this
    change, values like rgb(0, 0, 0) now work as well.
  * Permission prompts now show a properly normalized URL with
    QtWebKit.
  * Crash on start when PyQt was built without SSL support with
    Qt &gt;= 5.12.
  * Minor memory leaks.
</comment>
    <requestid>716618</requestid>
  </revision>
  <revision rev="35" vrev="1">
    <srcmd5>23b2e09912de2f792153297359934849</srcmd5>
    <version>1.8.1</version>
    <time>1571402217</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.8.1
Added
  * New userscripts:
    + readability-js which uses Mozilla's node.js readability
      library.
    + qute-bitwarden which integrates the Bitwarden CLI.
Changed
  * The statusbar text for passthrough mode now shows all
    configured bindings to leave the mode, not only one.
  * When :config-source is used with a relative filename, the file
    is now searched in the config directory instead of the current
    working directory.
  * HTML5 inputs with date/time types now enter insert mode when
    selected.
  * dictcli.py now shows where dictionaries are installed to and
    complains when running it as root if doing so would result in
    a wrong installation path.
  * Changes to userscripts:
    + qute-pass: Don't run pass if only a username is requested.
    + qute-pass: Support private domains like myrouter.local.
    + readability: Improved CSS styling.
  * Performance improvements in various areas:
    + Loading config files
    + Typing without any completion matches
    + General keyboard handling
    + Scrolling
  * :version now shows details about the loaded
    autoconfig.yml/config.py.
  * Hosts are now additionally looked up including their ports in
    netrc files.</comment>
    <requestid>740914</requestid>
  </revision>
  <revision rev="36" vrev="1">
    <srcmd5>e71344b9859baba876d3a12ccbe578ff</srcmd5>
    <version>1.8.2</version>
    <time>1574784179</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.8.2
Fixed
  * Unbinding keys via config.bind(key, None) accidentally worked
    in v1.7.0 but raises an exception in v1.8.0. It now works
    again, but is deprecated and shows an error. Note that
    :config-py-write did write such invalid lines before v1.8.0,
    so existing config files might need adjustments.
  * The readability-js userscript now handles encodings correctly
    (which it didn't before for some websites).
  * can now be used to paste text starting with a hyphen.
  * Following hints via the number keypad now works properly again.
  * Errors while reading the state file are now displayed instead
    of causing a crash.
  * Crash when using :debug-log-level without a console attached.
  * Downloads are now hidden properly when the browser is in
    fullscreen mode.
  * Crash when setting colors.webpage.bg to an empty value with
    QtWebKit.
  * Crash when the history database file is not a proper sqlite
    database.</comment>
    <requestid>750898</requestid>
  </revision>
  <revision rev="37" vrev="1">
    <srcmd5>e3371ab76db94264a73c4dd6096b2775</srcmd5>
    <version>1.8.3</version>
    <time>1575630663</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.8.3
Fixed
  * Segmentation fault introduced in v1.8.2 when a tab gets closed
    immediately after it has finished loading (e.g. with certain
    login flows).</comment>
    <requestid>754543</requestid>
  </revision>
  <revision rev="38" vrev="1">
    <srcmd5>71f9e88b494d22fef43380cc5fafebea</srcmd5>
    <version>1.9.0</version>
    <time>1579273587</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>765099</requestid>
  </revision>
  <revision rev="39" vrev="1">
    <srcmd5>878bbdcce126506c6e87ebbd1756a09f</srcmd5>
    <version>1.10.0</version>
    <time>1580990917</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>770371</requestid>
  </revision>
  <revision rev="40" vrev="2">
    <srcmd5>19e25c4ae89747926a448579949b2a62</srcmd5>
    <version>1.10.0</version>
    <time>1581694793</time>
    <user>okurz-factory</user>
    <comment></comment>
    <requestid>774251</requestid>
  </revision>
  <revision rev="41" vrev="1">
    <srcmd5>ea93934eeda40f16355f072bdd61cefb</srcmd5>
    <version>1.10.1</version>
    <time>1582018561</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.10.1
Fixed
  * Crash when saving data fails during shutdown (which was a
    regression introduced in v1.9.0).
  * Error while reading config.py when fonts.tabs or
    fonts.debug_console is set to a value including default_size.
  * When a state file contains invalid UTF-8 data, a proper error
    is now displayed.
Changed
  * When the Qt version changes (and also on the first start of
    v1.10.1 on Qt 5.14), service workers registered by websites are
    now deleted. This is done as a workaround for QtWebEngine
    issues causing crashes when visiting pages using service
    workers (such as Google Mail/Drive). No persistent data should
    be affected as websites can re-register their service workers,
    but a (single) backup is kept at webengine/Service Worker-bak
    in qutebrowser's data directory.
  * Better output on stdout when config errors occur.
  * The default for colors.statusbar.command.private.bg has been
    changed to a slightly different gray, as a workaround for a Qt
    issue where the cursor was invisible in that case.</comment>
    <requestid>774697</requestid>
  </revision>
  <revision rev="42" vrev="1">
    <srcmd5>61f25f0dccf43122edb9c3c427030d6a</srcmd5>
    <version>1.10.2</version>
    <time>1587581461</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.10.2
Fixed
  * The WhatsApp workaround now also works when using WhatsApp in
    languages other than English.</comment>
    <requestid>795567</requestid>
  </revision>
  <revision rev="43" vrev="1">
    <srcmd5>c6474adeff4912733e859a70b64887b7</srcmd5>
    <version>1.13.0</version>
    <time>1594119428</time>
    <user>maxlin_factory</user>
    <comment>- Update to version 1.13.0
Deprecated
  * The :inspector command is deprecated and has been replaced by
    a new :devtools command (see below).
Removed
  * The :debug-log-level command was removed as it's replaced by
    the new logging.level.console setting.
  * The qute://plainlog special page got replaced by
    qute://log?plain - the names of those pages is considered an
    implementation detail, and :messages --plain should be used
    instead.
Changed
  * Changes to commands:
    + :config-write-py now adds a note about config.py files being
      targeted at advanced users.
    + :report now takes two optional arguments for bug/contact
      information, so that it can be used without the report window
      popping up.
    + :message now takes a --logfilter / -f argument, which is a
      list of logging categories to show.
    + :debug-log-filter now understands the full logfilter syntax.
  * Changes to settings:
    + fonts.tabs has been split into
      fonts.tabs.{selected,unselected} (see below).
    + statusbar.hide has been renamed to statusbar.show with the
      possible values being always (hide = False),
      never (hide = True) or in-mode (new, only show statusbar
      outside of normal mode).
    + The QtFont config type formerly used for fonts.tabs and
      fonts.debug_console is now removed and entirely replaced
      by Font. The former distinction was mainly an implementation
      detail, and the accepted values shouldn't have changed.
    + input.rocker_gestures has been renamed to
      input.mouse.rocker_gestures.
    + content.dns_prefetch is now enabled by default again,
      since the crashes it caused are now fixed (Qt 5.15)
      or worked around.
    + scrolling.bar supports a new overlay value to show an overlay
      scrollbar, which is now the default. On unsupported
      configurations (on Qt &lt; 5.11, with QtWebKit or on macOS),
      the value falls back to when-searching or never (QtWebKit).
    + url.auto_search supports a new schemeless value which always
      opens a search unless the given URL includes an explicit
      scheme.
  * New handling of bindings in hint mode which fixes various bugs
    and allows for single-letter keybindings in hint mode.
  * The statusbar now shows partial keychains in all modes
    (e.g. while hinting).
  * New t[Cc][Hh] default bindings which work similarly to the
    t[Ss][Hh] bindings for JavaScript but toggle cookie permissions
  * The tor_identity userscript now takes the password via a -p
    flag and has a new -c flag to customize the Tor control port.
  * Small performance improvements.
Added
  * New settings:
    + logging.level.ram and logging.level.console to configure the
      default logging levels via the config.
    + fonts.tabs.selected and fonts.tabs.unselected to set the font
      of the selected tab independently from unselected tabs
      (e.g. to make it bold).
    + input.mouse.back_forward_buttons which can be set to false
      to disable back/forward mouse buttons.
  * New :devtools command (replacing :inspector) with various
    improved functionality:
    + The devtools can now be docked to the main window, by running
      :devtools left (wIh), bottom (wIj), top (wIk) or right (wIl).
      To show them in a new window, use :devtools window (wIw).
      Using :devtools (wi) will open them at the last used position
    + The devtool window now has a &quot;qutebrowser developer tools&quot;
      window title.
    + When a resource is opened from the devtools, it now opens in
      a proper qutebrowser tab.
    + If opened as a window, the devtools are now closed properly
      when the associated tab is closed.
    + When the devtools are clicked, insert mode is entered
      automatically.
Fixed
  * Crash when tabs.focus_stack_size is set to -1.
  * Crash when a pdf.js file for PDF.js exists, but viewer.html
    does not.
  * Crash when there's a feature permission request from Qt with an
    invalid URL (which happens due to a Qt bug with Qt 5.15 in
    private browsing mode).
  * Crash in rare cases where QtWebKit/QtWebEngine imports fail in
    unexpected ways.
  * Crash when something removed qutebrowser's IPC socket file and
    it's been running for 6 hours.
  * :config-write-py now works with paths starting with ~/... again
  * New site-specific quirk for a missing globalThis in Qt &lt;= 5.12
    on Reddit and Spotify.
  * When ; is added to hints.chars, using hint labels containing ;;
    now works properly.
  * Hint letters outside of ASCII should now work.
  * When bindings.key_mappings is used with hints, it now works
    properly with letters outside of ASCII as well.
  * With Qt 5.15, the audible/muted indicators are not updated
    properly due to a Qt bug. This release adds a workaround
    so that at least the muted indicator is shown properly.
  * As a workaround for crashes with QtWebEngine versions between
    5.12 and 5.14 (inclusive), changing the user agent
    (content.headers.user_agent) exposed to JS now requires
    a restart. The corresponding HTTP header is not affected.
- Update to version 1.12.0
Removed
  * Support for using config.bind(key, None) in config.py to unbind
    a key was deprecated in v1.8.2 and is now removed.
    Use config.unbind(key) instead.
  * :yank markdown was deprecated in v1.7.0 and is now removed.
    Use :yank inline [{title}]({url}) instead.
Added
  * New :debug-keytester command, which shows a &quot;key tester&quot;
    widget. Previously, that was only available as a separate
    application via python3 -m scripts.keytester.
  * New :config-diff command which opens the qute://configdiff
    page.
  * New --debug-flag log-cookies to log cookies to the debug log.
  * New colors.contextmenu.disabled.{fg,bg} settings to customize
    colors for disabled items in the context menu.
  * New line selection mode (:toggle-selection --line), bound to
    Shift-V in caret mode.
  * New colors.webpage.darkmode.* settings to control Chromium's
    dark mode. Note that those settings only work with QtWebEngine
    on Qt &gt;= 5.14 and require a restart of qutebrowser.
Changed
  * The content.cookies.accept setting now accepts URL patterns.
  * The :tab-focus command now has completion for tabs in the
    current window.
  * The bindings.key_mappings setting now maps &lt;Ctrl+I&gt; to the tab
    key by default.
  * :tab-give --private now detaches a tab into a new private
    window.
Fixed
  * Using :open -s now only rewrites http:// in URLs to https://,
    not other schemes like qute://.
  * When an unhandled exception happens in certain parts of the
    code (outside of the main thread), qutebrowser did crash or
    freeze when trying to show its exception handler.
    This is now fixed.
  * :inspector now works correctly when cookies are disabled
    globally.
  * When entering caret selection mode (v, v) very early before a
    page is loaded, an error is now shown instead of a crash
    happening.
  * The workaround for session loading with Qt 5.15 now handles
    sessions.lazy_restore so that the saved page is loaded instead
    of the &quot;stub&quot; page with no possibility to get to the web page.
  * A site specific quirk to allow typing accented characters on
    Google Docs was active for docs.google.com, but not
    drive.google.com. It is now applied for both subdomains.
  * With older graphics hardware (OpenGL &lt; 4.3) with Qt 5.14 on
    Wayland, WebGL causes segfaults. Now qutebrowser detects that
    combination and suggests to disable WebGL or use XWayland.
- Update to version 1.11.1
  * CVE-2020-11054: After a certificate error was overridden by
  the user, qutebrowser displays the URL as yellow
  (colors.statusbar.url.warn.fg). However, when the affected
  website was subsequently loaded again, the URL was mistakenly
  displayed as green (colors.statusbar.url.success_https).
  While the user already has seen a certificate error prompt
  at this point (or set content.ssl_strict to false which is not
  recommended), this could still provide a false sense of security.
  This is now fixed.
- Update to version 1.11.0
Added
  * New settings:
    + search.wrap which can be set to false to prevent wrapping
      around the page when searching. With QtWebEngine, Qt 5.14
      or newer is required.
    + content.unknown_url_scheme_policy which allows controlling
      when an external application is opened for external links
      (never, from user interaction, always).
    + content.fullscreen.overlay_timeout to configure how long the
      fullscreen overlay should be displayed. If set to 0,
      no overlay is displayed.
    + hints.padding to add additional padding for hints.
    + hints.radius to set a border radius for hints
      (set to 3 by default).
  * New placeholders for url.searchengines values:
    + {unquoted} inserts the search term without any quoting.
    + {semiquoted} (same as {}) quotes most special characters,
      but slashes remain unquoted.
    + {quoted} (same as {} in earlier releases) also quotes slashes
Changed
  * First adaptions to Qt 5.15, including a stop-gap measure for
    session loading not working properly with it.
  * Searching now wraps around the page by default with QtWebKit
    (where it didn't before). Set search.wrap to false to restore
    the old behavior.
  * The {} placeholder for search engines
    (the url.searchengines setting) now does not quote slashes
    anymore, but other characters typically encoded in URLs still
    get encoded. This matches the behavior of search engines in
    Chromium. To revert to the old behavior, use {quoted} instead.
  * The content.windowed_fullscreen setting got renamed to
    content.fullscreen.window.
  * Mouse-wheel scrolling is now prevented while hints are active.
  * Changes to userscripts:
    + qute-bitwarden now has an optional --totp flag which can be
      used to copy TOTP codes to clipboard
      (requires the pyperclip module).
    + readability-js now opens readability tabs next to the
      original tab (using the :open --related flag).
    + readability-js now displays a favicon for readability tabs.
    + password_fill now triggers a change JavaScript event after
      filling the data.
  * The dictcli.py script now shows better error messages.
  * Minor performance improvements.
Deprecated
  * A warning about old Qt versions is now also shown with Qt 5.9
    and 5.10, as support for Qt &lt; 5.11 will be dropped in
    qutebrowser v2.0.
Fixed
  * unsafeWindow is now defined for Greasemonkey scripts with
    QtWebKit.
  * The proxied window global is now shared between different
    Greasemonkey scripts (but still separate from the page's
    window), to match the original Greasemonkey implementation.
  * The --output-messages (-m) flag added in v1.9.0 now also works
    correctly when using :spawn --userscript.
  * :version and --version now don't crash if there's an (invalid)
    /etc/os-release file which has non-comment lines without
    a = character.
  * Scripts in scripts/ now report errors to stderr correctly,
    instead of using stdout.
</comment>
    <requestid>819086</requestid>
  </revision>
  <revision rev="44" vrev="1">
    <srcmd5>594d5218770366a3e65e1336b40d0a2f</srcmd5>
    <version>1.13.1</version>
    <time>1595098900</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.13.1
Fixed
  * With Qt 5.14, shared workers are now disabled. This works
    around a crash in QtWebEngine on certain sites (like the Epic
    Games Store or the Unreal Engine page).
  * When a window is closed, the tab it contains are now correctly
    shut down (closing e.g. any dialogs which are still open for
    those tabs).
  * The Qt 5.15 session workaround now loads the correct (rather
    than the last) page when :back was used before saving a
    session.
  * Certain autoconfig.yml with an invalid structure could lead to
    crashes, which are now fixed.
  * Ever since Qt 5.9, when input.mouse.rocker_gestures was
    enabled, the context menu still was shown when clicking the
    right mouse button, thus preventing the rocker gestures.
    This is now fixed.
  * Clicking the inspector switched from existing modes (such as
    passthrough) to normal mode since v1.13.0. Now insert mode is
    only entered when the inspector is clicked in normal mode.
  * Pulseaudio now shows qutebrowser's audio streams as qutebrowser
    correctly, rather than showing them as Chromium with some Qt
    versions.
  * If :help was called with a deprecated command (e.g. :help
    :inspector), the help page would show despite deprecated
    commands not being documented. This now shows an error instead.
  * The qute-lastpass userscript now filters out duplicate entries
    with --merge-candidates.</comment>
    <requestid>821559</requestid>
  </revision>
  <revision rev="45" vrev="1">
    <srcmd5>e15899d65d90b208034777e96eecb57f</srcmd5>
    <version>1.14.0</version>
    <time>1602857750</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.14.0
This release still only contains partial session support for
QtWebEngine 5.15. It's still recommended to run against Qt 5.15
due to the security patches contained in it -- for most users,
the added workarounds seem to work out fine. A rewritten session
support will be part of qutebrowser v2.0.0, tentatively planned
for the end of the year or early 2021.
Changed
  * The content.media_capture setting got split up into three more
    fine-grained settings, content.media.audio_capture,
    .video_capture and .audio_video_capture. Before this change,
    answering &quot;always&quot; to a prompt about e.g. audio capturing would
    set the content.media_capture setting, which would also allow
    the same website to capture video on a future visit. Now every
    prompt will set the appropriate setting, though existing
    content.media_capture settings in autoconfig.yml will be
    migrated to set all three settings. To review/change previously
    granted permissions, use :config-diff and e.g.
    :config-unset -u example.org content.media.video_capture.
  * The main window's (invisible) background color is now set to
    transparent. This allows using the alpha channel in
    statusbar/tabbar colors to get a partially transparent
    qutebrowser window on a setup which supports doing so.
  * If QtWebEngine is compiled with PipeWire support and
    libpipewire is installed, qutebrowser will now support screen
    sharing on Wayland. Note that QtWebEngine 5.15.1 is needed.
  * When :undo is used with a count, it now reopens the count-th
    to last tab instead of the last one. The depth can instead be
    passed as an argument, which is also completed.
  * The default completion.timestamp_format now also shows the</comment>
    <requestid>842006</requestid>
  </revision>
  <revision rev="46" vrev="2">
    <srcmd5>13d722984b0cfdbb7c7308c11a01655a</srcmd5>
    <version>1.14.0</version>
    <time>1605644759</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>848890</requestid>
  </revision>
  <revision rev="47" vrev="1">
    <srcmd5>cf01e6f659e214ee975ea520779774f8</srcmd5>
    <version>1.14.1</version>
    <time>1607349666</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.14.1
Added
With v1.14.0, qutebrowser configures the main window to be
transparent, so that it's possible to configure a translucent tab-
or statusbar. However, that change introduced various issues, such
as performance degradation on some systems or breaking dmenu window
embedding with its -w option. To avoid those issues for people who
are not using transparency, the default behavior is reverted to
versions before v1.14.0 in this release. A new window.transparent
setting can be set to true to restore the behavior of v1.14.0.
Fixed
* Setting the content.headers.referer setting to same-domain (the
  default) was supposed to truncate referers to only the host with
  QtWebEngine. Unfortunately, this functionality broke in Qt 5.14.
  It works properly again.
* with this release, including a test so this won't happen again.
* With QtWebEngine 5.15, setting the content.headers.referer
  setting to never did still send referers. This is now fixed as
  well.
* In v1.14.0, a regression was introduced, causing a crash when
  qutebrowser was closed after opening a download with PDF.js.
  This is now fixed.
* With Qt 5.12, the Object.fromEntries JavaScript API is
  unavailable (it was introduced in Chromium 73, while Qt 5.12 is
  based on 69). This caused https://www.vr.fi/en and possibly other
  websites to break when accessed with Qt 5.12. A suitable polyfill
  is now included with qutebrowser if content.site_specific_quirks
  is enabled (which is the default).
* While XDG startup notifications (e.g. launch feedback via the
  bouncy cursor in KDE Plasma) were supported ever since Qt 5.1,
  qutebrowser's desktop file accidentally declared that it wasn't
  supported. This is now fixed.
* The dmenu_qutebrowser and qutedmenu userscripts now correctly
  read the qutebrowser sqlite history which has been in use since
  v1.0.0.
* With Python 3.8+ and vertical tabs, a deprecation warning for an
  implicit int conversion was shown. This is now fixed.
* Ever since Qt 5.11, fetching more completion data when that data
  is loaded lazily (such as with history) and the last visible item
  is selected was broken. The exact reason is currently unknown,
  but this release adds a tenative fix.
* When PgUp/PgDown were used to go beyond the last visible item,
  the above issue caused a crash, which is now also fixed.
* As a workaround for an overzealous Microsoft Defender
  false-positive detecting a &quot;trojan&quot; in the (unprocessed) adblock
  list, :adblock-update now doesn't cache the HTTP response anymore
* With the QtWebKit backend and content.headers set to same-domain
  (the default), origins with the same domain but different schemes
  or ports were treated as the same domain. They now are correctly
  treated as different domains.
* When a URL path uses percent escapes
  (such as https://example.com/embedded%2Fpath), using :navigate up
  would treat the %2F as a path separator and replace any remaining
  percent escapes by their unescaped equivalents. Those are now
  handled correctly.
* The open_url_instance.sh userscript now complains when socat is
  not installed, rather than silencing the error.
* The example AppArmor profile in misc/ was outdated and written
  for the older QtWebKit backend. It is now updated to serve as a
  useful starting point with QtWebEngine.
* With Qt 5.15.2, lines/borders coming from the readability-js
  userscript were invisible. This is now fixed by changing the
  border color to grey (with all Qt versions).
* Due to changes in the underlying Chromium, the
  colors.webpage.prefers_color_scheme_dark setting broke with
  Qt 5.15.2. It now works properly again.
* A bug in the pkg_resources module used by qutebrowser caused
  deprecation warnings to appear on start with Python 3.9 on some
  setups. Those are now hidden.
* Minor performance improvements.
* Fix for various functionality breaking in private windows with
  v1.14.0, after the last private window is closed. This includes:
    + Ad blocking
    + Downloads
    + Site-specific quirks (e.g. for Google login)
    + Certain settings such as content.javascript.enabled
</comment>
    <requestid>853375</requestid>
  </revision>
  <revision rev="48" vrev="1">
    <srcmd5>cbd0b4d2c611df45373e4a0990e196fe</srcmd5>
    <version>2.1.0</version>
    <time>1617130533</time>
    <user>RBrownSUSE</user>
    <comment>- Update to version 2.1.0
Removed
  * The following command aliases were deprecated in v2.0.0 and are
    now removed:
    + run-macro -&gt; macro-run
    + record-macro -&gt; macro-record
    + buffer -&gt; tab-select
    + open-editor -&gt; edit-text
    + toggle-selection -&gt; selection-toggle
    + drop-selection -&gt; selection-drop
    + reverse-selection -&gt; selection-reverse
    + follow-selected -&gt; selection-follow
    + follow-hint -&gt; hint-follow
    + enter-mode -&gt; mode-enter
    + leave-mode -&gt; mode-leave
Added
  * New :screenshot command which can be used to screenshot the
    visible part of the page.
  * New qute-keepassxc userscript integrating with the KeePassXC
    browser API.
Changed
  * Initial support for QtWebEngine 5.15.3 and PyQt 5.15.3/.4
  * The colors.webpage.prefers_color_scheme_dark setting got
    renamed to colors.webpage.preferred_color_scheme and now takes
    the values auto, light and dark (instead of being True for dark
    and False for auto). Note that the light value is only
    supported with Qt 5.15.2+, falling back to the same behavior as
    auto on older versions.
  * On Linux, qutebrowser now tries harder to find details about
    the installed QtWebEngine version by inspecting the QtWebEngine</comment>
    <requestid>878536</requestid>
  </revision>
  <revision rev="49" vrev="1">
    <srcmd5>247b381c927b78efddf2f6ded5c2c628</srcmd5>
    <version>2.2.0</version>
    <time>1619031573</time>
    <user>dimstar_suse</user>
    <comment>- Enable test suite
- Update to version 2.2.0
Deprecated
  * Running qutebrowser with Qt 5.12.0 is now unsupported and logs
    a warning. It should still work - however, a workaround for
    issues with the Nvidia graphic driver was dropped.
    Newer Qt 5.12.x versions are still fully supported.
  * The --force argument for :tab-only is deprecated, use --pinned
    close instead.
  * Using :tab-focus without an argument or count is now
    deprecated, use :tab-next instead.
Added
  * New dependency on the QtDBus module. If this requirement is an
    issue for you or your distribution, please open an issue!
    Note that a DBus connection at runtime is still optional.
  * New input.media_keys setting which can be used to disable
    Chromium's handling of media keys.
  * New :process command (and associated qute://process pages)
    which can be used to view and terminate/kill external processes
    spawned by qutebrowser.
  * New content.site_specific_quirks.skip setting which can be used
    to disable individual site-specific quirks.
  * New --pinned argument for :tab-only, which replaces --force
    (with --pinned close), but also can take --pinned keep to keep
    pinned tabs without prompting.
  * New fileselect.folder.command which can be used with
    fileselect.handler = external to customize the command to use
    to upload directories (&lt;input type=&quot;file&quot; webkitdirectory /&gt;
    elements, which are non-standard but in wide use).
  * New content.notifications.presenter setting with various new</comment>
    <requestid>886814</requestid>
  </revision>
  <revision rev="50" vrev="1">
    <srcmd5>750ee16e87882015cd7708fedb1eb537</srcmd5>
    <version>2.2.1</version>
    <time>1620504470</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>891564</requestid>
  </revision>
  <revision rev="51" vrev="1">
    <srcmd5>196fbe4447742a35b889d978a476480a</srcmd5>
    <version>2.2.2</version>
    <time>1622536665</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>895839</requestid>
  </revision>
  <revision rev="52" vrev="1">
    <srcmd5>47191c3e585a3b2ec38f23f00f37a231</srcmd5>
    <version>2.2.3</version>
    <time>1622759641</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>897214</requestid>
  </revision>
  <revision rev="53" vrev="1">
    <srcmd5>27162686cb59372b9fe5739dd9fd19a0</srcmd5>
    <version>2.3.0</version>
    <time>1624999393</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2.3.0
Added
  * New content.prefers_reduced_motion setting to request websites
    to reduce non-essential motion/animations.
  * New colors.prompts.selected.fg setting to customize the text
    color for selected items in filename prompts.
Changed
  * The hosts-based adblocker (using content.blocking.hosts.lists)
    now also blocks all requests to any subdomains of blocked
    hosts.
  * The fonts.web.* settings now support URL patterns.
  * The :greasemonkey-reload command now shows a list of loaded
    scripts and has a new --quiet switch to suppress that message.
  * When launching a userscript via hints, a new QUTE_CURRENT_URL
    environment variable now points to the current page (rather
    than the URL of the selected element, where QUTE_URL points
    to).
Fixed
  * Crash when two Greasemonkey scripts have the same name
    (usually happening because the same file is in both the data
    and the config directory).</comment>
    <requestid>902869</requestid>
  </revision>
  <revision rev="54" vrev="1">
    <srcmd5>ed8abcfef5ce044a01b7b6f734e4c695</srcmd5>
    <version>2.3.1</version>
    <time>1628023719</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2.3.1
Fixed
  * Updated the workaround for Google Account log in claiming that
    this browser isn't secure. For an equivalent workaround on
    older versions, run: :set -u https://accounts.google.com/*
    content.headers.user_agent &quot;Mozilla/5.0 ({os_info}; rv:90.0)
    Gecko/20100101 Firefox/90.0&quot;
  * Corrupt cache file exceptions with adblock 0.5.0+ are now
    handled properly.
  * Crash when entering unicode surrogates into the filename
    prompt.
  * UnboundLocalError in qute-keepass when the database couldn't be
    opened.</comment>
    <requestid>909841</requestid>
  </revision>
  <revision rev="55" vrev="2">
    <srcmd5>f985e561aafe4760c3d834bb2b569cf7</srcmd5>
    <version>2.3.1</version>
    <time>1632431039</time>
    <user>dimstar_suse</user>
    <comment>- Disable test suite. This is too non-deterministic and random
  BDD tests will fail most of the time even though the program
  behaves correctly in practice.</comment>
    <requestid>921083</requestid>
  </revision>
  <revision rev="56" vrev="1">
    <srcmd5>36bdc89aeda6134d54ce0d5b440ee6ec</srcmd5>
    <version>2.4.0</version>
    <time>1634943066</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2.4.0
Added
  * New content.blocking.hosts.block_subdomains setting which can
    be used to disable the subdomain blocking for the hosts-based
    adblocker introduced in v2.3.0.
  * New downloads.prevent_mixed_content setting to prevent insecure
    mixed-content downloads (true by default).
  * New --private flag for :tab-clone, which clones a tab into a
    new private window, mirroring the same flags for :open and
    :tab-give.
Fixed
  * Speculative fix for a crash when closing qutebrowser while a
    systray notification is shown.</comment>
    <requestid>926836</requestid>
  </revision>
  <revision rev="57" vrev="1">
    <srcmd5>2ab0c2140b917af4f250b1a1291a9e4a</srcmd5>
    <version>2.5.0</version>
    <time>1649274701</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2.5.0
Deprecated
  * v2.5.x will be the last release of qutebrowser 2. For the
    upcoming 3.0.0 release, it's planned to drop support for
    various legacy platforms and libraries which are unsupported
    upstream, such as:
    + Qt before 5.15 LTS (plus adding support for Qt 6.2+)
    + Python 3.6
    + The QtWebKit backend
    + macOS 10.14 (via Homebrew)
    + 32-bit Windows (via Qt)
    + Windows 8 (via Qt)
    + Windows 10 before 1809 (via Qt)
    + Possibly other more minor dependency changes
  * The :rl-unix-word-rubout command (&lt;Ctrl-W&gt; in command/prompt
    modes) has been deprecated. Use :rl-rubout &quot; &quot; instead.
  * The :rl-unix-filename-rubout command has been deprecated.
    Use either :rl-rubout &quot;/ &quot; (classic readline behavior) or
    :rl-filename-rubout (using OS path separator and ignoring
    spaces) instead.
Changed
  * Improved message if a spawned process wasn't found and a
    Flatpak container is in use.
  * The :tab-move command now takes start and end as index to move
    a tab to the first/last position.
  * Tests now automatically pick the backend (QtWebKit/QtWebEngine)
    based on what's available. The QUTE_BDD_WEBENGINE environment
    variable and --qute-bdd-webengine argument got replaced by
    QUTE_TESTS_BACKEND and --qute-backend respectively, which can
    be set to either webengine or webkit.</comment>
    <requestid>967163</requestid>
  </revision>
  <revision rev="58" vrev="1">
    <srcmd5>d917e5ddf468e7da2002ac6f45dc0351</srcmd5>
    <version>2.5.1</version>
    <time>1655396448</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2.5.1
Fixed
  * The qute-pass userscript is marked as executable again.
  * The MathML workaround for darkmode (e.g. black on black
    Wikipedia formula) now also works for display (rather than
    inline) math.
  * The content.proxy setting can now correctly be set to arbitrary
    values via the qute://settings page again.
  * Fixed a rare possible crash with invalid Content-Disposition
    headers.
  * Fixes for various notification-related crashes:
    + With the tiramisu notification server (due to invalid
      behavior of the server, now a non-fatal error)
    + With the budgie notification server when closing a
      notification (due to invalid behavior of the server,
      now worked around)
    + When a server exits with an unsuccessful exit status
      (now a non-fatal error)
    + When a server couldn't be started successfully
      (now a non-fatal error)
    + With the herbe notification presenter, when the website tries
      to close the notification after the user accepting
      (right-clicking) it.
  * Fixes in userscripts:
    + The qute-bitwarden userscript now correctly searches for
      entries for sites on a subdomain of an unrecognized TLD.
      subdomain names. Previously my.site.local would have searched
      in bitwarden for my.sitelocal, losing the rightmost dot.</comment>
    <requestid>982814</requestid>
  </revision>
  <revision rev="59" vrev="1">
    <srcmd5>f628987fa8f09de549ba9ba66e78852a</srcmd5>
    <version>2.5.2</version>
    <time>1657281717</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2.5.2
Fixed
  * The notification fixes in v2.5.1 caused new notification
    crashes (probably more common than the ones being fixed...).
    Those are now fixed, along with a (rather involved) test case
    to prevent similar issues in the future.
  * When a text was not found on a page, the associated message
    would be shown as rich text (e.g. after /&lt;h1&gt;). With this
    release, this is fixed for search messages, while the 3.0.0
    release will change the default for all messages to be
    plain-text. Note this is NOT a security issue, as only a small
    subset of HTML is interpreted as rich text by Qt, independently
    from the website.
  * When a Greasemonkey script couldn't be loaded (e.g. due to an
    unreadable file), qutebrowser would crash. It now shows an
    error instead.
  * Ever since the v1.2.0 release in 2018, the
    content.default_encoding setting was not applied on start
    properly (only when it was changed afterwards).
    This is now fixed.</comment>
    <requestid>987485</requestid>
  </revision>
  <revision rev="60" vrev="1">
    <srcmd5>cfe6900c22c658ff454432a0e488364d</srcmd5>
    <version>2.5.3</version>
    <time>1676990194</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2.5.3
Added
  * New array_at quirk, polyfilling the Array.at method, which is
    needed by various websites, but only natively available with
    Qt 6.2.
Fixed
  * Crash when the adblock filter file can't be read.
  * Inconsistent behavior when using :config-{dict,list}-* commands
    with an invalid value. Before the fix, using the same command
    again would complain that the value was already present,
    despite the error and the value not being actually changed.
  * Incomplete error handling when mutating a dict/list in
    config.py and setting an invalid value. Before the fix, this
    would result in either a message in the terminal rather than
    GUI (startup), or in a crash (:config-source).
  * Wrong type handling when using :config-{dict,list}-* commands
    with a config option with non-string values. The only affected
    option is bindings.commands, which is probably rarely used with
    those commands.
  * The readability userscript now correctly passes the source URL
    to Breadability, to make relative links work.
  * Update dictcli.py to use the main branch, fixing a 404 error.
  * Crash with some notification servers when the server did quit.
  * Minor documentation fixes</comment>
    <requestid>1066958</requestid>
  </revision>
  <revision rev="61" vrev="1">
    <srcmd5>fa0b1511cd9652c27d16be995dfcbd32</srcmd5>
    <version>2.5.4</version>
    <time>1684074720</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.5.4:
  * Support SQLite with DQS (double quoted string) compile time
    option turned off.</comment>
    <requestid>1087076</requestid>
  </revision>
  <revision rev="62" vrev="1">
    <srcmd5>4fa3d816256fd6e62730a669d145740a</srcmd5>
    <version>3.0.0</version>
    <time>1692611153</time>
    <user>anag+factory</user>
    <comment>- Update to version 3.0.0
Major Changes:
  * qutebrowser now supports Qt 6 and uses it by default.
    Qt 5.15 is used as a fallback if Qt 6 is unavailable.
    This behavior can be customized in three ways (in order of
    precedence):
    + Via `--qt-wrapper PyQt5` or `--qt-wrapper PyQt6`
      command-line arguments.
    + Via the `QUTE_QT_WRAPPER` environment variable, set to
      `PyQt6` or `PyQt5`.
    + For packagers wanting to provide packages specific to a Qt
      version, patch `qutebrowser/qt/machinery.py` and set
      `_WRAPPER_OVERRIDE`.
  * Various commands were renamed to better group related commands:
    + `set-cmd-text` -&gt; `cmd-set-text`
    + `repeat` -&gt; `cmd-repeat`
    + `repeat*command` -&gt; `cmd-repeat-last`
    + `later` -&gt; `cmd-later`
    + `edit-command` -&gt; `cmd-edit`
    + `run-with-count` -&gt; `cmd-run-with-count`
    The old names continue to work for the time being, but are
    deprecated and show a warning.
Added:
  * On invalid commands/settings with a similarly spelled match,
    qutebrowser now suggests the correct name in its error
    messages.
  * New `:prompt-fileselect-external` command which can be used to
    spawn an external file selector (`fileselect.folder.command`)
    from download filename prompts (bound to `&lt;Alt+e&gt;` by default).
  * New `qute://start` built-in start page (not set as the default</comment>
    <requestid>1104940</requestid>
  </revision>
</revisionlist>
