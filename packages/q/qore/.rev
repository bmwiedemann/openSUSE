<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>5a61c856259839e907e9c363e0d6be80</srcmd5>
    <version>0.8.11</version>
    <time>1405253177</time>
    <user>coolo</user>
    <comment>New package as described in http://lists.opensuse.org/opensuse-factory/2013-01/msg00105.html

changes related to request: 238211

 - spec-cleaner used
 - spec file uses only opensuse related parts, rest has been removed
 - fdupes macro used correctly to reduce duplicated files in docs
 - 6 packages and 0 specfiles checked; 0 errors, 3 warnings.
   - warnings about missing man pages has been addressed upstream to the qore development
   - warning about missing-call-to-setgroups-before-setuid is false positive here (IMHO). libqore.so contains qore low level wrappers around libc functions (1:1) so it's up to application developer to use it correctly.</comment>
    <requestid>240455</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>830469961310bc43da174c32fcb045bb</srcmd5>
    <version>0.8.11</version>
    <time>1405520376</time>
    <user>coolo</user>
    <comment>1</comment>
    <requestid>240871</requestid>
  </revision>
  <revision rev="3" vrev="4">
    <srcmd5>830469961310bc43da174c32fcb045bb</srcmd5>
    <version>0.8.11</version>
    <time>1409303134</time>
    <user>adrianSuSE</user>
    <comment>Split 13.2 from Factory</comment>
  </revision>
  <revision rev="4" vrev="5">
    <srcmd5>6fe4d36ced7131d9c19d9e04a6e4ec65</srcmd5>
    <version>0.8.11</version>
    <time>1434133918</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>311776</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>60a7652b34309698120b2b6daa400a76</srcmd5>
    <version>0.8.13</version>
    <time>1508434340</time>
    <user>dimstar_suse</user>
    <comment>added more descriptive changelog into qore.changes as requested by Jan Engelhardt

- Rework scriptlets for ldconfig. Adjust RPM groups.
  Avoid double-shipping of files. Use %configure.
- updated to 0.8.13
- Input/Output stream APIs
- Vastly improved type system with complex type support
  Improved operators; list, string, binary slice operators,
  the &quot;..&quot; range operator, improved new, cast&lt;&gt;, and
  instanceof operators, lazy evaluation of functional and
  list operators, more
- Improved encryption support including AES encryption,
  encryption/decryption streams, support for AAD and MACs
  Improved HTTPS and SSL security support with addition
  X.509 certificate support including automatic certificate
  verification in client and server contexts
- Universal connection API
- Support for binding output placeholder buffers for result
  sets that return an SQLStatement object for more efficient
  piecewise processing of DB stored procedure/function calls
  that return very large result sets
- Strong encapsulation support (ex: private:internal)
- Deterministic garbage collection performance improvements
  with large cycles
- Debugging support and APIs including remote network debugging
- Language Server Protocol support for Qore in the new astparser
  module for rich language support in IDEs such as the Visual 
  studio Code Qore Extension
- much more
- rpm: /usr/bin user programs are part of qore-misc-tools package
  now as it was suggested by advanced packagers on IRC
- rpm: updated qore-libtool-2.4.6.patch for new release
- updated to 0.8.12.1
- removed un-applicable patches: configure.patch
</comment>
    <requestid>534128</requestid>
  </revision>
  <revision rev="6" vrev="2">
    <srcmd5>349e4829f99a25f0588bfc4a5a5eafb2</srcmd5>
    <version>0.8.13</version>
    <time>1531470155</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>622359</requestid>
  </revision>
  <revision rev="7" vrev="3">
    <srcmd5>4cc83ad4bd040698124a8532f291c943</srcmd5>
    <version>0.8.13</version>
    <time>1565695403</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>722648</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>d588483c048cbdbc79d7469ed80cb8e9</srcmd5>
    <version>0.9.15</version>
    <time>1627847496</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.9.15
  * Fixes CVE-2020-13615
- Split -doc package, building the documentation requires the yaml module, so this would create a dependency circle</comment>
    <requestid>908927</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>1174a0bda601bebde7a9e63ccf2e8bcc</srcmd5>
    <version>1.0.10</version>
    <time>1637701827</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>928377</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>7c731607f8179d92d298cc48fd6b7770</srcmd5>
    <version>1.8.0</version>
    <time>1655396384</time>
    <user>dimstar_suse</user>
    <comment>Update to version 1.8.0</comment>
    <requestid>981144</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>726807fa88b82377c2f8f70783449c10</srcmd5>
    <version>1.13.0</version>
    <time>1674589376</time>
    <user>dimstar_suse</user>
    <comment>- Remove buildroot from mydatarootdir 
- Update to 1.13.0
  * implemented support for including REST path args
  * fixed a bug handling the swagger_base_path RestClient option
  * RestHandler will always set the socketobject request content
  * implemented get_safe_url()
  * fixed parse_url() with passwords with / chars in it
  * fixed handling child attributes in connection objects
  * fixed REST ping operations 
  * fixed bugs in HTTP communications with 32-bit builds of Qore
- Update to 1.12.4
  * fixed a bug building documentation with autotools 
  * fixed bugs in C++ QoreSocket::send*() methods not used in the Qore 
    language  
  * fixed a bug building documentation with release files created from 
    the autotools makefile target
  * fixed bugs in the cmake configuration generating documentation for 
    builtin modules 
  * provide APIs to provide additional information about child data 
  * Bugfix/4545 swagger fix 
  * Add support for RISC-V 
  * Bugfix/4538 sqlutil expressions
  * refs #4550 fixed WebUtil to never serve files outside the root dir
  * refs #4553 fixed a bug building with openssl 3+ 
  * refs #4555 do not return / chars in data provider names
  * refs #4557 implemented support for event handling in DataProviders 
  * refs #4559 fixed FsUtil to behave more consistently regarding target 
  * refs #4561 fixed bugs handling escape chars in regex subst replacement
  * refs #4565 fixed WebSocket PING/PONG handling 
  * refs #4567 fixed bugs in HTTPClient class setting keys and certs 
  * refs #4572 added child capability indicator attributes to data 
  * refs #4574 allow HTTP certs to be reloaded from the source location
  * refs #4576 DataProvider module: updated child capability info 
  * refs #4578 added the argument hash to methods returning REST API path
  * refs #4583 fixed race conditions in the Logger module
  * refs #4587 fixed a bug setting the data provider name in Swagger schema
  * refs #4590 QUnit: allow the exception argument to be checked 
  * refs #4595 working socket polling infrastructure 
  * refs #4605 fixed handling abstract memberGate() and methodGate() methods
  * refs #4607 fixed the unreferenced-variable warning 
  * refs #4609 fixed cast&lt;&gt; with lvalues
  * added OdbcFirebirdSqlUtil module 
  * refs #4620 fixed bugs serializing / deserializing SqlUtil tables 
  * refs #4622 fixed AbstractDataProvider::search*() methods
  * Bugfix/4624 data provider search fix 
  * refs #4626 added support for the immediate data:// location 
  * refs #4628 fixed sequence* mapper keys in DbTableDataProvider 
  * Bugfix/4624 4632 fixes
  * refs #4634 fixed WebSocketHandler::sendOne() 
  * refs #4637 allow information about schema changes after alignments 
  * refs #4639 allow for the client's time zone to be set 
  * refs #4643 fixed handling signal args
  * refs #4646 allow REST handlers to set custom headers in error responses
  * refs #4658 fixed a race condition in deadlock detection
  * Enablement of the architecture s390x
  * Move qore-doc.spec to qore.spec
  * Remove fix-logger-doc.patch and fix-building-doc.patch 
  * Remove clean section because of integration in rpm
</comment>
    <requestid>1060688</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>2744ebf716b9a2efdf554aab08d13226</srcmd5>
    <version>1.16.1</version>
    <time>1690216033</time>
    <user>anag+factory</user>
    <comment>- Fix qore-stdlib configuration
- Update to 1.16.1
  * Add include/qore/macros-riscv.h to include_HEADERS
  * fixed a bug in parse_datasource() parsing option values
  * added support for a new DBI driver method
  * Feature/4684 jdbc drivers 
  * fixed setting connection status to OK 
  * allow auth headers to be set with WebSocket client connect
  * fixed a deadlock when the WebSocketClient goes out of scope
  * allow data provider hierarchy to be browsed
  * use delayed observable classes from factories
  * Schema module does not report changes with negative verbose values
  * added support for MS SQL Server DBs with the DataProvider
  * ensure that exception attributes from ping errors
  * Make more PowerPC platforms use the PowerPC macros 
  * added generic search capabilities to DbDataProvider 
  * fixed a bug in hash assignments in HashDataType 
  * fixed ws client data providers to allow initialization
  * fixed a bug reloading certs on running listeners
  * added missing transaction flag to connection info for data
  * fixed connection options
  * allow handler information to be returned 
- Remove buildroot from mydatarootdir 
- Update to 1.13.0
  * implemented support for including REST path args
  * fixed a bug handling the swagger_base_path RestClient option
  * RestHandler will always set the socketobject request content
  * implemented get_safe_url()
  * fixed parse_url() with passwords with / chars in it
  * fixed handling child attributes in connection objects
  * fixed REST ping operations 
  * fixed bugs in HTTP communications with 32-bit builds of Qore
- Update to 1.12.4
  * fixed a bug building documentation with autotools 
  * fixed bugs in C++ QoreSocket::send*() methods not used in the Qore 
    language  
  * fixed a bug building documentation with release files created from 
    the autotools makefile target
  * fixed bugs in the cmake configuration generating documentation for 
    builtin modules 
  * provide APIs to provide additional information about child data 
  * Bugfix/4545 swagger fix 
  * Add support for RISC-V 
  * Bugfix/4538 sqlutil expressions
  * refs #4550 fixed WebUtil to never serve files outside the root dir
  * refs #4553 fixed a bug building with openssl 3+ 
  * refs #4555 do not return / chars in data provider names
  * refs #4557 implemented support for event handling in DataProviders 
  * refs #4559 fixed FsUtil to behave more consistently regarding target 
  * refs #4561 fixed bugs handling escape chars in regex subst replacement
  * refs #4565 fixed WebSocket PING/PONG handling 
  * refs #4567 fixed bugs in HTTPClient class setting keys and certs 
  * refs #4572 added child capability indicator attributes to data 
  * refs #4574 allow HTTP certs to be reloaded from the source location
  * refs #4576 DataProvider module: updated child capability info 
  * refs #4578 added the argument hash to methods returning REST API path
  * refs #4583 fixed race conditions in the Logger module
  * refs #4587 fixed a bug setting the data provider name in Swagger schema
  * refs #4590 QUnit: allow the exception argument to be checked 
  * refs #4595 working socket polling infrastructure 
  * refs #4605 fixed handling abstract memberGate() and methodGate() methods
  * refs #4607 fixed the unreferenced-variable warning 
  * refs #4609 fixed cast&lt;&gt; with lvalues
  * added OdbcFirebirdSqlUtil module 
  * refs #4620 fixed bugs serializing / deserializing SqlUtil tables 
  * refs #4622 fixed AbstractDataProvider::search*() methods
  * Bugfix/4624 data provider search fix 
  * refs #4626 added support for the immediate data:// location 
  * refs #4628 fixed sequence* mapper keys in DbTableDataProvider 
  * Bugfix/4624 4632 fixes
  * refs #4634 fixed WebSocketHandler::sendOne() 
  * refs #4637 allow information about schema changes after alignments 
  * refs #4639 allow for the client's time zone to be set 
  * refs #4643 fixed handling signal args
  * refs #4646 allow REST handlers to set custom headers in error responses
  * refs #4658 fixed a race condition in deadlock detection
  * Enablement of the architecture s390x
  * Move qore-doc.spec to qore.spec
  * Remove fix-logger-doc.patch and fix-building-doc.patch 
  * Remove clean section because of integration in rpm
- Update to version 1.8.0
  * Updated modules with initial support for generic expressions for
    searches
  * Addded support for data provider options to support default values
  * Addded search_operators to the data provider response to report
    supported search operators
  * Fixed a type error in DataProvider::search*() calls with an empty
    where hash argument
  * RestClient module
    * Fixed a bug where REST schema validation was not applied in all
      contexts with specialized REST clients
  * RestHandler module
    * Do not raise a validation error when a response with an unknown
      code has a message body; this hides the true error message from
      the caller in case of error messages
    * Allow a logger to be set in validators
  * ServiceNowRestDataProvider module
    * Fixed bugs handling the orderby, orderbydesc, and groupby search
      options
  * Fixed a bug where the cast&lt;&gt;() operator threw parse-time exceptions
    with hashdecls that could succeed at runtime
  * Fixed a bug handling types at parse time with the minus operator and
    complex hash operands
  * Fixed a static memory leak in libqore shutting down the library when
    built with openssl 3+
  * Fixed a bug where HTTP redirect messages were encoded twice causing
    redirect failures in cases where the redirect URI path had encoded
    elements
  * Fixed a crash related to stack exhaustion resolving deeply-nested
    references
- Add fix-building-doc.patch
- Add fix-logger-doc.patch
- Update to version 1.7.2
  * Fixed parse_datasource() to parse datasource strings with a DB name
    as a path or with ':' chars in the DB or host name
- Update to version 1.7.1
  * DataProvider module: made it possible to determine the default field
    type in HashDataType
  * FsUtil module: fixed join_paths() to handle an arbitrary number of
    paths as arguments (the most common use case)
  * RestHandler module: improved error handling and sending error messages
    when exceptions contain non-serializable objects
  * Fixed a bug handling reference assignments and calculating matches
    with overloaded functions and methods
  * Fixed a bug with compilers that do not guarantee left to right argument
    execution order such as g++ 12+; note that the C++ standard does not
    guarantee this in any case
  * Fixed cast&lt;&gt; operator handling of &quot;or nothing&quot; types at parse and runtime
  * Load the default provider with OpenSSL3+ to make it work on platforms
    where this provider is not automatically loaded
- Update to version 1.6.0
  * DataProvider module: added the desc key supporting a markdown description
    to data provider info
  * Mapper module: implemented options supporting suppressing data provider
    calls on input and output
  * Added HTTPClient::getSafeURL() and HTTPClient::getSafeProxyURL()
- Update to version 1.5.0
  * CsvUtil and FixedLengthUtil: added support for resolving locations
    with the FileLocationHandler module
  * DataProvider module:fixed a type error iterating data in
    DefaultBulkRecordIterface
- Update to version 1.4.0
  * DataProvider module
    * Added support for tags on data provider types
    * Fixed data provider factory info to provide info about the
      actual data provider factory instead of only provider info
    * Added &quot;from example&quot; APIs to data provider factories
    * Added generic search capabilities to data providers with no
      native search functionality
  * Util module:
    * Implemented the serialize_to_string() API
    * parse_uri_query() fails if the string has newlines in it
  * RestHandler module: Added missing make*() methods with REST
    responses to the RestHandler class
  * added the CipherMap constant providing a hash of known ciphers
  * Support for OpenSSL 3+ added
    * when Qore is compiled with OpenSSL3 or greater, all cipher
      and digest algorithms known to the encryption library are
      supported with dynamic APIs
  * Removed code that generated unnecessary ILLEGAL-CALL
    exceptions at parse time
- Update to version 1.3.0
  * FileLocationHandler module
    * updated for read/write operations and added streaming APIs
  * Added an optional encoding parameter to the FtpClient::getAsString() API
  * Fixed a bug handling committing parse operations where final
    checks were not always made before committing
  * Fixed return type for Type::isAssignableFrom(Type) in the
    reflection module
  * Fixed bugs in variant matching that could lead to unexpected
    results at runtime as well as errors with inherited Java code
  * Fixed a bug dispatching method and function calls at runtime in
    certain cases
- Update to version 1.2.0
  * DataProvider module
    * Added a logger to the AbstractDataProvider class to enable
      logging
    * Added support for creating, updating, and deleting data providers
  * DbDataProvider module
    * Added support for creating, updating, and deleting data providers
  * FreetdsSqlUtil module
    * Fixed a bug where offset and limit were not properly supported
      with MS SQL Server DBs
    * Fixed a bug where date/time values in other time zones were not
      bound correctly
    * Fixed a bug handling transaction savepoints
  * Fixed a bug in certain type errors involving complex types where
    the specific complex type was omitted from the error message
  * Fixed a bug initializing constant values at parse time;
    now all constant expressions requiring evaluation are evaluated
    after all other parsing is done 
- Update to version 1.1.0
  * Added DataProviderTypeCache::listParentTypes() to allow a list
    of parent types to be returned
  * Added StringOutputStream::hasData()
  * rethrow now accepts optional exception arguments to allow
    exceptions to be enriched in a catch block while maintaining
    the original call stack, and the on_error statement now includes
    an implicit argument $1 giving the currently-active exception,
    additionally, rethrow statements are now allowed in on_error
    statement blocks to allow for exception enrichment without
    requiring a try/catch block.
  * Fixed a bug in the stack guard implementation where additional
    guard area was needed in the primary thread on some platforms
  * Fixed bugs tagging functions and constants provided by builtin
    modules with their module name; required to consistently provide
    unique binary names when imported into Java, for example
  * Fixed a bug initializing constant values that could result in
    spurious errors
  * Added regex APIs to the C++ string class
  * Added a warning for constant operands with the square bracket
    operator that are not integers
  * Fixed a bug handling EOF conditions while parsing the final
    part of regular expressions
- Update to version 1.0.13
  * Fixed: builtin namespaces are not consistently tagged with the
    providing module's name
  * Update QUnit constructor variants taking list arguments to allow
    them to work better with Python and Java subclasses
  * Fixed: not possible to use a Mapper with an output provider only
    for the output data type
  * Fixed a bug where qpp would not recognize multi-line method
  * Fixed a regression in the SwaggerDataProvider
- Update to version 1.0.12
  * Fixed handling implicit in-object calls in arguments
  * Adding missing methods for transaction management with
    supported DataProviders
  * Fixed upsert usage with unique constraints and indices
    when there is a non-matching PK
  * Fixed handling reserved words as column names in the
    PgsqlSqlUtil module
  * Fixed a bug in parse_to_qore_value() with floats and numbers
    with trailing zeros
  * Fixed handling recursive references in Swagger schemas in the
    Swagger module
  * Fixed handling recursive references in Swagger schemas in the
    SwaggerDataProvider module
  * Mail and MailMessage fixes - downstream patches
- Drop upstream fixed fix-module-linker-flags.patch
- Update to 1.0.10:
  * Might break backwards compatibility:
    * Some server-side APIs have changed (integration of the Logger
      module in the HttpServer and the HttpServerUtil modules).
    * Implemented the invalid-catch warning when types are required
      by parse options and added to the default warning mask for modules
  * Added support for thread-local global variables
  * Type errors with function and method resolution will report the full
    namespace paths of class and hashdecl types
  * ConnectionProvider module:
    * updated the AbstractConnection::getInfo() method
    * added the AbstractConnection::getExtendedInfo() method
  * DataProvider module:
    * added the limit search option to the DefaultRecordIterator class
  * HttpServer module:
    * allow dynamic handlers to be disabled before being removed
    * integrated the Logger module
    * removed deprecated APIs
  * HttpServerUtil module:
    * integrated the Logger module
  * Logger module:
    * added support for the %h and %P patterns for hostname and PID
    * allow file appenders to be reopened
    * enable serialization for LoggerEvent objects as well as for
      them to be submitted directly to Logger objects
  * Added qjar tool for exporting javadoc
  * Many bug fixes
  * Full release notes:
    https://docs.qore.org/qore-1.0.10/lang/html/release_notes.html
- Add fix-module-linker-flags.patch fixing gh#4335
- Trim marketing wording from description.
- Update to 0.9.15
  * DataProvider: Fixed a bug where the data type was not supported
    correctly as a data provider type
  * Fixed a potential crash when raising a large number of exceptions
  * Fixed a potential deadlock loading user modules with complex
    initialization code
  * Fixed a bug where SSL errors were not properly cleared before
    I/O operations in all cases
  * Fixed a bug where empty binary values could not be deserialized
  * Fixed handling Qore program destruction in a foreign thread in
    a binary module that could cause a crash
- Fixed abi Provides generation
- Update to 0.9.14
  * OracleSqlUtil module and SqlUtil module: fixed various SQL
    generation issues
  * Swagger module: fixed a bug where unknown string format types
    were not ignored but instead caused an exception to be thrown
  * Util module: fixed a bug in parse_memory_size()
  * Full changes:
    https://docs.qore.org/qore-0.9.14/lang/html/release_notes.html
- Update to 0.9.13
  * Fixes CVE-2020-13615
  * Added saprest tool (a SAP rest client)
  * Bug fixes and improvements for
    * CsvUtil
    * DataProvider
    * FixedLengthUtil
    * HttpServer nad HttpServerUtil
    * ServiceNowRestDataProvider
    * WebUtil
  * RestClient: additional fixes to REST path handling with schema
    validators with a base path
  * New Modules in Qore:
    * ServiceNowRestClient: provides APIs for communicating with
      the ServiceNow REST API
    * ServiceNowRestDataProvider: Provides a data provider API
      for the ServiceNow REST API
  * https://docs.qore.org/qore-0.9.13/lang/html/release_notes.html
- ABI breaks with 0.9.0 update, removed outdated API and updated
  qore-module.prov
- Refreshed reproducible.patch
- Drop unused qore-libtool-2.4.6.patch
- Split -doc package, building the documentation requires the
  yaml module, so this would create a dependency circle
- Make the qore-module-api-* provides more fail prove: store the
  provides list in qore-module.prov. During build, this file is
  auto-generated and compared against the package provided one to
  ensure the list is correct.
- Add reproducible.patch to not include build hostname in package
  to make build reproducible (boo#1084909)
- Rework scriptlets for ldconfig. Adjust RPM groups.
  Avoid double-shipping of files. Use %configure.
- updated to 0.8.13
- Input/Output stream APIs
- Vastly improved type system with complex type support
  Improved operators; list, string, binary slice operators,
  the &quot;..&quot; range operator, improved new, cast&lt;&gt;, and
  instanceof operators, lazy evaluation of functional and
  list operators, more
- Improved encryption support including AES encryption,
  encryption/decryption streams, support for AAD and MACs
  Improved HTTPS and SSL security support with addition
  X.509 certificate support including automatic certificate
  verification in client and server contexts
- Universal connection API
- Support for binding output placeholder buffers for result
  sets that return an SQLStatement object for more efficient
  piecewise processing of DB stored procedure/function calls
  that return very large result sets
- Strong encapsulation support (ex: private:internal)
- Deterministic garbage collection performance improvements
  with large cycles
- Debugging support and APIs including remote network debugging
- Language Server Protocol support for Qore in the new astparser
  module for rich language support in IDEs such as the Visual 
  studio Code Qore Extension
- much more
- rpm: /usr/bin user programs are part of qore-misc-tools package
  now as it was suggested by advanced packagers on IRC
- rpm: updated qore-libtool-2.4.6.patch for new release
- updated to 0.8.12.1
- removed un-applicable patches: configure.patch
- Add qore-libtool-2.4.6.patch: Remove imported Libtool 2.4.2
  macros from acinclude.m4: this is a terrible hack by upstream to
  not forcibly depend on libtool &gt;= 2.4.2, which has a very bad
  side effect now with libtool 2.4.6 available: the macros conflict
  due the internal API changes inside libtool.
- configure.patch: don't use -m32/-m64
- updated to 0.8.11
- spec file reformatted to fit OBS rules
- updated to 0.8.6.2
- updated to 0.8.6.1
- updated to 0.8.6
- updated to 0.8.5
- updated for new doxygen-based documentation, added devel-doc pkg
  for API docs
- updated package descriptions
- updated to 0.8.4
- pkg-config
- updated to 0.8.3
- updated to 0.8.2
- updated to 0.8.1
- updated to 0.8.0
- updated to 0.7.7
- updated to 0.7.6
- updated to 0.7.5
- updated to 0.7.4
- updated to 0.7.3
- made libqore* the default name for lib package, removed la file
- updated to 0.7.2
- fixed devel pacakges for suse
- released 0.7.0
- removed all modules as they are now independent projects
- fixed dist tag for suse distributions
- updated for new module directory, added qore-module-api-*
  capability
- copied improvements from opensuse rpm and updated based
  on rpmlint output
- updated version to 0.7.0
- fixed spec file to support more architectures
- updated package to 0.6.2.4 and disabled mssql module build due
- to lack of freetds packages in the build service :-(
- added --enable-64bit to build properly on 64bit biarch
- initial package of 0.5.3
</comment>
    <requestid>1100031</requestid>
  </revision>
</revisionlist>
