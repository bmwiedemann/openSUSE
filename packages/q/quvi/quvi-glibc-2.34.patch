Index: quvi-0.9.5/src/pbar/lpbar.c
===================================================================
--- quvi-0.9.5.orig/src/pbar/lpbar.c
+++ quvi-0.9.5/src/pbar/lpbar.c
@@ -64,7 +64,7 @@ lpbar_t lpbar_new()
 {
   lpbar_t p = g_new0(struct lpbar_s, 1);
   p->counters.timer = g_timer_new();
-  p->mode = write;
+  p->mode = do_write;
   return (p);
 }
 
@@ -212,7 +212,7 @@ void lpbar_print(const lpbar_t p)
       g_print(C_("Transfer mode with a reason", "skip <forced>"));
       break;
     case resume:
-    case write:
+    case do_write:
     default:
       g_print("%s", (p->initial_bytes ==0)
         ? C_("Transfer mode (begin at offset 0)", "write")
Index: quvi-0.9.5/src/pbar/lpbar.h
===================================================================
--- quvi-0.9.5.orig/src/pbar/lpbar.h
+++ quvi-0.9.5/src/pbar/lpbar.h
@@ -21,7 +21,7 @@
 #ifndef lpbar_h
 #define lpbar_h
 
-typedef enum { retrieved_already, forced_skip, resume, write } lpbar_mode;
+typedef enum { retrieved_already, forced_skip, resume, do_write } lpbar_mode;
 
 struct lpbar_s
 {
