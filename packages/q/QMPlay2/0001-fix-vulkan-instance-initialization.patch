From d9fee9a8f6541ecd30e1a3411b2d88856f912c93 Mon 29 11 10:08:48 2021
From: Simon Vogl <simon.vogl@gmx.net>
Date: Mon, 29 Nov 2021 10:08:48 UTC
Subject: [PATCH] Fix QmVk instance initialization

This patch is required to fix an initialization error in QMPlay2's submodule QmVk with vulkan versions >= 1.2.199.

--- a/src/qmvk/AbstractInstance.cpp
+++ b/src/qmvk/AbstractInstance.cpp
@@ -23,30 +23,34 @@ vk::DispatchLoaderDynamic vk::defaultDispatchLoaderDynamic;
 
 namespace QmVk {
 
-static unique_ptr<vk::DynamicLoader> g_dyld;
-
 void AbstractInstance::init(PFN_vkGetInstanceProcAddr vkGetInstanceProcAddr)
 {
-    if (vkGetInstanceProcAddr)
-    {
-        vk::defaultDispatchLoaderDynamic.init(*this, vkGetInstanceProcAddr);
-        return;
-    }
-
-    try
-    {
-        g_dyld = make_unique<vk::DynamicLoader>();
-    }
-    catch (const runtime_error &e)
+    if (!vkGetInstanceProcAddr)
     {
-        throw vk::InitializationFailedError(e.what());
+        static unique_ptr<vk::DynamicLoader> dyld;
+        static mutex dyldMutex;
+
+        lock_guard<mutex> locker(dyldMutex);
+        if (!dyld)
+        {
+            try
+            {
+                dyld = make_unique<vk::DynamicLoader>();
+            }
+            catch (const runtime_error &e)
+            {
+                throw vk::InitializationFailedError(e.what());
+            }
+        }
+
+        vkGetInstanceProcAddr = dyld->getProcAddress<PFN_vkGetInstanceProcAddr>("vkGetInstanceProcAddr");
+        if (!vkGetInstanceProcAddr)
+            throw vk::InitializationFailedError("Unable to get \"vkGetInstanceProcAddr\"");
     }
-
-    vkGetInstanceProcAddr = g_dyld->getProcAddress<PFN_vkGetInstanceProcAddr>("vkGetInstanceProcAddr");
-    if (!vkGetInstanceProcAddr)
-        throw vk::InitializationFailedError("Unable to get \"vkGetInstanceProcAddr\"");
-
-    vk::defaultDispatchLoaderDynamic.init(vkGetInstanceProcAddr);
+    if (*this)
+        vk::defaultDispatchLoaderDynamic.init(*this, vkGetInstanceProcAddr);
+    else
+        vk::defaultDispatchLoaderDynamic.init(vkGetInstanceProcAddr);
 }
 
 vector<shared_ptr<PhysicalDevice>> AbstractInstance::enumeratePhysicalDevices(bool compatibleOnly)
