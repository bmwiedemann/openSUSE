-------------------------------------------------------------------
Mon Nov 25 20:59:14 UTC 2024 - pjbgf@linux.com

- Update to version 0.0.7:
  * host-run: Convert output to string
  * start: Refactor Config loading Config loading needs to behave in different ways than other commands like xdg-open and run. Move it inside the start package instead.
  * run: Simplify GITDIR sourcing
  * inception: Ignore config and profile selection
  * build(deps): bump github.com/urfave/cli/v3
  * build(deps): bump anchore/sbom-action from 0.17.7 to 0.17.8
  * build(deps): bump github.com/stretchr/testify from 1.9.0 to 1.10.0
  * build(deps): bump google.golang.org/protobuf from 1.34.2 to 1.35.2
  * Add examples for cli commands
  * Make profile setting optional Some commands in specific scenarios can infer the profile, decreasing the amount of parameters or flags to be used. Examples:
  * wayland: Show experimental warning for all subcommands
  * Add host-run subcommand
  * Refactor inception to use gRPC
  * build: Fix gofmt violations
  * build: Enable dependabot
  * build: Lock goreleaser to v2
  * Add autocomplete subcommand
  * Add flag -runner to enable runner override Runners can be defined at the workload level. Now those runners can be overriden by the -runner flag.
  * deps: Print output in tabular format
  * build: Add GH attestation for release artefacts
  * build: Add version field to goreleaser config
  * build: Bump goreleaser-action to v6
  * clipboard: Add subcommand to-host
  * build: Use urfave/cli for CLI wiring
  * profile: Fix issue finding workloads dir For profiles started from a Git repository, the Config.RootDir was being initiated with a full path. Later in the workload run process, that full path was being joined to another full path, leading to an invalid workload dir.
  * build: Update main.go reference on goreleaser.
  * profiles: Preemptive pull workload images
  * profiles: Clean up CLI messages
  * wayland: Set additional params for xwayland-run Disable testing extensions and ensure the auth file is set.
  * Add QS_DEBUG=true to run on debug mode
  * wayland: Pass XDG_RUNTIME_DIR to profile container
  * wayland: Initial support for profiles
  * build: Fix golangci-lint warnings
  * profiles: Remove dbus code This feature was work in progress and can be removed until it is fully implemented.
  * build: Bump golangci-lint to v1.62.0
  * build: Run make test and make verify on push
  * build: Bump Go to v1.23
  * build: Bump dependencies
  * build: Move main.go for easier installation
  * Add initial support for podman
  * mime: Rename default mime handler to qubesome
  * Add version subcommand
  * Increase workload args max length to 250
  * Update install steps

-------------------------------------------------------------------
Sun Jul 28 04:58:35 UTC 2024 - Jeff Kowalczyk <jkowalczyk@suse.com>

- Packaging improvements:
  * _service obs_scm param url add suffix .git for clarity
  * _service obs_scm param filename to align with package name
  * Align package name spelling with Go application binary name
  * Remove define github project name components no longer needed
  * Use name macro where applicable to normalize common lines
    across Go app packages. Also makes renaming binary easier when
    required to handle package name conflict.
  * Use BuildRequires: golang(API) >= 1.22 instead of go >= 1.22.
    The go metapackage points to a single go version that
    increments at a date TBD after each go1.x major release. The
    expression golang(API) is available immediately upon each go1.x
    major release and is stable for expressing the minimum version
    or a temporarily pinned version.
  * Drop autosetup -p 1 arg only needed when package has patches
  * Build PIE with pattern that may become recommended procedure:
    %%ifnarch ppc64 GOFLAGS="-buildmode=pie" %%endif go build
    A go toolchain buildmode default config would be preferable
    but none exist at this time.
  * Remove ldflags -s (Omit symbol table and debug info) and -w
    (Omit DWARF symbol table). This information is used to produce
    separate debuginfo packages and binaries are stripped for
    reduced size by GNU strip during RPM build.
  * Remove ldflags -X entries for build time stamp.
    This information is embedded in binaries with go1.18+ and
    available via go version -m or runtime/debug.ReadBuildInfo().
  * Remove go build arg -trimpath. Since this is a packaged binary,
    build environment paths do not leak private information. Other
    build scenarios such as minimal container builds could have a
    use for -trimpath. Absent a clear need, use go build defaults.
  * Add go build -o %{name}, default binary name is pkg of main().
    Our packaging uses a different name for the binary.

-------------------------------------------------------------------
Sat Jul 27 06:37:07 UTC 2024 - Paulo Gomes <pjbgf@linux.com>

- Initial package version 0.0.2
  * Add validation to Profiles and Workloads
  * Refactor Workload.HostAccess
  * Set runtime to nvidia when using gpus
  * firecracker: Change runner name
  * profiles: Add error message for xhost failure
  * Refactor package locations
  * build: Bump dependencies
  * Error on unsupported OSes
  * Add initial information to README
  * Set default logLevel to INFO
