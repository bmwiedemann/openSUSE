-------------------------------------------------------------------
Mon Feb 24 08:53:41 UTC 2025 - pjbgf@linux.com

- Update to version 0.0.10:
  * profiles: Add --detach/-d flag This new flag makes the detached mode opt-in, allowing for better user experience.
  * build(deps): bump golang.org/x/term in the golang-org group
  * profiles: Add interactive flag to start subcommand For improved debugging and troubleshooting, a new -i flag was added so that the profile container is started with all its dependencies, but the user has to then start the Window Manager.
  * profiles: Skip image pull preemption for daemonised starts
  * profiles: Inform user when pulling profile image
  * flatpak: Add install subcommand To make it easier to install all flatpaks for a given profile, enumerate through all the linked Flatpaks installing one by one.
  * build: Bump protoc to v29.3
  * build: Bump golangci-list to v1.64.5
  * build: Bump to Go 1.24
  * start: Disable self-daemon call when debug is enabled
  * Add support to run host Flatpaks A new subcommand flatpak run has been added to enable execution of Flatpaks installed on the host. The flatpak must be within an allow list of the Profile in order for it to be executed, however, no other HostAccess primitives are enforced.
  * deps: List missing container images The deps subcommand now lists all workload (and profile) images, which are not present. To check the images across different runners, use the --runner flag:
  * build(deps): bump golang.org/x/sys in the golang-org group
  * build(deps): bump google.golang.org/protobuf from 1.36.4 to 1.36.5
  * profiles: Daemonise profile start When a profile is started, it starts an inception server so that the containerised Windows Manager is able to execute new container workloads. The previous implementation required the start command to hold the process running for as long as the profile was running.
  * Fix mime handling post mTLS implementation Workloads allowed to trigger mime handling require access to the inception server. Since the mTLS implementation, this feature stopped working as that connection could no longer be established due to the missing client mTLS credentials.

-------------------------------------------------------------------
Tue Feb 04 20:39:46 UTC 2025 - pjbgf@linux.com

- Update to version 0.0.9:
  CVE-2025-22869
  * build: Remove .obs integration
  * build: Bump go-git to latest from main
  * Fix inception startup stutter During profile startup an inception server is initiated, with a socket file created at ~/.qubesome/run/<profile>/qube.sock. The profile dir was not present at the first attempt of starting a profile, which meant that a profile would need to be started, closed and started again for it to work.
  * start: Expand GITDIR for local execution When running locally, users are not required to provide a -giturl. In such cases, the GITDIR should still be expanded based on the -local path provided.
  * start: Warn users when mounting dirs that don't exist
  * build(deps): bump github.com/cyphar/filepath-securejoin
  * build(deps): bump the github-actions-updates group with 4 updates
  * build(deps): bump google.golang.org/grpc from 1.69.4 to 1.70.0
  * build(deps): bump github.com/go-git/go-git/v5 from 5.13.1 to 5.13.2
  * build(deps): bump google.golang.org/protobuf from 1.36.3 to 1.36.4
  * build(deps): bump google.golang.org/protobuf from 1.36.2 to 1.36.3
  * build(deps): bump google.golang.org/grpc from 1.69.2 to 1.69.4
  * build(deps): bump google.golang.org/protobuf from 1.36.1 to 1.36.2
  * build(deps): bump github.com/cyphar/filepath-securejoin
  * build(deps): bump github.com/go-git/go-git/v5 from 5.13.0 to 5.13.1
  * build(deps): bump golang.org/x/sys in the golang-org group
  * build(deps): bump github.com/go-git/go-git/v5
  * build(deps): bump google.golang.org/protobuf from 1.36.0 to 1.36.1
  * build(deps): bump google.golang.org/grpc from 1.69.0 to 1.69.2
  * build(deps): bump google.golang.org/protobuf from 1.35.2 to 1.36.0
  * build(deps): bump github.com/cyphar/filepath-securejoin
  * Add Leap to README
  * Add support for AMD GPU sharing AMD GPU sharing is based on ROCm, for Tumbleweed the installation can be done via:
  * build(deps): bump golang.org/x/crypto in the go_modules group fixes CVE-2025-22869 boo#1239390
  * build(deps): bump google.golang.org/grpc from 1.68.1 to 1.69.0
  * build(deps): bump google.golang.org/grpc from 1.68.0 to 1.68.1
  * build(deps): bump github.com/cyphar/filepath-securejoin
  * build(deps): bump actions/attest-build-provenance

-------------------------------------------------------------------
Sat Feb  1 19:04:36 UTC 2025 - Bernhard Wiedemann <bwiedemann@suse.com>

- Fix build with rpm-4.20

-------------------------------------------------------------------
Sun Dec 08 09:47:22 UTC 2024 - pjbgf@linux.com

- Update to version 0.0.8:
  * obs: Remove rebuild process
  * build: Group dependabot updates
  * profiles: Check whether profile is running Instead of erroring, confirm whether the profile is running, if it isn't it is safe to delete to file and start a new profile.
  * build(deps): bump github.com/urfave/cli/v3
  * Add GPU support for podman
  * Move drive and env pkgs to internal/util
  * obs: Add rebuild_package step on push
  * Move ephemeral dir to ~/.qubesome/run Previously the ephemeral dir for qubesome was kept at /run/user/1000/qubesome, this has now moved to ~/.qubesome/run instead. Profile dirs are created inside the new dir and removed once 'qubesome start' finishes.
  * build: Add fuzz testing checks
  * profile: Enforce mTLS with inception server
  * obs: Move source project to :unstable A new long standing project will be the home of qubesome packages when changes are merged into main. The new project name is: home:pjbgf:devel:languages:go:unstable
  * build(deps): bump github.com/urfave/cli/v3
  * obs: Trigger services on PR merge
  * WSL: Eval symlink to .X11-unix dir
  * xauth: Decrease min magic cookie length to 40 This is causing issues on Tumbleweed distrobox in WSL, where the cookie being generated is 49 chars long.
  * Remove redundant files
  * xauth: Add Fuzz tests
  * clip: Show active profiles for autocomplete
  * build: Pin GH Actions. Set bump interval to monthly
  * obs: Change target project to align with branch convention
  * build: Add OBS integration

-------------------------------------------------------------------
Mon Nov 25 20:59:14 UTC 2024 - pjbgf@linux.com

- Update to version 0.0.7:
  * host-run: Convert output to string
  * start: Refactor Config loading Config loading needs to behave in different ways than other commands like xdg-open and run. Move it inside the start package instead.
  * run: Simplify GITDIR sourcing
  * inception: Ignore config and profile selection
  * build(deps): bump github.com/urfave/cli/v3
  * build(deps): bump anchore/sbom-action from 0.17.7 to 0.17.8
  * build(deps): bump github.com/stretchr/testify from 1.9.0 to 1.10.0
  * build(deps): bump google.golang.org/protobuf from 1.34.2 to 1.35.2
  * Add examples for cli commands
  * Make profile setting optional Some commands in specific scenarios can infer the profile, decreasing the amount of parameters or flags to be used. Examples:
  * wayland: Show experimental warning for all subcommands
  * Add host-run subcommand
  * Refactor inception to use gRPC
  * build: Fix gofmt violations
  * build: Enable dependabot
  * build: Lock goreleaser to v2
  * Add autocomplete subcommand
  * Add flag -runner to enable runner override Runners can be defined at the workload level. Now those runners can be overriden by the -runner flag.
  * deps: Print output in tabular format
  * build: Add GH attestation for release artefacts
  * build: Add version field to goreleaser config
  * build: Bump goreleaser-action to v6
  * clipboard: Add subcommand to-host
  * build: Use urfave/cli for CLI wiring
  * profile: Fix issue finding workloads dir For profiles started from a Git repository, the Config.RootDir was being initiated with a full path. Later in the workload run process, that full path was being joined to another full path, leading to an invalid workload dir.
  * build: Update main.go reference on goreleaser.
  * profiles: Preemptive pull workload images
  * profiles: Clean up CLI messages
  * wayland: Set additional params for xwayland-run Disable testing extensions and ensure the auth file is set.
  * Add QS_DEBUG=true to run on debug mode
  * wayland: Pass XDG_RUNTIME_DIR to profile container
  * wayland: Initial support for profiles
  * build: Fix golangci-lint warnings
  * profiles: Remove dbus code This feature was work in progress and can be removed until it is fully implemented.
  * build: Bump golangci-lint to v1.62.0
  * build: Run make test and make verify on push
  * build: Bump Go to v1.23
  * build: Bump dependencies
  * build: Move main.go for easier installation
  * Add initial support for podman
  * mime: Rename default mime handler to qubesome
  * Add version subcommand
  * Increase workload args max length to 250
  * Update install steps

-------------------------------------------------------------------
Sun Jul 28 04:58:35 UTC 2024 - Jeff Kowalczyk <jkowalczyk@suse.com>

- Packaging improvements:
  * _service obs_scm param url add suffix .git for clarity
  * _service obs_scm param filename to align with package name
  * Align package name spelling with Go application binary name
  * Remove define github project name components no longer needed
  * Use name macro where applicable to normalize common lines
    across Go app packages. Also makes renaming binary easier when
    required to handle package name conflict.
  * Use BuildRequires: golang(API) >= 1.22 instead of go >= 1.22.
    The go metapackage points to a single go version that
    increments at a date TBD after each go1.x major release. The
    expression golang(API) is available immediately upon each go1.x
    major release and is stable for expressing the minimum version
    or a temporarily pinned version.
  * Drop autosetup -p 1 arg only needed when package has patches
  * Build PIE with pattern that may become recommended procedure:
    %%ifnarch ppc64 GOFLAGS="-buildmode=pie" %%endif go build
    A go toolchain buildmode default config would be preferable
    but none exist at this time.
  * Remove ldflags -s (Omit symbol table and debug info) and -w
    (Omit DWARF symbol table). This information is used to produce
    separate debuginfo packages and binaries are stripped for
    reduced size by GNU strip during RPM build.
  * Remove ldflags -X entries for build time stamp.
    This information is embedded in binaries with go1.18+ and
    available via go version -m or runtime/debug.ReadBuildInfo().
  * Remove go build arg -trimpath. Since this is a packaged binary,
    build environment paths do not leak private information. Other
    build scenarios such as minimal container builds could have a
    use for -trimpath. Absent a clear need, use go build defaults.
  * Add go build -o %{name}, default binary name is pkg of main().
    Our packaging uses a different name for the binary.

-------------------------------------------------------------------
Sat Jul 27 06:37:07 UTC 2024 - Paulo Gomes <pjbgf@linux.com>

- Initial package version 0.0.2
  * Add validation to Profiles and Workloads
  * Refactor Workload.HostAccess
  * Set runtime to nvidia when using gpus
  * firecracker: Change runner name
  * profiles: Add error message for xhost failure
  * Refactor package locations
  * build: Bump dependencies
  * Error on unsupported OSes
  * Add initial information to README
  * Set default logLevel to INFO
