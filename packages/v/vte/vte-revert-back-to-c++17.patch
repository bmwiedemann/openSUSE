Index: vte-0.74.0/meson.build
===================================================================
--- vte-0.74.0.orig/meson.build
+++ vte-0.74.0/meson.build
@@ -31,9 +31,9 @@ project(
 # Compiler requirements
 
 c_req_std                 = 'gnu11'
-cxx_req_std               = 'gnu++20'
-gxx_req_version           = '10.0'
-clangxx_req_version       = '11.0'
+cxx_req_std               = 'gnu++17'
+gxx_req_version           = '7.0'
+clangxx_req_version       = '8.0'
 py_req_version            = '3.7'
 
 # Version requirements
Index: vte-0.74.0/src/widget.cc
===================================================================
--- vte-0.74.0.orig/src/widget.cc
+++ vte-0.74.0/src/widget.cc
@@ -435,7 +435,11 @@ catch (...)
 #endif /* VTE_GTK == 4 */
 
 Widget::Widget(VteTerminal* t)
-        : m_widget{&t->widget}
+        : m_widget{&t->widget},
+          m_hscroll_policy(GTK_SCROLL_NATURAL),
+          m_vscroll_policy(GTK_SCROLL_NATURAL),
+          m_scroll_unit_is_pixels(false),
+          m_changing_scroll_position(false)
 {
         // Create a default adjustment
         set_vadjustment({});
Index: vte-0.74.0/src/widget.hh
===================================================================
--- vte-0.74.0.orig/src/widget.hh
+++ vte-0.74.0/src/widget.hh
@@ -656,10 +656,10 @@ private:
         vte::glib::RefPtr<GtkAdjustment> m_vadjustment{};
         vte::glib::RefPtr<GtkAdjustment> m_hadjustment{};
 
-        unsigned m_hscroll_policy:1{GTK_SCROLL_NATURAL};
-        unsigned m_vscroll_policy:1{GTK_SCROLL_NATURAL};
-        unsigned m_scroll_unit_is_pixels:1{false};
-        unsigned m_changing_scroll_position:1{false};
+        unsigned m_hscroll_policy:1;
+        unsigned m_vscroll_policy:1;
+        unsigned m_scroll_unit_is_pixels:1;
+        unsigned m_changing_scroll_position:1;
 
         VteAlign m_xalign{VTE_ALIGN_START};
         VteAlign m_yalign{VTE_ALIGN_START};
Index: vte-0.74.0/src/pastify.cc
===================================================================
--- vte-0.74.0.orig/src/pastify.cc
+++ vte-0.74.0/src/pastify.cc
@@ -69,7 +69,7 @@ pastify_string(std::string_view str,
                 if (run == str.npos)
                         break;
 
-                switch (char8_t(str[run])) {
+                switch (str[run]) {
                 case 0x01 ... 0x09:
                 case 0x0b ... 0x0c:
                 case 0x0e ... 0x1f:
Index: vte-0.74.0/src/pastify-test.cc
===================================================================
--- vte-0.74.0.orig/src/pastify-test.cc
+++ vte-0.74.0/src/pastify-test.cc
@@ -111,7 +111,7 @@ public:
         int m_line;
 
         TestString() = default;
-        consteval TestString(char const* str,
+        constexpr TestString(char const* str,
                              char const* expected,
                              int line = __builtin_LINE()) noexcept :
                 m_str(str),
@@ -121,7 +121,7 @@ public:
         }
 };
 
-consteval auto
+constexpr auto
 identity_test(char const *str,
               int line = __builtin_LINE()) noexcept
 {
@@ -135,7 +135,7 @@ test_pastify_string(void const* ptr)
         test_pastify(str->m_str, str->m_expected);
 }
 
-static constinit TestString const test_strings[] = {
+static constexpr TestString const test_strings[] = {
         /* Controls */
         identity_test("\x09"), /* HT passes through */
         identity_test("\x0d"), /* CR passes through */
Index: vte-0.74.0/src/box-drawing.hh
===================================================================
--- vte-0.74.0.orig/src/box-drawing.hh
+++ vte-0.74.0/src/box-drawing.hh
@@ -38,7 +38,7 @@ constexpr uint32_t operator""_str2bin(ch
  * Definition of most of the glyphs in the 2500..257F range as 5x5 bitmaps
  * (bits 24..0 in the obvious order), see bug 709556 and ../doc/boxes.txt
  */
-static constinit uint32_t const _vte_draw_box_drawing_bitmaps[128] = {
+static constexpr uint32_t const _vte_draw_box_drawing_bitmaps[128] = {
 
         /* U+2500 - BOX DRAWINGS LIGHT HORIZONTAL */
         "     "
