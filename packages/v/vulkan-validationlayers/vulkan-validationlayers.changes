-------------------------------------------------------------------
Fri Aug 26 19:41:43 UTC 2022 - Jan Engelhardt <jengelh@inai.de>

- Update to release SDK-1.3.224.1
  * layers: Fix VK_REMAINING_* on Z-Cull tracking

-------------------------------------------------------------------
Mon Aug 22 22:55:25 UTC 2022 - Jan Engelhardt <jengelh@inai.de>

- Update to release SDK-1.3.224.0
  * layers: Fix compatibility with shader_module_identifier
  * layers: Fix device profile regression typo
  * layers: Fix dynamic rendering with secondary command buffers
  * layers: Fix deadlock in vkCmdBeginRenderPass()
  * layers: Explicit incomplete validation support
  * gpu: Use VMA v3.0.1

-------------------------------------------------------------------
Mon Aug 15 20:38:07 UTC 2022 - Dirk MÃ¼ller <dmueller@suse.com>

- update to release (non-SDK) 1.3.224:
  * Add issues to the apiext:VK_KHR_dynamic_rendering proposal document
    discussing render area granularity (public issue 1899).
  * Clarify external synchronization requirements for
    ename:VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT and
    ename:VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT
    elink:VkDescriptorBindingFlagBits and flink:vkUpdateDescriptorSets
    (public issue 1713).
  * Add Vulkan 1.0 valid usage statement for *Subgroup* memory scope to
    <<spirvenv-module-validation-standalone, Standalone SPIR-V Validation>>
    (public merge request 1900).
  * Move "`Hit Kind`" valid usage statement from standalone to runtime
    SPIR-V validation statements (public merge request 1903).
  * Use correct feature in
    ename:VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_2_EXT
    description (public pull request 1892).
  * GitHub CI: Regenerate and build-test Rust Vulkan bindings (Ash crate)
    (public pull request 1894).
  * Add dependency of apiext:VK_EXT_blend_operation_advanced on
    apiext:VK_KHR_get_physical_device_properties2. (public merge request
    1887).
  * Update xrefs to features so the feature name is used as the link text,
    and marked up consistently. Added a section to the style guide on markup
    of feature xrefs (public issue 1889).
    elink:VK_COLOR_SPACE_PASS_THROUGH_EXT for a linear or non-gamma transfer
    function color space (public merge request 1729).
  * Fix clamp expression for d_{lo} in the
    <<textures-level-of-detail-operation, Level-of-Detail Operation>>
    section (partial fix for public issue 1836).
  * Update <<spirvenv-module-validation-standalone, Standalone SPIR-V
    Validation>> to add explicit valid usage statements for code:Uniform
    objects being read only, and for code:Block decorations (public merge
    request 1879).
  * Add an issue to apiext:VK_KHR_fragment_shader_barycentric for
    interactions with MSAA (public merge request 1881).
  * Fix XML tagging of slink:VkShaderModuleCreateInfo and add an explicit
    valid usage statement so this structure can be validated both as an
    explicit parameter, and as part of the pname:pNext chain of
    slink:VkPipelineShaderStageCreateInfo (public issue 1883, but a broader
    fix in the validation scripts for this case will eventually be
    required).
  * Update pipeline image to move push constants outside of descriptor sets
    (public issue 1867).
  * Correct code:StencilRefLessFrontEXT to code:DepthLess in the early depth
    test portion of the <<fragops, Fragment Operations>> chapter (public
    pull request 1876).
  * Add new driver id ename:VK_DRIVER_ID_MESA_DOZEN (public pull request
    1877).
  * Relax slink:VkRenderPassCreateInfo valid usage statements 02517 and
    02518 to allow ename:VK_SUBPASS_EXTERNAL (public pull request 1878).
  * Add apiext:VK_KHR_maintenance4 relaxed interface valid usage statement
    to the <<spirvenv-module-validation-runtime, Runtime SPIR-V Validation>>
    section (public pull request 1860).
  * Fix field name in slink:VkRenderingAttachmentInfo valid usage statement
    (public pull request 1861).
  * Fix typo in slink:VkFramebufferCreateInfo valid usage statements 04533 /
    04544 (public pull request 1873).
  * Remove duplicate valid usage statement 06060 (public pull request 1874).
  * Rework <<fxvertex-input-address-calculation, Vertex Input Address
    Calculation>> section (public pull request 1869).
  * Split Github CI script into individual jobs to decrease run time (public
    pull request 1870).
  * Clarify meaning of "`private data slot`" for apiext:VK_EXT_private_data
  * Minor markup fix in the <<spirvenv-module-validation-standalone>>
    section (public merge request 1864). 

-------------------------------------------------------------------
Thu Jun 16 16:04:56 UTC 2022 - Jan Engelhardt <jengelh@inai.de>

- Update to release SDK-1.3.216.0
  * Validate primitives generated query queue support
  * Handle CreateDevice, DestroyDevice, Queue Submission,
    PipelineLayouts and Pipelines in GpuAssistedBase
  * Validate primitives generated with streams
  * Validate fragment density render area
  * Add validation for VK_EXT_primitives_generated_query
  * Add RenderPass2 validation for FragmentDensityMap
  * Complete validation of compatible render passes
  * Validate ray tracing pipeline flags and resource count
  * Add VK_KHR_ray_tracing_maintenance1

-------------------------------------------------------------------
Mon Apr 18 20:14:48 UTC 2022 - Jan Engelhardt <jengelh@inai.de>

- Update to release SDK-1.3.211.0
  * Block Texel View VU 01583
  * Add VK_QCOM_fragment_density_map_offset VUs
  * Add VK_KHR_dynamic_rendering VUs and Tests
  * Validate viewport and scissor with count
  * Validate depth RenderingAttachment resolve mode
  * Validate RenderingInfo depth and stencil samples
  * Validate BeginRendering depth attachment format
  * Validate statistics query queue support
  * Validate get query pool results parameters
  * Validate non-acquired swapchain image use
  * Support VK_KHR_graphics_pipeline

-------------------------------------------------------------------
Sat Feb 19 17:24:34 UTC 2022 - Jan Engelhardt <jengelh@inai.de>

- Update to release SDK-1.3.204.0
  * layers: Add VK_KHR_dynamic_rendering and
    VK_ARM_rasterization_order_attachment_access VUs
  * layers: Validate VK_EXT_image_view_min_lod
  * layers: Add VK_EXT_depth_clip_control
  * layers: Add SPIR-V Instruction Table
  * layers: Validate 1.3 extended dynamic state and 1.3 private data

-------------------------------------------------------------------
Sat Nov 27 13:51:38 UTC 2021 - Jan Engelhardt <jengelh@inai.de>

- Update to release SDK-1.2.198.0
  * layers: Avoid crash without vertex shader
  * layers: Add validation for primitive topology list restart
  * layers: Add VK_EXT_rgba10x6_formats
  * layers: Add generated SPIR-V grammar helper
  * syncval: Add syncop recording and replay interface
  * gpu: Preserve interfaces in dead code elimination pass
  * layers: Add Blocked Image helper
  * layers: Avoid crashing if VK_KHR_dynamic_rendering is enabled

-------------------------------------------------------------------
Sun Sep  5 11:12:16 UTC 2021 - Jan Engelhardt <jengelh@inai.de>

- Update to release SDK-1.2.189.0
  * layers: Validate a lot more flags and commands
  * gpu: Add multi_draw calls to GPU-AV / DPrintf
  * layers: Add VK_KHR_shader_atomic_int64
  * layers: Add shaderImageInt64Atomics
  * layers: Add Atomic Float Features
  * layers: AMD best practice layer

-------------------------------------------------------------------
Tue Jul  6 09:04:05 UTC 2021 - Jan Engelhardt <jengelh@inai.de>

- Update to release SDK-1.2.182.0
  * Add VK_NV_inherited_viewport_scissor support
  * Validate provoking vertex
  * Add Support for VK_QCOM_render_pass_shader_resolve
  * Add default shader validation cache
  * Add validation for VK_EXT_multi_draw

-------------------------------------------------------------------
Wed May  5 08:03:31 UTC 2021 - Jan Engelhardt <jengelh@inai.de>

- Update to release SDK-1.2.176.0
  * layers: Reduce shader validation passes
  * corechecks: Correct VUID strings for synchronization APIS
  * layers: Fix binding index bug for dynamic offsets
  * layers: Add VK_KHR_image_format_list for swapchain
  * layers: Add VK_KHR_image_format_list
  * layers: Add validation for VK_EXT_extended_dynamic_state2
  * layers: Validation for VK_EXT_vertex_input_dynamic_state

-------------------------------------------------------------------
Sun Feb 28 17:03:21 UTC 2021 - Jan Engelhardt <jengelh@inai.de>

- Update to release SDK-1.2.170.0
  * layers: Fix allowed stages for ACCELERATION_STRUCTURE_READ_BIT
  * corechecks: Validate memory barriers attached to a subpass dep
  * layers: Update ValidationStateTracker for synchronization2

-------------------------------------------------------------------
Wed Feb 10 14:05:39 UTC 2021 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.169
  * layers: Add VK_EXT_depth_range_unrestricted
  * layers: Fix crash with null pWaitDstStageMask
  * layers: Fix segfault when querying DRM format modifiers

-------------------------------------------------------------------
Wed Jan 27 21:20:27 UTC 2021 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.166
  * layers: Add VK_KHR_shader_clock support

-------------------------------------------------------------------
Mon Jan 18 15:42:53 UTC 2021 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.165
  * layers: Portability validation for CreateImage,
    CreateImageView, CreateSampler.
  * layers: Support VK_KHR_fragment_shading_rate.
  * gpu: Add buffer out of bounds access validation.

-------------------------------------------------------------------
Wed Jan 13 09:08:15 UTC 2021 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.162.1 (sdk)
  * No changelog provided

-------------------------------------------------------------------
Tue Dec 15 16:27:19 UTC 2020 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.162.0 (sdk)
  * gpu: Add buffer out of bounds access validation
  * gpu: Add buffer OOB validation of texel buffers
- Drop prov.diff (merged)

-------------------------------------------------------------------
Wed Nov 25 17:04:17 UTC 2020 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.161
  * syncval: Add multi subpass dep support
  * layers: Allow for sampler with null image view
  * layers: Add support for KHR_copy_commands2
  * layers: Add missing 1.2 overload functions
  * layers: Add VK_EXT_4444_formats support
  * layers: Check nullDescriptor when validating vertex attributes
- Add prov.diff

-------------------------------------------------------------------
Mon Sep 28 22:12:38 UTC 2020 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.154
  * Add missing WAW suppression

-------------------------------------------------------------------
Fri Sep 11 05:33:53 UTC 2020 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.153
  * No user-visible changes.

-------------------------------------------------------------------
Thu Sep 10 07:31:51 UTC 2020 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.152
  * layers: Add ProtectedSubmitInfo VUs
  * layers: Modify renderpass compat Multiview check for Vulkan 1.2

-------------------------------------------------------------------
Sat Aug 29 08:12:15 UTC 2020 - Jan Engelhardt <jengelh@inai.de>

- Add xxhash.diff.

-------------------------------------------------------------------
Thu Aug 20 16:08:36 UTC 2020 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.151
  * Add renderpass compat checks for FDM and Multiview use
  * Add vkCmdResolveImage size VUIDs

-------------------------------------------------------------------
Thu Aug 20 09:09:54 UTC 2020 - Martin LiÅ¡ka <mliska@suse.cz>

- Use memoryperjob constraint instead of %limit_build macro.

-------------------------------------------------------------------
Wed Aug 19 11:24:44 UTC 2020 - Jan Engelhardt <jengelh@inai.de>

- Produce and install support header files [boo#1175024]
- Add ver.diff

-------------------------------------------------------------------
Sun Aug  9 10:10:53 UTC 2020 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.148
  * Add RP potentialFormatFeature VUID, maxExtent VUIDs,
    External Import handleType VUIDs, YCbCr Swizzle VUIDs,
    and Protected Resource VUIDs.
  * Add HDR ASTC formats
  * Add VK_EXT_astc_decode_mode
  * Add more custom border color checks
  * Add range operator + and copy constructor
  * Add support for fake device memory address
  * Add VK_EXT_extended_dynamic_state validation
  * Validate VK_EXT_fragment_density_map2

-------------------------------------------------------------------
Sun Jun 28 17:15:56 UTC 2020 - Callum Farmer <callumjfarmer13@gmail.com>

- Update to release 1.2.145
  * layers: Label BindBuffer2 VUIDs
  * layers: Raytracing VUIDs
  * tests: Implement test for raytracing VUIDs
  * layers: Clean up some variable name formatting issues
  * layers: Add VUID 02840
  * tests: Add VUID 02840
  * corechecks: Add FB check for depth-stencil 3D image/imageviews
  * tests: Added test for VUID-VkFBCreateInfo-pAttachments-00891
  * layers: Fix VK_EXT_sample_locations bug
  * tests: Add extra VK_EXT_sample_location test

-------------------------------------------------------------------
Thu May 28 14:29:10 UTC 2020 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.141
  * layers: Add full Format Feature tracking support
  * layers: RayTracingPipelineCreateInfo validation
  * layers: Add support for VK_EXT_headless_surface
  * layers: Ray tracing validation
  * layers: Add drawIndirectCount parameterValidation
  * layers: Validate VK_EXT_fragment_density_map
  * layers: Validation for VK_EXT_custom_border_color
  * layers: Add VK_EXT_pipeline_creation_cache_control

-------------------------------------------------------------------
Mon Apr 13 10:14:34 UTC 2020 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.137
  * layers: Implement VUID-VkSparseImageMemoryBindInfo-image-02901
  * layers: Split EXT buffer_device_address features from KHR
  * layers: Add missing AccelerationStructure logic
  * layers: Add Disjoint Image Barrier VUID
  * layers: Make code C++20 compatible
  * lifetimes: Validate acceleration struture objects
  * layers: Init validation object types in child constructors
  * layers: Add disjoint bindImageMemory VUID
  * layers: record reset queries in state tracker
  * Add validation for new performance query reset VUID 02863
  * layers: Update FormatHandle to use stringstream

-------------------------------------------------------------------
Wed Apr  8 10:33:42 UTC 2020 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.135
  * layers: Validate non-semantic info extension
  * layers: Add support for vendor-specific checks, support for a
    lot of numeric VUIDs, Map Memory VUIDs, Descriptor Indexing
    VUID, VkMemoryDedicatedAllocateInfo VUIDs
  * layers: Removed redundant looping in graphics pipeline
  * layers: More VK_KHR_timeline_semaphore validations
  * Implement VK_KHR_ray_tracing validation

-------------------------------------------------------------------
Wed Feb 19 07:45:34 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Update to 1.2.133
  * corechecks: Add CmdBlitImage multiplanar format checks
  * layers: Add support for vkCmdCopyImage VUID
  * layers: Added Ycbcr support in VkImageCreateInfo

-------------------------------------------------------------------
Tue Feb 11 15:21:00 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Add conflicts and obsoletes for vulkan < 1.1 so the package replaces
  properly the vulkan package in SLE/Leap

-------------------------------------------------------------------
Mon Feb  3 12:41:40 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Update to release 1.2.132
  * Updated known-good files
  * Generated new files using `generate_source.py`
  * Updated VUIDs in validation code and tests

-------------------------------------------------------------------
Wed Jan 22 16:42:59 UTC 2020 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.131
  * layers: Add VK_KHR_buffer_device_address support
  * layers: Update validation for v1.2
  * layers: Update state tracker for v1.2
  * layers: Account for Vulkan12Features enablement

-------------------------------------------------------------------
Thu Dec 12 20:39:53 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.1.130
  * layers: Add support for VK_KHR_separate_depth_stencil_layouts
  * layers: Add ext mem check for vkGet*MemReqs
  * layers: Fix crashes with depth/stencil resolve
  * layers: Add VK_KHR_performance_query validations
  * layers: Implement VK_KHR_timeline_semaphore validations
  * layers: Fix VK_KHR_separate_depth_stencil_layouts bugs

-------------------------------------------------------------------
Thu Nov  7 07:59:11 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.1.127
  * layers: Update ValidateShaderStageInputOutputLimits to
    new spec rules
  * cmake: Restore creation of standard validation JSON
    file [boo#1155932]
  * layers: Add RT shader group validation

-------------------------------------------------------------------
Sat Oct 26 11:45:44 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.1.126
  * layers: Precompute vertex attribute alignment requirement
  * layers: Add for pipeline layout compat VUs
  * layers: Store shared pointer to command pool in command buffer
  * layers: Improve large descriptor set validation filtering
  * layers: Add VK_KHR_spirv_1_4 validation
  * layers: Move event/query Updates to PostCallRecordQueueSubmit
  * layers: Validate DescriptorSet Binding data
  * layers: Add PreCallValidateCmdTraceRaysNV

-------------------------------------------------------------------
Wed Oct 16 21:46:53 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.1.124
  * layers: Support VK_NV_dedicated_allocation_image_aliasing
  * layers: Add validation for VK_KHR_shader_subgroup_extended_types
  * layers: Add VK_NV_clip_space_w_scaling
  * layers: track vkGetPhysicalDeviceFeatures*() called state
  * gpu: Add gpu-av as a validation object

-------------------------------------------------------------------
Sun Sep 22 22:07:44 UTC 2019 - Aaron Stern <ukbeast89@protonmail.com>

- Update to new upstream release 1.1.123
  * corechecks: Add support for VK_INDEX_TYPE_UINT8_EXT
  * corechecks: Add VUs checking for indexTypeUint8
  * layers: Add VK_NV_fill_rectangle
  * layers: Re-ban ray tracing stages in render pass
  * layers: Remove QueueInfo tracking from ObjectLifetimes
  * layers: Add cgpl, ccpl, crtpl state for all intercepts
  * layers: Use persistent objects for ThreadSafety tracking
  * libVkLayer_*.so were all merged into
    libVkLayer_khronos_validation.so.

-------------------------------------------------------------------
Wed Aug 21 09:20:52 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Update to new upstream release 1.1.120
  * layers: Add VK_KHR_uniform_buffer_standard_layout.
  * layers: Split record/validation of Pipeline/Shaders.
  * layers: Add accel structure tracking and validation.
  * layers: Add validation for
    VK_EXT_shader_demote_to_helper_invocation,
    VK_EXT_texel_buffer_alignment,
    VK_KHR_pipeline_executable_properties,
    VK_EXT_line_rasterization, VkGeometryNV,
    VkCommandBufferInheritanceInfo.
  * layers: Added vu checks for imageless framebuffer.
- Drop 0001-layers-Use-correct-apiversion-for-properties-check.patch

-------------------------------------------------------------------
Fri Jul 12 02:56:05 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Add 0001-layers-Use-correct-apiversion-for-properties-check.patch
  [boo#1140976]

-------------------------------------------------------------------
Fri Jun 28 08:07:45 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Update to new upstream release 1.1.112
  * layers: Validate VK_NV_shader_subgroup_partitioned,
    VK_NV_compute_shader_derivatives,
    VK_NV_fragment_shader_barycentric,
    VK_NV_shader_image_footprint
  * corechecks: Add some BufferImageCopy VUs
  * corechecks: Add VU checks for CUBE_COMPAT images
  * chassis: Make chassis report device extensions
  * layers: Add subgroup validation
  * layers: Validate bind image and swapchain

-------------------------------------------------------------------
Tue Jun  4 10:22:58 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Update to new snapshot 1.1.107.g31
  * Fix use-after-free bug for push descriptor sets.
  * Add validation for VK_EXT_host_query_reset, QueryIndexedEXT,
    VK_KHR_shader_float_controls, VK_EXT_ycbcr_image_arrays.
  * Create khronos validation layer.

-------------------------------------------------------------------
Sun Mar 17 13:37:13 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Update to new upstream release 1.1.102
  * Update various helper functions
  * Fixed some unspecified unexpected errors
  * layers: Fix null handle derefs on Destroy

-------------------------------------------------------------------
Tue Feb 19 09:37:47 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Update to new upstream release 1.1.100
  * layers: Add VU check for sampled image descriptors

-------------------------------------------------------------------
Thu Jan 24 10:38:44 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Update to new upstream release 1.1.97.0
  * layers: raytracing and descriptor indexing fixes
  * layers: Add VO get function to chassis
  * layers: Add bailout for CreateDevice validation
  * layers: Move parameter validation to layer chassis
  * layers: Added VK_NV_viewport_swizzle,
    VK_KHR_depth_stencil_resolve
  * layers: Support VK_EXT_memory_priority,
    VK_EXT_buffer_device_address
  * layers: Add checks for vtx_attrib_divisor extension

-------------------------------------------------------------------
Tue Dec 18 13:12:10 UTC 2018 - Jan Engelhardt <jengelh@inai.de>

- Update to new snapshot 1.1.96
  * Added VK_NV_fragment_coverage_to_color
  * Add validation for VK_KHR_shader_float16_int8
  * Add validation for VK_KHR_swapchain_mutable_format

-------------------------------------------------------------------
Fri Dec 14 23:27:33 UTC 2018 - Jan Engelhardt <jengelh@inai.de>

- Update to new snapshot 1.1.95
  * layers: Add stub functions for DebugUtils functions
  * layers: Remove unique objects standalone layer
  * layers: Add layer chassis dispatch generator

-------------------------------------------------------------------
Tue Dec  4 09:55:44 UTC 2018 - Jan Engelhardt <jengelh@inai.de>

- Update to new snapshot 1.1.91 (899ae294)
  * Support vulkan-headers-1.1.95
  * layers: update AHB validation to v1.1.92 definitions

-------------------------------------------------------------------
Mon Nov 12 15:14:33 UTC 2018 - Jan Engelhardt <jengelh@inai.de>

- Split vulkan SRPM -> vulkan-validationlayers SRPM following a
  repository split upstream.
- Update to new snapshot 1.1.91
  * Add validation for VK_KHR_draw_indirect_count.
  * Add core validation for VK_KHR_get_display_properties2.
  * Validate descriptor required component type against
    VkImageView format.
  * Implement missing VU for VUID-VkCoarseSampleOrderCustomNV-
    -sampleLocationCount.
  * Add NVX_raytracing support to validation.

-------------------------------------------------------------------
Sat Aug 25 17:16:08 UTC 2018 - jengelh@inai.de

- Update to new snapshot 1.1.73
  * layers: Removed obsolete (and duplicate) VUIDs
  * layers: Make unique_objects ID map global
  * layers: Add VUIDs for VK_KHR_incremental_present
  * layers: Add canonical/unique ID to pipeline layout
  * layers: Add support for StorageBuffer storage class
  * loader: Add new core 1.1 entry points
  * loader: Update loader for Vulkan 1.1
  * vulkaninfo: Add core 1.1 extensions

-------------------------------------------------------------------
Fri Mar  9 20:19:15 UTC 2018 - crrodriguez@opensuse.org

- Skip building tests that are neither packaged nor ran.

-------------------------------------------------------------------
Fri Mar  9 19:49:50 UTC 2018 - crrodriguez@opensuse.org

- vulkan-devel has missing dependencies, this causes further
  confusion down the dependency chain, fix it by adding
  the required X and wayland components

-------------------------------------------------------------------
Wed Mar  7 23:59:37 UTC 2018 - jengelh@inai.de

- Update to new snapshot 1.1.70
  * Support for Vulkan 1.1 (Subgroup operations)

-------------------------------------------------------------------
Wed Feb  7 23:19:20 UTC 2018 - jengelh@inai.de

- Update to new snapshot 1.0.68
  * layers: add image layout validation to vkCmdBlitImage()
  * layers: Add VK_EXT_validation_cache implementation for shaders
  * layers: Add layer metadata for EXT_validation_cache extension
  * layers: Add descriptor limit checks to vkCreatePipelineLayout()
  * layers: Create instance & device extension lists
- Add no-git.diff

-------------------------------------------------------------------
Wed Jan 10 14:18:49 UTC 2018 - jengelh@inai.de

- Drop ImageMagick build-time requirement

-------------------------------------------------------------------
Thu Nov 16 11:49:28 UTC 2017 - jengelh@inai.de

- Update to new snapshot 1.0.65
  * The VK_EXT_global_priority extension extends the concept of
    device-scope queue priorities to now be a system-wide scope.
    The global/system-wide priority level takes priority over the
    per-process queue priorities.
  * New extension VK_KHR_bind_memory2: This extension allows
    vkBindBufferMemory and vkBindImageMemory to support multiple
    bindings to be performed at once while also being more
    extensible.
  * New extension VK_KHR_image_format_list: Provides a list of
    all formats that can be used with a Vulkan image when it is
    created.
  * New extension VK_KHR_maintenance2: Adds in various changes
    that were left out of Vulkan previously. These maintenance
    updates allow implementations to express clipping behavior of
    points, creating images with usage flags that may not be
    supported for the base image's format, creating uncompressed
    image views of compressed images, two new image layouts for
    depth stencil images, and other minor changes.
  * New extension VK_KHR_sampler_ycbcr_conversion: Support to
    perform specified color space conversions during texture
    sampling operations.
- Drop 0001-cmake-GH1444-add-wayland-include-dir-to-cmake.patch
  (included upstream)

-------------------------------------------------------------------
Sat Aug 12 07:32:07 UTC 2017 - jengelh@inai.de

- Update to new upstream release 1.0.57.0
  * loader: Do not enumerate extensions from disabled implicit
    layers
  * layers:Handle ALL_*_BIT pipe stage barrier validation
  * LVL: Add validation check for CreateImageView
  * loader: Remove executable stack from libvulkan.so
  * layers: Fix mismatched new[] / delete
  * layers: Add new PV ranged enum validation function
  * layers: Don't do bogus transitions in invalidateCommandBuffers


-------------------------------------------------------------------
Mon Aug  7 17:11:42 UTC 2017 - jengelh@inai.de

- Update to new upstream release 1.0.54
  * Fix a few potential overruns
  * Configurable fallback search paths
  * Validate device features: imageCubeArray, dualSrcBlend,
    multiDrawIndirect, depthClamp, depthBounds, alphaToOne,
    samplerAnisotropy.
  * Add compressed texture query utils
  * Add feature checks for textureCompressionETC2,
    textureCompressionASTC_LDR, textureCompressionBC,
    sparseBinding device, sparseResidencyBuffer,
    sparseResidencyAliased, depthBiasClamp.
  * Remove deprecated KHX extension from OT/PV
  * Support CapabilityGeometryShaderPassThroughNV and
    CapabilitySampleMaskOverrideCoverage.
  * Support the viewport_array2, shader_subgroup_ballot and
    shader_subgroup_vote ext shader caps.
  * Change size of X8_D24_UNORM_PACK32 and D32_SFLOAT_S8_UINT
- Add 0001-cmake-GH1444-add-wayland-include-dir-to-cmake.patch

-------------------------------------------------------------------
Mon Feb 20 15:06:23 UTC 2017 - jengelh@inai.de

- Update to new upstream release 1.0.41
  * layers: Move image struct into cv_types header
  * layers: Move CreateImage validation into core_val
  * layers: Move DestroyImage code into buffer module
  * layers: Move CreateRenderPass format check to PV
  * layers: Rename misleading renderpass structure var
  * layers:Move gfx pipe check to create time
  * layers: Move image validation support to buffer_val
  * layers: Add enable for NV_GLSL_SHADER extension
- Add baselibs.conf [needed by libgtk-4-0]

-------------------------------------------------------------------
Mon Jan 30 19:48:33 UTC 2017 - jengelh@inai.de

- Update to new upstream release 1.0.39.1
  * layers: Add tracking for VK_KHR_display extension in PV
  * layers: Add null checks to RetireWorkOnQueue
  * vulkaninfo: fix segfault when DISPLAY is not set
  * layers: Complete support for VK_KHR_Display ext

-------------------------------------------------------------------
Mon Oct 31 22:42:42 UTC 2016 - jengelh@inai.de

- Update to 1.0.32.g28
* vkjson: Rename VkJsonAllProperties to VkJsonDevice
* loader: Fix json output of escape chars
* loader: Fix segfault in vulkaninfo
* Add vulkan C++ header
- Remove 0001-layers-Install-to-CMAKE_INSTALL_LIBDIR.patch,
  0001-loader-Add-install-rule.patch,
  0001-vkjson-don-t-clobber-cflags-or-you-ll-lose-fPIC.patch
  (upstreamed).

-------------------------------------------------------------------
Mon Jun 13 12:27:45 UTC 2016 - jengelh@inai.de

- Update to new snapshot 1.0.3.g5493
* Added helpers: getSwapchainNode(), getSwapchainFromImage(),
  getImageNode(), getImageViewData(), getSamplerNode(),
  getBufferViewInfo(), getBufferNode().
- Resolve build failure stemming from new glslang version
- Add 0001-layers-Install-to-CMAKE_INSTALL_LIBDIR.patch,
  0001-loader-Add-install-rule.patch,
  0001-vkjson-don-t-clobber-cflags-or-you-ll-lose-fPIC.patch.
  These were in a prior tarball made from a Fedora git,
  but we since switched to the upstream git.

-------------------------------------------------------------------
Wed Feb 17 16:22:36 UTC 2016 - jengelh@inai.de

- Initial package (version 1.0.3.g19) for build.opensuse.org
