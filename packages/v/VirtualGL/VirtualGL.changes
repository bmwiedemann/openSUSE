-------------------------------------------------------------------
Wed Dec 21 16:50:58 UTC 2022 - Dirk Müller <dmueller@suse.com>

- update to 3.0.2:
  1. Support for transparent overlay visuals has been retired in this version of
  VirtualGL.  That feature will continue to be maintained in the 2.6.x branch on
  a break/fix basis only.  Most applications that once used transparent overlay
  visuals used them with color index rendering, which was removed in OpenGL 3.1
  in 2009.  Thus, almost all applications that render overlays now do so using
  other mechanisms.  Furthermore, the need for VirtualGL to hand off the
  rendering of transparent overlay visuals to the 2D X server has always limited
  the usefulness of the feature, and the discontinuation of the VirtualGL Client
  for Exceed relegated the feature to Un*x clients (with workstation-class GPUs)
  and the VGL Transport only.  Given that nVidia's implementation of transparent
  overlay visuals requires disabling the X Composite extension, which cannot be
  done in many modern Linux distributions, that further limited the feature to
  the point of uselessness.
  2. The VirtualGL Faker now assigns various permutations of common OpenGL
  rendering attributes to the available 2D X server visuals.  This maximizes the
  chances that "visual hunting" 3D applications (applications that use X11
  functions to obtain a list of 2D X server visuals, then iterate through the
  list with `glXGetConfig()` until they find a visual with a desired set of
  OpenGL rendering attributes) will find a suitable visual.
  `VGL_DEFAULTFBCONFIG` can still be used to assign a specified set of OpenGL
  rendering attributes to all 2D X server visuals, although the usefulness of
  that feature is now very limited.
  3. The VirtualGL Faker now includes an EGL back end that optionally emulates
  the GLX API using a combination of the EGL API (with the
  `EGL_EXT_platform_device` extension) and OpenGL renderbuffer objects (RBOs.)
  On supported platforms, the EGL back end allows the VirtualGL Faker to be used
  without a 3D X server.  The EGL back end can be activated by setting the
  `VGL_DISPLAY` environment variable to the path of a DRI device, such as
  **/dev/dri/card0**, or by passing that device path to `vglrun` using the `-d`
  argument.  Some obsolete OpenGL and GLX features are not supported by the EGL

-------------------------------------------------------------------
Sun Dec 11 11:08:12 UTC 2022 - Anonymous Checkouts <anoncvs@mailinator.com>

- update to 3.0.2
  * Now supports use of EGL as well as GLX 

-------------------------------------------------------------------
Sat Dec 19 11:08:04 UTC 2020 - Dirk Müller <dmueller@suse.com>

- update to 2.6.5:
  1. Fixed a race condition that sometimes caused various fatal errors in the
  interposed `glXMakeContextCurrent()` function if both GLX drawable IDs passed
  to that function were the same window handle and the corresponding X window was
  simultaneously resized in another thread.

  2. Fixed an oversight whereby the addresses of the interposed
  `glDrawBuffers()`, `glGetString()`, and `glGetStringi()` functions introduced
  in 2.6.3[2] and 2.6.4[1] were not returned from the interposed
  `glXGetProcAddress()` and `glXGetProcAddressARB()` functions.

  3. VirtualGL now works properly with 3D applications that use the
  `glNamedFramebufferDrawBuffer()` and `glNamedFramebufferDrawBuffers()`
  functions (OpenGL 4.5) or the `glFramebufferDrawBufferEXT()` and
  `glFramebufferDrawBuffersEXT()` functions (`GL_EXT_direct_state_access`) and
  render to the front buffer.

  4. Fixed a BadRequest X11 error that occurred when attempting to use the X11
  Transport with a remote X connection.

  5. Worked around an issue with certain GLX implementations that list
  10-bit-per-component FB configs ahead of 8-bit-per-component FB configs and
  incorrectly set `GLX_DRAWABLE_TYPE|=GLX_PIXMAP_BIT` for those 10-bpc FB
  configs, even though they have no X visuals attached.  This caused VirtualGL's
  interposed `glXChooseVisual()` function to choose one of the 10-bpc FB configs
  behind the scenes, which made it impossible to use the VGL Transport.

  6. Fixed an issue whereby, when using the X11 Transport, a vertically flipped
  image of a previously-rendered frame was sometimes displayed if the 3D
  application called `glFlush()` while the front buffer was the active drawing
  buffer and the render mode was `GL_FEEDBACK` or `GL_SELECT`.

  7. `vglserver_config` now works properly if invoked with a relative path
  (for example, `cd /opt/VirtualGL/bin; sudo ./vglserver_config`.)

  8. Worked around a limitation in the AMDGPU drivers that prevented recent
  versions of Google Chrome from enabling GPU acceleration when used with
  VirtualGL.

-------------------------------------------------------------------
Mon Jul  6 22:39:50 UTC 2020 - Ákos Szőts <szotsaki@gmail.com>

- update to 2.6.4
  * Changelog in packaged ChangeLog.md or at
    https://github.com/VirtualGL/virtualgl/blob/2.6.4/ChangeLog.md
- Refreshed patch VirtualGL-link-libs.patch
- Removed patch fix-Mesa-19.3.0-build.patch - resolved upstream

-------------------------------------------------------------------
Mon Jun  1 08:56:08 UTC 2020 - Max Lin <mlin@suse.com>

- Remove conditional of applying glx.patch because we have newer Mesa
  in Leap 15.2
- Use upstream patch fix-Mesa-19.3.0-build.patch to replace glx.patch
  * Add fix-Mesa-19.3.0-build.patch
  * Remove glx.patch

-------------------------------------------------------------------
Sun Feb  9 21:26:35 UTC 2020 - Adam Mizerski <adam@mizerski.pl>

- update to 2.6.3
  * Changelog in packaged ChangeLog.md or at
    https://github.com/VirtualGL/virtualgl/blob/2.6.3/ChangeLog.md
- Refreshed patch VirtualGL-link-libs.patch
- Removed patch virtualgl-nodl.patch - resolved upstream
- Added patch glx.patch

-------------------------------------------------------------------
Mon Nov  4 19:24:54 UTC 2019 - Andreas Schwab <schwab@suse.de>

- Add riscv64 to the list of 64-bit architectures

-------------------------------------------------------------------
Tue Jun 19 09:43:27 UTC 2018 - tchvatal@suse.com

- Do not provide the env files which change the preload order
  bsc#1097210

-------------------------------------------------------------------
Mon Dec  4 12:53:39 UTC 2017 - tchvatal@suse.com

- Disable ssl feature as we can tunnel via ssh and the openssl-1.1
  is not compatible at all currently

-------------------------------------------------------------------
Mon Dec  4 08:56:50 UTC 2017 - tchvatal@suse.com

- Version update 2.5.2:
  * Various compat fixes all around
- Remove merged gcc6_literal_suffixes.patch
- Refresh VirtualGL-link-libs.patch and virtualgl-nodl.patch

-------------------------------------------------------------------
Wed Aug 24 14:05:22 UTC 2016 - tchvatal@suse.com

- Fix bnc#993645 as-needed eating symbols needed by this lib
  * virtualgl-nodl.patch
- Use system xcb headers
- Rename glxinfo2 to vglxinfo, sounds bit better and more descriptive

-------------------------------------------------------------------
Thu Jun 16 15:30:58 UTC 2016 - tchvatal@suse.com

- Version update to 2.5 release
  * See upstream changelog for details
  * Mostly removal of compat for pre-VirtualGL namespace
- Refresh patch VirtualGL-link-libs.patch

-------------------------------------------------------------------
Thu Jun 16 15:21:54 UTC 2016 - normand@linux.vnet.ibm.com

- new gcc6_literal_suffixes.patch

-------------------------------------------------------------------
Tue Sep  1 09:24:19 UTC 2015 - tchvatal@suse.com

- Add proper wxwidgets license string

-------------------------------------------------------------------
Fri Aug 28 13:07:12 UTC 2015 - tchvatal@suse.com

- Update to 2.4.1:
  * Various bugfixes not mentioned on changes
  * Refresh VirtualGL-link-libs.patch

-------------------------------------------------------------------
Fri Aug 29 09:28:04 UTC 2014 - tchvatal@suse.com

- Version bump to beta1 of 2.4 (2.3.90)
- Fix building with -Wl,-z,now and no-undefined
  * VirtualGL-link-libs.patch

-------------------------------------------------------------------
Thu Aug 21 13:56:01 UTC 2014 - dvaleev@suse.com

- Extend 64bit conditions to s390x ppc64 ppc64le aarch64 

-------------------------------------------------------------------
Tue Jul  1 07:50:50 UTC 2014 - tchvatal@suse.com

- Mention baselibs.conf in spec file

-------------------------------------------------------------------
Tue Jul  1 07:40:00 UTC 2014 - tchvatal@suse.com

- Update license to WXwindows

-------------------------------------------------------------------
Mon Feb 10 09:12:18 UTC 2014 - tchvatal@suse.com

- Require 32b libturbojpeg0 on the 32bit binary.

-------------------------------------------------------------------
Sun Feb  9 11:09:30 UTC 2014 - tchvatal@suse.com

- No need to have different name for glxspheres on 64 and 32b.

-------------------------------------------------------------------
Fri Feb  7 14:18:41 UTC 2014 - tchvatal@suse.com

- Use baselibs.conf
- Cleanup the spec to use suse macros
- Sort out dependencies and use system shared libjpeg-turbo

-------------------------------------------------------------------
Wed Nov 27 00:00:00 UTC 2013 - arnaldo.coelho@gmail.com

- Update to 2.3.3

-------------------------------------------------------------------
Mon Oct 29 00:00:00 UTC 2012 - arnaldo.coelho@gmail.com

- Update to 2.3.2

-------------------------------------------------------------------
Thu Sep  6 00:00:00 UTC 2012 - arnaldo.coelho@gmail.com

- Update to 2.3.1

-------------------------------------------------------------------
Fri Dec 30 00:00:00 UTC 2011 - bumblebee-project@hotmail.com

- Update to 2.3

-------------------------------------------------------------------
Mon Jul 11 00:00:00 UTC 2011 - bumblebee-project@hotmail.com

- Initial package

