Index: VirtualBox-7.0.4/src/VBox/Installer/linux/vboxdrv.sh
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Installer/linux/vboxdrv.sh
+++ VirtualBox-7.0.4/src/VBox/Installer/linux/vboxdrv.sh
@@ -29,11 +29,12 @@
 #
 ### BEGIN INIT INFO
 # Provides:       vboxdrv
-# Required-Start: $syslog
-# Required-Stop:
-# Default-Start:  2 3 4 5
+# Required-Start: $syslog $remote_fs
+# Required-Stop:  $syslog $remote_fs
+# Default-Start:  2 3 5
 # Default-Stop:   0 1 6
-# Short-Description: VirtualBox Linux kernel module
+# Short-Description: VirtualBox Linux module
+# Description: VirtualBox Linux kernel module
 ### END INIT INFO
 
 ## @todo This file duplicates a lot of script with vboxadd.sh.  When making
@@ -520,13 +521,6 @@ See the documentation for your Linux dis
         fi
     fi
     # ensure permissions
-    if ! chown :"${GROUP}" $DEVICE 2>/dev/null; then
-        rmmod vboxpci 2>/dev/null
-        rmmod vboxnetadp 2>/dev/null
-        rmmod vboxnetflt 2>/dev/null
-        rmmod vboxdrv 2>/dev/null
-        failure "Cannot change group ${GROUP} for device $DEVICE"
-    fi
     if ! $MODPROBE vboxnetflt > /dev/null 2>&1; then
         failure "modprobe vboxnetflt failed. Please use 'dmesg' to find out why"
     fi
@@ -684,31 +678,7 @@ setup()
         log "Error building the module:"
         module_build_log "$myerr"
         failure "Look at $LOG to find out what went wrong"
-    fi
-    log "Building the net adaptor module."
-    if ! myerr=`$BUILDINTMP \
-        --use-module-symvers /tmp/vboxdrv-Module.symvers \
-        --module-source "$MODULE_SRC/vboxnetadp" \
-        --no-print-directory install 2>&1`; then
-        log "Error building the module:"
-        module_build_log "$myerr"
-        failure "Look at $LOG to find out what went wrong"
-    fi
-    if test -e "$MODULE_SRC/vboxpci"; then
-        log "Building the PCI pass-through module."
-        if ! myerr=`$BUILDINTMP \
-            --use-module-symvers /tmp/vboxdrv-Module.symvers \
-            --module-source "$MODULE_SRC/vboxpci" \
-            --no-print-directory install 2>&1`; then
-            log "Error building the module:"
-            module_build_log "$myerr"
-            failure "Look at $LOG to find out what went wrong"
-        fi
-    fi
-    rm -f /etc/vbox/module_not_compiled
-    depmod -a
-    sync
-    succ_msg "VirtualBox kernel modules built"
+    /sbin/vboxconfig
 
     # Secure boot on Ubuntu, Debian and Oracle Linux.
     if test -n "$HAVE_SEC_BOOT"; then
Index: VirtualBox-7.0.4/Makefile.kmk
===================================================================
--- VirtualBox-7.0.4.orig/Makefile.kmk
+++ VirtualBox-7.0.4/Makefile.kmk
@@ -69,8 +69,7 @@ OTHER_CLEAN += \
 	$(VBOX_VERSION_STAMP) \
 	$(wildcard $(PATH_OUT)/version-stamp-*.*.*) \
 	$(VBOX_SVN_REV_KMK).ts \
-	$(VBOX_SVN_REV_KMK) \
-	$(PATH_OUT)/DynamicConfig.kmk
+	$(VBOX_SVN_REV_KMK)
 
 
 if  !defined(VBOX_ONLY_ADDITIONS) \
Index: VirtualBox-7.0.4/Config.kmk
===================================================================
--- VirtualBox-7.0.4.orig/Config.kmk
+++ VirtualBox-7.0.4/Config.kmk
@@ -3225,34 +3225,6 @@ $(PATH_OUT)/DynamicConfig.c $(PATH_OUT)/
 	$(QUIET)$(APPEND) -tn "$@" "int foobar(void)" "{" "    return 42;" "}" ""
 
 # No $(QUIET) here as it's interesting to see what goes into the file.
-$(PATH_OUT)/DynamicConfig.kmk: \
-		$(PATH_ROOT)/Config.kmk \
-		$(LOCALCFG) \
-		$(AUTOCFG) \
-		$(VBOX_GCC_PATH_CC) \
-		$(VBOX_GCC_PATH_CXX) \
-		$(VBOX_GCC_LIBGCC) \
-		$(VBOX_GCC32_PATH_CC) \
-		$(VBOX_GCC32_PATH_CXX) \
-		$(VBOX_GCC32_LIBGCC) \
-		$(if-expr "$(KBUILD_HOST).$(KBUILD_HOST_ARCH)" == "solaris.amd64" && $(KBUILD_HOST_VERSION_MINOR) >= 11 \
-			, /platform/i86pc/kernel/$(KBUILD_HOST_ARCH)/unix,) \
-        	| $(PATH_OUT)/DynamicConfig.c $(PATH_OUT)/DynamicConfig.cpp
-	$(call MSG_GENERATE,,$@,)
-	$(QUIET)$(RM) -f '$@'
-	$(QUIET)$(MKDIR) -p $(@D)
-	$(QUIET)$(APPEND) '$@' '# Host version: $(KBUILD_HOST_VERSION_MAJOR).$(KBUILD_HOST_VERSION_MINOR).$(KBUILD_HOST_VERSION_PATCH); full: $(KBUILD_HOST_VERSION)'
-ifneq ($(KBUILD_TARGET),win)
-	$(QUIET)$(APPEND) '$@' '# $(KBUILD_HOST_UNAME_SYSNAME) - $(KBUILD_HOST_UNAME_RELEASE) - $(KBUILD_HOST_UNAME_VERSION)'
-endif
-ifeq ($(KBUILD_TARGET),darwin)
-	$(QUIET)$(APPEND) '$@' '#              VBOX_XCODE_VERSION: $(VBOX_XCODE_VERSION)'
-	$(QUIET)$(APPEND) '$@' '# VBOX_PATH_MACOSX_TOOLCHAIN_ROOT: $(VBOX_PATH_MACOSX_TOOLCHAIN_ROOT)'
-	$(QUIET)$(APPEND) '$@' '#       VBOX_PATH_MACOSX_SDK_ROOT: $(VBOX_PATH_MACOSX_SDK_ROOT)'
-	$(QUIET)$(APPEND) '$@' '#     VBOX_PATH_MACOSX_DEVEL_ROOT: $(VBOX_PATH_MACOSX_DEVEL_ROOT)'
-	$(QUIET)$(APPEND) '$@' 'VBOX_CLANG_VERSION_CC          ?= $(call VBOX_CLANG_VERSION,$(TOOL_$(VBOX_GCC_TOOL)_CC))'
-	$(QUIET)$(APPEND) '$@' 'VBOX_CLANG_VERSION_CXX         ?= $(call VBOX_CLANG_VERSION,$(TOOL_$(VBOX_GCC_TOOL)_CXX))'
-endif
 # HC compiler switch detection.
 	$(QUIET)$(APPEND) '$@' 'VBOX_GCC_VERSION_CC            ?= $(call VBOX_GCC_VERSION,$(TOOL_$(VBOX_GCC_TOOL)_CC))'
 	$(QUIET)$(APPEND) '$@' 'VBOX_GCC_VERSION_CXX           ?= $(call VBOX_GCC_VERSION,$(TOOL_$(VBOX_GCC_TOOL)_CXX))'
@@ -3451,30 +3423,9 @@ endif
 	$(QUIET)$(CAT) $@
 	$(QUIET)$(ECHO) '=========== END OF $@ ========='
 
-include $(PATH_OUT)/DynamicConfig.kmk
 endif # !VBOX_NOINC_DYNAMIC_CONFIG_KMK
 
 
-#
-# C++ language level
-# See https://en.cppreference.com/w/cpp/compiler_support and compiler docs.
-#
-## @todo consider maxing this out.
-ifndef VBOX_GCC_std
- if1of ($(KBUILD_TARGET).$(KBUILD_TARGET_ARCH), darwin.arm64) # Go straight for c++17 here.
-VBOX_GCC_std := -std=c++17
-# else if "$(VBOX_CLANG_VERSION_CXX)" vge 60000 # Most language features complete by v6. Lib stuff was less complete in v6, but hopefully acceptable for out purposes.
-#VBOX_GCC_std := -std=c++17
- else if "$(VBOX_CLANG_VERSION_CXX)" vge 50000 # darwin Xcode 5 allegedly knows what C++11 is
-VBOX_GCC_std := -std=c++11
-# else if "$(VBOX_GCC_VERSION_CXX)" vge 70000 # Language feature P0512R0 was v8, rest v7 or earlier. Most lib stuff present in 7, complete in v12.
-#VBOX_GCC_std := -std=gnu++17
- else if "$(VBOX_GCC_VERSION_CXX)" vge 40800
-VBOX_GCC_std := -std=c++11
- else if "$(VBOX_GCC_VERSION_CXX)" vge 40600
-VBOX_GCC_std := -std=c++0x
- endif
-endif
 ifndef VBOX_VCC_std
  if $(VBOX_VCC_TOOL_STEM) >= VCC141 # since 2017 15.3
   VBOX_VCC_std := -std:c++17 -Zc:__cplusplus
