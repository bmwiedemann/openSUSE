Index: VirtualBox-6.1.22/src/VBox/VMM/VMMR0/VMMR0JmpA-amd64.asm
===================================================================
--- VirtualBox-6.1.22.orig/src/VBox/VMM/VMMR0/VMMR0JmpA-amd64.asm
+++ VirtualBox-6.1.22/src/VBox/VMM/VMMR0/VMMR0JmpA-amd64.asm
@@ -32,10 +32,17 @@
 %define STACK_PADDING   0eeeeeeeeeeeeeeeeh
 
 ;; Workaround for linux 4.6 fast/slow syscall stack depth difference.
+;; Update: This got worse with linux 5.13 and CONFIG_RANDOMIZE_KSTACK_OFFSET_DEFAULT. 
+;;         The x86 arch_exit_to_user_mode_prepare code limits the offset to 255, 
+;;         while the generic limit is 1023.  See bugref:10064 for details. 
 %ifdef VMM_R0_SWITCH_STACK
  %define STACK_FUZZ_SIZE 0
 %else
- %define STACK_FUZZ_SIZE 128
+ %ifdef RT_OS_LINUX 
+  %define STACK_FUZZ_SIZE 384 
+ %else 
+  %define STACK_FUZZ_SIZE 128 
+ %endif
 %endif
 
 
