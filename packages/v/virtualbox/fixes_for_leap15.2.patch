Index: VirtualBox-6.1.24/src/VBox/HostDrivers/VBoxNetFlt/linux/VBoxNetFlt-linux.c
===================================================================
--- VirtualBox-6.1.24.orig/src/VBox/HostDrivers/VBoxNetFlt/linux/VBoxNetFlt-linux.c
+++ VirtualBox-6.1.24/src/VBox/HostDrivers/VBoxNetFlt/linux/VBoxNetFlt-linux.c
@@ -76,6 +76,10 @@
 #define VBOXNETFLT_OS_SPECFIC 1
 #include "../VBoxNetFltInternal.h"
 
+# if defined(CONFIG_SUSE_VERSION) && CONFIG_SUSE_VERSION == 15 && CONFIG_SUSE_PATCHLEVEL == 2
+#  define OPENSUSE_152
+# endif
+
 typedef struct VBOXNETFLTNOTIFIER {
     struct notifier_block Notifier;
     PVBOXNETFLTINS pThis;
Index: VirtualBox-6.1.24/src/VBox/Additions/linux/drm/vbox_drv.c
===================================================================
--- VirtualBox-6.1.24.orig/src/VBox/Additions/linux/drm/vbox_drv.c
+++ VirtualBox-6.1.24/src/VBox/Additions/linux/drm/vbox_drv.c
@@ -310,12 +310,15 @@ static void vbox_master_drop(struct drm_
 }
 
 static struct drm_driver driver = {
-#if RTLNX_VER_MAX(5,4,0) && !RTLNX_RHEL_MAJ_PREREQ(8,3) && !RTLNX_SUSE_MAJ_PREREQ(15,3)
-	.driver_features = DRIVER_MODESET | DRIVER_GEM | DRIVER_HAVE_IRQ |
+#if RTLNX_VER_MAX(5,4,0)
+	.driver_features =
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 4, 0)
+	    DRIVER_PRIME |
+#endif
 # if RTLNX_VER_MAX(5,1,0) && !RTLNX_RHEL_MAJ_PREREQ(8,1)
 	    DRIVER_IRQ_SHARED |
 # endif
-	    DRIVER_PRIME,
+	    DRIVER_MODESET | DRIVER_GEM | DRIVER_HAVE_IRQ,
 #else  /* >= 5.4.0 && RHEL >= 8.3 && SLES >= 15-SP3 */
 		.driver_features = DRIVER_MODESET | DRIVER_GEM | DRIVER_HAVE_IRQ,
 #endif /* <  5.4.0 */
Index: VirtualBox-6.1.24/src/VBox/Additions/linux/drm/vbox_main.c
===================================================================
--- VirtualBox-6.1.24.orig/src/VBox/Additions/linux/drm/vbox_main.c
+++ VirtualBox-6.1.24/src/VBox/Additions/linux/drm/vbox_main.c
@@ -640,8 +640,12 @@ static inline u64 vbox_bo_mmap_offset(st
 #elif RTLNX_VER_MAX(3,12,0) && !RTLNX_RHEL_MAJ_PREREQ(7,0)
 	return bo->bo.addr_space_offset;
 #else
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
+	return drm_vma_node_offset_addr(&bo->bo.base.vma_node);
+#else
 	return drm_vma_node_offset_addr(&bo->bo.vma_node);
 #endif /* >= 5.4.0 */
+#endif
 }
 
 int
Index: VirtualBox-6.1.24/include/iprt/cdefs.h
===================================================================
--- VirtualBox-6.1.24.orig/include/iprt/cdefs.h
+++ VirtualBox-6.1.24/include/iprt/cdefs.h
@@ -1184,14 +1184,15 @@
  * Tell the compiler that we're falling through to the next case in a switch.
  * @sa RT_FALL_THRU  */
 #if RT_GNUC_PREREQ(7, 0)
-# define RT_FALL_THROUGH()      __attribute__((__fallthrough__))
+# define FALL_THROUGH		__attribute__((__fallthrough__))
 #else
-# define RT_FALL_THROUGH()      (void)0
+# define FALL_THROUGH      (void)0
 #endif
 /** @def RT_FALL_THRU
  * Tell the compiler that we're falling thru to the next case in a switch.
  * @sa RT_FALL_THROUGH */
-#define RT_FALL_THRU()          RT_FALL_THROUGH()
+#define RT_FALL_THRU()          FALL_THROUGH
+#define RT_FALL_THROUGH()	FALL_THROUGH
 
 
 /** @def RT_IPRT_FORMAT_ATTR
