Patches to eliminate the executable stack for yasm routines.

Generated 12-Nov-2022 by Larry Finger

For some time, the linker has been generating warnings about the use of
am executable stack, with the additional information that this behavior
would be removed in a future update. For openSUSE users of OBS and osc
to build their packages, the future is now. Unfortunately, yasm generates
code marking the stack as executable, unless a section directive is
provided stating otherwise.

Unfortunately, the standard version 1.3.0 of yasm does not allow the 
necessary .note.gnu.property note section. Fortunately, kalebskeithley
<kaleb@redhat.com> published the necessary patch at
https://src.fedoraproject.org/rpms/yasm/pull-request/1#_2. This patch
to yasm has been applied to the version available from openSUSE
Tumbleweed.

Index: VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/uts/intel/dtrace/dtrace_asm.s
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/ExtPacks/VBoxDTrace/onnv/uts/intel/dtrace/dtrace_asm.s
+++ VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/uts/intel/dtrace/dtrace_asm.s
@@ -455,3 +455,13 @@ dtrace_probe_error(dtrace_state_t *state
 
 #endif	/* __i386 */
 #endif
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/RTStrEnd.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/RTStrEnd.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/RTStrEnd.asm
@@ -98,3 +98,12 @@ RT_BEGINPROC RTStrEnd
         ret
 ENDPROC RTStrEnd
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/time/timesupA.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/time/timesupA.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/time/timesupA.asm
@@ -159,3 +159,13 @@ BEGINCODE
 
 
 %endif ; !IN_GUEST
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/pid/tst.badinstr.s
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/pid/tst.badinstr.s
+++ VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/pid/tst.badinstr.s
@@ -39,3 +39,13 @@
 	ENTRY(main)
 1:	jmp 1b
 	SET_SIZE(main)
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/pid/tst.branch.s
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/pid/tst.branch.s
+++ VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/pid/tst.branch.s
@@ -71,3 +71,13 @@
 	popl	%ebp
 	ret
 	SET_SIZE(other)
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/pid/tst.embedded.s
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/pid/tst.embedded.s
+++ VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/pid/tst.embedded.s
@@ -66,3 +66,13 @@
 	popl	%ebp
 	ret
 	SET_SIZE(main)
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/pid/tst.ret.s
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/pid/tst.ret.s
+++ VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/pid/tst.ret.s
@@ -112,3 +112,13 @@
 	popl	%ebp
 	ret
 	SET_SIZE(main)
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/pid/tst.retlist.s
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/pid/tst.retlist.s
+++ VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/pid/tst.retlist.s
@@ -49,3 +49,13 @@
 	ENTRY(main)
 1:	jmp 1b
 	SET_SIZE(main)
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/ustack/tst.circstack.s
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/ustack/tst.circstack.s
+++ VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/i386/ustack/tst.circstack.s
@@ -41,3 +41,13 @@ loop:
 	leave
 	ret
 	SET_SIZE(main)
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/sparc/pid/tst.br.s
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/sparc/pid/tst.br.s
+++ VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/sparc/pid/tst.br.s
@@ -79,3 +79,13 @@
 	ret
 	restore	%g0, %g0, %o0
 	SET_SIZE(main)
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/sparc/pid/tst.branch.s
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/sparc/pid/tst.branch.s
+++ VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/sparc/pid/tst.branch.s
@@ -61,3 +61,13 @@
 	retl
 	clr	%o0
 	SET_SIZE(other)
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/sparc/pid/tst.embedded.s
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/sparc/pid/tst.embedded.s
+++ VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/sparc/pid/tst.embedded.s
@@ -57,3 +57,13 @@
 	retl
 	clr	%o0
 	SET_SIZE(main)
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/sparc/ustack/tst.circstack.s
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/sparc/ustack/tst.circstack.s
+++ VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/onnv/cmd/dtrace/test/tst/sparc/ustack/tst.circstack.s
@@ -42,3 +42,13 @@ loop:
 	ret
 	restore
 	SET_SIZE(main)
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Devices/PC/ipxe/src/arch/arm64/core/setjmp.S
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Devices/PC/ipxe/src/arch/arm64/core/setjmp.S
+++ VirtualBox-7.0.4/src/VBox/Devices/PC/ipxe/src/arch/arm64/core/setjmp.S
@@ -54,3 +54,13 @@ longjmp:
 	/* Return to setjmp() caller */
 	br	x30
 	.size	longjmp, . - longjmp
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/memcmp.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/memcmp.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/memcmp.asm
@@ -153,3 +153,12 @@ RT_NOCRT_BEGINPROC memcmp
         jmp     .not_equal_byte
 ENDPROC RT_NOCRT(memcmp)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Devices/PC/ipxe/src/arch/i386/core/setjmp.S
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Devices/PC/ipxe/src/arch/i386/core/setjmp.S
+++ VirtualBox-7.0.4/src/VBox/Devices/PC/ipxe/src/arch/i386/core/setjmp.S
@@ -62,3 +62,13 @@ longjmp:
 	/* Return to setjmp() caller */
 	ret
 	.size	longjmp, . - longjmp
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Devices/PC/ipxe/src/arch/x86_64/core/setjmp.S
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Devices/PC/ipxe/src/arch/x86_64/core/setjmp.S
+++ VirtualBox-7.0.4/src/VBox/Devices/PC/ipxe/src/arch/x86_64/core/setjmp.S
@@ -63,3 +63,13 @@ longjmp:
 	/* Return to setjmp() caller */
 	ret
 	.size	longjmp, . - longjmp
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/misc/setjmp.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/misc/setjmp.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/misc/setjmp.asm
@@ -146,3 +146,12 @@ RT_NOCRT_BEGINPROC longjmp
 %endif
 ENDPROC RT_NOCRT(longjmp)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/memchr.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/memchr.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/memchr.asm
@@ -101,3 +101,12 @@ RT_NOCRT_BEGINPROC memchr
         ret
 ENDPROC RT_NOCRT(memchr)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/watcom/memchr.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/watcom/memchr.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/watcom/memchr.asm
@@ -40,3 +40,12 @@
 %define NAME(name) name %+ _
 %include "common/string/memchr.asm"
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/memcpy.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/memcpy.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/memcpy.asm
@@ -120,3 +120,12 @@ RT_NOCRT_BEGINPROC memcpy
         ret
 ENDPROC RT_NOCRT(memcpy)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/RTStrMemFind32.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/RTStrMemFind32.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/RTStrMemFind32.asm
@@ -97,3 +97,12 @@ RT_BEGINPROC RTStrMemFind32
         ret
 ENDPROC RTStrMemFind32
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/bzero.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/bzero.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/bzero.asm
@@ -135,3 +135,12 @@ GLOBALNAME __bzero
         ret
 ENDPROC RT_NOCRT(bzero)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/memmove.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/memmove.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/memmove.asm
@@ -156,3 +156,12 @@ ALIGNCODE(16)
         jmp .epilog
 ENDPROC RT_NOCRT(memmove)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/memrchr.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/memrchr.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/memrchr.asm
@@ -105,3 +105,12 @@ RT_NOCRT_BEGINPROC memrchr
         ret
 ENDPROC RT_NOCRT(memrchr)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/memset.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/memset.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/memset.asm
@@ -139,3 +139,12 @@ RT_NOCRT_BEGINPROC memset
         ret
 ENDPROC RT_NOCRT(memset)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/strchr.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/strchr.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/strchr.asm
@@ -150,3 +150,12 @@ align 16
         ret
 ENDPROC RT_NOCRT(strchr)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/strcmp.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/strcmp.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/strcmp.asm
@@ -109,3 +109,12 @@ RT_NOCRT_BEGINPROC strcmp
         ret
 ENDPROC RT_NOCRT(strcmp)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/strcpy.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/strcpy.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/strcpy.asm
@@ -101,3 +101,12 @@ RT_NOCRT_BEGINPROC strcpy
         ret
 ENDPROC RT_NOCRT(strcpy)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/strlen.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/strlen.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/strlen.asm
@@ -73,3 +73,12 @@ RT_NOCRT_BEGINPROC strlen
         ret
 ENDPROC RT_NOCRT(strlen)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/strncmp.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/strncmp.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/strncmp.asm
@@ -139,3 +139,12 @@ RT_NOCRT_BEGINPROC strncmp
         ret
 ENDPROC RT_NOCRT(strncmp)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/strncpy.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/strncpy.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/strncpy.asm
@@ -137,3 +137,12 @@ RT_NOCRT_BEGINPROC strncpy
         ret
 ENDPROC RT_NOCRT(strncpy)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/string/wcslen.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/string/wcslen.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/string/wcslen.asm
@@ -73,3 +73,12 @@ RT_NOCRT_BEGINPROC wcslen
         ret
 ENDPROC RT_NOCRT(wcslen)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAddFlags.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMAddFlags.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAddFlags.asm
@@ -78,3 +78,12 @@ RT_BEGINPROC ASMAddFlags
         ret
 ENDPROC ASMAddFlags
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicCmpXchgExU64.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMAtomicCmpXchgExU64.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicCmpXchgExU64.asm
@@ -92,3 +92,12 @@ RT_BEGINPROC ASMAtomicCmpXchgExU64
 %endif
 ENDPROC ASMAtomicCmpXchgExU64
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicCmpXchgU16.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMAtomicCmpXchgU16.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicCmpXchgU16.asm
@@ -71,3 +71,12 @@ RT_BEGINPROC ASMAtomicCmpXchgU16
         ret
 ENDPROC ASMAtomicCmpXchgU16
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicCmpXchgU64.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMAtomicCmpXchgU64.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicCmpXchgU64.asm
@@ -86,3 +86,12 @@ RT_BEGINPROC ASMAtomicCmpXchgU64
 %endif
 ENDPROC ASMAtomicCmpXchgU64
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicCmpXchgU8.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMAtomicCmpXchgU8.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicCmpXchgU8.asm
@@ -71,3 +71,12 @@ RT_BEGINPROC ASMAtomicCmpXchgU8
         ret
 ENDPROC ASMAtomicCmpXchgU8
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicReadU64.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMAtomicReadU64.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicReadU64.asm
@@ -79,3 +79,12 @@ RT_BEGINPROC ASMAtomicReadU64
 %endif
 ENDPROC ASMAtomicReadU64
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicUoAndU32.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMAtomicUoAndU32.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicUoAndU32.asm
@@ -64,3 +64,12 @@ RT_BEGINPROC ASMAtomicUoAndU32
         ret
 ENDPROC ASMAtomicUoAndU32
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicUoAndU64.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMAtomicUoAndU64.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicUoAndU64.asm
@@ -84,3 +84,12 @@ RT_BEGINPROC ASMAtomicUoAndU64
         ret
 ENDPROC ASMAtomicUoAndU64
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicUoDecU32.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMAtomicUoDecU32.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicUoDecU32.asm
@@ -64,3 +64,12 @@ RT_BEGINPROC ASMAtomicUoDecU32
         ret
 ENDPROC ASMAtomicUoDecU32
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicUoIncU32.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMAtomicUoIncU32.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicUoIncU32.asm
@@ -64,3 +64,12 @@ RT_BEGINPROC ASMAtomicUoIncU32
         ret
 ENDPROC ASMAtomicUoIncU32
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicUoOrU32.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMAtomicUoOrU32.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicUoOrU32.asm
@@ -64,3 +64,12 @@ RT_BEGINPROC ASMAtomicUoOrU32
         ret
 ENDPROC ASMAtomicUoOrU32
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicUoOrU64.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMAtomicUoOrU64.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicUoOrU64.asm
@@ -84,3 +84,12 @@ RT_BEGINPROC ASMAtomicUoOrU64
         ret
 ENDPROC ASMAtomicUoOrU64
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicUoReadU64.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMAtomicUoReadU64.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicUoReadU64.asm
@@ -78,3 +78,12 @@ RT_BEGINPROC ASMAtomicUoReadU64
 %endif
 ENDPROC ASMAtomicUoReadU64
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicUoXorU32.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMAtomicUoXorU32.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicUoXorU32.asm
@@ -64,3 +64,12 @@ RT_BEGINPROC ASMAtomicUoXorU32
         ret
 ENDPROC ASMAtomicUoXorU32
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicXchgU16.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMAtomicXchgU16.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMAtomicXchgU16.asm
@@ -68,3 +68,12 @@ RT_BEGINPROC ASMAtomicXchgU16
         ret
 ENDPROC ASMAtomicXchgU16
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitFirstClear.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMBitFirstClear.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitFirstClear.asm
@@ -135,3 +135,12 @@ RT_BEGINPROC ASMBitFirstClear
         ret
 ENDPROC ASMBitFirstClear
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitFirstSet.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMBitFirstSet.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitFirstSet.asm
@@ -135,3 +135,12 @@ RT_BEGINPROC ASMBitFirstSet
         ret
 ENDPROC ASMBitFirstSet
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitFirstSetU16.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMBitFirstSetU16.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitFirstSetU16.asm
@@ -101,3 +101,12 @@ RT_BEGINPROC ASMBitFirstSetU16
 %endif
 ENDPROC ASMBitFirstSetU16
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitFirstSetU32.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMBitFirstSetU32.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitFirstSetU32.asm
@@ -105,3 +105,12 @@ RT_BEGINPROC ASMBitFirstSetU32
 %endif
 ENDPROC ASMBitFirstSetU32
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitFirstSetU64.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMBitFirstSetU64.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitFirstSetU64.asm
@@ -124,3 +124,12 @@ RT_BEGINPROC ASMBitFirstSetU64
 %endif
 ENDPROC ASMBitFirstSetU64
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitLastSetU16.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMBitLastSetU16.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitLastSetU16.asm
@@ -99,3 +99,12 @@ RT_BEGINPROC ASMBitLastSetU16
 %endif
 ENDPROC ASMBitLastSetU16
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitLastSetU32.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMBitLastSetU32.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitLastSetU32.asm
@@ -105,3 +105,12 @@ RT_BEGINPROC ASMBitLastSetU32
 %endif
 ENDPROC ASMBitLastSetU32
 
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitLastSetU64.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMBitLastSetU64.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitLastSetU64.asm
@@ -128,3 +128,12 @@ RT_BEGINPROC ASMBitLastSetU64
 %endif
 ENDPROC ASMBitLastSetU64
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitNextClear.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMBitNextClear.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitNextClear.asm
@@ -181,3 +181,12 @@ RT_BEGINPROC ASMBitNextClear
         jmp     .return
 ENDPROC ASMBitNextClear
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitNextSet.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMBitNextSet.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMBitNextSet.asm
@@ -181,3 +181,12 @@ RT_BEGINPROC ASMBitNextSet
         jmp     .return
 ENDPROC ASMBitNextSet
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMCpuId.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMCpuId.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMCpuId.asm
@@ -119,3 +119,12 @@ RT_BEGINPROC ASMCpuId
         ret
 ENDPROC ASMCpuId
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMCpuIdExSlow.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMCpuIdExSlow.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMCpuIdExSlow.asm
@@ -179,3 +179,12 @@ RT_BEGINPROC ASMCpuIdExSlow
         ret
 ENDPROC ASMCpuIdExSlow
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMCpuId_Idx_ECX.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMCpuId_Idx_ECX.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMCpuId_Idx_ECX.asm
@@ -124,3 +124,12 @@ RT_BEGINPROC ASMCpuId_Idx_ECX
 %endif
 ENDPROC ASMCpuId_Idx_ECX
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMFxRstor.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMFxRstor.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMFxRstor.asm
@@ -72,3 +72,12 @@ SEH64_END_PROLOGUE
         ret
 ENDPROC ASMFxRstor
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMFxSave.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMFxSave.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMFxSave.asm
@@ -72,3 +72,12 @@ SEH64_END_PROLOGUE
         ret
 ENDPROC ASMFxSave
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetFSBase.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMGetFSBase.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetFSBase.asm
@@ -52,3 +52,12 @@ RT_BEGINPROC ASMGetFSBase
         ret
 ENDPROC ASMGetFSBase
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetFlags.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMGetFlags.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetFlags.asm
@@ -51,3 +51,12 @@ RT_BEGINPROC ASMGetFlags
         ret
 ENDPROC ASMGetFlags
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetGDTR.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMGetGDTR.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetGDTR.asm
@@ -60,3 +60,12 @@ RT_BEGINPROC ASMGetGDTR
         ret
 ENDPROC ASMGetGDTR
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetGSBase.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMGetGSBase.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetGSBase.asm
@@ -52,3 +52,12 @@ RT_BEGINPROC ASMGetGSBase
         ret
 ENDPROC ASMGetGSBase
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetIDTR.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMGetIDTR.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetIDTR.asm
@@ -60,3 +60,12 @@ RT_BEGINPROC ASMGetIDTR
         ret
 ENDPROC ASMGetIDTR
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetIdtrLimit.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMGetIdtrLimit.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetIdtrLimit.asm
@@ -56,3 +56,12 @@ SEH64_END_PROLOGUE
         ret
 ENDPROC ASMGetIdtrLimit
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetLDTR.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMGetLDTR.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetLDTR.asm
@@ -51,3 +51,12 @@ RT_BEGINPROC ASMGetLDTR
         ret
 ENDPROC ASMGetLDTR
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetSegAttr.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMGetSegAttr.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetSegAttr.asm
@@ -69,3 +69,12 @@ RT_BEGINPROC ASMGetSegAttr
     ret
 ENDPROC ASMGetSegAttr
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetTR.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMGetTR.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetTR.asm
@@ -51,3 +51,12 @@ RT_BEGINPROC ASMGetTR
         ret
 ENDPROC ASMGetTR
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetXcr0.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMGetXcr0.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMGetXcr0.asm
@@ -64,3 +64,12 @@ SEH64_END_PROLOGUE
         ret
 ENDPROC ASMGetXcr0
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMMemFirstMismatchingU8.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMMemFirstMismatchingU8.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMMemFirstMismatchingU8.asm
@@ -353,3 +353,12 @@ CPU 8086
 %endif  ; ARCH_BITS == 16
 ENDPROC ASMMemFirstMismatchingU8
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMMultU32ByU32DivByU32.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMMultU32ByU32DivByU32.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMMultU32ByU32DivByU32.asm
@@ -72,3 +72,13 @@ RT_BEGINPROC ASMMultU32ByU32DivByU32
 
         ret
 ENDPROC ASMMultU32ByU32DivByU32
+
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMMultU64ByU32DivByU32.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMMultU64ByU32DivByU32.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMMultU64ByU32DivByU32.asm
@@ -139,3 +139,12 @@ RT_BEGINPROC ASMMultU64ByU32DivByU32
     ret
 ENDPROC ASMMultU64ByU32DivByU32
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMNopPause.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMNopPause.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMNopPause.asm
@@ -49,3 +49,12 @@ RT_BEGINPROC ASMNopPause
         ret
 ENDPROC ASMNopPause
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMRdMsrEx.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMRdMsrEx.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMRdMsrEx.asm
@@ -92,3 +92,12 @@ endproc_frame
 %endif
 ENDPROC ASMRdMsrEx
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSerializeInstruction-cpuid.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMSerializeInstruction-cpuid.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSerializeInstruction-cpuid.asm
@@ -57,3 +57,12 @@ RT_BEGINPROC    ASMSerializeInstructionC
         ret
 ENDPROC         ASMSerializeInstructionCpuId
 
+%ifidn __OUTPUT_FORMAT__,el\
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSerializeInstruction-iret.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMSerializeInstruction-iret.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSerializeInstruction-iret.asm
@@ -69,3 +69,12 @@ RT_BEGINPROC ASMSerializeInstructionIRet
 %endif
 ENDPROC            ASMSerializeInstructionIRet
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSerializeInstruction-rdtscp.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMSerializeInstruction-rdtscp.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSerializeInstruction-rdtscp.asm
@@ -54,3 +54,12 @@ RT_BEGINPROC    ASMSerializeInstructionR
         ret
 ENDPROC         ASMSerializeInstructionRdTscp
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSetFSBase.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMSetFSBase.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSetFSBase.asm
@@ -56,3 +56,12 @@ RT_BEGINPROC ASMSetFSBase
         ret
 ENDPROC ASMSetFSBase
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSetFlags.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMSetFlags.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSetFlags.asm
@@ -67,3 +67,12 @@ RT_BEGINPROC ASMSetFlags
         ret
 ENDPROC ASMSetFlags
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSetGDTR.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMSetGDTR.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSetGDTR.asm
@@ -60,3 +60,12 @@ RT_BEGINPROC ASMSetGDTR
         ret
 ENDPROC ASMSetGDTR
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSetGSBase.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMSetGSBase.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSetGSBase.asm
@@ -56,3 +56,12 @@ RT_BEGINPROC ASMSetGSBase
         ret
 ENDPROC ASMSetGSBase
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSetIDTR.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMSetIDTR.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSetIDTR.asm
@@ -60,3 +60,12 @@ RT_BEGINPROC ASMSetIDTR
         ret
 ENDPROC ASMSetIDTR
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSetXcr0.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMSetXcr0.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMSetXcr0.asm
@@ -78,3 +78,12 @@ SEH64_END_PROLOGUE
         ret
 ENDPROC ASMSetXcr0
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMWrMsr.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMWrMsr.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMWrMsr.asm
@@ -97,3 +97,12 @@ RT_BEGINPROC ASMWrMsr
 %endif
 ENDPROC ASMWrMsr
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMWrMsrEx.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMWrMsrEx.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMWrMsrEx.asm
@@ -87,3 +87,12 @@ endproc_frame
 %endif
 ENDPROC ASMWrMsrEx
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMXRstor.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMXRstor.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMXRstor.asm
@@ -71,3 +71,12 @@ SEH64_END_PROLOGUE
         ret
 ENDPROC ASMXRstor
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMXSave.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/asm/ASMXSave.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/asm/ASMXSave.asm
@@ -71,3 +71,12 @@ SEH64_END_PROLOGUE
         ret
 ENDPROC ASMXSave
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/VBox/RTLogWriteVmm-amd64-x86.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/VBox/RTLogWriteVmm-amd64-x86.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/VBox/RTLogWriteVmm-amd64-x86.asm
@@ -95,3 +95,12 @@ RT_BEGINPROC RTLogWriteVmm
         ret
 ENDPROC RTLogWriteVmm
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/compiler/vcc/ftol2-vcc.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/compiler/vcc/ftol2-vcc.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/compiler/vcc/ftol2-vcc.asm
@@ -78,3 +78,12 @@ BEGINPROC_RAW   __ftol2
         ret
 ENDPROC_RAW     __ftol2
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/compiler/vcc/guard-vcc.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/compiler/vcc/guard-vcc.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/compiler/vcc/guard-vcc.asm
@@ -106,3 +106,12 @@ BEGINPROC __guard_xfg_dispatch_icall_nop
 ENDPROC   __guard_xfg_dispatch_icall_nop
 %endif
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/compiler/vcc/stack-vcc.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/compiler/vcc/stack-vcc.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/compiler/vcc/stack-vcc.asm
@@ -745,3 +745,12 @@ BEGINPROC rtVccCaptureContext
         ret
 ENDPROC   rtVccCaptureContext
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/RTUInt128MulByU64.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/RTUInt128MulByU64.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/RTUInt128MulByU64.asm
@@ -89,3 +89,12 @@ SEH64_END_PROLOGUE
         ret
 ENDPROC RTUInt128MulByU64
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/RTUInt128MulByU64Ex.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/RTUInt128MulByU64Ex.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/RTUInt128MulByU64Ex.asm
@@ -93,3 +93,12 @@ SEH64_END_PROLOGUE
         ret
 ENDPROC RTUInt128MulByU64Ex
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/atan.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/atan.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/atan.asm
@@ -75,3 +75,12 @@ RT_NOCRT_BEGINPROC atan
         ret
 ENDPROC   RT_NOCRT(atan)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/atan2.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/atan2.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/atan2.asm
@@ -70,3 +70,12 @@ RT_NOCRT_BEGINPROC atan2
     ret
 ENDPROC   RT_NOCRT(atan2)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/atan2f.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/atan2f.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/atan2f.asm
@@ -70,3 +70,12 @@ RT_NOCRT_BEGINPROC atan2f
     ret
 ENDPROC   RT_NOCRT(atan2f)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/atanf.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/atanf.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/atanf.asm
@@ -75,3 +75,12 @@ RT_NOCRT_BEGINPROC atanf
         ret
 ENDPROC   RT_NOCRT(atanf)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/bignum-amd64-x86.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/bignum-amd64-x86.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/bignum-amd64-x86.asm
@@ -889,3 +889,12 @@ SEH64_END_PROLOGUE
         ret
 ENDPROC rtBigNumKnuthD4_MulSub
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/ceil.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/ceil.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/ceil.asm
@@ -77,3 +77,12 @@ RT_NOCRT_BEGINPROC ceil
     ret
 ENDPROC   RT_NOCRT(ceil)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/ceilf.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/ceilf.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/ceilf.asm
@@ -77,3 +77,12 @@ RT_NOCRT_BEGINPROC ceilf
     ret
 ENDPROC   RT_NOCRT(ceilf)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbitsi
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/ceill.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/ceill.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/ceill.asm
@@ -68,3 +68,12 @@ RT_NOCRT_BEGINPROC ceill
     ret
 ENDPROC   RT_NOCRT(ceill)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/cos.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/cos.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/cos.asm
@@ -211,3 +211,12 @@ ALIGNCODE(8)
         dq  2.0
 ENDPROC   RT_NOCRT(cos)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/cosf.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/cosf.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/cosf.asm
@@ -211,3 +211,12 @@ ALIGNCODE(8)
         dq  2.0
 ENDPROC   RT_NOCRT(cosf)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/cosl.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/cosl.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/cosl.asm
@@ -70,3 +70,12 @@ RT_NOCRT_BEGINPROC cosl
     ret
 ENDPROC   RT_NOCRT(cosl)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/exp.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/exp.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/exp.asm
@@ -149,3 +149,12 @@ RT_NOCRT_BEGINPROC exp
         jmp     .return
 ENDPROC   RT_NOCRT(exp)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/exp2.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/exp2.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/exp2.asm
@@ -115,3 +115,12 @@ RT_NOCRT_BEGINPROC exp2
         ret
 ENDPROC   RT_NOCRT(exp2)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/exp2f.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/exp2f.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/exp2f.asm
@@ -115,3 +115,12 @@ RT_NOCRT_BEGINPROC exp2f
         ret
 ENDPROC   RT_NOCRT(exp2f)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/expf.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/expf.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/expf.asm
@@ -149,3 +149,12 @@ RT_NOCRT_BEGINPROC expf
         jmp     .return
 ENDPROC   RT_NOCRT(expf)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/fabs.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/fabs.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/fabs.asm
@@ -71,3 +71,12 @@ g_r64ClearSignMask:
         dd      0ffffffffh
         dd      07fffffffh
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/fabsf.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/fabsf.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/fabsf.asm
@@ -70,3 +70,12 @@ g_r32ClearSignMask:
         dd      07fffffffh
         dd      07fffffffh
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/fabsl.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/fabsl.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/fabsl.asm
@@ -59,3 +59,12 @@ RT_NOCRT_BEGINPROC fabsl
         ret
 ENDPROC   RT_NOCRT(fabsl)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/feclearexcept.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/feclearexcept.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/feclearexcept.asm
@@ -119,3 +119,12 @@ RT_NOCRT_BEGINPROC feclearexcept
         ret
 ENDPROC   RT_NOCRT(feclearexcept)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/fedisableexcept.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/fedisableexcept.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/fedisableexcept.asm
@@ -115,3 +115,12 @@ RT_NOCRT_BEGINPROC fedisableexcept
         ret
 ENDPROC   RT_NOCRT(fedisableexcept)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/feenableexcept.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/feenableexcept.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/feenableexcept.asm
@@ -119,3 +119,12 @@ RT_NOCRT_BEGINPROC feenableexcept
         ret
 ENDPROC   RT_NOCRT(feenableexcept)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/fegetenv.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/fegetenv.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/fegetenv.asm
@@ -88,3 +88,12 @@ RT_NOCRT_BEGINPROC fegetenv
         ret
 ENDPROC   RT_NOCRT(fegetenv)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/fegetexcept.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/fegetexcept.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/fegetexcept.asm
@@ -80,3 +80,12 @@ RT_NOCRT_BEGINPROC fegetexcept
         ret
 ENDPROC   RT_NOCRT(fegetexcept)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/fegetexceptflag.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/fegetexceptflag.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/fegetexceptflag.asm
@@ -115,3 +115,12 @@ RT_NOCRT_BEGINPROC fegetexceptflag
         ret
 ENDPROC   RT_NOCRT(fegetexceptflag)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/fegetround.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/fegetround.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/fegetround.asm
@@ -77,3 +77,12 @@ RT_NOCRT_BEGINPROC fegetround
         ret
 ENDPROC   RT_NOCRT(fegetround)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/fegetx87precision.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/fegetx87precision.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/fegetx87precision.asm
@@ -68,3 +68,12 @@ RT_NOCRT_BEGINPROC fegetx87precision
         ret
 ENDPROC   RT_NOCRT(fegetx87precision)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/feholdexcept.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/feholdexcept.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/feholdexcept.asm
@@ -97,3 +97,12 @@ RT_NOCRT_BEGINPROC feholdexcept
         ret
 ENDPROC   RT_NOCRT(feholdexcept)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/feraiseexcept.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/feraiseexcept.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/feraiseexcept.asm
@@ -186,3 +186,12 @@ g_r32Tiny:
         dd      1.0e-37
 %endif
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/fesetenv.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/fesetenv.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/fesetenv.asm
@@ -192,3 +192,12 @@ RT_NOCRT_BEGINPROC fesetenv
         ret
 ENDPROC   RT_NOCRT(fesetenv)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/fesetexceptflag.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/fesetexceptflag.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/fesetexceptflag.asm
@@ -125,3 +125,12 @@ RT_NOCRT_BEGINPROC fesetexceptflag
         ret
 ENDPROC   RT_NOCRT(fesetexceptflag)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/fesetround.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/fesetround.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/fesetround.asm
@@ -105,3 +105,12 @@ RT_NOCRT_BEGINPROC fesetround
         ret
 ENDPROC   RT_NOCRT(fesetround)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/fesetx87precision.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/fesetx87precision.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/fesetx87precision.asm
@@ -86,3 +86,12 @@ RT_NOCRT_BEGINPROC fesetx87precision
         ret
 ENDPROC   RT_NOCRT(fesetx87precision)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/fetestexcept.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/fetestexcept.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/fetestexcept.asm
@@ -105,3 +105,12 @@ RT_NOCRT_BEGINPROC fetestexcept
         ret
 ENDPROC   RT_NOCRT(fetestexcept)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/feupdateenv.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/feupdateenv.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/feupdateenv.asm
@@ -126,3 +126,12 @@ RT_NOCRT_BEGINPROC feupdateenv
         ret
 ENDPROC   RT_NOCRT(feupdateenv)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/floor.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/floor.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/floor.asm
@@ -76,3 +76,12 @@ RT_NOCRT_BEGINPROC floor
     ret
 ENDPROC   RT_NOCRT(floor)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/floorf.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/floorf.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/floorf.asm
@@ -76,3 +76,12 @@ RT_NOCRT_BEGINPROC floorf
     ret
 ENDPROC   RT_NOCRT(floorf)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/floorl.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/floorl.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/floorl.asm
@@ -67,3 +67,12 @@ RT_NOCRT_BEGINPROC floorl
     ret
 ENDPROC   RT_NOCRT(floorl)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/fma-asm.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/fma-asm.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/fma-asm.asm
@@ -102,3 +102,12 @@ BEGINPROC rtNoCrtMathFma4
         ret
 ENDPROC   rtNoCrtMathFma4
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/fmaf-asm.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/fmaf-asm.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/fmaf-asm.asm
@@ -102,3 +102,12 @@ BEGINPROC rtNoCrtMathFma4f
         ret
 ENDPROC   rtNoCrtMathFma4f
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/ldexp.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/ldexp.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/ldexp.asm
@@ -87,3 +87,12 @@ RT_NOCRT_BEGINPROC ldexp
         ret
 ENDPROC   RT_NOCRT(ldexp)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/ldexpf.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/ldexpf.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/ldexpf.asm
@@ -87,3 +87,12 @@ RT_NOCRT_BEGINPROC ldexpf
         ret
 ENDPROC   RT_NOCRT(ldexpf)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/ldexpl.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/ldexpl.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/ldexpl.asm
@@ -78,3 +78,12 @@ RT_NOCRT_BEGINPROC ldexpl
         ret
 ENDPROC   RT_NOCRT(ldexpl)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/llrint.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/llrint.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/llrint.asm
@@ -70,3 +70,12 @@ RT_NOCRT_BEGINPROC llrint
         ret
 ENDPROC   RT_NOCRT(llrint)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/llrintf.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/llrintf.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/llrintf.asm
@@ -70,3 +70,12 @@ RT_NOCRT_BEGINPROC llrintf
         ret
 ENDPROC   RT_NOCRT(llrintf)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/llrintl.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/llrintl.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/llrintl.asm
@@ -68,3 +68,12 @@ RT_NOCRT_BEGINPROC llrintl
         ret
 ENDPROC   RT_NOCRT(llrintl)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/log.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/log.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/log.asm
@@ -95,3 +95,12 @@ ALIGNCODE(8)
 .limit: dq  0.29
 ENDPROC   RT_NOCRT(log)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/log2.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/log2.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/log2.asm
@@ -227,3 +227,12 @@ ALIGNCODE(8)
         dq      RTFLOAT64U_QNAN_MINUS
 ENDPROC   RT_NOCRT(log2)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/log2f.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/log2f.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/log2f.asm
@@ -225,3 +225,12 @@ ALIGNCODE(8)
         dd      RTFLOAT32U_QNAN_MINUS
 ENDPROC   RT_NOCRT(log2f)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/logf.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/logf.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/logf.asm
@@ -95,3 +95,12 @@ ALIGNCODE(8)
 .limit: dq  0.29
 ENDPROC   RT_NOCRT(logf)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/logl.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/logl.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/logl.asm
@@ -82,3 +82,12 @@ ALIGNCODE(8)
 .limit: dq  0.29
 ENDPROC   RT_NOCRT(logl)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/lrint.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/lrint.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/lrint.asm
@@ -73,3 +73,12 @@ RT_NOCRT_BEGINPROC lrint
         ret
 ENDPROC   RT_NOCRT(lrint)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/lrintf.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/lrintf.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/lrintf.asm
@@ -72,3 +72,12 @@ RT_NOCRT_BEGINPROC lrintf
         ret
 ENDPROC   RT_NOCRT(lrintf)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/lrintl.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/lrintl.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/lrintl.asm
@@ -75,3 +75,12 @@ RT_NOCRT_BEGINPROC lrintl
         ret
 ENDPROC   RT_NOCRT(lrintl)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/pow.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/pow.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/pow.asm
@@ -125,3 +125,12 @@ RT_NOCRT_BEGINPROC pow
         jmp     .return
 ENDPROC   RT_NOCRT(pow)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/powcore.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/powcore.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/powcore.asm
@@ -631,3 +631,12 @@ ALIGNCODE(8)
 
 ENDPROC   rtNoCrtMathPowCore
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/powf.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/powf.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/powf.asm
@@ -125,3 +125,12 @@ RT_NOCRT_BEGINPROC powf
         jmp     .return
 ENDPROC   RT_NOCRT(powf)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/remainder.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/remainder.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/remainder.asm
@@ -102,3 +102,12 @@ RT_NOCRT_BEGINPROC remainder
         ret
 ENDPROC   RT_NOCRT(remainder)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/remainderf.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/remainderf.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/remainderf.asm
@@ -102,3 +102,12 @@ RT_NOCRT_BEGINPROC remainderf
         ret
 ENDPROC   RT_NOCRT(remainderf)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/remainderl.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/remainderl.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/remainderl.asm
@@ -86,3 +86,12 @@ RT_NOCRT_BEGINPROC remainderl
         ret
 ENDPROC   RT_NOCRT(remainderl)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/rint.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/rint.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/rint.asm
@@ -97,3 +97,12 @@ RT_NOCRT_BEGINPROC rint
         ret
 ENDPROC   RT_NOCRT(rint)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/rintf.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/rintf.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/rintf.asm
@@ -97,3 +97,12 @@ RT_NOCRT_BEGINPROC rintf
         ret
 ENDPROC   RT_NOCRT(rintf)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/rtNoCrtHasSse.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/rtNoCrtHasSse.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/rtNoCrtHasSse.asm
@@ -76,3 +76,12 @@ BEGINPROC rtNoCrtHasSse
         ret
 ENDPROC   rtNoCrtHasSse
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/sin.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/sin.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/sin.asm
@@ -183,3 +183,12 @@ ALIGNCODE(8)
 
 ENDPROC   RT_NOCRT(sin)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/sincore.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/sincore.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/sincore.asm
@@ -350,3 +350,12 @@ ALIGNCODE(8)
         dq  (-52 + 1023) << 52          ; long double / 80-bit / extended precision input
 ENDPROC     rtNoCrtMathSinCore
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/sinf.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/sinf.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/sinf.asm
@@ -183,3 +183,12 @@ ALIGNCODE(8)
 
 ENDPROC   RT_NOCRT(sinf)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/sinl.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/sinl.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/sinl.asm
@@ -69,3 +69,12 @@ RT_NOCRT_BEGINPROC sinl
     ret
 ENDPROC   RT_NOCRT(sinl)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/sqrt.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/sqrt.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/sqrt.asm
@@ -63,3 +63,12 @@ RT_NOCRT_BEGINPROC sqrt
         ret
 ENDPROC   RT_NOCRT(sqrt)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/sqrtf.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/sqrtf.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/sqrtf.asm
@@ -63,3 +63,12 @@ RT_NOCRT_BEGINPROC sqrtf
         ret
 ENDPROC   RT_NOCRT(sqrtf)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/tan.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/tan.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/tan.asm
@@ -117,3 +117,12 @@ RT_NOCRT_BEGINPROC tan
         ret
 ENDPROC   RT_NOCRT(tan)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/tanf.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/tanf.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/tanf.asm
@@ -117,3 +117,12 @@ RT_NOCRT_BEGINPROC tanf
         ret
 ENDPROC   RT_NOCRT(tanf)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/tanl.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/tanl.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/tanl.asm
@@ -70,3 +70,12 @@ RT_NOCRT_BEGINPROC tanl
     ret
 ENDPROC   RT_NOCRT(tanl)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/trunc.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/trunc.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/trunc.asm
@@ -106,3 +106,12 @@ RT_NOCRT_BEGINPROC trunc
         ret
 ENDPROC   RT_NOCRT(trunc)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/Runtime/common/math/truncl.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/Runtime/common/math/truncl.asm
+++ VirtualBox-7.0.4/src/VBox/Runtime/common/math/truncl.asm
@@ -74,3 +74,12 @@ RT_NOCRT_BEGINPROC truncl
         ret
 ENDPROC   RT_NOCRT(truncl)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/VMM/VMMR0/CPUMR0A.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/VMM/VMMR0/CPUMR0A.asm
+++ VirtualBox-7.0.4/src/VBox/VMM/VMMR0/CPUMR0A.asm
@@ -368,3 +368,12 @@ ENDPROC   cpumR0RestoreHostFPUState
  %endif ; VBOX_WITH_64_BITS_GUESTS
 %endif  ; ARCH_BITS == 32
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/VMM/VMMR0/HMR0A.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/VMM/VMMR0/HMR0A.asm
+++ VirtualBox-7.0.4/src/VBox/VMM/VMMR0/HMR0A.asm
@@ -1513,3 +1513,12 @@ hmR0SvmVmRunTemplate _SansXcr0_WithIbpbE
 hmR0SvmVmRunTemplate _WithXcr0_WithIbpbEntry_WithIbpbExit_SseXSave,  1, HM_WSF_IBPB_ENTRY | HM_WSF_IBPB_EXIT, 2
 %endif
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/VMM/VMMR0/HMR0UtilA.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/VMM/VMMR0/HMR0UtilA.asm
+++ VirtualBox-7.0.4/src/VBox/VMM/VMMR0/HMR0UtilA.asm
@@ -467,3 +467,12 @@ ENDPROC SVMR0InvlpgA
 
 %endif ; GC_ARCH_BITS != 64
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/VMM/VMMR0/VMMR0JmpA-amd64.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/VMM/VMMR0/VMMR0JmpA-amd64.asm
+++ VirtualBox-7.0.4/src/VBox/VMM/VMMR0/VMMR0JmpA-amd64.asm
@@ -357,3 +357,12 @@ SEH64_END_PROLOGUE
     ret
 ENDPROC vmmR0CallRing3LongJmp
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/VMM/VMMR0/VMMR0JmpA-x86.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/VMM/VMMR0/VMMR0JmpA-x86.asm
+++ VirtualBox-7.0.4/src/VBox/VMM/VMMR0/VMMR0JmpA-x86.asm
@@ -393,3 +393,12 @@ BEGINPROC vmmR0CallRing3LongJmp
     ret
 ENDPROC vmmR0CallRing3LongJmp
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/VMM/VMMR0/VMMR0TripleFaultHackA.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/VMM/VMMR0/VMMR0TripleFaultHackA.asm
+++ VirtualBox-7.0.4/src/VBox/VMM/VMMR0/VMMR0TripleFaultHackA.asm
@@ -272,3 +272,12 @@ BEGINPROC vmmR0TripleFaultHackTripleFaul
     ret
 ENDPROC   vmmR0TripleFaultHackTripleFault
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/VMM/VMMAll/VMMAllA.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/VMM/VMMAll/VMMAllA.asm
+++ VirtualBox-7.0.4/src/VBox/VMM/VMMAll/VMMAllA.asm
@@ -91,3 +91,12 @@ BEGINPROC VMMTrashVolatileXMMRegs
         ret
 ENDPROC   VMMTrashVolatileXMMRegs
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/VMM/VMMRZ/CPUMRZA.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/VMM/VMMRZ/CPUMRZA.asm
+++ VirtualBox-7.0.4/src/VBox/VMM/VMMRZ/CPUMRZA.asm
@@ -381,3 +381,12 @@ SEH64_END_PROLOGUE
         ret
 ENDPROC   cpumRZSaveGuestAvxRegisters
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
Index: VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/VBoxDTraceR0A.asm
===================================================================
--- VirtualBox-7.0.4.orig/src/VBox/ExtPacks/VBoxDTrace/VBoxDTraceR0A.asm
+++ VirtualBox-7.0.4/src/VBox/ExtPacks/VBoxDTrace/VBoxDTraceR0A.asm
@@ -30,3 +30,12 @@ extern NAME(dtrace_probe)
 GLOBALNAME dtrace_probe6
     jmp     NAME(dtrace_probe)
 
+%ifidn __OUTPUT_FORMAT__,elf
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf32
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
+%ifidn __OUTPUT_FORMAT__,elf64
+section .note.GNU-stack noalloc noexec nowrite progbits
+%endif
