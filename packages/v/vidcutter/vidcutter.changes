-------------------------------------------------------------------
Fri Dec  4 10:52:00 UTC 2020 - Luigi Baldoni <aloisio@gmx.com>

- Update to version 6.0.5
  * remove mpv.c from pympv so its autogenerated as needed by
    Cython
  * switch to new libmpv render API
  * python 3.9 updates
  * added content_rating to appdata XML and update release info

-------------------------------------------------------------------
Thu Nov  1 08:35:45 UTC 2018 - Luigi Baldoni <aloisio@gmx.com>

- Update to version 6.0.0
  * MAJOR FEATURE: video filters menu option added to app menu
    accessed via right-click or the bottom-right menu button.
    the first filter available is BLACKDETECT which automatically
    creates clips in your clip index based around black scene
    changes that are detected. selecting the filter once a media
    file has been loaded will prompt for a black scene minimum
    duration in seconds, allowing you to tweak the black frame
    sensitivity to reduce or increase the amount of scenes
    detected. this is mainly useful for skipping commercials
    (e.g. comskip) or auto-detecting scene transitions.
    more filters will be added in future updates.
  * MAJOR FEATURE: automatic chapters created per clip in your
    list. enabled by default and can be toggled via Settings ->
    General and a new toggle button in the left hand side group
    of the UI buttons.
  * MAJOR FEATURE: chapter names can be edited from their
    default set values via new edit chapter option when
    right-clicking on a clip in your list. all clip will default
    to "Chapter <x>" as their default text which is what a media
    center or half-decent player will display in menu and you are
    able to skip directly to each clip point using standard
    previous/next buttons (if they are set in their default
    state, obviously)
  * External media file joins (when wanting to just join a set
    of files using the the ADD button under the Video Index) are
    fixed; the last version broke this once timeline progressbars
    were added. Progress for external joins is displayed in
    progressbars overlaying associated clips directly in the Clip
    Index which replaces timeline progressbar functionality when
    all clips are external (i.e. not loaded via Open Media thus
    not associated with a project)
  * Added new "Enable use of PBOs" setting under the Video
    category for use of pixel buffer objects when rendering
    OpenGL video. Used for noticeable performance improvements
    when working with huge/4K media files.
  * Fixed a bug caused when removing a clip with a start time
    but no end time from your index.
  * OSD (on-screen display) text defined for all user actions +
    standardised OSD case and wording/format.
  * Main clip list's scrolling mode changed to per pixel for
    smoother vertical scrolling and no snapping of clips as they
    are scrolled into view.
  * Fixed clip index heading not extending to full width of list
    when it becomes scrollable when more than 4 clips are added to
    the index.
  * LINUX: all icons, desktop, mime-type, appstream related
    files has have been renamed to domain based app-id
    (com.ozmartians.VidCutter) as per freedesktop specs.
  * UI improvements to media stream dialog; most consistent
    across differing desktop sizes and stream configurations

- Added vidcutter-susepaths.patch

-------------------------------------------------------------------
Tue Feb  6 16:10:25 UTC 2018 - aloisio@gmx.com

- Install appdata xml file only in /usr/share/metainfo

-------------------------------------------------------------------
Tue Feb  6 12:43:14 UTC 2018 - aloisio@gmx.com

- Update to version 5.5.0
  * The most requested feature is finally added; media stream
    configuration! A new media stream button has been added and
    enabled for use when clips are all derived from the same source
    media OR media files added manually all share the same codecs,
    formats, etc... A view of all detected streams including video,
    audio, text/subtitles. Chapters are not included as they are
    treated differently by FFmpeg and followng the usual rule of
    thumb in VidCutter which is they will be included in your end
    result if the original source is not corrupt or in some weird
    non-standard configuration.

  * Migrated main toolbar buttons from QToolBar + QActions to new
    custom widget VCToolBarButton handling QPushButton with
    attached. This allows working pressed states on existing
    toolbar buttons which QToolBar buttons (for reasons I cannot
    fathom) do not.

  * Tools section added to settings for setting paths to three
    main tools used by VidCutter; FFmpeg, FFprobe and MediaInfo.
    Set to Defaults button reverts changes to defaults, especially
    useful for users of bundled packages of app (AppImage, Windows
    and macOS which contain these tools prepacked). Allows you to
    use different versions of said tools.

  * End of file is now being observed in the mpv library event
    pool so that playback state resets position back to the start,
    in pause and all controls in their default states.

  * Ability to set clip index list to the left or right (default)
    of main window.

  * Support for WTV (.wtv - Windows Recorded TV Show) media files
    (playback and cutting/joining) added.

  * Required dependency of PyOpenGL python module introduced for
    users on slightly older Ubuntu, Fedora and Ubuntu based Linux
    distributions. such as Mint or ElementaryOS. This now fixes
    things if you were experiencing immediate segmentation faults
    when launching. no OpenGL context could be created. Again,
    this only applies to Linux and only to those distro mentioned
    above. No user manual tasks needed, Ubuntu and Fedora packaging
    scripts already updated so it should all be seamless to the end
    user.

  * ffprobe code fixed for media that is either problematic or
    imperfect. stdout and stderr streams separated for ffprobe
    calls, thus fixing ffprobe JSON parsing errors and allowing the
    addition of the new .WTV media file format.

  * Minor changes/improvements to a few other front panel buttons
    w/ pressed states where previously unavailable + minor cosmetic
    improvements to color schemes of hover/active state buttons

  * Linux desktop and appdata metadata files switched to reverse
    domain notation file names as per freedesktop.org specs

  * Fullscreen mode rewrite for Qt 5.10 changes + better support
    in wayland.

  * OpenGL helpers added to X11 and Wayland based Linux platforms
    to better assist with fullscreen functionality and video render
    compatibility any where an OpenGL context can be created.

  * Updated keyboard shortcuts information to include some added
    keyboard and mouse based shortcuts.

  * Defined cutting regions shown on the timeline are now hidden
    during the "generating thumbnails" process (mainly evident when
    turning thumbnails on/off or resizing the application's window)

  * Better detection and prompting if application exit is
    attempted while video processing jobs in progress, if user
    decides to continue quitting then kill all VidCutter associated
    jobs gracefully and force the usual cleanup routines

-------------------------------------------------------------------
Thu Nov 30 11:50:36 UTC 2017 - aloisio@gmx.com

- Update to version 5.0.5
  * Removal of Python 3 OpenGL module to allow app to work on
    Linux distros containing older 3.0.1 versions of the module.
    The dependency on python3-opengl has now been removed and
    was only necessary for Ubuntu users on Vivid due to a broken
    PyQt5 OpenGL implementation in the core PyOpenGL package.
    Vivid is no longer a supported distro version so it should be
    okay to omit on a permanent basis.

-------------------------------------------------------------------
Wed Nov 29 15:16:49 UTC 2017 - aloisio@gmx.com

- Added missing runtime dependency (python3-typing)

-------------------------------------------------------------------
Fri Nov 17 10:07:06 UTC 2017 - aloisio@gmx.com

- Update to version 5.0.0
  * SmartCut feature introduced for frame accurate cuts; beginning
    and end clip segments are reencoded and joined with middle
    segment for each clip defined in the Clip Index along source
    video's defined keyframes
  * SmartCut enabled via app settings as well as toggle button on
    the main interface. SmartCut can take up to 2 mins vs a few
    seconds so use it only if frame accuracy is a requirement
  * new progress bars on clips in timeline to visualise video
    processing in more accurate and modern way
  * thumbnail generation accuracy fixed so thumbnails generated
    accurately match frame with timecode placement
  * new "View keyframes" button option available under Video Info
    which displays the source video's defined keyframes which are
    utilised by the new SmartCut feature
  * improvements made to standard quick cutting to make them as
    frame accurate as can be given the source's media codec and
    container
  * improvements to stream mapping to help ensure all source
    media's streams (video, audio, text/subtitles) are included
    in the target video produced. only if problems are found
    during the cut/join process will this be abandoned and FFmpeg
    then allowed to make its usual "best choice" in choosing the
    best streams for you
  * single app instance code added along with a settings option to
    force all file manager associated tasks to the single already
    loaded instance of VidCutter
  * .vcp registered as "VidCutter Project file" for Linux and
     Windows installations
  * more debugging information available for the console or
    "--debug" command-line argument
  * new verbose logging option added to settings for even more
    verbose logging in the application log file, console window
    and debug command-line output if running with the "--debug"
    argument (Linux only)
  * new app icon; hopefully this one sticks :-)
  * countless more improvements and fixes that aren't worth
    documenting but available in the freely available commit logs
    if you're interested

-------------------------------------------------------------------
Sat Oct 21 18:32:02 UTC 2017 - aloisio@gmx.com

- Update to version 4.0.5 (no changelog supplied)
- Spec cleanup

-------------------------------------------------------------------
Sun Aug 20 09:03:38 UTC 2017 - aloisio@gmx.com

- Update to version 4.0.0 (no changelog supplied)
- Dropped vidcutter-setup.patch (merged upstream)

-------------------------------------------------------------------
Mon May 29 07:28:17 UTC 2017 - aloisio@gmx.com

- Update to version 3.5.0
  * Redesigned timeline & slider with timecode labels at fixed 
    intervals as per regular video editors.
  * Thumbnail previews on timeline; the entire timeline background
    is overlayed with thumbnail previews which looks good + helps
    you target where you want to mark a start/stop point. Thumbnail
    generation is threaded so it will not slow the app down or
    hinder your use of it. Thumbnails will regenerate on app resize.
  * Thumbnail previews and on screen display toggle buttons added
    to far left of main toolbar; what they do is self-explanatory.
  * Slider movement/sync with mpv backend improved; should be less 
    jumpy on problematic videos with bad indexes.
  * Configurable seeking time lengths; this is for the up+down and 
    shift up+down keys which were set to 2 secs and 5 secs forwards
    and backwards. You can now set the number of secs as preferred
    via new spinboxes added to the settings menu labelled Seek #1
    and Seek #2.
  * Additional on screen display text added to various functions
  * Fixed bug when clearing clip index and you could not continue 
    navigating video requiring you to reload.
  * Continue button added to the job completion dialog and set as 
    the default button selection.
  * libmpv bindings library updated with the latest changed from 
    upstream; should not be noticeable to users albeit improved
    playback or slider position sync.
  * VidCutter project files (.vcp) can now be preloaded like regular 
    videos either by passing file path on command line or drag 'n
    dropping project onto a VidCutter application/shortcut icon.
  * New icon, let me know if you find the old icon still being used 
    someplace
  * Other minor bug fixes from user issues.

-------------------------------------------------------------------
Wed May 10 11:36:12 UTC 2017 - jengelh@inai.de

- Trim filler words from description. Rewrite, because ffmpeg
  is not driving any GUI - the GUI drives ffmpeg.

-------------------------------------------------------------------
Tue May  9 13:11:35 UTC 2017 - aloisio@gmx.com

- Update to version 3.2.0-1
  * dark and light themes; chosen in the new settings sub-menu 
    found in the right-click menu or via menu toolbar icon
  * new settings sub-menu (right-click or menu toolbar icon). 
    some blurb on the settings (since i am too lazy to produce a
    help file right now :-)
    + Themes = select from the new dark and light themes (requires 
      app restart)
    + Keep individual clips = each clip made from the clip index,
      which are then merged to produce the final product, are not
      deleted at end of proceess. They can be found in the same 
      folder as the final produced video file  with file name
      sequence 001....00n appended.
    + Use native dialogs = on by default; can switch off to not 
      use your desktop manager's native file open/save dialogs and
      instead use a generic cross-platform version supplied by Qt
      framework.
    + Always on top = sets application window as the top-most 
      window, avoiding others apps from displaying over the top of
      it.
    + Toolbar labels = self-explanatory; allows you to set the
      main toolbar labels to display beside icons (default), under
      icons or hidden from view.
    + Hardware decoding = on by default to make the most of your 
      GPU hardware.
      Switch this off if you are experiencing problems with the 
      video playback.
      This option doesn't affect video cutting itself and is 
      primarily for playback.
    + Keep aspect ratio = as the title suggests, switching this 
      off caues video fill the available frame space rather than
      maintain its intended ratio for viewport width and height.
      This option doesn't affect video cutting itself and is
      primarily for playback.
    + Zoom = zoom in video from half its original size and up to 
      double. This option doesn't affect video cutting itself and
      is primarily for playback.
    + a few minor changes to keyboard shortcuts; check the keyboad
      shortcuts cheatsheet via right-click or toolbar menu options.
  * new app icon
  * improved timeline look + new slider image + remove awkward mouse 
    cursor previously in use to standard pointing hand cursor which 
    feels better IMHO.
  * new VidCutter project file format; this is the same as an EDL 
    but includes the full path to the media file associated with it.
    These can be saved and opened after program launch to set you
    back to where you last were in a cutting project.
  * eeePC and better support for HiDPI
  * better handling of multistreamed video sources including VOB 
    files; if the standard method of creation produces a 0 length
    file the app will now run it again using various other methods
    to achieve th desired result. all cases reported by users as
    bugs in this area are now working. In most cases you will
    continue to get back exactly what you put in (pardon the pun).
    some VOBs are problematic so until the UI is built to allow users
    finer control over the backend settings the app will continue to
    make its own best judgement on behalf of the user. so, in the
    worse case scenario you should now get back a valid video file
    instead of 0 length video, but it may only include a single
    audio track rather than all the tracks from the source. keep in
    mind that in these rare cases the app will choose the best
    quality audio/video track when it can only work with just the
    one stream. The next version will allow you to select which
    streams from source media to include in your final generated 
    video file.
  * improved handling of corrupted media files. the app should now 
    work with far more source files than before.
  * time counter widget created allowing manual entry of timecode. 
    Just click on the time segment to edit and video will seek to
    that exact point OR use the up/down arrow controls to the right
    of the running time code, highlight the segment you wish to
    increase or decrease (i.e. hours, mins, secs, msecs)
  * new dark theme; app is now better integrated for those who 
    prefer to work with the darker side of the force; configurable
    via new menu option
  * video zoom level option added; configurable via new menu option
  * "Check for updates..." now checks for the latest release version
    of the app via the GitHub API and alerts user accordingly.
    It only offers to take the user to the release page while also
    explaining to stick with distribution-specific packages if
    running on Linux. Automatic updates are a goal of the future 
    but would only be for Windows, macOS and AppImage linux versions.
  * The app will automatically check for updates; it will do this 
    weekly and only disturb the user if an update has been released
    AND it has been at least one week since the last time updates
    were checked for.
  * new startup graphic.
  * new look dialogs including updater and about.
  * application settings now saved across all platforms; this
    includes window state and geometry as well as new settings in
    the right-click context menu.

- Added vidcutter-rpmlintrc

-------------------------------------------------------------------
Tue Mar  7 09:57:33 UTC 2017 - aloisio@gmx.com

- Update to version 3.0.1
  * added check mediainfo before running Media Information
    widget code, advise user it is missing if not installed
    and what to do next.... gracefully exit..
- Added mediainfo as runtime dependency

-------------------------------------------------------------------
Fri Mar  3 12:46:56 UTC 2017 - aloisio@gmx.com

- Update to version 3.0.0
- Refreshed vidcutter-setup.patch

-------------------------------------------------------------------
Tue Feb 28 17:46:40 UTC 2017 - aloisio@gmx.com

- Replaced python3-QtPy requirement with python3-qt5

-------------------------------------------------------------------
Wed Feb 22 19:16:51 UTC 2017 - aloisio@gmx.com

- Added vidcutter-setup.patch (removes PyQt5 requirement
  and sets the proper doc path)

-------------------------------------------------------------------
Tue Feb 14 16:05:27 UTC 2017 - aloisio@gmx.com

- Added name to Source0 tarball
- Corrected license

-------------------------------------------------------------------
Sun Feb  5 19:34:48 UTC 2017 - mailaender@opensuse.org

- initial packaging of version 2.6.5
