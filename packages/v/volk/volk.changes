-------------------------------------------------------------------
Wed Oct 15 11:12:20 UTC 2025 - Andreas Schwab <schwab@suse.de>

- Reenable LTO on riscv64 as gcc has been fixed

-------------------------------------------------------------------
Wed Sep 24 11:45:03 CEST 2025 - aschnell@suse.com

- libboost_system was removed upstream (bsc#1249900)

-------------------------------------------------------------------
Mon Feb 10 15:36:23 UTC 2025 - Andreas Schwab <schwab@suse.de>

- Disable LTO on riscv64

-------------------------------------------------------------------
Tue Feb  4 00:25:00 UTC 2025 - Wojciech Kazubski <wk@ire.pw.edu.pl>

- Update to version 3.2.0
  New and improved kernels
  * add RISC-V Vector extension (RVV) kernels
  * New AVX512F implementation
  Improved and modernized CI
  * ci: Add first native Linux ARM runners
  * macos: Fix CI dependency error
  * appveyor: Update to VS 2022/Python 3.12
  * Update android_build.yml
  Improved builds
  * cmake: Fix 64bit host CPU detection
  * cmake: Suppress invalid escape sequence warnings with Python 3.12
  * cmake/pkgconfig: use CMAKE_INSTALL_FULL_* variables
  * cmake: Fix VOLK as a submodule build issue
  * Adds toolchain file for Raspberry Pi 5
  New and improved tests
  * gtest: Start work on new test infrastructure
  * tests: Add a log info print test
  * gtest: Make gtest an install dependency
  * gtest: Enable GTests in CI workflows
  * tests: Beautify test output
  Documentation
  * cpu_features: Update hints in README
  Code quality
  * Add const to several args
  Usability features
  * feature: add env variable kernel override

-------------------------------------------------------------------
Mon Feb 26 19:21:24 UTC 2024 - Wojciech Kazubski <wk@ire.pw.edu.pl>

- Update to version 3.1.2
  Documentation improvements, and automatically generate and publish
  * docs: Add VOLK doc build to CI
  * docs: Add upload to GitHub actions
  * cpu_features: Update hints in README
  Remove sse2neon with a native NEON implementation
  * Replace sse2neon with native NEON
  * Remove loop unrolling
  * Simplify Spiral-generated code
  Improve CI pipeline with new runner
  * flyci: Test CI service with M2 instance
  * actions: Update GH Actions checkout
  Auto-format CMake files
  * cmake: Add .cmake-format.py
  * cmake: Apply .cmake-format.py
  Release script fixes
  * scripts/release: fix multi-concatenation of submodule tars
  * shellcheck fixes
  * bash negative exit codes are not portable, let's be positive
- Update to version 3.1.1
  CI fixes
  * Allow for rounding error in float-to-int conversions
  * Allow for rounding error in volk_32fc_s32f_magnitude_16i
  * Allow for rounding error in float-to-int interleave
  * Add missing volk_16_byteswap_u_orc to puppet
  * Fix 64-bit integer testing
  * Build and test neonv7 protokernels on armv7
  kernels
  * Remove broken sse32 kernels
  * Fix flaky fm_detect test
  * Fix flaky mod_range test
  * Remove unnecessary volatiles from volk_32fc_s32f_magnitude_16i
  * Remove SSE protokernels written in assembly
  * Remove inline assembler from volk_32fc_convert_16ic_neon
  * Use bit shifts in generic and byte_shuffle reverse
  * Remove disabled SSE4.1 dot product
  * Fix conv_k7_r2 kernel and puppet
  * Remove unused argument from renormalize
  * Align types in ORC function signatures
  * Uncomment AVX2 implementation
  * Renormalize in every iteration on AVX2
  * Remove extraneous permutations
  * Compute the minimum over both register lanes
  * volk_32fc_s32f_atan2_32f: Add NaN tests for avx2 and avx2fma
    code
  fixes
  * Express version information in decimal
  * Remove __VOLK_VOLATILE
  * Remove references to simdmath library
  * cmake: Switch to GNUInstallDirs
  * fprintf: Remove fprintf statements from volk_malloc
  * release: Prepare release with updated files
  * Get the sse2neon.h file to a git submodule to avoid random
    copies.

-------------------------------------------------------------------
Fri Jan 19 10:45:21 UTC 2024 - Jan Engelhardt <jengelh@inai.de>

- Update descriptions
- Limit fdupes to /usr so it does not accidentally hardlink across
  mounts.

-------------------------------------------------------------------
Tue Dec  5 21:33:20 UTC 2023 - Martin Hauke <mardnh@gmx.de>

- Update to version 3.1.0
  Build and dependency updates
  * cmake: Link to cpu_features only in BUILD_INTERFACE.
  * cmake: Do not install cpu_features with volk.
  * Use CpuFeatures target.
  * Use cpu_features on RISC-V platforms.
  * cpu_features: Update submodule pointer.
  * Add UBSAN to ASAN builds.
  New kernel API
  * Use pointers to pass in s32fc arguments.
  * The old API is deprecated but will be available for the
    foreseeable future.
  Updated kernels
  * Remove unused ORC code.
  * Prefer NEON kernels over ORC.
  * Require all kernels to have a generic implementation.
  * Remove redundant a_generic kernels.
  * Remove ORC kernels that use sqrtf.
  * reverse: Rename dword_shuffle to generic.
  * volk_32f_s32f_convert_8i: code style
  * volk_32fc_x2_divide_32fc: add documentation about numerical
    accuracy.
  * kernel: Refactor 32f_s32f_multiply_32f kernel.
  * kernel: Refactor 32f_x2_subtract_32f kernel.
  * convert 32f->32i: fix compiler warnings about loss of int
    precision.
  * 64u_ byteswape: remove buggy Neonv8 protokernel.
  * 64u_ byteswape: remove buggy Neon protokernel.
  * Remove broken volk_16i_max_star_16i_neon protokernel.
  * Fix truncate-toward-zero distortion.
  * Fix encodepolar documentation.
  New kernels
  * add volk_32f_s32f_x2_convert_8u kernel.
  * Fix documentation for the clamp kernel.
  * added new kernel: volk_32f_s32f_x2_clamp.
  * new kernels for atan2.
  * Add 32f_s32f_multiply_32f RISC-V manually optimized assembly.
  * Add .size to volk_32f_s32f_multiply_32f_sifive_u74.
  * Add volk_32fc_x2_dot_prod_32fc_sifive_u74.

-------------------------------------------------------------------
Sat Jan 14 17:55:44 UTC 2023 - Martin Hauke <mardnh@gmx.de>

- Update to version 3.0.0
  * License switch to LGPLv3+
  * Fix build for 32 bit arm with neon
  * Add experimental support for MIPS and RISC-V

-------------------------------------------------------------------
Mon Sep  5 17:48:54 UTC 2022 - Wojciech Kazubski <wk@ire.pw.edu.pl>

- Update to version 2.5.2
  CI
  * Update all test jobs to more recent actions
  volk_8u_x4_conv_k7_r2_8u
  * Add NEON implementation neonspiral via sse2neon.h
  Fixes
  * Fix out-of-bounds reads
  * Fix broken neon kernels
  * Fix float to int conversion
  CMake
  * Suppress superfluous warning
  * Fix Python install path calculation and documentation
  cpu_features
  * Update submodule pointer
  VOLK 3.0 release preparations
  * Use SPDX license identifiers everywhere
  * Re-arrange files in top-level folder
  * Update Doxygen and all Doxygen related tasks into docs

-------------------------------------------------------------------
Sat Feb 12 12:59:47 UTC 2022 - Wojciech Kazubski <wk@ire.pw.edu.pl>

- Update to version 2.5.1
  Kernels
  * Fixup underperforming GENERIC kernel for volk_8u_x4_conv_k7_r2_8u
  * volk_32fc_x2_conjugate_dot_prod_32fc: New generic implementation
  * Add volk_32f(c)_index_min_16/32u
  * Fix volk_32fc_index_min_32u_neon
  * Fix volk_32fc_index_min_32u_neon
  Misc
  * Fix volk_malloc alignment bug
  * qa: Remove repeating tests
  * python: Switch to sysconfig module
  * deprecate: Add attribute deprecated
  * deprecate: Exclude warnings on Windows
  * docs: Update docs
  * Add the list of contributors agreeing to LGPL licensing
  * Add a script to count the lines that are pending resubmission
  * Testing: Add test for LGPL licensing
  * Update CODE_OF_CONDUCT file
  Boost
  * boost: Remove boost dependency
  * c++: Require C++17 for std::filesystem
  cpu_features
  * cpu_features: Update submodule pointer
  * cpu_features: Make cpu_features submodule optional
  Zenodo
  * zenodo: Add metadata file
  * zenodo: Re-organize .zenodo.json
- Patch volk-fix-cpu_features-compilation-error.patch removed (not
  needed

-------------------------------------------------------------------
Thu Jul 22 20:11:16 UTC 2021 - Wojciech Kazubski <wk@ire.pw.edu.pl>

- fixed build for s390x (no cpu_features)

-------------------------------------------------------------------
Sat Jun  5 12:00:12 UTC 2021 - Martin Hauke <mardnh@gmx.de>

- Update to version 2.5.0
  Kernels
  * volk_32f_stddev_and_mean_32f_x2: implemented Young and
    Cramer's algorithm
  * volk_32fc_accumulator_s32fc: Add new kernel
  * volk_16ic_x2_dot_prod_16ic_u_avx2: Fix Typo, was _axv2.
  * Remove _mm256_zeroupper() calls
  * Enforce consistent function prototypes
  * 32fc_index_max: Improve speed of AVX2 version
  * conv_k7_r2: Disable broken AVX2 code
  * improve volk_8i_s32f_convert_32f for ARM NEON
  * Calculate cos in AVX512F
  * Calculate sin using AVX512F
  Fixes:
  * Fix segmentation fault when using GCC 8
  * Fix python version detection
  * cmake: Check that 'distutils' is available
  * c11: Remove pre-C11 preprocessor instructions

-------------------------------------------------------------------
Thu Dec 17 21:06:38 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 2.4.1
  Build
  * cpu_features CMake option
  * Add cpu_features to static library build.
  * Use static liborc-0.4 library for static library build.
  * cmake: Detect if cpu_features submodule is present.
  Install
  * Check for lib64 versus lib and set LIB_SUFFIX accordingly.
- Switch back to the release github tarballs
- Verify source signature

-------------------------------------------------------------------
Mon Nov 30 11:31:35 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 2.4.0
  Documentation
  * Update README to be more verbose and to improve usefulness.
  CMake
  * Enable to not install volk_modtool.
  * Remove "find_package_handle_standard_args" warning.
  cpu_features
  * Use cpu_features v0.6.0 as a private submodule to detect
    available CPU features.
  * Fix incorrect feature detection for newer AVX versions.
  * Circumvent platform specific feature detection.
  * Enable more architecture specific kernels on more platforms.
  Kernels
  * Disable slow and broken SSE4.1 kernel in
    volk_32fc_x2_dot_prod_32fc.
  * Adjust min/max for 32f_s32f_convert_8i kernel
  * Use INT8_* instead of CHAR_*
- Upstream tarball does not have the cpu_features included so use
  a service file to generate the tarball.
- Add patch:
  * volk-fix-cpu_features-compilation-error.patch

-------------------------------------------------------------------
Sat May  9 12:09:27 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 2.3.0
  * Better reproducible builds
  * CMake improvements
    + ORC is removed from the public interface where it was never
      supposed to be.
    + CMake fixes for better usability
  * Enforce C/C++ coding style via clang-format
  * Kernel fixes
    + Add puppet for `power_spectral_density` kernel
    + Treat the `mod_range` puppet as a puppet for correct use
      with `volk_profile`
    + Fix `index_max` kernels
    + Fix `rotator`. We hope that we finally found the root cause
      of the issue.
  * Kernel optimizations
    + Updated log10 calcs to use faster log2 approach
    + Optimize `complexmultiplyconjugate`
  * New kernels
    + accurate exp kernel is finally merged after years
    + Add 32f_s32f_add_32f kernel to perform vector + scalar float
      operation

-------------------------------------------------------------------
Wed Feb 26 19:47:28 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 2.2.1
  Changes
  * Fix loop bound in AVX rotator
  * Fix out-of-bounds read in AVX2 square dist kernel
  * Fix length checks in AVX2 index max kernels
  * includes: rearrange attributes to simplify macros Whitespace
  * kernels: fix usage in header comments
- Update to version 2.2.0
  Highlights
  * Dropped Python 2 build support
    + Removed Python six module dependency
  * Use C11 aligned_alloc whenever possible
  * Add VOLK version in volk_version.h (included in volk.h)
  * Improved CMake code
  * Improved code with lots of refactoring and performance tweaks

-------------------------------------------------------------------
Sun Dec 22 14:26:11 UTC 2019 - Martin Hauke <mardnh@gmx.de>

- Update to version 2.1.0
  * The AVX FMA rotator bug is fixed
  * VOLK offers `volk::vector<>` for C++ to follow RAII
  * Move towards modern dependencies
      - CMake 3.8
      - Prefer Python3
          - We will drop Python2 support in a future release!
      - Use C++17 `std::filesystem`
          - This enables VOLK to be built without Boost if
            available!
  * more stable CI
  * lots of bugfixes
  * more optimized kernels, especially more NEON versions

-------------------------------------------------------------------
Thu Sep 12 13:28:15 UTC 2019 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- First version of standalone VOLK package, version 2.0.0
