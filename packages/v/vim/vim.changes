-------------------------------------------------------------------
Fri Jul 23 15:44:04 UTC 2021 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.3204, fixes the following problems
- enable test_recover on x86_64/i586/ppc64* - disable-unreliable-tests.patch
- disable faulty tests on arm and s390x arch - disable-unreliable-tests-arch.patch
  * Xxd always reports an old version string. (Åsmund Ervik)
  * Vim9: using try in catch block causes a hang.
  * Vim9: an error in a catch block is not reported.
  * Vim9: profile test fails.
  * Powershell core not supported by default.
  * Recover test fails on 32bit systems. (Ondřej Súkup)
  * Cannot catch errors in a channel command.
  * A channel command "echoerr" does not show anything.
  * Crash when passing null string to charclass().
  * Vim9: builtin function argument types are not checked at compile time.
  * JSONC files are not recognized.
  * Vim9: breakpoint on "for" does not work.
  * Gemtext files are not recognized.
  * With 'virtualedit' set to "block" Visual highlight is wrong after using
  "$".  (Marco Trosi)
  * Garbage collection has useless code.
  * With concealing enabled and indirectly closing a fold the cursor may be
  somewhere in a folded line.
  * Vim9: default argument expression cannot use previous argument
  * Vim9: builtin function test fails without the +channel feature.
  * tablabel_tooltip test fails with Athena. (Dominique Pellé)
  * Test_popup_atcursor_pos() fails without the conceal feature.
  * With 'virtualedit' set to "block" block selection is wrong after using
  "$".  (Marco Trosi)
  * Temp files remain after running tests.
  * Crash when using "quit" at recovery prompt and autocommands are triggered.
  * Popup window test is flaky on MS-Windows with GUI.
  * Vim9: missing catch/finally not reported at script level.
  * Vim9: no error when using type with unknown number of arguments.
  * Missing function prototype for vim_round().
  * Test for crash fix does not fail without the fix.
  * Swap test may fail on some systems when jobs take longer to exit.
  * Vim9: unspecified function type causes type error.
  * Vim9: type of partial is wrong when it has arguments.
  * Vim9: confusing line number reported for error.
  * Vim9: error for arguments while type didn't specify arguments.
  * Test for remote_foreground() fails. (Elimar Riesebieter)
  * Check for $DISPLAY never fails.
  * A pattern that matches the cursor position is bit complicated.
  * Vim9: confusing error with extra whitespace before colon.
  * With concealing enabled and indirectly closing a fold the cursor may be
  somewhere in a folded line when it is not on the first line            of
  the fold.
  * No error when for loop variable shadows script variable.
  * Amiga-like systems: build error using stat().
  * Coverity complains about free_wininfo() use.
  * Vim9: crash when debugging a function with line continuation.
  * Vim9: type not properly checked in for loop.
  * Vim9: "any" type not handled correctly in for loop.
  * Compiler warning for unused argument.
  * Crypt with sodium test fails on MS-Windows.
  * 'listchars' "exceeds" character appears in foldcolumn. Window separator
  is missing. (Leonid V.  Fedorenchik)
  * With 'nowrap' cursor position is unexected in narrow window. (Leonid V.
  Fedorenchik)
  * Vim9: confusing error when using white space after option, before one of
  "!&<".
  * Vim9: no error for white space between option and "=9".
  * Variables are set but not used.
  * Vim9: for loop error reports wrong line number.
  * Vim9: no error when adding number to list of string.
  * Vim9: uninitialzed list does not get type checked.
  * Vim9: imported uninitialized list does not get type checked.
  * Vim9: import test fails.
  * Compiler warns for size_t to colnr_T conversion. (Randall W. Morris)
  * Vim9: memory leak when add() fails.
  * Crash when using typename() on a function reference. (Naohiro Ono)
  * Vim9: builtin function arguments not checked at compile time.
  * No test for E187 and "No swap file".
  * Vim9: no error when a line only has a variable name.
  * Debugger test fails.
  * Functions for string manipulation are spread out.
  * No error when using :complete for :command without -nargs.
  * Vim9: type check for has_key() argument is too strict.
  * Vim9: A lambda may be compiled with the wrong context if it is called
  from a profiled function.
  * Vim9: no error when using an invalid value for a line number.
  * Vim9: profile test fails without profile feature.
  * Vim9: line number wrong for :execute argument.
  * Vim9: profiling does not work with a nested function.
  * Vim9: function arg type check does not handle base offset.
  * Some plugins have a problem with the error check for using :command with
  -complete but without -nargs.
  * Vim9: argument types are not checked at compile time.
  * Vim9: profiling fails if nested function is also profiled.
  * Vim9: accessing "s:" results in an error.
  * URLs with a dash in the scheme are not recognized.
  * Vim9: some type checks for builtin functions fail.
  * Some option related code not covered by tests.
  * Vim9: term_getansicolors() test fails without +termguicolors.
  * Crypt test may fail on MS-Windows.
  * Strange error message when using islocked() with a number. (Yegappan
  Lakshmanan)
  * Cursor displayed in wrong position after deleting line.
  * 'breakindent' does not work well for bulleted and numbered lists.
  * Vim9: no error when reltime() has invalid arguments.
  * Vim9: argument types are not checked at compile time.
  * Location list window may open a wrong file.
  * Vim9: in a || expression the error line number may be wrong.
  * Vim9: nested autoload call error overruled by "Unknown error".
  * Get E12 in a job callback when searching for tags. (Andy Stewart)
  * Vim9: type error for constant of type any.
  * Vim9: cannot handle nested inline function.
  * Illegal memory access in test.
  * Another illegal memory access in test.
  * MzScheme test fails. (Christian Brabandt)
  * Vim9: argument types are not checked at compile time.
  * Vim9: "legacy undo" finds "undo" variable.
  * Vim9: using illegal pointer with inline function inside a lambda.
  * Vim9: no type error for comparing number with string.
  * Vim9: can not use "for _ in expr" at script level.
  * Vim9: the file name of an :import cannot be an expression.
  * Vim9: cannot assign to an imported variable at script level.
  * Vim9: memory leak when concatenating to an imported string.
  * Vim9: builtin function test fails without channel feature.
  * Vim9: crash when using removing items from a constant list. (Yegappan
  Lakshmanan)
  * Duplicate error numbers.
  * Cannot add a digraph with a leading space.  It is not easy to list
  existing digraphs.
  * Vim9: start of inline function found in comment line.
  * Vim9: not all failures for import tested
  * Vim9: popup timer callback is not compiled.
  * Vim9: argument types are not checked at compile time.
  * Vim9: error when using "try|".
  * Error messages are spread out.
  * Vim9: not enough code is tested.
  * Build failure with small version (Tony Mechelynck).
  * screenpos() is wrong when the last line is partially visible and 'display'
  is "lastline".
  * Vim9: argument types are not checked at compile time.
  * Vim9: unclear error when passing too many arguments to lambda.
  * Vim9: bool expression with numbers only fails at runtime.
  * Error messages are spread out.
  * Cannot use 'formatlistpat' for breakindent.
  * Vim9: execution speed can be improved.
  * Vim9: hard to guess where a type error is given.
  * Crash in test.
  * Vim9: tests are only executed for legacy script.
  * Vim9: compiled string expression causes type error. (Yegappan Lakshmanan)
  * Display garbled when 'cursorline' is set and lines wrap. (Gabriel Dupras)

-------------------------------------------------------------------
Wed Jun 30 09:15:27 UTC 2021 - Ondřej Súkup <mimi.vx@gmail.com>

- disabled test_recover because is broken on 32bit archs
  --> disable-unreliable-tests.patch

-------------------------------------------------------------------
Wed Jun 30 08:39:22 UTC 2021 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.3075, fixes the following problems
  * Vim: when debugging only the first line of a command using line
  continuation is displayed.
  * Coverity warns for freeing static string.
  * Vim9: Assigning to @# requires a string. (Naohiro Ono)
  * Confusing error when expression is followed by comma.
  * Vim9: debugger shows too many lines.
  * Formatting using quickfixtextfunc is lost when updating location lists
  for different buffers.  (Yorick Peterse)
  * Location list only has the start position.
  * Unreachable code.
  * Spaces allowed between option name and "!", "?", etc.
  * Available encryption methods are not strong enough.
  * Vim9: arguments for execute() not checked at compile time.
  * execute() function test fails.
  * Not enough tests for quickfix end_col and end_lnum.
  * Vim9: cannot set breakpoint in compiled function.
  * Vim9: breakpoint in compiled function not always checked.
  * GUI mouse events not tested.
  * Vim9: crash when using operator and list unpack assignment. (Naohiro Ono)
  * Coverity reports a memory leak.
  * No error if a function name starts with an underscore. (Naohiro Ono)
  * Build problems with MSVC, other crypt issues with libsodium.
  * No error when using alpha delimiter with :global.
  * Installing packages on github CI sometimes fails.
  * Vim9: crash when calling :def function with partial and return type is
  not set.
  * Vim9: builtin function arguments not checked at compile time.
  * Configure reports libcanberra when checking for libsodium.
  * Amiga built-in version string doesn't include build date.
  * Vim9: breakpoint at a comment line does not work.
  * GUI: dropping files not tested.
  * Detecting if the process of a swap file is running fails if the process
  is owned by another user.
  * Swap file test fails.
  * Minor typos.
  * Increment and decrement don't allow for next command.
  * Strange error for white space after ++ command.
  * JSON patch file not recognized.
  * Cannot recognize elixir files.
  * Vim9: for loop with one list variable does not work.
  * Vim9: "legacy call" does not work.
  * Vim9: cannot assign to @@ in :def function
  * Vim9: unpack assignment using "_" after semicolon fails.
  * Strange error for assigning to "x.key" on non-dictionary.
  * Vim9: using default value in lambda gives confusing error.
  * Vim9: debugger test fails with normal features and +terminal. (Dominique
  Pellé)
  * Vim9: cannot use ternary operator in parenthesis.
  * Vim9: memory leak when using lambda.
  * Vim9: cannot use ternary operator in parenthesis.
  * Testing the shell option is incomplete and spread out.
  * Internal error when adding several text properties.
  * Crash when switching 'cryptmethod' to xchaha20 with an existing undo
  file. (Martin Tournoij)
  * Vim9: in script cannot set item in uninitialized list.
  * Vim9: error when sourcing script twice and reusing a function name.
  * Vim9: debugging lambda does not work.
  * Building fails with Athena. (Elimar Riesebieter)
  * Unicode tables are slightly outdated.
  * Error messages are spread out.
  * Not enough testing for shell use.
  * Shell options are not set properly for PowerShell.
  * The "zy" command does not work well when 'virtualedit' is set to
  "block". (Johann Höchtl)
  * When cursor is move for block append wrong text is inserted.
  * popup_atcursor() uses wrong position with concealing.

-------------------------------------------------------------------
Thu Jun 17 07:33:09 UTC 2021 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.3013, fixes the following problems
  * Builtin function can be shadowed by global variable.
  * Using ":!command" does not work if the command uses posix_spawn().
  * Still a way to shadow a builtin function. (Yasuhiro Matsumoto)
  * E704 for script local variable is not backwards compatible. (Yasuhiro
  Matsumoto)
  * Computing array length is done in various ways.
  * EBCDIC build is broken.
  * Superfluous extern declaration.
  * Vim9: line continuation comment uses legacy syntax.
  * Vim9: no good error for using :legacy in a :def function.
  * Test commented out because it fails with ASAN.
  * The evalfunc.c file is too big.
  * Accidentally enable tcl by default.
  * When a popup is visible a mouse move my restart Visual mode.
  * Vim9: line continuation comment still uses legacy syntax in one place.
  * Select mode test fails.
  * When 'clipboard' is "unnamed" zp and zP do not work correctly.
  * ASAN error when using text from the clipboard.
  * Calculating register width is not always needed. (Christian Brabandt)
  * Vim9: converting number to bool uses wrong stack offset. (Salman Halim)
  * Popup test fails if rightleft feature not enabled.
  * After using motion force from feedkeys() it may not be reset.
  * GTK: righthand scrollbar does not show with split window.
  * Vim9: using `=expr` does not handle a list of strings.
  * Vim9: internal error when calling function with too few arguments
  * Vim9: check for argument count ignores default values.
  * Vim9: no error when using job or channel as a string.
  * Some buffer related code is not tested.
  * Vim9: substitute expression cannot be a List in a :def function.
  * Build failure without the channel feature.
  * Substitute() accepts a number but not a float expression.
  * Tests failing because there is no error for float to string conversion.
  * Sound code not fully tested.
  * Vim9: cannot use heredoc in :def function for :python, :lua, etc.
  * Recover test fails on big endian systems.
  * Vim9: leaking memory when using heredoc script.
  * Short file name extension for Scala not recognized.
  * Vim9: using filter in compiled command does not work.
  * Vim9: need to plan for future additions.
  * Using getchar() in Vim9 script is problematic.
  * Function list test fails.
  * sound_playfile() is not tested on MS-Windows.
  * Swap file recovery not sufficiently tested.
  * Keys typed during a :normal command are discarded.
  * GUI: mouse move may start Visual mode with a popup visible.
  * Vim9: hang when using space after ->. (Naohiro Ono)
  * Vim9: crash when calling function that failed to compile.
  * ml_get errors after recovering a file. (Yegappan Lakshmanan)
  * Vim9: crash when using two levels of partials.
  * Vim9: memory leak
  * Subtracting from number option fails when result is zero. (Ingo Karkat)
  * Python configure check uses deprecated command.
  * Cannot yank a block without trailing spaces.
  * "%bd" tries to delete popup window buffers, which fails. (Ralf Schandl)
  * Fix for recovery and diff mode not tested.
  * Greek spell checking uses wrong case folding.
  * Vim9: can only use an autoload function name as a string.
  * Build failure without the +eval feature.
  * Crash when using a null function reference. (Naohiro Ono)
  * Warning for uninitialized variable.
  * Not all options code is covered by tests.
  * Popup window test is a bit flaky.
  * Recovery test is not run on big-endian systems.
  * Vim9: future commands are not reserved yet.
  * Vim9: an inline function requires specifying the return type.
  * Vim9: Test fails because of missing return statement.
  * Vim9: a compiled function cannot be debugged.
  * Build failure without the profile feature.
  * Build failure with normal features.
  * Vim9: debugger test fails.
  * Vim9: memory leak when debugging a :def function.
  * Jupyter Notebook files are not recognized.
  * Vim9: no completion for :vim9 and :legacy.
  * Vim9: completion for :disassemble is incomplete.
  * 'fileencodings' default value should depend on 'encoding'. (Gary Johnson)
  * Various code is not fully tested.
  * Linker errors with dynamic Python 3.10.
  * Vim9: when debugging cannot inspect local variables.
  * Vim9: disassemble test fails.
  * Vim9: disassemble test fails.
  * Balloon sometimes does not hide with GTK 3.
  * Vim9: warning for uninitialized variable.
  * Vim9: memory leak when compilation fails.
  * Vim doesn't abort on a fatal Tcl error.
  * Vim9: closure compiled with wrong compile type.
  * Vim9: error for missing colon given while skipping.
  * Vim9: using a void value does not give a proper error message.
  * Crash when echoing a value very early. (Naruhiko Nishino)
  * Vim9: test for void value fails.
  * Startup test may hang.
  * Startup test may hang.
  * Not enough testing for viminfo code.
  * Vim9: cannot get argument values during debugging.
  * When 'rightleft' is set the line number is sometimes drawn reversed.
  * Vim: when debugging only the first line of a command using line
  continuation is displayed.

-------------------------------------------------------------------
Tue Jun  1 10:19:44 UTC 2021 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.2918, fixes the following problems
  * Using <Cmd> mapping on the command line triggers CmdlineChanged. (Naohiro
  Ono)
  * Configure can add --as-needed a second time.
  * Window is not updated after using <Cmd> mapping.
  * Custom statusline cannot contain % items.
  * White space after "->" does not give E274.
  * Get readonly error for device that can't be written to.
  * Vim9: exception in ISN_INSTR caught at wrong level.
  * Test fails because of changed error message.
  * Tcl test fails because of changed error message.
  * Adding a text property causes the whole window to be redawn.
  * Vim9: "legacy return" is not recognized as a return statement.
  * Removing a text property causes the whole window to be redawn.
  * Removing a text property does not redraw optimally.
  * Vim9: crash when using inline function.
  * Skipping over function body fails.
  * Vim9: memory leak when using inline function.
  * Build failure.
  * Vim9: When executing a compiled expression the trylevel at start is
  changed but not restored. (closes #8214)
  * Using unified diff is not tested.
  * CmdlineChange event triggered twice for CTRL-R.
  * Unnessary VIM_ISDIGIT() calls, badly indented code.
  * Python tests fail without the channel feature.
  * Not enough tests for writing buffers.
  * Cancelling inputlist() after a digit does not return zero.
  * Configure cannot detect Python 3.10.
  * Insufficient tests for popup menu rightleft.
  * Vim9: for loop list unpack only allows for one "_".
  * File extension .hsig not recognized.
  * Unified diff fails if actually used.
  * Various pieces of code not covered by tests.
  * Vim9: memory leak when lambda has an error.
  * Not enough cscope code is covered by tests.
  * searching for \%'> does not match linewise end of line. (Tim Chase)
  * Various pieces of code not covered by tests.
  * Crash when passing null string to fullcommand().
  * Vim9: "k" command recognized in Vim9 script.
  * Typo and verbose comment in Makefiles.
  * Text property duplicated when data block splits.
  * Cannot build with Perl 5.34.
  * Error message contains random characters.
  * Multi-byte text in popup title shows up wrong.
  * Vim9: random characters appear in some error messages.
  * Spellfile functionality not fully tested.
  * Vim9: can use reserved words at the script level.
  * QuitPre and ExitPre not triggered when GUI window is closed.
  * Appveyor script does not detect nmake failure.
  * QuitPre is triggered before :wq writes the file, which is different from
  other commands.
  * Some operators not fully tested.
  * Spellfile functionality not fully tested.
  * Cursor position wrong on wrapped line with 'signcolumn'.
  * "g$" causes scroll if half a double width char is visible.
  * No error when defaults.vim cannot be loaded.
  * ASAN reports errors for test_startup for unknown reasons.
  * Memory leak when running out of memory.
  * Crash when using a terminal popup window from the cmdline window.
  * Build error with non-Unix system.
  * Test for cmdline window and terminal fails on MS-Windows.
  * Pattern "\%V" does not match all of block selection. (Rick Howe)
  * MS-Windows: most users expect using Unicode.
  * MS-Windows conpty supports using mouse events.
  * Cannot paste a block without adding padding.
  * Operators are not fully tested.
  * Spellfile functionality not fully tested.
  * Builtin function can be shadowed by global variable.

-------------------------------------------------------------------
Fri May 14 08:58:50 UTC 2021 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.2850, fixes the following problems
  * After a timer displays text a hit-enter prompt is given.
  * Free Pascal makefile not recognized.
  * Vim9: illegal memory access.
  * Flicker when the popup menu has an info popup.
  * Setting buffer local mapping with mapset() changes global mapping.
  * Vim9: cannot use legacy syntax in Vim9 script.
  * Vim9: using "++nr" as a command might not work.
  * Build fails with tiny features.
  * Vim9: increment and decrement not sufficiently tested.
  * Vim9: :def function compilation fails when using :legacy.
  * Vim9: crash when calling a function in a substitute expression.
  * Vim9: error for missing white space doesn't say where it is missing
  * Vim9: still crash when using substitute expression.
  * Cannot grep using fuzzy matching.
  * Vim9: unused variable. (John Marriott)
  * Status line flickers when redrawing popup menu info.
  * Vim9: comment below expression in lambda causes problems.
  * Vim9: script sourcing continues after an error.
  * No jump added to jumplist when opening terminal in current window.
  * Finishing an abbreviation with a multi-byte char may not work.
  * Session file may divide by zero.
  * Code in checkreadonly() not fully tested.
  * Compiler warnings for int to size_t conversion. (Randall W. Morris)
  * Test file was not deleted.
  * Coverity complains about not checking the rename() return value.
  * Some comments are not correct or clear.
  * Terminal colors are not updated when 'background' is set.
  * Vim9: expandcmd() not tested.
  * Operator cancelled by moving mouse when using popup. (Sergey Vlasov)
  * Two key command cancelled by moving mouse when using popup. (Sergey Vlasov)
  * Vim9: :cexpr does not work with local variables.
  * Vim9: leaking memory in :cexpr.
  * Build failure without the +quickfix feature. (John Marriott)
  * Various code lines not covered by tests.
  * File extension .wrap not recognized.
  * Default redirection missing "ash" and "dash".
  * Vim9: member operation not fully tested.
  * Vim9: skip argument to searchpair() is not compiled.
  * Vim9: skip argument to searchpairpos() is not compiled.
  * Vim9: memory leak when using searchpair().
  * Vim9: "echo Func()" does not give an error for a function without a
  return value.
  * Perl not tested sufficiently.
  * Crash when calling partial.
  * Bufwrite not sufficiently tested.
  * Recalling commands from history is not tested.

-------------------------------------------------------------------
Fri Apr 23 12:03:46 UTC 2021 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.2800, fixes the following problems
  * Vim9: message about compiling is wrong when using try/catch.
  * Confusing error message with white space before comma in the arguments
  of a function declaration.
  * Function test fails.
  * Special key names don't work if 'isident' is cleared.
  * Vim9: wrong error message for referring to legacy script variable.
  * Coverity complains about not restoring character.
  * Prompt for s///c in Ex mode can be wrong.
  * Detecting Lua version is not reliable.
  * Vim9: cannot use legacy script-local var from :def function.
  * Vim9: function reference found with prefix, not without.
  * Vim9: for loop over string is a bit slow.
  * Status line not updated when local 'statusline' option set.
  * Extending a list with itself can give wrong result.
  * Vim9: a lambda accepts too many arguments at the script level.
  * Vim9: lambda with varargs doesn't work.
  * Vim9: Partial call does not check right arguments.
  * Vim9: when compiling a function fails it is cleared.
  * Vim9: function state stuck when compiling with ":silent!".
  * Vim9: no way to explicitly ignore an argument.
  * Vim9: missing part of the argument change.
  * Check for duplicate arguments does not work.
  * Vim9: not always an error for too many function arguments.
  * Vim9: memory leak when calling :def function fails.
  * Vim9: test for error can be a bit flaky.
  * Vim9: error for using underscore in nested function.
  * Coverity warns for using NULL pointer.
  * Vim9: cannot ignore an item in assignment unpack.
  * :sleep! does not always hide the cursor.
  * Vim9: no error for using a number in a condition.
  * Vim9: blob index and slice not implemented yet.
  * Vim9: blob tests for legacy and Vim9 script are separate.
  * Vim9: wrong line number for autoload function with wrong name.
  * Vim9: for loop infers type of loop variable.
  * Vim9: no error for changing a for loop variable.
  * Using "syn include" does not work properly.
  * Vim9: function line truncated when compiling.
  * Vim9: cannot use type in for loop unpack at script level.
  * Memory leak when default function argument is allocated.
  * Vim9: not all blob operations work.
  * Test failure.
  * Compiler warning for unused argument.
  * Vim9: memory leak with blob range error.
  * Modula-3 config files are not recognized.
  * Vim9: type of loop variable is not used.
  * Vim9: assignment not recognized if declaration was skipped.
  * Problems when restoring 'runtimepath' from a session file.
  * PSL filetype not recognized.
  * Vim9: cannot import an existing name even when using "as".
  * Vim9: wrong line number used for some commands.
  * :mksession uses current value of 'splitbelow' and 'splitright' even though
  "options" is not in 'sessionoptions'. (Maxim Kim)
  * Vim9: blob operations not tested in all ways.
  * Problem restoring 'packpath' in session.
  * Memory access error in remove() for blob.
  * Vim9: for loop over blob doesn't work.
  * Add() silently skips when adding to null list or blob.
  * Vim9: blob operations not fully tested.
  * Duplicate code for setting byte in blob, blob test may fail.
  * Vim9: cannot use \=expr in :substitute.
  * Vim9: cannot redirect to local variable.
  * Vim9: memory leak when using :s with expression.
  * Raku is now the only name what once was called perl6.
  * Vim9: using \=expr in :substitute does not handle jumps.
  * filetype test fails
  * Vim9: memory leak when using \=expr in :substitute.
  * Vim9: :disas shows instructions for default args but no text.
  * Linux users don't know how to get ncurses.
  * Coverity warns for not using return value.
  * Vim9: redir to variable does not accept an index.
  * Search highlight disappears in the Visual area.
  * Vim9: redir to variable with append does not accept an index.
  * Vim9: type casts don't fully work at the script level.
  * After a timer displays text a hit-enter prompt is given.

-------------------------------------------------------------------
Tue Apr  6 08:22:49 UTC 2021 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.2725, fixes the following problems
  * strcharpart() cannot include composing characters.
  * Character input not fully tested.
  * Test disabled on MS-Windows even though it should work.
  * Mouse click test fails when using remote connection.
  * Conditions for startup tests are not exactly right.
  * col('.') may get outdated column value.
  * New test throws exception.
  * Vim9: function is deleted while executing.
  * Test is sourcing the wrong file.
  * Vim9: if 'cpo' is changed in Vim9 script it may be restored.
  * Vim9: script variable in a block scope not found by a nested function.
  * Vim9: cannot use a normal list name to store function refs.
  * Vim9: no test for return type of lambda.
  * Vim9: Using #{ for a dictionary gives strange errors.
  * typval2type() cannot handle recursive structures.
  * GTK: error when starting up and -geometry is given. (Dominique Pellé)
  * Some tests fail when run as root.
  * Atom files not recognized.
  * Rss files not recognized.
  * GTK3: error when starting up and -geometry is given. (Dominique Pellé)
  * No need to check for BSD after checking for not root.
  * Vim9: #{ can still be used at the script level.
  * Vim9: error for #{{ is not desired.
  * Hard to see where a test gets stuck.
  * Commands from winrestcmd() do not always work properly. (Leonid
  V. Fedorenchik)
  * Not all command line arguments are tested.
  * Multi-byte 'fillchars' for folding do not show properly.
  * 'tagfunc' does not indicate using a pattern.
  * Vim9: cannot define an inline function.
  * Memory leak when compiling inline function.
  * prop_remove() causes a redraw even when nothing changed.
  * Cannot write a message to the terminal from the GUI.
  * Build failure when fsync() is not available.
  * screenstring() returns non-existing composing characters.
  * Display test fails because of lacking redraw.
  * Vim9: no clear error for wrong inline function.
  * Various code not covered by tests.
  * prop_clear() causes a screen update even when nothing changed.
  * Using inline function is not properly tested.
  * Vim9: error for not using string doesn't mention argument.
  * Terminal test sometimes hangs.
  * Terminal resize test sometimes hangs.
  * Vim9: some wincmd arguments cause a white space error.
  * Vim9: command modifiers not handled in nested function.
  * Vim9: restoring command modifiers happens after jump.
  * Vim9: can use command modifier without an effect.
  * Build failure.
  * Vim9: getting a character from a string can be slow.
  * The -w command line argument doesn't work.
  * Some command line arguments and regexp errors not tested.
  * Vim9: error message for declaring variable in for loop.
  * :for cannot loop over a string.
  * Eval test fails because for loop on string works.
  * Vim9: no error for declaration with trailing text.
  * Leaking memory when looping over a string.
  * There is no way to avoid some escape sequences.
  * Vim9: leaking memory when inline function has an error.
  * Vim9: not enough function arguments checked for string.
  * Test failures.
  * Vim9: not enough function arguments checked for string.
  * prop_find() cannot find item matching both id and type.
  * Vim9: omitting "call" for "confirm()" does not give an error.
  * Command line completion does not work after "vim9".
  * Vim9: error for append(0, text).
  * Error for line number in legacy script.
  * Vim9: cannot use :lockvar and :unlockvar in compiled script.
  * Vim9: script-local funcref can have lower case name.
  * Directory change in a terminal window shell is not followed.
  * Missing error message.
  * Vim9: cannot use only some of the default arguments.
  * Test for 'autoshelldir' does not reset the option.
  * Winbar drawn over status line for non-current window with winbar if
  frame is zero height. (Leonid V. Fedorenchik)
  * Vim9: problem defining a script variable from legacy function.
  * Vim9: test fails for redeclaring script variable.
  * Vim9: cannot find Name.Func from "import * as Name". (Alexander Goussas)
  * Build failure without the +eval feature.
  * Not enough folding code is tested.
  * Custom statusline not drawn correctly with WinBar.
  * Status line is not updated when going to cmdline mode.
  * Vim9: cannot use "const" for global variable in :def function.
  * Vim9: crash when using s: for script variable.
  * Tiny build fails.
  * PowerShell files are not recognized.
  * Autoconf may mess up compiler flags.
  * Vim9: locked script variable can be changed.
  * Vim9: locked script variable can be changed.
  * When 'matchpairs' is empty every character beeps. (Marco Hinz)
  * Cursor position reset with nested autocommands.
  * Lua test fails with Lua 5.4.3 and later.
  * Function list test fails.
  * Lua test fails on MS-Windows.
  * Lua test fails.
  * Nested autocmd test fails sometimes.
  * Order of removing FORTIFY_SOURCE is wrong.
  * Compiler completion test fails when more scripts are added.
  * Vim9: memory leak when failing on locked variable.
  * Adding a lot of completions can be a bit slow.
  * Vim9: misleading reported line number for wrong type.
  * Vim9: wrong line number reported for boolean operator.
  * Adding a lot of completions can still be a bit slow.
  * Test sometimes fails waiting for shell in terminal.
  * The GTK GUI has a gap next to the scrollbar.
  * Vim9: not all tests cover script and :def function.
  * "gj" in a closed fold does not move out of the fold. (Marco Hinz)
  * Memory leak when adding to a blob fails.
  * Folding code not sufficiently tested.
  * Filetype pattern ending in star is too far up.
  * Vim9: tests fail without the channel feature. (Dominique Pellé)
  * The equivalent class regexp is missing some characters.
  * GTK menu items don't show a tooltip.
  * Vim9: no explicit test for using a global function without the g: prefix.
  * Vim9: appending to dict item doesn't work in a :def function.
  * GTK menu tooltip moves the cursor.
  * Vim9: cannot have a linebreak inside a lambda.
  * Vim9: crash when using LHS with double index.
  * Assignment test fails.
  * Vim9: concatenating to list in dict not tested.
  * Vim9: message about compiling is wrong when using try/catch.

-------------------------------------------------------------------
Mon Mar 15 10:01:53 UTC 2021 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.2607, fixes the following problems
  * Focus events end Insert mode if 'esckeys' is not set.
  * Vim9: "..=" not always recognized.
  * Vim9: Function name is not recognized.
  * Vim9: no error if variable is defined for existing function.
  * Second time a preview popup is opened highlight is not set. (Gabriel
  Dupras)
  * 'fillchars' "stl" and "stlnc" items must be single byte.
  * Tests fail when run as root.
  * Test may leave file behind.
  * Vim9: crash when getting the types for a legacy function.
  * Vim9: using invalid pointer for error message.
  * Vim9: crash when calling partial with wrong function.
  * Vim9: a function name with "->" in the next line doesn't work.
  * Vim9: defining a :func function checks for white space after a comma in
  the arguments.
  * Compiler warning for type conversion.
  * Lua cannot handle a passed in lambda.
  * Vim9: crash in garbagecollect after for loop.
  * Vim9: checking vararg type is wrong when function is auto-loaded.
  * Vim9: sourcing Vim9 script triggers a redraw.
  * Vim9: screendump test fails on MS-Windows.
  * Vim9: cannot compare result of getenv() with null.
  * Vim9: type error for assigning the result of list concatenation to a list.
  * Vim9: illegal memory access.
  * Process id may be invalid.
  * Recover test fails on FreeBSD.
  * Build failure with tiny features.
  * Recover test hangs in the GUI.
  * Vim9: default argument value may cause internal error.
  * Poke files are not recognized.
  * Code coverage could be improved.
  * List of distributed files is incomplete.
  * Alternate buffer added to session file even when it's hidden.
  * Setting 'winminheight' may cause 'lines' to change.
  * :doautocmd may confuse scripts listening to WinEnter.
  * Vim9: "import * as" does not work at script level.
  * Vim9: :open does not need to be supported.
  * Build failure.
  * Vim9: crash when putting an unknown type in a dictionary. (Yegappan
  Lakshmanan)
  * Memory usage test often fails on FreeBSD.
  * Vim9: continue doesn't work if :while is very first command. (Yegappan
  Lakshmanan)
  * Vim9: no effect if user command is also a function.
  * GUI-specific command line arguments not tested.
  * Vim9: string index and slice does not include composing chars.
  * strchars() defaults to counting composing characters.
  * strcharpart() cannot include composing characters.

-------------------------------------------------------------------
Wed Mar  3 19:04:23 UTC 2021 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.2564, fixes the following problems
  * Not all fields in "cstack" are initialized which might cause a crash.
  * Crash when using :all while using a cmdline window. (Zdenek Dohnal)
  * Using freed memory when closing the cmdline window.
  * No way to check for the cmdwin feature, cmdline_hist is now always enabled.
  * May get stuck in command line window state.
  * Condition stack values may be used when not set.
  * Color not changed if ModeMsg highlight is set in InsertEnter autocmd
  event. (Paul Swanson)
  * Autocmd test was failing on MS-Windows with GUI.
  * Too many problems with using all autocommand events.
  * Double free when using autocommand with "argdel". (Houyunsong)
  * Crash when deleting with line number out of range. (Houyunsong)
  * Missing error message.
  * Some tests are known to cause an error with ASAN.
  * Cursor on invalid line with range and :substitute.
  * Allowing 'completefunc' to switch windows causes trouble.
  * Can still switch windows for 'completefunc'.
  * FocusGained does not work when 'ttymouse' is empty.
  * :goto does not work correctly with text properties. (Sam McCall)
  * :vimgrep expands wildcards twice.
  * Warning for -fno-strength-reduce with Clang 11.
  * Libvterm tests are executed even when libtool doesn't work.
  * Opening cmdline window gives error in BufLeave autocommand.
  * Vim9: no error when compiling str2nr() with a number.
  * setline() gives an error for some types.
  * Vim9 script test is a bit flaky.
  * Deprecation warnings with default configuration.
  * Out of bounds compiler warning.

-------------------------------------------------------------------
Mon Mar  1 13:45:17 UTC 2021 - Matthias Gerstner <matthias.gerstner@suse.com>

- vim-changelog.sh:
  * use https:// URL for authenticity. For this URL needs to be changed to
    nluugl.nl which is the actual server behind this and the SSL certificate
    only works for this URL.
  * Check for number of arguments.
  * Maintain leading zeroes in version arguments, otherwise things
    like `vim-changelog.sh 0007 0010` fail to work.

-------------------------------------------------------------------
Fri Feb 19 11:03:00 UTC 2021 - Ludwig Nussel <lnussel@suse.de>

- install suse vimrc in /usr (boo#1182324, vim-8.2.2411-globalvimrc.patch).
  Add back some settings from defaults.vim that were in suse.vimrc before
- prevent double loading of spec.vim

-------------------------------------------------------------------
Thu Feb 18 16:44:25 UTC 2021 - Ludwig Nussel <lnussel@suse.de>

- source correct suse.vimrc file (boo#1182324)

-------------------------------------------------------------------
Mon Jan 26 11:30:34 UTC 2021 - Dimitis Karakasilis <DKarakasilis@suse.com>

Updated to version 8.2.2411, fixes the following problems
  * Debugging code included.
  * Some test files may not be deleted.
  * Not all ways Vim can be started are tested.
  * Vim9: crash when using :trow in a not executed block.
  * Vim9: wrong error when modifying dict declared with :final.
  * Vim9: missing :endif not reported when using :windo.
  * Vim9: warning for uninitialized variable. (Tony Mechelynck)
  * Pascal-like filetypes not always detected.
  * Vim9: "silent return" does not restore command modifiers.
  * Vim9: it is not possible to extend a dictionary with different item types.
  * Configure test for GTK only says "no". (Harm te Hennepe)
  * Vim9: no error if using job_info() result wrongly.
  * Cannot get the type of a value as a string.
  * win_execute() unexpectedly returns number zero when failing.
  * Expression command line completion shows variables but not functions after
  "g:". (Gary Johnson)
  * "char" functions return the wront column in Insert mode when the cursor
  is beyond the end of the line.
  * Vim9: return type of readfile() is any.
  * Using inclusive index for slice is not always desired.
  * No focus events in a terminal.
  * Codecov reports every little coverage drop.
  * Build failure without GUI.
  * No check for modified files after focus gained. (Mathias Stearn)
  * Vim9: cannot handle line break after parenthesis at line end.
  * Using "void" for no reason.
  * Vim9: error message for "throw" in function that was called with "silent!".
  * If the focus lost/gained escape sequence is received twice it is not
  ignored. (Christ van Willigen)
  * Spartql files are not detected.
  * Crash with a weird combination of autocommands.
  * Stray test failure on Appveyor.
  * Vim9: ":put =expr" does not handle a list properly.
  * Vim9: crash when parsing function return type fails.
  * Wrong #ifdef for use_xterm_like_mouse().
  * Strange test failure with MS-Windows.
  * Test leaves file behind.
  * Vim9: no highlight for "s///gc" when using 'opfunc'.
  * Vim9: check of builtin function argument type is incomplete.
  * Vim9: line break in lambda accesses freed memory.
  * Vim9: no check for map() changing item type at script level.
  * When using ":sleep" the cursor is always displayed.
  * Test failures on some less often used systems.
  * Insufficient tests for setting options.
  * Vim9: functions return true/false but can't be used as bool.
  * Vim9: command fails in catch block.
  * Vim9: crash when using types in :for with unpack.
  * Confusing error message for wrong :let command.
  * Vim9: list assignment only accepts a number index.
  * Accessing uninitialized memory in test_undo.
  * Test for RGB color skipped in the terminal.
  * Vim9: crash when dividing by zero in compiled code using constants.
  * Vim9: crash when using a range after another expression.
  * Vim9: no error message for dividing by zero.
  * Finding spell suggestions twice if 'spellsuggest' contains number.
  * Vim9: occasional crash when using try/catch and a timer.
  * Vim9: divide by zero does not abort expression execution.
  * Build failure.
  * Focus escape sequences are not named in ":set termcap" output.
  * Turtle filetype not recognized.
  * "gj" and "gk" do not work correctly when inside a fold.
  * Vim9: crash when using ":silent! put".
  * Runtime type check does not mention argument index.
  * No easy way to get the maximum or mininum number value.
  * Test failure on a few systems.
  * Vim9: using positive offset is unexpected.
  * Memory leak when creating a global function with closure.
  * Fennel filetype not recognized.
  * Vim9: error message when script line starts with "[{".
  * Vim9: min() and max() return type is "any".
  * Vim9: error for wrong type may report wrong line number.
  * Vim9: no white space allowed before "->".
  * Vim9: "%%" not seen as alternate file name for commands with a buffer
  name argument.
  * Method test fails.
  * Fold test fails in wide terminal.
  * Vim9: compiled functions are not profiled.
  * Build fails without +profiling feature.
  * Some filetypes not detected.
  * Vim9: profiling if/elseif/endif not correct.
  * Vim9: profiling try/catch not correct.
  * Vim9: no need to allow white space before "(" for :def.
  * Vim9: profiled :def function leaks memory.
  * Old jumplist code is never used.
  * MinGW: "--preprocessor" flag no longer supported.
  * Vim9: profiling only works for one function.
  * Build failure without the +profiling feature.
  * Profile test fails on MS-Windows.

-------------------------------------------------------------------
Fri Jan 15 13:18:59 UTC 2021 - Ludwig Nussel <lnussel@suse.de>

- remove forcing /usr/bin/vi -> vim symlink. Previous line linked to
  /etc/alternatives already. 

-------------------------------------------------------------------
Mon Jan 11 16:17:34 UTC 2021 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.2327, fixes the following problems
  * Insert mode completion messages end up in message history.
  * Vim9: crash when lambda uses same var as assignment.
  * Padding not drawn properly for popup window with title.
  * Vim9: checking for a non-empty string is too strict.
  * Vim9: get E1099 when autocmd triggered in builtin function.
  * Vim9: #{ still seen as start of dict in some places.
  * Vim9: Using uninitialized variable.
  * Vim9: :echo and :execute give error for empty argument.
  * Vim9: "exit_cb" causes Vim to exit.
  * Vim9: unreachable code in assignment.
  * Build failure with tiny features.
  * A user command with try/catch may not catch an expression error.
  * Memory leak when heredoc is not terminated.
  * Vim9: dead code in compiling :unlet.
  * Vim9: some corner cases not tested.
  * Vim9: concatenating lists does not adjust type of result.
  * Vim9: automatic conversion of number to string for dict key.
  * Quickfix window title not updated in all tab pages.
  * Vim9: crash when user command doesn't match.
  * Popupwin test for latin1 sometimes fails.
  * Github actions CI isn't used for all available platforms.
  * $dir not expanded when configure checks for moonjit.
  * screenpos() does not include the WinBar offset.
  * Popupwin test for latin1 still fails sometimes.
  * Popupwin test for terminal buffer fails sometimes.
  * Warning from Github actions for code analysis.
  * Github actions run on pusing a tag.
  * Vim9: can delete a Vim9 script variable from a function.
  * CI on cirrus times out, coveralls doesn't always run.
  * Vim9: when declaring a list it is not allocated yet, causing a following
  extend() to fail.
  * Various typos.
  * Arguments -T and -x not tested yet.
  * Vim9: Cannot load or store autoload variables.
  * Crash when discarded exception is the current exception.
  * Vim9: autoload function doesn't work in script that starts with an upper
  case letter.
  * Vim9: assignment to dict member does not work.
  * Auto format doesn't work when deleting text.
  * Vim9: assign test fails. (Elimar Riesebieter)
  * Vim9: error for assigning to dict of dict.
  * Vim9: test leaves file behind.
  * Vim9: a global function defined in a :def function fails if it uses
  the context.
  * Valgrind warning for using uninitialized value.
  * Vim9: number of arguments is not always checked. (Yegappan Lakshmanan)
  * Vim9: get internal error when assigning to undefined variable.
  * Mac version doesn't specify the CPU architecture.
  * Github actions: clang-11 handling suboptimal.
  * Crash with a sequence of fold commands.
  * Pattern "^" does not match if the first character in the line is
  combining. (Rene Kita)
  * Python 3: non-utf8 character cannot be handled.
  * Vim9: crash when indexing a dict with a number.
  * Vim9: test for error after error is flaky.
  * Valgrind warnings for using uninitialized value.
  * Vim9: value of 'magic' is still relevant.
  * Vim9: value of 'edcompatible' and 'gdefault' are used.
  * Vim9: no error when using "2" for a line number.
  * BufUnload is not triggered for the quickfix dummy buffer.
  * Vim9: error when using 'opfunc'.
  * Python 3 test fails sometimes. (Christian Brabandt)
  * Vim9: crash when calling global function from :def function.
  * Cannot repeat a command that uses the small delete register.
  * Vim9: crash when compiled with EXITFREE.
  * Vim9: using wrong name with lambda in nested function.
  * Codecov on github actions fails.
  * Vim9: can change constant in :def function.
  * Vim9: cannot use :const or :final at the script level.
  * Failing tests for :const.
  * :version output has extra spaces in compile and link command.
  * Assert arguments order reversed.
  * ml_get error when resizing window and using text property.
  * First write after setting 'eol' does not have NL added. (Tomáš Janoušek)
  * Vim9: lambda without white space around -> is confusing.
  * Write file test fails on MS-Windows.
  * Write file test still fails on MS-Windows.
  * Moodle gift files are not recognized.
  * Vim9: using -> both for method and lambda is confusing.
  * Vim9: memory leak when parsing lambda fails.
  * :exe command line completion only works for first argument.
  * Illegal memory access if popup menu items are changed while the menu is
  visible. (Tomáš Janoušek)
  * Vim9: after reloading a script variable index may be invalid.
  * Vim9: return type of => lambda not parsed.
  * Vim9: allocating a type to set TTFLAG_BOOL_OK.
  * Vim9: lambda with => does not work at the script level.
  * Checking white space around -> is not backwards compatible.
  * ":e#" does not give a warning for missing white space.
  * Vim9: `=expr` not recognized in global command.
  * Vim9: range with missing colon can be hard to spot.
  * Vim9: command modifiers not restored in catch block.
  * Vim9: failure if passing more arguments to a lambda than expected.
  * Vim9: method call with expression not supported.
  * Vim9: memory leak when parsing nested parenthesis.
  * If <Down> is mapped on the command line 'wildchar' is inserted.
  * Vim9: cannot keep script variables when reloading.
  * Vim9: Reloading marks a :def function as deleted.
  * Vim9: crash if script reloaded with different variable type.
  * Vim9: error when using :import in legacy script twice.
  * Vim9: script test fails.
  * Vim9: recognizing lambda is too complicated.
  * Vim9: cannot use ":e #" because # starts a comment.
  * build failure without the +eval feature.
  * Vim9: insert completion runs into error.
  * When "--remote file" is used "file" is not reloaded.
  * Compiler error for falling through into next case.
  * Cannot convert a byte index into a character index.
  * Command line wildmenu test often fails with Unix GUI.
  * Build failure with some Ruby versions.
  * 'scroll' option can change when setting the statusline or tabline but
  the option context is not updated.
  * Vim9: cannot load a Vim9 script without the +eval feature.
  * Vim9: concatenating lines with backslash is inconvenient.
  * Clientserver test fails if full path is used.
  * Build with Ruby and clang may fail.
  * Vim9: line continuation with bar does not work at script level.
  * Crash when popup mask contains zeroes.
  * Crash when making the window width of the not-current window negative.
  * Vim9: return value of winrestcmd() cannot be executed.
  * Cursor keys not recognized at the hit-Enter prompt after executing an
  external command.
  * VMS: various smaller problems.
  * ASAN error on exit with GUI.
  * Termcodes test is flaky when used over ssh with X forwarding.
  * Vim9: sublist is ambiguous.
  * Test failures in legacy script.
  * Vim9: crash when using lambda without return type in dict.
  * Vim9: expr test fails.
  * Vim9: bool option type is number.
  * Tcl test fails.
  * Vim9: cannot use function( after line break in :def function.
  * Vim9: using -> for lambda is ambiguous.
  * Not all OCaml related files are detected.
  * Test_Executable() fails when using chroot.
  * Window resize test fails in very wide terminal.
  * Vim9: boolean option gets string type.
  * Vim9: converting bool to string prefixes v:.
  * Vim9: compilation error with try-catch in skipped block.
  * Vim9: no error for mismatched :endfunc or :enddef.
  * Error message for missing endfunc/enddef is last line.
  * Vim9: it can be hard to see where white space is missing.
  * Vim9: cannot use unlet for a dict member.
  * Vim9: list unpack seen as declaration.
  * Not all :hardcopy code covered by tests.
  * Warning for size_t to int conversion. (Randall W. Morris)
  * ml_get error when changing hidden buffer in Python.
  * Vim9: extend() can violate the type of a variable.
  * Build failure.
  * badge for Travis is outdated.
  * CTRL-C not recognized in Mintty.
  * List of distributed files is outdated.
  * Missing backslash.
  * Falling back to old regexp engine can some patterns.
  * Vim9: memory leak with catch in skipped block.
  * Fuzzy matching doesn't give access to the scores.
  * Vim9: compiled "wincmd" cannot be followed by bar.
  * Length check mismatch with argument of strncmp(). (Christian Brabandt)
  * Vim9: crash when lambda has fewer arguments than expected.
  * Vim9: cannot set an option to a boolean value.
  * Vim9: cannot set an option to a false.
  * Sort test fails when locale is Canadian English. (Neil H Watson)
  * Sort test fails when locale is French Canadian.
  * Vim9: line break and comment not always skipped.
  * Vim9: 'cpo' can become empty.
  * Vim9: unlet of global variable cannot be compiled.
  * Vim9: cannot use "null" for v:null.
  * Vim: expr test fails.
  * Build failure with Motif. (Tony Mechelynck)
  * VMS: a few remaining problems.
  * Incsearch does not detect empty pattern properly.
  * Cannot use CTRL-N and CTRL-P in a popup menu.
  * Vim9: cannot set 'number' to a boolean value.
  * Vim9: comment right after "(" of function not recognized.
  * Vim9: invalid memory access making error message flaky.
  * Vim9: wrong order on type stack when using dict.
  * Vim9: cannot unlet a dict or list item.
  * Vim9: using an option value may use uninitialized memory.
  * Vim9: backtick expansion doesn't work for :foldopen.
  * Vim9: no test for unletting an imported variable.
  * Vim9: "++var" and "--var" are silently accepted.
  * Vim9: when using function reference type is not checked.
  * A shell command in the vimrc causes terminal output.
  * Vim9: no error when assigning lambda to funcref without return value.
  * 0o777 not recognized as octal.
  * Vim9: winsaveview() return type is too generic.
  * Vim9: cannot assign to a variable that shadows a command modifier.
  * Build failure with Ruby 3.0 and 32 bits.
  * Vim9: using uninitialized field when parsing range. ":silent!" not
  respected when parsing range fails.
  * Vim9: returning zero takes two instructions.
  * Vim9: "enddef" as dict key misintepreted as function end.
  * Vim9: cannot list a lambda function.
  * Vim9: command modifier before list unpack doesn't work.
  * Vim9: string and list index work differently.
  * "exptype_T" can be read as "expected type".
  * Vim9: no error for comparing bool with string.
  * Vim9: cannot nest closures.
  * Vim9: closure nested limiting to one level.
  * Vim9: error when inferring type from empty dict/list.
  * Not easy to get mark en cursor posotion by character count.
  * Vim9: crash if map() changes the item type.
  * Build error with +eval feature but without +spell.
  * Debugging code included.

-------------------------------------------------------------------
Sat Dec 12 09:24:23 UTC 2020 - Atri Bhattacharya <badshah400@gmail.com>

- Update to version 8.2.2129, fixes the following problems:
  * There is no way to do something on CTRL-Z
  * Vim9: executing user command from Vim9 script not tested
  * Ruby: missing function prototype
  * Vim9: leaking memory
  * Vim9: a range cannot be computed at runtime
  * After using a complete popup the buffer is listed
  * Vim9: crash when sourcing vim9script early
  * Internal error when using \ze before \zs in a pattern
  * Not all Perl functionality is tested
  * GTK3: status line background color is wrong
  * Dead code in the job support
  * Some functions use any value as a string
  * Vim9: some errors not tested for; dead code
  * Vim9: unreachable code in assignment
  * Running tests may leave some files behind
  * GTK: menu background is the same color as the main window
  * Cannot use ":shell" when reading from stdin
  * "vim -" does not work well when modifyOtherKeys is enabled
  * Vim9: no test to check for :let error
  * Vim9: some errors not tested
  * TOML files are not recognized
  * Update runtime files.

-------------------------------------------------------------------
Mon Dec  7 07:08:18 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.2105, fixes the following problems
  * Viminfo is not written when creating a new file.
  * Terminal buffer disappears even when 'bufhidden' is "hide". (Sergey Vlasov)
  * Haskell filetype not optimally recognized.
  * Build failure with +profile but without +reltime.
  * GTK3: white border around text stands out.
  * Highlighting a character too much with incsearch.
  * Some test failures don't give a clear error.
  * Amiga: FEAT_ARP defined when it should not.
  * Amiga: obsolete code.
  * Amiga: obsolete function.
  * Search test contains unneeded sleeps.
  * Vim9: crash when aborting a user function call.
  * Vim9: "edit +4 fname" gives an error. (Naruhiko Nishino)
  * Vim9: lamba doesn't accept argument types.
  * Configure fails when building with the "implicit-function-declaration"
  error enabled, specifically on Mac.
  * Getting the selection may trigger TextYankPost autocmd.
  * Using mkview/loadview changes the jumplist.
  * Check for features implemented with "if".
  * Vim9: E1030 error when using empty string for term_sendkeys().
  * <Cmd> does not handle CTRL-V.
  * Vim9: only one level of indexing supported.
  * terminal: cursor is on while redrawing, causing flicker.
  * Using map() and filter() on a range() is inefficient.
  * Vim9: assignment with += doesn't work.
  * Cursor position in popup terminal is wrong.
  * Transparent syntax item uses start/end of containing region.
  * The quickfix window is not updated after setqflist().
  * Can't get the exit value in VimLeave or VimLeavePre autocommands.
  * Vim9: list assign doesn't except empty remainder list.
  * Vim9: list assign not well tested.
  * Vim9: for with unpack only works for local variables.
  * Vim9: using :normal from Vim9 script can't handle range.
  * Error for const argument to mapnew().
  * Build failure with small features.
  * Illegal memory access when using :print on invalid text. (Dhiraj Mishra)
  * Vim9: cannot put a linebreak before or after "in" of ":for".
  * Vim9: no proper error message for using s:var in for loop.
  * Vim9: cannot handle a linebreak after "=" in assignment.
  * Vim9: can still use the depricated #{} dict syntax.
  * Vim9: crash when using ":silent!" and getting member fails.
  * CTRL-V U doesn't work to enter a Unicode character when modifyOtherKeys
  is effective. (Ken Takata)
  * Qt translation file is recognized as typescript.
  * Libvterm tests are only run on Linux.
  * Vim9: memory leak when statement is truncated.
  * Vim9: script test sometimes fails.
  * Vim9: dict does not accept a key in quotes.
  * Vim9: unpredictable errors for script tests.
  * Vim9: script test sometimes fails.
  * When an expression fails getting the next command may be wrong.
  * Vim9: crash when failed dict member is followed by concatenation.
  * Vim9: command modifiers not restored after assignment.
  * Vim9: using :silent! when calling a function prevents abortng that
  function.
  * Vim9: function argument of sort() and map() not tested.
  * Vim9: some checks are not tested.
  * Insufficient testing for function range and dict.
  * Vim9: memory leak when literal dict has an error and when an expression
  is not complete.
  * Vim9: not all error messages tested.
  * Vim9: unreachable code.
  * Build problem with Ruby 2.7.
  * Sound test is a bit flaky.

-------------------------------------------------------------------
Wed Nov 25 09:50:56 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.2039, fixes the following problems
  * Cannot backspace in prompt buffer after using cursor-left. (Maxim Kim)
  * Vim9: error for using a string in a condition is confusing.
  * Making a mapping work in all modes is complicated.
  * "term_opencmd" option of term_start() is truncated. (Sergey Vlasov)
  * Vim9: some tests are not done at the script level.
  * MinGW: parallel compilation might fail.
  * Quickfix window not updated when adding invalid entries.
  * ml_get error when using <Cmd> to open a terminal.
  * Cannot use :vimgrep in omni completion, causing C completion to fail.
  * Crash when closing terminal popup with <Cmd> mapping.
  * Expression test is flaky on Appveyor.
  * Still in Insert mode when opening terminal popup with a <Cmd> mapping
  in Insert mode.
  * Info popup triggers WinEnter and WinLeave autocommands.
  * Cursor position wrong in terminal popup with finished job.
  * Coverity warns for not using the ga_grow() return value.
  * Build fails with small features.
  * Occasional failure of the netbeans test.
  * The popup menu can cause too much redrawing.
  * Vim9: invalid error for argument of extend().
  * Window changes when using bufload() while in a terminal popup.
  * Terminal Cmd test sometimes fails to close popup.
  * Terminal popup test sometimes fails.
  * Vim9: dict.key assignment not implemented yet.
  * Vim9: :def function does not apply 'maxfuncdepth'.
  * Vim9: lambda argument shadowed by function name.
  * Build error with +conceal but without +popupwin.
  * Compiler warning for uninitialized variable.
  * Redoing a mapping with <Cmd> doesn't work properly.
  * .pbtxt files are not recognized.
  * Test for insert mode in popup is not reliable.
  * Vim9: compiling fails for unreachable return statement.
  * "syn sync" reports a very large number.
  * Vim9: confusing error message when using bool wrongly.
  * Vim9: not skipping white space after unary minus.
  * Using CTRL-O in a prompt buffer moves cursor to start of the line.
  * Vim9: literal dict #{} is not like any other language.
  * Swap file test is a little flaky.
  * Missing part of the dict change.
  * Vim9: script variable not found from lambda.
  * Swap file test fails on MS-Windows.
  * Some compilers do not like the "namespace" argument.
  * Vim9: get E1099 when autocommand resets did_emsg.
  * Vim9: star command recognized errornously.
  * Vim: memory leak when :execute fails.
  * Flicker when redrawing a popup with a title and border.
  * Amiga: Not all colors are used on OS4.
  * Coverity warns for possibly using not NUL terminated string.
  * Coverity warns for uninitialized field.
  * Coverity warns for using an uninitialized variable.
  * Coverity warns for not checking return value.
  * Some tests fail on Mac.
  * Some tests fail when run under valgrind.
  * Cabalconfig and cabalproject filetypes not recognized.
  * Vim9: :def without argument gives compilation error.
  * Vim9: list unpack in for statement not compiled yet.
  * Current buffer is messed up if creating a new buffer for the quickfix
  window fails.
  * Compiler test depends on list of compiler plugins.
  * Viminfo is not written when creating a new file.

-------------------------------------------------------------------
Thu Nov 12 06:41:20 UTC 2020 - Wang Jun <jgwang@suse.com>

- Updated to version 8.2.1975, fixes the following problems
  * Vim9: cannot specify argument types for lambda.
  * Diff and cursorcolumn highlighting don't mix.
  * Build failure with timers.
  * Crash when terminal buffer name is made empty. (Dhiraj Mishra)
  * Update runtime files
  * Warning for uninitialized variable.
  * Various comments can be improved.
  * Correct list of patches.
  * Netbeans may access freed memory.
  * Crash when using a popup window with "latin1" encoding.
  * Not all ConTeXt files are recognized.
  * Vim9: tests fail without the channel feature.
  * Popup becomes current window after closing a terminal window.
  * The session file does not restore the alternate file.
  * Vim9: has() assumes a feature does not change dynamically.
  * Vim9: map() may change the list or dict item type.
  * It is easy to make mistakes when cleaning up swap files after the system crashed.
  * Memory leak when map() fails.
  * Crash when recreating nested fold.
  * Finding a patch number can be a bit slow.
  * Vim9: test for has('gui_running') fails with VIMDLL.
  * Win32: memory leak when encoding conversion fails.

-------------------------------------------------------------------
Thu Nov  5 11:44:18 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.1955, fixes the following problems
  * Vim9: command modifiers do not work.
  * Variable completion does not work in command line window.
  * Default option values are changed when using :badd for an existing buffer.
  * Buffer test fails with normal features.
  * Still using default option values after using ":badd +1".
  * The wininfo list may contain stale entries.
  * Warning for signed/unsigned.
  * Complete_info().selected may be wrong.
  * Lua is initialized even when not used.
  * Number of status line items is limited to 80.
  * Reading past the end of the command line.
  * Tiny build fails.
  * With Python 3.9 some tests fail.
  * GTK GUI: rounding for the cell height is too strict.
  * Vim9: cannot put line break in expression for '=' register.
  * Vim9: error for wrong number of arguments is not useful.
  * Vim9: function call is aborted even when "silent!" is used.
  * No test for improved Man command.
  * Vim9: E1100 mentions :let.
  * Assert_fails() setting emsg_silent changes normal execution.
  * Listlbr test fails when run after another test.
  * Fuzzy matching does not recognize path separators.
  * Win32: scrolling doesn't work properly when part of window is off-screen.
  * Vim9: "filter" command modifier doesn't work.
  * Vim9: crash when indexing dict with NULL key.
  * List/dict test fails.
  * Cannot use a space in 'spellfile'. (Filipe Brandenburger)
  * Vim9: get unknown error with an error in a timer function.
  * Vim9: "silent!" not effective when list index is wrong.
  * MS-Windows: problem loading Perl 5.32.
  * Wrong input if removing shift results in special key code.
  * Vim9: arguments of extend() not checked at compile time.
  * Compiler warnings when building with Athena GUI.
  * Cannot sort using locale ordering.
  * Vim9: command modifiers in :def function not tested.
  * Sort test fails on Mac.
  * Session sets the local 'scrolloff' value to the global value.
  * Vim9: test for confirm modifier fails in some situations.
  * Wiping out a terminal buffer makes some tests fail.
  * Invalid memory access in Ex mode with global command.
  * Vim9: browse modifier test fails on Mac.
  * Ex mode test fails on MS-Windows with GUI.
  * Insufficient test coverage for the Netbeans interface.
  * Vim9: wrong error message when colon is missing.
  * Netbeans test is flaky.
  * Crash when passing NULL function to reduce().
  * sort() with NULL string not tested.
  * Crash when using "zj" without folds. (Sean Dewar)
  * GUI: crash when handling message while closing a window. (Srinath
  Avadhanula)
  * Vim9: using extend() on null dict is silently ignored.
  * Vim9: crash when compiling function fails when getting type.
  * Test for list and dict fails.
  * Vim9: crash when using a NULL dict key.
  * Vim9: extra "unknown" error after other error.
  * Vim9: not all command modifiers are tested.
  * Vim9: not all command modifiers are tested.

-------------------------------------------------------------------
Mon Nov  2 22:25:51 UTC 2020 - Christian Boltz <suse-beta@cboltz.de>

- apparmor.vim: update from AppArmor 3.0
  - add capability checkpoint_restore

-------------------------------------------------------------------
Sun Oct 25 11:44:15 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.1900, fixes the following problems
  * Vim9: error message is not clear about compilation error.
  * Vim9: test for compilation error fails in normal build.
  * Crash when USE_FNAME_CASE is defined and using :browse.
  * Netbeans: with huge buffer number memory allocation may fail.
  * Using "q" at the more prompt doesn't stop a long message.
  * Vim9: function defined in a block can't use variables defined in that
  block.
  * Vim9: variables declared in a local block are not found in when a function
  is compiled.
  * Vim9: using negative value for unsigned type.
  * Crash when passing a NULL string or list to popup_settext().
  * Vim9: garbage collection frees block-local variables.
  * "vat" does not select tags correctly over line break.
  * Vim9: "!" followed by space incorrectly used.
  * map() returing zero for NULL list is unexpected.
  * "to_f" is recognized at "topleft" modifier.
  * Vim9: crash when throwing exception for NULL string. (Dhiraj Mishra)
  * Vim9: get error message when nothing is wrong.
  * "2resize" uses size of current window. (Daniel Steinberg)
  * Vim9: using job_status() on an unused var gives an error.
  * Vim9: filter functions return number instead of bool.
  * Vim9: crash in unpack assignment.
  * Vim9: memory leak when throwing empty string.
  * Vim9: no specific error when parsing lambda fails.
  * vim9: memory leak when compiling lambda fails.
  * Json code not sufficiently tested.
  * Vim9: no error for wrong list type.
  * Vim9: add() does not check type of argument.
  * Vim9: add() does not check type of argument.
  * Vim9: argument to add() not checked for blob.
  * Vim9: no error for missing space after comma in dict.
  * Vim9: memory leak when using add().
  * Vim9: no need to keep all script variables.
  * Using %v in 'errorformat' may fail before %Z.
  * Matchfuzzy() does not prefer sequential matches.
  * Vim9: missing white space when using <f-args>.
  * Can't do something just before leaving Insert mode.
  * Warning when building GTK gui.
  * Vim9: argument types for builtin functions are not checked at compile time.
  * Test for function list fails.
  * GTK: error for redefining function. (Tony Mechelynck)
  * Vim9: argument types of insert() not checked when compiling.
  * Vim9: Asan complains about adding zero to NULL.
  * Cannot build with GTK3.
  * Vim9: v:disallow_let is no longer needed.
  * Compiler warnings when using Python.
  * Compiler warning for uninitialized variable. (John Marriott)
  * Filetype tests unnessarily creates swap files.
  * Using ":silent!" in a popup filter has unexpected effect.
  * Github actions not optimally configured.
  * Vim9: Getbufline(-1, 1, '$') gives an error.
  * Vim9: errornous error for missing white space after {}.
  * Vim9: strange error for subtracting from a list.
  * Vim9: skipping over expression doesn't handle line breaks.
  * Valgrind warns for using uninitialized access in tests.
  * Fuzzy matching does not support multiple words.
  * Vim9: command modifiers are not supported.
  * Vim9: silent command modifier test fails.
  * Valgrind warns for using uninitialized memory.
  * Command modifiers are saved and set inconsistently.
  * Command modifier parsing always uses global cmdmod.
  * Crash in out-of-memory situation.
  * Vim9: command modifiers do not work.

-------------------------------------------------------------------
Fri Oct 16 10:25:42 UTC 2020 - Ludwig Nussel <lnussel@suse.de>

- prepare usrmerge (boo#1029961)

-------------------------------------------------------------------
Tue Oct 13 06:21:33 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.1840, fixes the following problems
- refreshed vim-7.3-filetype_changes.patch and vim-8.0.1568-defaults.patch
  * Filetype.vim may be loaded twice.
  * Vim9: some assignment tests in the wrong file.
  * Vim9: returning from a partial call clears outer context, causing a crash.
  * Some debian changelog files are not recognized.
  * Statusline not updated when splitting windows.
  * Writing to prompt buffer interferes with insert mode.
  * Vim9: cannot pass boolean to mapset().
  * Try-catch test fails.
  * commits are not scanned for security problems
  * Compiler warning for strcp() out of bounds. (Christian Brabandt)
  * Various Normal mode commands not fully tested.
  * Crash with 'incsearch' and very long line.
  * Vim9: still allows :let for declarations.
  * Vim9: crash with invalid list constant. (Dhiraj Mishra)
  * Vim9: debugger test fails.
  * Configure does not recognize Racket 6.1+.
  * Not consistently giving the "is a directory" warning.
  * No falsy Coalescing operator.
  * Vim9: operators && and || have a confusing result.
  * Vim9: invalid memory access with weird function name. (Dhiraj Mishra)
  * Vim9: some parts of the code not tested.
  * Vim9: trinary operator condition is too permissive.
  * Some Normal mode commands not fully tested.
  * Vim9: memory leak if "if" condition is invalid.
  * Undo file not found when using ":args" or ":next".
  * Vim9: crash with unterminated dict. (Dhiraj Mishra)
  * A few failures are not tested.
  * resolve('/') returns an empty string.
  * Unix: terminal mode changed when using ":shell".
  * Can use :help in a terminal popup window.
  * No test coverage for ":spelldump!".
  * Mapping some keys with Ctrl does not work properly.
  * Some code in normal.c not covered by tests.
  * Mapping Ctrl-key does not work for '{', '}' and '|'.
  * Vim9: nested closure throws an internal error.
  * Vim9: can assign wrong type to script dict. (Christian J.  Robinson)
  * Missing change to remove "static".
  * Vim9: memory leak when using function reference.
  * Vim9: another memory leak when using function reference.
  * Vim9: wrong instruction when reusing a local variable spot.
  * SE Linux: deprecation warning for security_context_t.
  * Vim9: Memory leak when using a closure.
  * Vim9: crash when error happens in timer callback.
  * Vim9: concatenating to a NULL list doesn't work.
  * List test doesn't fail.
  * "gN" does not select the matched string.
  * Vim9: variables at the script level escape their scope.
  * Vim9: accessing freed memory.
  * Vim9: cannot use a {} block at script level.
  * Filetype detection does not test enough file names.
  * Build failure without the +eval feature.
  * Warnings when executing Github actions.
  * File missing from distribution.
  * readdirex() error is displayed as a message. (Yegappan Lakshmanan)
  * When reading from stdin dup() is called twice.
  * PyEval_InitThreads() is deprecated in Python 3.9.
  * ":help ??" finds the "!!" tag.
  * Autocmd test fails on pacifist systems.
  * Using "gn" after "gN" does not work.
  * Vim9: cannot insert a comment line in an expression.
  * Vim9: memory leaks reported in assign test.
  * Vim9: error message is not clear about compilation error.

-------------------------------------------------------------------
Thu Oct  8 21:35:39 UTC 2020 - Christian Boltz <suse-beta@cboltz.de>

- apparmor.vim: update from latest AppArmor 2.13 branch:
  - add capabilities bpf and perfmon

-------------------------------------------------------------------
Wed Sep 30 09:55:37 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.1775, fixes the following problems
- refreshed vim-7.3-sh_is_bash.patch
  * Vim9: no error if comma is missing in between arguments.
  * Vim9: memory leak with heredoc that isn't executed. (Dominique Pellé)
  * Vim9: cannot assign a lambda to a variable of type function.
  * Vim9: Variable argument name cannot start with underscore.
  * Vim9: assignment tests spread out.
  * Not all Pascal files are recognized.
  * Fuzzy matching only works on strings.
  * A popup created with "cursorline" will ignore "firstline".
  * Compiler warning for using uninitialized variable. (John Marriott)
  * Endless loop when ":normal" feeds popup window filter.
  * Vim9: cannot use member of unknown type.
  * Vim9: cannot use += to append to empty NULL list.
  * Stuck when win_execute() for a popup causes an error.
  * Vim9: memory leaks when using nested function.
  * Vim9: cannot use a funcref for a closure twice.
  * Failure to compile a pattern not tested much.
  * Cursor line highlight in popup window is not always updated.
  * Mac: str2float() recognizes comma instead of decimal point.
  * Vim9: crash when compiling a manually defined function. (Antony Scriven)
  * Test fails without the terminal feature.
  * pathshorten() only supports using one character.
  * Test still fails without the terminal feature.
  * Cannot build without the eval feature.
  * Vim9: using ":const!" is weird.
  * Tiny version doesn't build.
  * Vim9: Cannot use "fina" for "finally". (Naruhiko Nishino)
  * Result of expand() unexpectedly depends on 'completeslash'.
  * Closing split window in other tab may cause a crash.
  * Vim9: crash when closure fails in nested function.
  * Setting firstline with popup_setoptions() fails if cursorline is set.
  * Using 2 where bool is expected may throw an error.
  * GTK GUI: cannot map alt-? with <A-?>. (Ingo Karkat)
  * Vim9: crash when using import at script level.
  * Completion with spell checking not tested.
  * Vim9: crash when using invalid heredoc marker. (Dhiraj Mishra)
  * Vim9: :let will soon be disallowed.
  * Mac: default locale is lacking the encoding.
  * Vim9: type of unmaterialized list is wrong.
  * Vim9: Some tests are still using :let.
  * Vim9: crash when end marker is missing. (Dhiraj Mishra)
  * Vim9: Some tests are still using :let.
  * When a timer uses :stopinsert Insert mode completion isn't
  stopped. (Stanley Chan)
  * Vim9: cannot use "true" for popup window scrollbar option.
  * Vim9: no error when assigning to script var with wrong type.
  * Vim9: some tests use "var var".
  * Vim9: Some tests are still using :let.
  * Vim9: test fails with python support.
  * Cannot use the help menu from a terminal window.
  * A popup filter interferes with using :normal to move the cursor in a popup.
  * Invalid memory use when using SpellFileMissing autocmd.
  * synIDattr() cannot get the value of ctermul.
  * Cannot use CTRL-W <Down> to move out of a terminal window.
  * Crash when calling mapset() with a list as first argument.
  * GTK: hang when forced to exit.

-------------------------------------------------------------------
Mon Sep 21 08:18:45 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.1719, fixes the following problems
  * Vim9: error for argument type does not mention the number.
  * Warnings from asan with clang-11. (James McCoy)
  * Crash in edit test.
  * Crash in normal test.
  * Not all tests are executed on Github Actions.
  * Cursorline highlighting always overrules sign highlighting.
  * Crash in :vimgrep when started as "vim -n". (Raul Segura)
  * Signs test fails.
  * s390x tests work again.
  * Using NULL pointers in some code. (James McCoy)
  * Using NULL pointers in fold code.
  * Vim9: error when using "%" where a buffer is expected.
  * Vim9: error when using '%" with setbufvar() or getbufvar().
  * A few remaining errors from ubsan.
  * Spellfile test sometimes fails.
  * Not all Bazel files are recognized.
  * No example to use ubsan with clang.
  * prop_find() skips properties in the same line if "skipstart" is used.
  * Vim9: fixes for functions not tested; failure in getchangelist().
  * Configure check for dirfd() does not work on HPUX. (Michael Osipov)
  * Vim9: count() third argument cannot be "true".
  * Vim9: expand() does not take "true" as argument.
  * Vim9: getreg() does not take "true" as argument.
  * Vim9: glob() doesnot take "true" as argument.
  * Vim9: globpath() doesnot take "true" as argument.
  * Vim9: index() does not take "true" as argument.
  * Vim9: hasmapto(), mapcheck() and maparg() do not take "true" as argument.
  * Vim9: popup_clear() does not take "true" as argument.
  * Reports from asan are not optimal.
  * Wildmenu does not work properly.
  * Using line() for global popup window doesn't work.
  * The channel log does not show typed text.
  * Vim9: cannot use "true" for "skipstart" in prop_find().
  * Messages in globals.h not translated, xgettext on MS-Windows not fully
  supported.
  * :resize command not fully tested.
  * Loop for handling keys for the command line is too long.
  * Cannot read back the prompt of a prompt buffer.
  * Term_start() options for size are overruled by 'termwinsize'. (Sergey
  Vlasov)
  * Vim9: bufnr() doesn't take "true" argument.
  * Using winheight('.') in tests works but is wrong.
  * Vim9: passing "true" to char2nr() fails.
  * Tests do not check the error number properly.0
  * Pull requests on github do not notify a maintainer.
  * Cannot easily see what Vim sends to the terminal.
  * Using win_screenpos('.') in tests works but is wrong.
  * The channel source file is too big.
  * Starting a hidden terminal resizes the current window.
  * Missing line end when skipping a long line with :cgetfile.
  * Vim9: cannot use "true" with deepcopy().
  * Vim9: cannot use 'true" with garbagecollect().
  * Vim9: cannot use 'true" with getbufinfo().
  * Vim9: cannot use "true" with getchar().
  * Vim9: cannot use "true" with getcompletion().
  * Vim9: cannot use "true" with has().
  * Vim9: getchar() test fails with GUI.
  * Vim9: test fails when build without +channel.
  * Vim9: cannot pass "true" to list2str() and str2list().
  * Vim9: cannot pass "true" to nr2char().
  * Vim9: cannot pass "true" to prop_remove().
  * Vim9: cannot pass "true" to prop_type_add().
  * Vim9: cannot pass "true" to searchcount().
  * Vim9: cannot pass "true" to searchdecl().
  * Vim9: cannot pass "true" to synID().
  * Vim9: cannot pass "true" to win_splitmove().
  * Vim9: cannot pass "true" to setloclist().
  * Vim9: cannot pass "true" to spellsuggest().
  * searchcount() test fails.
  * Crash when using submatch(0, 1) in substitute().
  * Loop to handle keys for the command line is too long.
  * Vim9: using :call where it is not needed.
  * Vim9: cannot pass "true" to split(), str2nr() and strchars().
  * Compiler warning for use of fptr_T.
  * Test for strchars() fails with different error number.
  * Vim9: cannot pass "true" to submatch(), term_gettty() and term_start()
  * Vim9: cannot pass "true" to timer_paused().
  * Test fails without terminal feature.
  * Terminal test fails.
  * test_fails() does not check the context of the line number.
  * Not checking the context of test_fails().
  * Some error messages are internal but do not use iemsg().
  * Loop to handle keys for the command line is too long.
  * No digraph for 0x2022 BULLET.
  * Get stuck if a popup filter causes an error.
  * Vim9: :put ={expr} does not work inside :def function.
  * Leaking memory when popup filter function can't be called.
  * Options window cannot be translated.
  * Amiga: missing header for getgrgid().
  * Vim9: cannot use 0 or 1 where a bool is expected.
  * Otions test fails.
  * Vim9: :defcompile compiles dead functions.
  * Vim9: cannot assign 1 and 0 to bool at script level.
  * GTK3: icons become broken images when resized.
  * Vim9: result of expression with && and || cannot be assigned to a bool
  variable.
  * Amiga: no common build file for Amiga (-like) systems.
  * GTK3: using old file chooser.
  * Vim9: result of && and || expression cannot be assigned to a bool at
  the script level.
  * Spellfile code not completely tested.
  * Cannot translate lines in the options window.
  * Expand('<stack>') does not include the final line number.
  * When job writes to hidden buffer current window has display errors.
  (Johnny McArthur)
  * Cannot build with Strawberry Perl 5.32.0.
  * Vim9: callstack wrong if :def function calls :def function.
  * Vim9: no proper error for nested ":def!".
  * Expand('<stack>') has trailing "..".
  * Spellfile code not completely tested.
  * Assert functions require passing expected result as the first argument,
  which isn't obvious.
  * Cannot connect to 127.0.0.1 for host with only IPv6 addresses.
  * :mksession does not restore shared terminal buffer properly.
  * Options window entries cannot be translated.
  * Memory leak when using :mkview with a terminal buffer.
  * Cannot do fuzzy string matching.
  * The initial value of 'backupskip' can have duplicate items.
  * Local function name cannot shadow a global function name.
  * Vim9: not accepting 0 or 1 as bool when type is any.
  * Vim9: memory leak when storing a value fails.
  * A couple of gcc compiler warnings.
  * Vim9: stray error for missing white space.
  * v_lock is used when it is not initialized. (Yegappan Lakshmanan)
  * complete_info() selected index has an invalid value. (Ben Jackson)
  * Vim9: internal error when using variable that was not set.
  * MinGW: testdir makefile deletes non-existing file.
  * Compiler warnings for function typecast.
  * Memory access errors when calling setloclist() in an autocommand.
  * Crash when using ":set" after ":ownsyntax". (Dhiraj Mishra)
  * Vim9: ":*" is not recognized as a range.
  * Vim9: line number for compare error is wrong.
  * Vim9: unnessary :call commands in tests.
  * Vim9: const works in an unexpected way.
  * Vim9: assignment test fails.
  * "gF" does not use line number after file in Visual mode.
  * Vim9: cannot declare a constant value.
  * Vim9: "const!" not sufficiently tested.
  * Vim9: out of bounds error.
  * Increment/decrement removes text property.
  * 'colorcolumn' doesn't show in indent.
  * Text properties not adjusted for "I" in Visual block mode.
  * Vim9: list<any> is not accepted where list<number> is expected.
  * Build fails because TTFLAG_STATIC is missing.
  * "hi def" does not work for cleared highlight.
  * Compiler warning for loss if data.
  * Vim9: crash when using varargs type "any".
  * Unused (duplicate) macros.
  * Inconsistent capitalization of error messages.
  * Cannot lock a variable in legacy Vim script like in Vim9.
  * Build failure due to missing error message.
  * Vim9: try/catch causes wrong value to be returned.
  * Vim9: sort("i") does not work.
  * Crash when using undo after deleting folded lines.
  * ":highlight clear" does not restore default link.
  * Vim9: crash in for loop when autoload script has an error.
  * "verbose hi Name" reports incorrect info after ":hi clear".
  * Vim9: crash after running into the "Multiple closures" error.
  * Small inconsitency in highlight test.
  * Vim9: error message for function has unpritable characters.
  * Vim9: memory leak when using multiple closures.
  * Vim9: list of list type can be wrong.
  * Vim9: leaking memory when using partial.
  * Vim9: leaking memory when calling a lambda.
  * Motif GUI: crash when setting menu colors. (Andrzej Bylicki)
  * Text properties corrupted with substitute command. (Filipe Brandenburger)
  * Motif GUI: commented out code missed {}.
  * Options window has duplicate translations.
  * Vim9: :def function disallows "firstline" and "lastline" argument names
  for no good reason.

-------------------------------------------------------------------
Tue Sep 15 11:34:57 UTC 2020 - Dominique Leuenberger <dimstar@opensuse.org>

- Fix postun scriptlet of vim-small: do not unconditionally
  deregister vim-small as an alternative on uninstall (which
  happens on package upgrades too) (boo#1176549).

-------------------------------------------------------------------
Wed Sep  2 06:20:24 UTC 2020 - Thorsten Kukuk <kukuk@suse.com>

- Add vi as slave to update-alternatives so that every package
  has a matching "vi" symlink [bsc#1174564].

-------------------------------------------------------------------
Mon Aug 31 21:33:39 UTC 2020 - Dirk Mueller <dmueller@suse.com>

- Updated to version 8.2.1551, fixes the following problems
  * Vim: not operator does not result in boolean.
  * Previous tab page not usable from an Ex command.
  * Popupwindow missing last couple of lines when cursor is in the first line.
  * Closing a popup window with CTRL-C interrupts 'statusline' if it calls
  a function.
  * Vim9: boolean evaluation does not work as intended.
  * Test 49 is old style.
  * Vim9: invalid error for missing white space after function.
  * Vim9: not operator applied too early.
  * Test 49 is old style.
  * Vim9: handling "+" and "-" before number differs from Vim script.
  * The Mac GUI implementation is outdated and probably doesn't even work.
  * Vim9: find global function when looking for script-local.
  * Mac build fails.
  * Vim9: cannot use call() without :call.
  * Vim9: cannot call autoload function in :def function.
  * Vim9: cannot use a range with marks in :def function.
  * Vim9: :def function does not abort on nested function error.
  * Vim9: no error for missing white after : in dict.
  * Vim9: error for missing comma instead of extra white space.
  * Vim9: no error for white space before comma in dict.
  * Various inconsistencies in test files.
  * Vim9: cannot mingle comments in multi-line lambda.
  * Vim9: crash when lambda uses outer function argument.
  * Vim9: always converting to string for ".." leads to mistakes.
  * Function implementing :substitute has unexpected name.
  * Vim9: 'statusline' is evaluated using Vim9 script syntax.
  * Missing tests for interrupting script execution from debugger.
  * Tiny and small builds have no test coverage.
  * Debugger code insufficiently tested.
  * Running tests in tiny version gives error for summarize.vim.
  * Outdated references to the Mac Carbon GUI.
  * Vim9: crash when interrupting a nested :def function.
  * Error messages are spread out and names can be confusing.
  * Vim9: function expanded name is cleared when sourcing a script again.
  * Vim9: line number in error message is not correct.
  * Vim9: return type of keys() is list<any>.
  * Test 77a for VMS depends on small.vim which does not exist.
  * Some test makefiles delete files that are not generated.
  * Vim9: no check that script-local items don't become global.
  * Vim9: list type at script level only uses first item.
  * Vim9: dead code in to_name_end().
  * Vim9: failure to compile lambda not tested.
  * Vim9: failure invoking lambda with wrong arguments.
  * Vim9: crash when using typecast before constant.
  * MS-Windows: test files are not deleted.
  * Vim9: the output of :disassemble cannot be interrupted.
  * .gawk files not recognized.
  * Vim9: declaring ascript variable at the script level does not infer
  the type.
  * Error messages are spread out.
  * Vim9: string indexes are counted in bytes.
  * Vim9: string slice not supported yet.
  * Vim9: list slice not supported yet.
  * Vim9: build warning for unused variable.
  * Vim9: subscript not handled properly.
  * Vim9: cannot index or slice a variable with type "any".
  * Vim9: :echomsg doesn't like a dict argument.
  * Vim9: invalid error for missing white space.
  * Vim9: cannot assign string to string option.
  * Errors in spell file not tested.
  * :const only locks the variable, not the value.
  * ":argdel" does not work like ":.argdel" as documented. (Alexey Demin)
  * Items in a list given to :const can still be modified.
  * /usr/lib/udef/rules.d not recognized as udevrules.
  * Vim9: can't use v:true for option flags.
  * Filetype test fails on MS-Windows.
  * Vim9: error when using bufnr('%').
  * Vim9: cannot use "true" for some popup options.
  * Vim9: error for list index uses wrong line number.
  * Vim9: skip expression in search() gives error.
  * Vim9: line number reported with error may be wrong.
  * Vim9: crash when using a nested lambda.
  * Vim9: error for using special as number when returning "false" from a
  popup filter.
  * Flaky failure in assert_fails().
  * Vim9: readdirex() expression doesn't accept bool.
  * Vim9: readdir() expression doesn't accept bool.
  * Travis: installing snd-dummy is not always useful.
  * Text does not scroll when inserting above first line.
  * Vim9: error when setting an option with setbufvar().
  * Vim9: using /= with float and number doesn't work.
  * Vim9: crash when compiling heredoc lines start with comment.
  * Build failures.
  * Not enough test coverage for the spell file handling.
  * Missing change to calling eval_getline().
  * "make clean" may delete too many files.
  * Vim9: cannot use " #" in a mapping.
  * CursorHold test is flaky. (Jakub Kądziołka)
  * On slow systems tests can be flaky.
  * Vim9: error when using "$" with col().
  * Vim9: error when using address without a command.
  * Vim9: concatenating to constant reverses order.
  * Vim9: can use += with a :let command at script level.
  * Vim9: error for an autocmd defined in a :def function in legacy Vim script.
  * Vim9: white space checks are only done for a :def function.
  * Not all file read and writecode is tested.
  * Vim9: no error when using a number other than 0 or 1 as bool.
  * Using malloc() directly.
  * Not all debugger commands covered by tests.
  * Vertical separator is cleared when dragging a popup window using a
  multi-byte character for the border.
  * Using "var" in a :def function may refer to a legacy Vim script variable.
  * Putting a string in Visual block mode ignores multi-byte characters.
  * Failure after trinary expression fails.
  * Cannot interrupt shell used for filename expansion. (Dominique Pellé)
  * Multibyte vertical separator is cleared when dragging a popup window
  using a multi-byte character for the border.
  * Vim9: can create s:var in legacy script but cannot unlet.
  * Vim9: error for :exe has wrong line number.
  * Cannot easily get the character under the cursor.
  * Vim9: cannot assign to local option.
  * Vim9: Ex command default range is not set.
  * Vim9: CTRL-] used in :def function does not work.
  * Reading past end of buffer when reading spellfile. (Yegappan Lakshmanan)
  * Not enough test coverage for the spell file handling.
  * Still not enough test coverage for the spell file handling.
  * No longer get an error for string concatenation with float. (Tsuyoshi Cho)
  * Messages from tests were not always displayed.
  * Line in testdir Makefile got commented out. (Christian Brabandt)
  * Vim9: cannot use a function name as a function reference at script level.
  * Vim9: :endif not found after "if false".
  * Vim9: :elseif may be compiled when not needed.
  * Vim9: test fails on MS-Windows.
  * Vim9: test still fails on MS-Windows.
  * Compiler warning for conversion of size_t to long.
  * Vim9: error when passing getreginfo() result to setreg().
  * Vim9: type error for argument type is not at call position.
  * It is not possible to specify cell widths of characters.
  * Cannot get the class of a character; emoji widths are wrong in some
  environments.
  * Memory acccess error when using setcellwidths().
  * Python: iteration over vim objects fails to keep reference.
  * Using invalid script ID causes a crash.
  * The user cannot try out emoji character widths.
  * Vim9: cannot find function reference for s:Func.
  * Vim9: test with invalid SID does not work in the GUI.
  * Vim9: test with invalid SID is skipped in the GUI.
  * Cannot translate messages in a Vim script.
  * ch_logfile() is unclear about closing when forking.
  * Build rule for Vim.app is unused.
  * Various comment problems.
  * Cannot move position of "%%" in message translations. (Emir Sarı)
  * The "r" command fails for keys with modifiers if 'esckeys' is off and
  modifyOtherKeys is used. (Lauri Tirkkonen)
  * Vim9: bufname('%') gives an error.
  * Vim9: error for argument type does not mention the number. 
- disable-unreliable-tests.patch: refresh
- vim-changelog.sh: work with bash

-------------------------------------------------------------------
Mon Aug 10 09:06:38 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.1412, fixes the following problems
- refreshed vim-7.4-highlight_fstab.patch
  * CTRL-K in Insert mode gets <CursorHold> inserted. (Roland Puntaier)
  * MS-Windows: regexp test may fail if 'iskeyword' set wrongly.
  * Cannot use a lambda with quickfix functions.
  * Vim9: type wrong after getting dict item in lambda.
  * Vim9: list unpack doesn't work at the script level.
  * CursorHold does not work well.a (Shane-XB-Qian)
  * Empty group in 'tabline' may cause using an invalid pointer.
  * There is no good test for CursorHold.
  * Vim9: common type of function not tested.
  * src/ex_cmds.c file is too big.
  * Vim9: comperators use 'ignorecase' in Vim9 script.
  * Terminal getwinpos() test is a bit flaky.
  * Crash with EXITFREE when split() fails.
  * Makefile preferences were accidentally included.
  * Vim9: no error for using double quote comment after :func or :def.
  * Language and locale code spread out.
  * Vim9: not skipping over function type declaration with only a return type.
  * Vim9: Error for Funcref function argument type.
  * Vim9: type not checked if declaration also assigns value.
  * Vim9: no error for missing white space in assignment at script level.
  * Vim9: compiler warning for buffer size.
  * Tests on Travis do not run with EXITFREE.
  * Vim9: line break after "->" only allowed in :def function.
  * Some tests on Travis have EXITFREE duplicated.
  * Ex command error cannot contain an argument.
  * The "trailing characters" error can be hard to understand.
  * Vim9: crash when using CheckScriptFailure() in
  Test_vim9script_call_fail_decl().
  * Vim9: error for misplaced -> lacks argument.
  * Vim9: skipping over type includes following white space, leading to an
  error for missing white space.
  * Vim9: argument types are not checked on assignment.
  * Vim9: No error when using a type to a window variable
  * Vim9: crash when using an imported function.
  * Vim9: cannot use mark in range.
  * Crash when using a custom completion function.
  * Vim9: cannot replace a global function.
  * Vim9: type of varargs items is not checked.
  * AIDL filetype not recognized.
  * Vim9: :execute mixes up () expression and function call.
  * Vim9: error when using vim9script in TextYankPost.
  * Tests 44 and 99 are old style.
  * Some part of using 'smarcase' was not tested.
  * When a test fails it's often not easy to see what the call stack is.
  * Compiler warning for unused argument in small version.
  * Compiler warning for using size_t for int and void pointer.
  * Vim9: optional argument type not parsed properly.
  * Vim9: varargs argument type not parsed properly.
  * Vim9: varargs arg after optional arg does not work
  * Calling popup_setoptions() resets 'signcolumn'.
  * Debug backtrace isn't tested much.
  * Some tests are still old style.
  * Checking for first character of dict key is inconsistent.
  * popup window width does not include number, fold of sign column width.
  * Vim9: accidentally using "x" causes Vim to exit.
  * Build failure with tiny version.
  * Configure with Xcode 12 fails to check for tgetent.
  * Test failures with legacy Vim script.
  * Vim9 script: cannot assign to environment variable.
  * Vim9: rule for comment after :function is confusing.
  * Vim9: cannot declare some single letter variables.
  * Vim9: method on double quoted string doesn't work.
  * Vim9: invalid operators only rejected in :def function.
  * Vim9: line break after "=" does not work.
  * Vim9: using Vim9 script for autaload not tested.
  * Vim9: skipping over white space after list.
  * No space allowed before comma in list.
  * Vim9: cannot define global function inside :def function.
  * Vim9: :echo with two lists doesn't work.
  * Vim9: memory leak when using nested global function.
  * Vim9: memory leak when using nested global function.
  * Github workflow timeout needs tuning
  * CTRL-C in the GUI doesn't interrupt. (Sergey Vlasov)
  * Build failure on non-Unix systems.
  * Vim9: cannot use empty key in dict assignment.
  * Vim9: assigning to script-local variable doesn't check type.
  * Vim9: assigning to global dict variable doesn't work.
  * Some tests fail on Cirrus CI and/or with FreeBSD.
  * Build failures.
  * Vim9: accidentally using "x" gives a confusing error.
  * Vim9: cannot find global function when using g: when local function with
  the same name exists.
  * Vim9: No test for trying to redefine global function.
  * Redraw error when using visual block and scroll.
  * Small build fails.
  * Cannot easily get the script ID.
  * Build failure without the eval feature.
  * Vim9: can define a function with the name of an import.
  * Vim9: no test for error message when redefining function.
  * Vim9: no proper error if using namespace for nested function.
  * Vim9: no error for shadowing a script-local function by a nested function.
  * Crash when drawing double-wide character in terminal window. (Masato
  Nishihata)
  * Vim9: no error using :let for options and registers.
  * Vim9: cannot get the percent register.
  * Vim9: cannot assign to / register.
  * Vim9: test fails with +dnd is not available.
  * Vim9: cannot assign to / register in Vim9 script.
  * Stray error for white space after expression.
  * Error for white space after expression in assignment.
  * Last entry of ":set term=xxx" overwritten by error message when 'cmdheight'
  is two or more. (Tony Mechelynck)
  * Test trying to run terminal when it is not supported.
  * Invalid memory access when searching for raw string.
  * Vim9: no error for missing white space around operator.
  * Test 49 is old style.
  * Vim9: no error for missing white space around operator.
  * Vim9: no error for assigning to non-existing script var.
  * Vim9: error for assigning empty list to script variable.
  * Vim9: method name with digit not accepted.
  * Vim9: expression mapping causes error for using :import.
  * Triggering the ATTENTION prompt causes typeahead to be messed up.
  * Cannot put space between function name and paren.
  * Curly braces expression ending in " }" does not work.
  * Vim9: return type of getreg() is always a string.
  * Vim9: using :import in filetype plugin gives an error.
  * Test 49 is old style.
  * No ATTENTION prompt for :vimgrep first match file.
  * No testing on ARM.
  * Backslash not removed afer space in option with space in 'isfname'.
  * Vim9: cannot assign to single letter variable with type.
  * Vim9: += only works for numbers.
  * File missing from the distribution.
  * Vim9: type error after storing an option value.
  * Vim9: no error for shadowing a script function.
  * Vim9: error line number incorrect after skipping over comment lines.
  * Insufficient testing for script debugging.
  * Vim9: compiling a function interferes with command modifiers.
  * Vim9: no error if declaring a funcref with a lower case letter.
  * Vim9: no error for unexpectedly returning a value.
  * Vim9: return type of maparg() not adjusted for fourth argument.
  * Autoload script sourced twice if sourced directly.
  * Vim9: may find imported item in wrong script.
  * Vim9: test does not delete written files.
  * Cannot jump to the last used tabpage.
  * s390x tests always fail.
  * Vim9: Vim highlighting fails in cmdline window if it uses Vim9 commands.
  * Vim9: script test fails in the GUI.
  * Vim9: vim9compile.c is getting too big.
  * Popupwindow lacks scrollbar if no "maxheight" is used.
  * Vim9: type of list and dict only depends on first item.
  * Vim9: type casting not supported.
  * Nmpmrc and php.ini filetypes not recognized.
  * Adding compiler plugin requires test change.
  * when splitting a window localdir is copied but prevdir is not.
  * Vim: not operator does not result in boolean.

-------------------------------------------------------------------
Mon Jul 20 11:26:57 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.1253, fixes the following problems
  * Vim9: crash when using imported function.
  * Vim9: cannot handle line break inside lambda.
  * Vim9: No error for invalid command in compiled function.
  * Vim9: dict.name is not recognized as an expression.
  * Vim9: no error for missing space after a comma.
  * Vim9: memory leak in allocated types.
  * Vim9: using freed memory.
  * Text cleared by checking terminal properties not redrawn. (Alexey Radkov)
  * Insufficient testing for the Tcl interface.
  * Once mouse move events are enabled getchar() returns them.
  * Vim9: builtin function method call only supports first argument.
  * Wrong method argument for appendbufline().
  * Write NUL past allocated space using corrupted spell file. (Markus Vervier)
  * Cursor off by one with block paste while 'virtualedit' is "all".
  * Possible crash when out of memory.
  * Error messages when doing "make clean" in the runtime/doc or src/tee
  directories.
  * Tee doesn't build on some systems.
  * No test for the "recording @x" message.
  * Vim9: Cannot split a line before ".member".
  * Vim9: not enough type checking in Vim9 script.
  * Terminal2 test sometimes hangs in the GUI.
  * Vim9: filter function recognized as command modifier, leading to a crash.
  * Test_termwinscroll() sometimes hangs in the GUI.
  * Build failure in small version.
  * Json code not fully tested.
  * Vim9: no check for whitespace after comma in lambda.
  * assert_fails() checks the last error message.
  * Some tests fail.
  * Some other tests fail.
  * With SGR mouse codes balloon doesn't show up after click.
  * Terminal2 test sometimes hangs in the GUI on Travis.
  * Memory leak with invalid json input.
  * Vim9: line continuation in lambda doesn't always work.
  * Vim9: checking for Vim9 syntax is spread out.
  * Vim9: crash when function calls itself.
  * Lua test fails with older Lua version.
  * Terminal window not redrawn when dragging a popup window over it.
  * Test failure because shell prompt differs.
  * Clientserver test fails on MS-Windows.
  * Build failure with normal features.
  * Clientserver test still fails on MS-Windows.
  * Terminal2 test sometimes hangs in the GUI on Travis.
  * Not all assert functions are fully tested.
  * Vim9: cannot disassemble a lambda function.
  * Vim9: crash when passing number as dict key.
  * Vim9: crash when calling a closure from a builtin function.
  * Unused assignments in expression evaluation.
  * Vim9: true and false not recognized in Vim9 script.
  * Vim9: && and || work different when not compiled.
  * Vim9: crash in expr test when run in the GUI.
  * Vim9: crash in expr test when run in the GUI.
  * Using ht_used when looping through a hashtab is less reliable.
  * Removed more than dead code.
  * Cannot build with Lua 5.4.
  * Mouse codes not tested sufficiently.
  * Startup test depends on random source file.
  * Vim9: cannot use 'text'->func().
  * Symlink not followed if dirname ends in //.
  * memory access error when dragging a popup window over a buffer with
  folding.
  * Memory leak when updating popup window.
  * When using valgrind a Vim command started by a test uses the same log
  file name which gets overwritten.
  * Vim9: invalid type error for function default value.
  * Vim9: arguments from partial are not used.
  * Linker errors when building with dynamic Python 3.9.
  * Vim9: allowing both quoted and # comments is confusing.
  * Scrollbars not flush against the window edges when maximised.
  * Build error without the eval feature.
  * Vim9: list index error not caught by try/catch.
  * Vim9: various errors not caught by try/catch.
  * Lua build problem with old compiler.
  * Not all mouse codes covered by tests.
  * Vim9: a few errors not caught by try/catch.
  * Changing 'completepopup' after opening a popup has no effect. (Jay Sitter)
  * Vim9: a few remaining errors not caught by try/catch.
  * "maxwidth" in 'completepopup' not obeyed. (Jay Sitter)
  * GUI tests sometimes fail because of translations.
  * Cannot use getbufinfo() as a method.
  * Vim9: no error if calling a function with wrong argument type.
  * Vim9: cannot have a comment or empty line halfway a list at script level.
  * Vim9: in lambda index assumes a list.
  * Build failure in tiny version.
  * Vim9: comment after assignment doesn't work.
  * Vim9: cannot index a character in a string.
  * Netbeans test is flaky in the GUI.
  * Vim9: disassemble test fails.
  * Vim9: cannot use the g:, b:, t: and w: namespaces.
  * Vim9: warning for pointer usage, test failure undetected.
  * ":marks" may show '< and '> mixed up.
  * CTRL-K in Insert mode gets <CursorHold> inserted. (Roland Puntaier)

-------------------------------------------------------------------
Wed Jul  8 16:01:14 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.1154, fixes the following problems
  * Vim9 test fails without job feature.
  * Running channel tests may leave running process behind.
  * Vim9: closure cannot store value in outer context.
  * Vim9: memory leak in disassemble test.
  * Indent tests don't run on CI for FreeBSD.
  * Vim9: using assert_fails() causes function to finish.
  * Vim9 function test fails.
  * Vim9: constant expressions are not simplified.
  * Netbeans test sometimes fails.
  * With a long running Vim the temp directory might be cleared on some
  systems.
  * Various code not fully tested.
  * The pam_environment file is not recognized.
  * Vim9: handling constant expression does not scale.
  * Vim9: leaking memory.
  * Vim9: another memory leak.
  * Vim9: postponed constant expressions does not scale.
  * Gcc warning for returning pointer to local variable. (John Marriott)
  * Vim9: more expressions can be evaluated at compile time
  * Occasional exit when encountering an X error. (Manfred Lotz)
  * Vim9: leaking memory when skipping.
  * Vim9: not handling constant expression for elseif.
  * Vim9: nested constant expression not evaluated compile time.
  * Vim9: appending to buffer/window/tab variable not tested
  * Vim9: cannot call a function declared later in Vim9 script.
  * Vim9: leaking memory when calling not compiled :def function.
  * Messages about a deadly signal are not left aligned.
  * Vim9: When reloading a script variables are not cleared.
  * Vim9: Assignment to dict member does not work.
  * Vim9: parsing declarations continues after :finish.
  * Vim9: storing value in dict messes up stack.
  * Vim9: assigning to dict or list argument does not work.
  * Vim9: leaking memory when using :finish.
  * Vim9: using unitialized memory.
  * Some files not recognized as pamenv.
  * When shell doesn't support CTRL-Z Vim still handles it.
  * Mouse handling in a terminal window not well tested.
  * Incomplete profiling when exiting because of a deadly signal.
  * Minor message mistakes.
  * Python tests fail because of changed message.
  * Handling of a TERM signal not tested.
  * Can move to another buffer from a terminal in popup window.
  * The name vim is not capitalized in a message.
  * Crash on exit when not all popups are closed.
  * popup_clear() hangs when a popup can't be closed.
  * Cannot forcefully close all popups.
  * Cannot get a list of all popups.
  * TERM signal test fails on FreeBSD.
  * Netbeans test is a bit flaky.
  * Vim9: performance can be improved.
  * Terminal in popup window test is a bit flaky.
  * Vim9: expressions are evaluated in the discovery phase.
  * Vim9: No test for forward declaration.
  * Vim9: No error when variable initializer is not a constant.
  * Vim9: no test for MEMBER instruction.
  * Vim9: no test for STORELIST and STOREDICT.
  * Vim9: missing changes for performance improvements
  * Vim9: dict member errors not tested.
  * Vim9: instructions not tested
  * Buffer is not considered modified after setting crypt key.
  * GUI test fails without the terminal feature.
  * Vim9: assigning to option not fully tested.
  * In the GUI can't use all the modifiers. (Andri Möll)
  * Display error when using 'number' and 'breakindent'.
  * ModifyOtherKeys active when using a shell command in autocmd.
  * Vim9: memory leak in script test.
  * VimLeavePre not triggered when Vim is terminated.
  * Cannot map CTRL-B when using the GUI.
  * Vim9: cannot call a compiled closure from not compiled code.
  * Vim9: some variable initializations not tested.
  * Switching to raw mode every time ":" is used.
  * t_TI and t_TE are output when using 'visualbell'. (Dominique Pelle)
  * Not easy to call a Vim function from Lua.
  * Libvterm code lags behind the upstream version.
  * Terminal test fails.
  * Libvterm code lags behind the upstream version.
  * Tmode_T not used everywhere.
  * Libvterm code lags behind the upstream version.
  * Compiler warning for not using value in Lua.
  * Cannot build with Lua on MS-Windows.
  * Libvterm code lags behind the upstream version.
  * Libvterm code lags behind the upstream version.
  * Libvterm code lags behind the upstream version.
  * Channel test is flaky on FreeBSD.
  * Libvterm code lags behind the upstream version.
  * Memory leak in libvterm.
  * Vim9: expression testing lost coverage using constants.
  * Vim9: list index not well tested.
  * A second popup window with terminal causes trouble.
  * Build failure with small features.
  * Libvterm code lags behind the upstream version.
  * Build fails if snprintf is not available.
  * Errors from failing test are unclear.
  * Terminal test fails on Mac.
  * Terminal key codes test fails on some systems.
  * using "func!" after vim9script gives confusing error.
  * Cannot easily restore a mapping.
  * Not enough testing for the terminal window.
  * Build failure with small features. (Tony Mechelynck)
  * Error when appending "tagfile" to 'wildoptions'.
  * Terminal keycode test is flaky.
  * mapset() does not properly handle <> notation.
  * libvterm code is slightly different from upstream.
  * Clang warning for implicit conversion.
  * maparg() does not provide enough information for mapset().
  * Terminal test fails when compiled with Athena.
  * Not enough memory allocated when converting string with special character.
  * Vim9: using a discovery phase doesn't work well.
  * Compiler warning for unused variable.
  * Vim9: function type isn't set until compiled.
  * Vim9: memory leak in expr test.
  * Vim9: code left over from discovery phase.
  * Vim9: script reload test is disabled.
  * Still not enough memory allocated when converting string with special
  character.
  * def_function() may return pointer that was freed.
  * Vim9: crash in :defcompile.
  * Vim9: crash in :defcompile.
  * Travis: regexp patttern doesn't work everywhere.
  * filter() may give misleading error message.
  * Motif: can't map "!". (Ben Jackson)
  * Compiler warnings for integer sizes.
  * Compiler warning for uninitialized variable. (Tony Mechelynck)
  * Mapping <C-bslash> doesn't work in the GUI.
  * :drop command in terminal popup causes problems.
  * Motif: mapping <C-bslash> still doesn't work.
  * Not all :cdo output is visible.
  * Compiler warning for value set but not used.
  * Dropping modifier when putting a character back in typeahead.
  * Search match count wrong when only match is in fold.
  * 'verbose' value 16 causes duplicate output.
  * Filetype elm not detected.
  * Text properties crossing lines not handled correctly.
  * Text properties crossing lines not handled correctly.
  * Build failure with small features.
  * Typval related code is spread out.
  * Can't distinguish <M-a> from accented "a" in the GUI.
  * Cannot map CTRL-S on some systems.
  * ml_delete() often called with FALSE argument.
  * Xxd cannot show offset as a decimal number.
  * GUI tests fail because the test doesn't use a modifier.
  * CTRL-S stops output.
  * GTK cell height can be a pixel too much.
  * Not easy to require Lua modules.
  * No Turkish translation of the manual.
  * Cannot use CTRL-A and CTRL-X on unsigned numbers.
  * Cannot easily get all the current marks.
  * ":term ++curwin" makes the current buffer hidden. (Harm te Hennepe)
  * Cannot set a separate color for underline/undercurl.
  * Pragmas are indented all the way to the left.
  * Syntax foldlevel is taken from the start of the line.
  * Not enough tests for buffer writing.
  * Using \{xxx} for encoding a modifier is not nice.
  * trim() always trims both ends.
  * It is not possible to customize the quickfix window contents.
  * MS-Windows: Control keys don't work in the GUI.
  * Cannot use getmarklist() as a method.
  * XIM code is mixed with multi-byte code.
  * A .jl file can be sawfish (lisp) or Julia.
  * Signals test is a bit flaky.
  * Getting attributes for directory entries is slow.
  * :pwd does not give a hint about the scope of the directory
  * Cannot get the search statistics.
  * No reduce() function.
  * Compiler warning for unused function argument.
  * Leaking memory when using searchcount().
  * Compiler warning for argument type.
  * Leaking memory when using reduce().
  * Memory leak in test 49.
  * Searchcount() test fails on slower systems.
  * "make shadow" does not link new lua test dir.
  * Cannot use octal numbers in scriptversion 4.
  * Searchcount().exact_match is 1 right after a match.
  * Readdirex() returns size -2 for a directory.
  * Using old style comments.
  * No color in terminal window when 'termguicolor' is set.
  * Clang warns for invalid conversion.
  * Ubsan warns for undefined behavior.
  * Assert_equalfile() does not take a third argument.
  * :mkspell can take very long if the word count is high.
  * :mkspell output does not mention the tree type.
  * Crash when calling searchcount() with a string.
  * List of functions in patched version is outdated.
  * Missing help for a function goes unnoticed.
  * Assert_equalfile() does not give a hint about the difference.
  * Function list test fails on MS-Windows.
  * Formatting CJK text isn't optimal.
  * Using searchcount() in 'statusline' causes an error.
  * comparing WINVER does not work correctly.
  * Assuming modifyOtherKeys for rhs of mapping.
  * Test coverage could be better.
  * When setting 'termguicolors' SpellBad is no longer red.
  * When using :global clipboard isn't set correctly.
  * Crash when changing the function table while listing it.
  * Cannot go back to the previous local directory.
  * Vim is not reproducibly buildable.
  * Crash when opening a buffer for the cmdline window fails. (Chris Barber)
  * A few test cases for CJK formatting are disabled.
  * Code for resetting v:register is duplicated.
  * Search() cannot skip over matches like searchpair() can.
  * Mapping with partly modifyOtherKeys code does not work.
  * Quickfix entries do not suport a "note" type.
  * Duplicate code for evaluating expression argument.
  * Merging modifier for modifyOtherKeys is done twice.
  * Writing viminfo fails with a circular reference.
  * CTRL-W T in cmdline window causes trouble.
  * Search test fails.
  * Cmdline test is slow.
  * Cannot save and restore a register properly.
  * Getcompletion() does not return command line arguments.
  * Cmdline test fails on Appveyor.
  * Some sshconfig and ssdhconfig files are not recognized.
  * Many type casts are used for vim_strnsave().
  * v:register is not cleared after an operator was executed.
  * Script filetype detection trips over env -S argument.
  * Some remarks about BeOS remain.
  * Missspelling spelllang.
  * 'quickfixtextfunc' does not get window ID of location list.
  * Running lhelpgrep twice in a help window doesn't jump to the help topic.
  * Flattening a list with existing code is slow.
  * Some terminals misinterpret the code for getting cursor style.
  * Asan failure in the flatten() test.
  * NFA regexp uses tolower() to compare ignore-case. (Thayne McCombs)
  * checking for term escape sequences is long and confusing
  * Build failure with tiny features.
  * Detecting terminal properties is unstructured.
  * Expanding to local dir after homedir keeps "~/".
  * Displaying ^M or ^J depends on current buffer.
  * Xxd test leaves file behind.
  * Cannot use "z=" when 'spell' is off.
  * Cannot use "q" to cancel a number prompt.
  * Readdirex() doesn't handle broken link properly.
  * Spell test fails.
  * Strptime() does not use DST.
  * Tagjump test fails.
  * Search stat test has leftover from debugging.
  * No simple way to interrupt Vim.
  * Spell checking doesn't work for CamelCased words.
  * Not all desktop files are recognized.
  * Build fails.
  * Spell test fails.
  * Compiler warning for uninitialized variable. (Tony Mechelynck)
  * Not sufficient testing for buffer writing.
  * Using 'quickfixtextfunc' is a bit slow.
  * Cannot use :import in legacy Vim script.
  * Terminal test sometimes hangs on Travis.
  * Number increment/decrement does not work with 'virtualedit'.
  * TextYankPost does not provide info about Visual selection.
  * Has_funcundefined() is not used.
  * 'shortmess' flag "n" not used in two places.
  * Unnecessary type casts for vim_strnsave().
  * No proper testing of the 'cpoptions' flags.
  * Assert_equal() output for dicts is hard to figure out.
  * Terminal properties are not available in Vim script.
  * Build with tiny features fails.
  * Vim9 script variable declarations need a type.
  * Vim9: type is not checked when assigning to a script variable.
  * Vim9: memory leak when script var has wrong type.
  * Vim9: script variable does not accept optional s: prefix.
  * Some 'cpoptions' not tested.
  * t_8u is made empty for the wrong terminals. (Dominique Pelle)
  * Leaking memory in termcodes test.
  * A couple of screendump tests fail.
  * Raku file extension not recognized. (Steven Penny)
  * Vim9: cannot compile "[var, var] = list".
  * Insufficient testing for reading/writing files.
  * SConstruct file type not recognized.
  * Not using previous window when closing a shell popup window.
  * Simplify() does not remove slashes from "///path".
  * Vim9: cannot assign to [var; var].
  * Getting directory contents is always case sorted.
  * Crash after resizing a terminal window. (August Masquelier)
  * Using duplicate error number.
  * Cannot get window type for autocmd and preview window.
  * Vim9: crash when using :import in the Vim command.
  * Vim9 script test fails with normal features.
  * Vim9: missing function causes compilation error.
  * Insufficient testing for the readdir() sort option.
  * Using "aucmdwin" in win_gettype() is not ideal.
  * Cannot execute a register containing line continuation.
  * Not all tag code is tested.
  * Moving to next sentence gets stuck on quote.
  * Get error when leaving Ex mode with :visual and a CmdLineEnter autocommand
  was used.
  * Vim9: crash with nested "if" and assignment.
  * Test may fail when run directly.
  * Vim9: return type of sort() is too generic.
  * Line numbers below filler lines not always updated.
  * Vim9: using TRUE/FALSE/MAYBE for ctx_skip is confusing.
  * Vim9: require unnecessary return statement.
  * Completion doesn't work after ":r ++arg !".
  * Vim9: no test for disassambling newly added instructions.
  * Vim9: some failures not checked for.
  * Build failure in libvterm with debug enabled. (John Little)
  * Vim9: some code not tested.
  * Vim9: cannot declare single character script variables.
  * Channel tests can be a bit flaky.
  * Using "name" for a string result is confusing.
  * Popup filter gets key with modifier prepended when using modifyOtherKeys.
  * Vim9: test fails when channel feature is missing.
  * Appveyor output doesn't show MinGW console features.
  * Typo in enum value. (James McCoy)
  * Mapping <M-S-a> does not work in the GUI.
  * Popupwin test fails in the GUI.
  * Ruby interface not tested enough.
  * Various parts of code not covered by tests.
  * Vim9: redefining a function uses a new index every time.
  * Vim9: no error for using "let g:var = val".
  * Tabpage menu and tabline not sufficiently tested.
  * Vim9: cannot break the line after "->".
  * GUI: multi-byte characters do not work in a terminal.
  * Vim9: no error for declaring buffer, window, etc. variable.
  * Vim9: cannot chain function calls with -> at line start.
  * Reducing size of a terminal window may cause a crash.
  * Build failure with Perl5.32.
  * Error message for declaring a variable cannot be translated.
  * Not easy to read the test time in the test output.
  * Compiler warning for uninitialized variables.
  * setreg() does not always clear the register.
  * Popupwin test fails sometimes.
  * Vim9: crash when using line continuation inside :def.
  * Popupwin test fails.
  * Cannot put NUL byte on clipboard.
  * Not enough testing for movement commands.
  * Test summary is missing executed count.
  * Vim9: cannot put an operator on the next line.
  * %a item in 'statusline' not tested.
  * Not all systemd file types are recognized.
  * Vim9: line break before operator does not work.
  * Insufficient tests for src/buffer.c.
  * Vim9: script cannot use line continuation like in a :def function.
  * Build failure without the eval feature.
  * Vim9: leaking memory when using continuation line.
  * Missing change in struct.
  * Crash when changing a list while using reduce() on it.
  * Build failure with older compilers.
  * Insufficient testing for 'statusline' and 'tabline'.
  * Not so easy to pass a lua function to Vim.
  * No filetype set for pacman config files.
  * Wrong display when mixing match conceal and syntax conceal.
  * Cannot build with dynamic Lua.
  * Multiline conceal causes display errors.
  * Crash when using :tabonly in an autocommand. (Yegappan Lakshmanan)
  * Not all elinks files are recognized.
  * Insufficient testing for src/window.c.
  * Vim9: no line break allowed inside "cond ? val1 : val2".
  * Vim9: no line break allowed before || or &&.
  * Vim9: no line break allowed before comperators.
  * Vim9: no line break allowed inside a list.
  * Lua arrays are zero based.
  * Expression "!expr->func()" does not work.
  * Vim9: no line break allowed inside a dict.
  * Vim9: fail to check for white space in list.
  * Vim9: leaking memory when lacking white space in dict.
  * Vim9: no line break allowed inside a lambda.
  * Missing libvterm test.
  * Vim9: no line break allowed in () expression.
  * Vim9: no line break allowed after some operators.
  * Vim9: no line break allowed in :echo expression.
  * Vim9: no line break allowed in :if expression.
  * Not enough test coverage for highlighting.
  * Highlight and match functionality together in one file.
  * Vim9: no line break allowed in a while loop.
  * Vim9: no line break allowed in a for loop.
  * Lua: cannot use table.insert() and table.remove().
  * Coverity complains about ignoring dict_add() return value.
  * Crash when using reduce() on a NULL list.
  * Lua: registering function has useless code.
  * Coverity complains about ignoring dict_add() return value.
  * Possibly using freed memory when text properties used when changing
  indent of a line.
  * Possible memory leak when file expansion fails.
  * A very long translation might cause a buffer overflow.
  * Coverity warns for pointer computation.
  * May use NULL pointer when skipping over name.
  * No check if opening a pty works.
  * Not checking if saving for undo succeeds.
  * Python: double free when adding item to dict fails.
  * Dead code in libvterm.
  * May use pointer after freeing it when text properties are used.
  * Vim9: return type of getqflist() is wrong.
  * Highlight code not sufficiently tested.
  * Vim9: cannot use line break in :throw argument.
  * Vim9: cannot use line break in :cexpr argument.
  * Vim9: cannot use line break in :execute, :echomsg and :echoerr argument.
  * No error when using wrong arguments for setqflist() or setloclist().
  * Coverity gets confused by an unnecessary NULL check.
  * Coverity reports an unnecessary NULL check.
  * Coverity warns for possible NULL pointer use.
  * Insufficient test coverage for Lua.
  * Crash when trying to use s: variable in typed command.
  * 'imactivatefunc' and 'imstatusfunc' are not used in the GUI.
  * Mouse left-right scroll is not supported in terminal window.
  * Still crashing when using s:variable.
  * Vim9: line continuation does not work in function arguments.
  * Inconsistent naming of get_list_tv() and eval_dict().
  * Vim9: no line continuation allowed in method call.
  * No test for verbose output of :call.
  * Terminal test sometimes times out.
  * Iminsert test fails when compiled with VIMDLL.
  * Vim9: parsing command checks for list twice.
  * Coverity warns for unsing unitialized field.
  * Condition can never be true, dead code.
  * Configure fails with Xcode 12 beta.
  * Python code not tested properly.
  * Command completion not working after ++arg.
  * Vim9: line continuation in dict member not recognized.
  * Python 3 test is old style.
  * Vim9: no line break allowed in :import command.
  * Vim9: double quote can be a string or a comment.
  * Vim9: using :copen causes an error.
  * Vim9: getting a dict member may not work.
  * The write message mentions characters, but it's actually bytes.
  * Vim9: bar not recognized after not compiled command.
  * Vim9: bar not recognized after function call
  * Vim9: error message for returning a value in a function that does not
  return anything is not clear.
  * Vim9: return type of repeat() is not specific enough.
  * Vim9: return type of add() is not specific enough.
  * Vim9: getting a list member may not work.
  * Vim9: getting a dict member may not work.
  * Vim9: return type of argv() is always any.
  * Vim9: modifiers not cleared after compiling function.
  * Vim9: return type of copy() and deepcopy() is any.
  * Vim9: test for silent echo fails in some environments.
  * Vim9: return type of extend() is any.
  * Vim9: return type of filter() is any.
  * Vim9: return type of insert() is any.
  * Vim9: return type of remove() is any.
  * Vim9: return type of reverse() is any.
  * Vim9: "for" only accepts a list at compile time.
  * Not enough testing for Python.
  * :confirm may happen in cooked mode. (Jason Franklin)
  * Warning for using int instead of size_t.
  * Vim9: :eval command not handled properly.
  * ml_get error when using Python. (Yegappan Lakshmanan)
  * Insufficient test coverage for Python.
  * Vim9: function reference is missing script prefix.
  * Vim9: script test fails on some systems.
  * Vim9: crash when using imported function.

-------------------------------------------------------------------
Tue Jun 30 15:14:06 UTC 2020 - Ludwig Nussel <lnussel@suse.de>

- stop owning /etc/vimrc so the old, distro provided config actually
  gets removed. Leaving it around leads to a duplicated autocmd for
  *.spec, leading to spec file template inserted twice.

-------------------------------------------------------------------
Mon Jun 22 15:59:31 UTC 2020 - Ludwig Nussel <lnussel@suse.de>

- own some dirs in vim-data-common so installation of vim-small
  doesn't leave not owned directories (boo#1173256)

-------------------------------------------------------------------
Thu May 28 12:05:51 UTC 2020 - Ludwig Nussel <lnussel@suse.de>

- remove duplicated settings in defaults.vim from SUSE vimrc
- move SUSE vim settings to /usr in data-common package so leave
  /etc/vimrc to the admin.
- require data-common in vim-small so it gets the settings
- install spec file template as plugin as vim-small doesn't support
  it

-------------------------------------------------------------------
Thu May 21 15:16:53 UTC 2020 - Christian Boltz <suse-beta@cboltz.de>

- apparmor.vim: update from latest AppArmor 2.13 branch:
  - allow alias rules with leading whitespace
  - allow 'include if exists' rules

-------------------------------------------------------------------
Thu May 14 15:20:08 UTC 2020 - Ludwig Nussel <lnussel@suse.de>

- introduce vim-small package with reduced requirements for small
  installations.
- BuildRequire pkg-config(krb5) instead of krb5-mini to be able to
  build against Tumbleweed repo

-------------------------------------------------------------------
Wed May  6 07:37:25 UTC 2020 - Paolo Stivanin <info@paolostivanin.com>

- Update to version 8.2.0701 (no changelog)
- Rebase no-common.patch
- Rebase disable-unreliable-tests.patch

-------------------------------------------------------------------
Sat Apr 25 10:41:24 UTC 2020 - Andreas Stieger <andreas.stieger@gmx.de>

- update spec.skeleton to current header generated by spec-cleaner

-------------------------------------------------------------------
Thu Apr  9 09:58:21 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.0530, fixes the following problems
  * Vim9: not all code tested.
  * Vim9: constant expression not well tested.
  * Vim9: expression tests don't use recognized constants.
  * Terminal in popup test is still a bit flaky.
  * Vim9: while loop not tested.
  * Python 3.9 does not define _Py_DEC_REFTOTAL. (Zdenek Dohnal)
  * Vim9: str_val is confusing, it's a number
  * Cannot delete a text property matching both id and type. (Axel Forsman)
  * Insufficient testing for indent.c.
  * popup_atcursor() may hang. (Yasuhiro Matsumoto)
  * Yaml files are only recognized by the file extension.
  * Internal error when using "0" for a callback.
  * Some Normal mode commands not tested.
  * Printf test failing on Haiku.
  * Tag kind can't be a multi-byte character. (Marcin Szamotulski)
  * Hardcopy command not tested enough.
  * Can use :pedit in a popup window.
  * Vim9: import that redefines local variable does not fail.
  * Various Normal mode commands not fully tested.
  * The typebuf_was_filled flag is sometimes not reset, which may cause a hang.
  * Crash with combination of terminal popup and autocmd.
  * Prop_find() may not find text property at start of the line.
  * Type of term_sendkeys() is unknown.
  * Using wrong printf directive for jump location.
  * Coverity warning for not using return value.
  * Nasty callback test fails on some systems.
  * No CI test for a big-endian system.
  * prop_find() does not find all props.
  * Gcc warns for ambiguous else.
  * Tiny popup when creating a terminal popup without minwidth.
  * Using freed memory with :lvimgrep and autocommand. (extracted from POC
  by Dominique Pelle)
  * Some tests fail when run under valgrind.
  * Wrong feature check causes test not to be run.
  * Menu functionality insufficiently tested.
  * Part from unfinished patch got included.
  * Error for possible NULL argument to qsort().
  * Printmbcharset option not tested.
  * Delayed redraw when shifting text from Insert mode.
  * Terminal postponed scrollback test is flaky.
  * CI test coverage dropped.
  * Coverity warns for using array index out of range.
  * Coverity warns for not using return value.
  * Coverity complains about using NULL pointer.
  * Build fails with FEAT_EVAL but without FEAT_MENU.
  * Cmdexpand.c insufficiently tested.
  * Delayed screen update when using undo from Insert mode.
  * Profile test fails when two functions take same time.
  * Various memory leaks.
  * Not all tests using a terminal are in the list of flaky tests.
  * Not enough test coverage for evalvars.c.
  * Setting local instead of global flag.
  * When 'buftype' is "nofile" there is no overwrite check.
  * Writefile() error does not give a hint.
  * FileReadCmd event not well tested.
  * No early check if :find and :sfind have an argument.
  * Delete() commented out for testing.
  * Search test leaves file behind.
  * Channel test fails too often on slow Mac.
  * Buffer menu does not handle special buffers properly.
  * Channel connect_waittime() test is flaky.
  * Bsdl filetype is not detected.
  * Code in eval.c not sufficiently covered by tests.
  * Various memory leaks in Vim9 script code.
  * Vim9: cannot interrupt a loop with CTRL-C.
  * Interrupting with CTRL-C does not always work.
  * Crash when passing popup window to win_splitmove(). (john Devin)
  * In some environments a few tests are expected to fail.
  * Checking for wrong return value. (Tom)
  * Code for modeless selection not sufficiently tested.
  * Some errors were not tested for.
  * It is not possible to check for a typo in a feature name.
  * Buffer name may leak.
  * No warning when test checks for option that never exists.
  * Window creation failure not properly tested.
  * Some compilers don't support using \e for Esc. (Yegappan Lakshmanan)
  * A few tests fail in a huge terminal.
  * INT signal not properly tested.
  * Channel contents might be freed twice.
  * No warnings for incorrect printf arguments.
  * :disassemble has minor flaws.
  * Channel contents might be used after being freed.
  * Clipboard code is spread out.
  * Swap file test fails on some systems.
  * Listener with undo of deleting all lines not tested.
  * Terminal scroll tests fails on some systems.
  * Various functions not properly tested.
  * Vim9: crash if return type is invalid. (Yegappan Lakshmanan)
  * Not enough testing for restricted mode and function calls.
  * Win32: double-width character displayed incorrectly.
  * channel_parse_messages() fails when called recursively.
  * Trailing space in job_start() command causes empty argument.
  * Some tests fail when the system is slow.
  * Cannot set the highlight group for a specific terminal.
  * Test_confirm_cmd is flaky.
  * Test_quotestar() often fails when run under valgrind.
  * Missing feature check in test function.
  * Cannot check if a function name is correct.
  * Build failure because of wrong feature name.
  * Confirm test fails on amd64 system. (Alimar Riesebieter)
  * Previewwindow test fails on some systems. (James McCoy)
  * Build error without float and channel feature. (John Marriott)
  * Typos and other small problems.
  * Vim9: dead code and wrong return type.
  * Not parsing messages recursively breaks the govim plugin.
  * Vim9: some errors are not tested
  * GUI: pixel dust with some fonts and characters.
  * Vim9: no error for missing ] after list.
  * Test_confirm_cmd_cancel() can fail on a slow system.
  * Missing change to compile_list().
  * Terminal highlight name is set twice, leaking memory.
  * Variables declared in an outer scope.
  * Cannot use :write when using a plugin with BufWriteCmd.
  * Channel out_cb test still fails sometimes on Mac.
  * Terminal nasty callback test fails sometimes.
  * Vim9: error messages not tested.
  * New buffers are not added to the Buffers menu.
  * Unloading shared libraries on exit has no purpose.
  * Vim9: some code is not tested.
  * Travis is still using trusty.
  * Channel and sandbox code not sufficiently tested.
  * Vim9: "let x = x + 1" does not give an error.
  * Vim9: some error messages not tested.
  * Vim9 script test fails.
  * Vim9: some code and error messages not tested.
  * Vim9: compiling not sufficiently tested.
  * Vim9: Compiling can break when using a lambda inside :def.
  * Vim9: memory leaks.
  * Win32: VTP doesn't respect 'restorescreen'.
  * Cannot recognize a <script> mapping using maparg().
  * Vim9: some error messages not tested.
  * Vim9: some error messages not tested.
  * Vim9: asan error.
  * Vim9: some code not tested.
  * Vim9: disassemble test fails.
  * Too verbose output from the asan build in Travis.
  * Coverity complains about uninitialized field.
  * Calling a lambda is slower than evaluating a string.
  * Using the same loop in many places.
  * Vim9: script test fails when channel feature is missing.
  * Vim9: some code is not tested.
  * Vim9: some code is not tested.
  * Vim9: leaking scope memory when compilation fails.
  * term_getty() not sufficiently tested.
  * Coverity complains about ignoring return value.
  * Getbufvar() may get the wrong dictionary. (David le Blanc)
  * Vim9: func and partial types not done yet
  * various code is not properly tested.
  * Coverity complains about using uninitialized variable.
  * Cscope code not fully tested.
  * Vim9: no optional arguments in func type.
  * Reading past allocated memory when using varargs.
  * Several global functions are used in only one file.
  * Some compilers cannot add to "void *".
  * Client-server code is spread out.
  * Vim9: cannot separate "func" and "func(): void".
  * A terminal falls back to setting $TERM to "xterm".
  * Vim9: return type not properly checked.
  * Tests are not listed in sorted order.
  * Crash when reading a blob fails.
  * Several errors are not tested for.
  * Vim9: function types insufficiently tested.
  * Vim9: function arguments insufficiently tested.
  * Vim9: function argument with default not checked.
  * Test crashes on s390. (James McCoy)

-------------------------------------------------------------------
Tue Mar 31 14:23:28 UTC 2020 - Ismail Dönmez <idonmez@suse.com>

- Disable more tests failing randomly on OBS:
    * test_arglist
    * test_command_count
    * test_diffmode
    * test_mksession
    * test_startup
    * test_window_cmd

-------------------------------------------------------------------
Fri Mar 27 08:24:14 UTC 2020 - Ismail Dönmez <idonmez@suse.com>

- Add no-common.patch to make longVersion extern in all cases,
  fixes build with gcc10 bsc#1160418

-------------------------------------------------------------------
Sun Mar 15 20:19:21 UTC 2020 - Christian Boltz <suse-beta@cboltz.de>

- apparmor.vim: fix typo in setfcap capability (taken from AppArmor 2.13.4)

-------------------------------------------------------------------
Tue Mar  3 12:29:31 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.0348, fixes the following problems
  * Short name not set for terminal buffer.
  * Build failure on HP-UX system.
  * ex_getln.c code has insufficient test coverage.
  * MSVC: _CRT_SECURE_NO_DEPRECATE not defined on DEBUG build.
  * Vim9: types not sufficiently tested.
  * File missing in distribution, comments outdated.
  * No Haiku support.
  * Vim9: ":execute" does not work yet.
  * Vim9: error checks not tested.
  * Vim9: calling a function that is defined later is slow.
  * Text property not updated correctly when inserting/deleting.
  * Ex_getln.c code not covered by tests.
  * Compiler warning for using uninitialized variable. (Yegappan Lakshmanan)
  * Crash when opening and closing two popup terminal windows.
  * No redraw when leaving terminal-normal mode in a terminal popup window.
  * Popup filter converts 0x80 bytes.
  * Build error with popup window but without terminal.
  * Internal error when using test_void() and test_unknown(). (Dominique Pelle)
  * Some code in ex_getln.c not covered by tests.
  * Terminal in popup test is flaky.
  * Abort called when using test_void(). (Dominique Pelle)
  * No completion for :disassemble.
  * Vim9: insufficient test coverage for compiling.
  * Build fails on a few systems.
  * Build failure without the channel feature.
  * Vim9: function return type may depend on arguments.
  * Vim9: function and partial types not tested.
  * Using ":for" in Vim9 script gives an error.
  * Some code in ex_getln.c not covered by tests.
  * Vim9: using wrong instruction, limited test coverage.
  * ":def" not skipped properly.
  * Compiler warning when building without the float feature.
  * Vim9: finding common list type not tested.

-------------------------------------------------------------------
Tue Feb 25 12:51:05 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.0314, fixes the following problems
- refreshed vim-7.3-filetype_spec.patch 
  * Cannot recognize a terminal in a popup window.
  * ModifyOtherKeys cannot be temporarily disabled.
  * Terminal in popup test sometimes fails.
  * Several lines of code are duplicated.
  * Some code not covered by tests.
  * Fileformat test fails on MS-Windows.
  * A few new Vim9 messages are not localized.
  * Fileformat test still fails on MS-Windows.
  * "eval" after "if 0" doesn't check for following command.
  * Terminal in popup test sometimes fails on Mac.
  * No check for a following command when calling a function fails.
  * Trycatch test fails.
  * Vim9: operator after list index does not work. (Yasuhiro Matsumoto)
  * Some code not covered by tests.
  * The "num64" feature is available everywhere and building without it
  causes problems.
  * ":helptags ALL" gives error for directories without write
  permission. (Matěj Cepl)
  * Hang with combination of feedkeys(), Ex mode and :global. (Yegappan
  Lakshmanan)
  * Some Ex code not covered by tests.
  * Vim9: not allowing space before ")" in function call is too
  restrictive. (Ben Jackson)
  * Vim9: not all instructions covered by tests.
  * Channel test is flaky on Mac.
  * Vim9: no test for deleted :def function.
  * Vim9: throw in :def function not caught higher up.
  * Two placed signs in the same line are not combined.  E.g. in the terminal
  debugger a breakpoint and the PC cannot be both be            displayed.
  * Vim9: setting number option not tested.
  * Vim9: failing to load script var not tested.
  * Vim9: assignment test fails.
  * Unused error message. Cannot create s:var.
  * Cannot use popup_close() for a terminal popup.
  * Vim9: return in try block not tested; catch with pattern not tested.
  * Vim9: some float and blob operators not tested.
  * Vim9: :echo did not clear the rest of the line.
  * Running individual test differs from all tests.
  * Vim9: assigning [] to list<string> doesn't work.
  * Vim9: CHECKNR and CHECKTYPE instructions not tested.
  * Various Ex commands not sufficiently tested.
  * Cannot use Ex command that is also a function name.
  * Highlighting for :s wrong when using different separator.
  * Mixing up "long long" and __int64 may cause problems. (John Marriott)
  * Compiler warnings for the Ruby interface.
  * Vim9 script: cannot start command with a string constant.
  * Vim9: ISN_STORE with argument not tested.  Some cases in tv2bool()
  not tested.
  * Vim9: expression test fails without channel support.
  * Insufficient testing for exception handling and the "attention" prompt.
  * Setting 'term' may cause error in TermChanged autocommand.
  * TermChanged test fails in the GUI.
  * Terminal test if failing on some systems.
  * Relativenumber test fails on some systems. (James McCoy)
  * Vim9: :substitute(pat(repl does not work in Vim9 script.
  * Python 3 vim.eval not well tested.
  * 'showbreak' does not work for a very long line. (John Little)
  * Window-local values have confusing name.
  * Autocmd test fails on a slow system.
  * Short name not set for terminal buffer.

-------------------------------------------------------------------
Fri Feb 14 15:01:26 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.0257, fixes the following problems
  * Vim9 script commands not sufficiently tested.
  * Cannot assign to an imported variable.
  * When 'lazyredraw' is set the window title may not be updated.
  * :helptags and some other functionality not tested.
  * Crash when using winnr('j') in a popup window.
  * Error code E899 used twice.
  * Calling Vim9 function using default argument fails.
  * Crash when missing member type on list argument.
  * Fnamemodify() does not apply ":~" when followed by ":.".
  * Function a bit far away from where it's used.
  * Coverity complains about uninitialized field.
  * Test for ANSI colors fails without an "ls" command.
  * Missing search/substitute pattern hardly tested.
  * Configure does not recognize gcc 10.0 and later.
  * A popup window with a terminal can be made hidden.
  * Wrong file name shortening. (Ingo Karkat)
  * Several Vim9 instructions are not tested.
  * Terminal test fails on Mac.
  * Several Vim9 instructions are not tested.
  * Terminal test still fails on Mac.
  * Terminal test did pass on Mac.
  * No test for Vim9 += and ..=.
  * Vim9: optional function arguments don't work yet.
  * Some instructions not yet tested.
  * compiling :elseif not tested yet.
  * compiling lambda not tested yet.
  * Compiling for loop not tested.
  * Compiling a few instructions not tested.
  * Configure does not recognize gcc version on BSD.
  * Compare instructions not tested.
  * Terminal popup test is flaky.
  * Silent system command may clear the screen.
  * The :compiler command causes a crash. (Daniel Steinberg)
  * Crash when using garbagecollect() in between rand().
  * Message test fails on SunOS.
  * Draw error when an empty group is removed from 'statusline'.
  * Crash when setting 'wincolor' on finished terminal window. (Bakudankun)
  variables.  (Tim Pope)
  * Using memory after it was freed. (Dominique Pelle)
  * Crash when setting 'buftype' to "quickfix".
  * Preview popup window test fails with long directory name. (Jakub
  Kądziołka)
  * Insufficient code coverage for ex_docmd.c functions.
  * Compiler warning in Lua interface.
  * test_clear_search_pat() is unused.
  * A couple of function return types can be more specific.
  * Crash when using :disassamble without argument. (Dhiraj Mishra)
  * Compiler warning for checking size_t to be negative.
  * Time and timer related code is spread out.
  * Cannot recognize a terminal in a popup window.

-------------------------------------------------------------------
Mon Feb  3 09:17:59 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Refreshed disable-unreliable-tests.patch and vim-7.3-help_tags.patch
- Updated to version 8.2.0200, fixes the following problems
  * Message test fails on some platforms. (Elimar Riesebieter)
  * virtcol() does not check arguments to be valid, which may lead to a crash.
  * filter() and map() on blob don't work.
  * complete_info() does not work when CompleteDone is triggered.
  * Compiler warnings for variable types.
  * :mode no longer works for any system.
  * Textprop test fails.
  * Some buffer commands work in a popup window.
  * Cannot list options one per line.
  * Python3 ranges are not tested.
  * Command line is not cleared when switching tabs and the command line
  height differs.
  * Script may be re-used when deleting and creating a new one.
  * Invalid memory access with search command.
  * Some map functionality not covered by tests.
  * Bracketed paste can still cause invalid memory access. (Dominique Pelle)
  * Stray ch_logfile() call.
  * Crash when using win_execute() from a new tab.
  * Memory leak when starting a job fails.
  * No swift filetype detection.
  * Possible to enter popup window with CTRL-W p. (John Devin)
  * Coverity warning for possible use of NULL pointer.
  * Some mapping code is not fully tested.
  * Using #error for compilation errors should be OK now.
  * Wrong indent when 'showbreak' and 'breakindent' are set and 'briopt'
  includes "sbr".
  * Block Visual mode operators not correct when 'linebreak' set.
  * Mapping related function in wrong source file.
  * Maintaining a Vim9 branch separately is more work.
  * Cannot define python function when using :execute. (Yasuhiro Matsumoto)
  * Detecting a script was already sourced is unreliable.
  * Restoring ctrl_x_mode is not needed.
  * Warning shows when listing version info.
  * Reallocating the list of scripts is inefficient.
  * Warnings from MinGW compiler. (John Marriott) Json test fails when
  building without +float feature.
  * Various typos in source files and tests.
  * Vim9 script files not in list of distributed files.
  * Triggering CompleteDone earlier is not backwards compatible. (Daniel
  Hahler)
  * Non-materialized range() list causes problems. (Fujiwara Takuya)
  * Range test fails.
  * Not recognizing .gv file as dot filetype.
  * Balloon test fails in the GUI.
  * Test hangs on MS-Windows console.
  * Test_alot takes too long.
  * Coverity warning for using NULL pointer.
  * Coverity warning for using uninitialized variable.
  * Coverity warning for ignoring return value.
  * Coverity warning for assigning NULL to an option.
  * Coverity warning for dead code.
  * Coverity warning for ignoring return value.
  * Coverity warning for using uninitialized buffer.
  * Coverity warning for not restoring character.
  * Various commands not completely tested.
  * Crash when removing list element in map().
  * Generating os headers does not work for Swedish.
  * Memory leak in get_tags().
  * With VTP the screen may not be restored properly.
  * Still a few places where range() does not work.
  * Test for wrapmargin fails if terminal is not 80 columns.
  * Problems parsing :term arguments.
  * Min() and max() materialize a range() list.
  * Tests fail when the float feature is disabled.
  * Blob test fails.
  * Vim9 script: cannot use "if has()" to skip lines.
  * A couple of tests may fail when features are missing.
  * Reduntant code.
  * Check commands don't work well with Vim9 script.
  * cd() with NULL argument crashes.
  * Kotlin files are not recognized.
  * Cannot put a terminal in a popup window.
  * Build failure without +terminal feature.
  * Still build failure without +terminal feature.
  * Some commands can cause problems in terminal popup.
  * Some tests fail when run in the GUI.
  * Blocking commands for a finished job in a popup window.
  * Some Ex commands not sufficiently tested.
  * No tests for y/n prompt.

-------------------------------------------------------------------
Wed Jan 15 12:54:34 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.0119, fixes the following problems
  * Printf formats are not exactly right.
  * Hgignore is out of sync from gitignore.
  * When sign text is changed a manual redraw is needed. (Pontus Lietzler)
  * Corrupted text properties when expanding spaces.
  * prop_find() is not implemented.
  * VAR_SPECIAL is also used for booleans.
  * Illegal memory access when using 'cindent'.
  * "make cmdidxs" fails.
  * Info about sourced scripts is scattered.
  * Byte2line() does not work correctly with text properties. (Billie Cleek)
  * BufEnter autocmd not triggered on ":tab drop". (Andy Stewart)
  * Crash when using gettabwinvar() with invalid arguments. (Yilin Yang)
  * Crash when cycling to buffers involving popup window .
  * Message test fails on some platforms. (Elimar Riesebieter)
  * Wrong size argument to vim_snprintf(). (Dominique Pelle)
  * Diffmode completion doesn't use per-window setting.
  * Some corners of vim_snprintf() are not tested.
  * ERROR_UNKNOWN clashes on some systems.
  * Crash when using Python 3 with "utf32" encoding. (Dominique Pelle)
  * ETYPE_ is used for two different enums.
  * Crash when using Python 3 with "debug" encoding. (Dominique Pelle)
  * Initializing globals with COMMA is clumsy.
  * Python 3 unicode test sometimes fails.
  * Python 3 unicode test still sometimes fails.
  * settagstack() cannot truncate at current index.
  * Expanding <sfile> works differently the second time.
  * Python 3 unicode test still fails on MS-Windows.
  * Globals using INIT4() are not in the tags file.
  * When reusing a buffer listeners are not cleared. (Axel Forsman)
  * Text properties wrong when tabs and spaces are exchanged.
  * Complete item "user_data" can only be a string.
  * Dead code in builtin functions.
  * Build error for small version. (Tony Mechelynck)
  * Crash in command line expansion when out of memory.
  * Insufficient tests for tags; bug in using extra tag field when using an
  ex command to position the cursor.
  * Crash when running out of memory in :setfiletype completion.
  * Generated files show up in git status.
  * Compiler warnings for size_t / int types.
  * Tags functionality insufficiently tested.
  * win_splitmove() can make Vim hang.
  * Cannot specify exit code for :cquit.
  * Cannot create tiny popup window in last column. (Daniel Steinberg)
  * Crash with autocommand and spellfile. (Tim Pope)
  * Exe stack length can be wrong without being detected.
  * Use of NULL pointer when out of memory.
  * Macros for Ruby are too complicated.
  * Crash when passing null object to ":echomsg".
  * Messages test fails in small version.
  * Using null object with execute() has strange effects.
  * Using channel or job with ":execute" has strange effects.
  * Vim license not easy to find on github.

-------------------------------------------------------------------
Mon Dec 30 21:12:22 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.2.0063, fixes the following problems
  * #endif comments do not reflect corresponding #ifdef.
  * "dj" only deletes first line of closed fold.
  * Build file dependencies are incomplete.
  * Get E685 and E931 if buffer reload is interrupted.
  * Duplication in version info.
  * Test using long file name may fail. (Vladimir Lomov)
  * Popup menu positioned wrong with folding in two tabs.
  * Test72 is old style.
  * Test64 is old style.
  * Screen updating wrong when opening preview window.
  * Some undo functionality is not tested.
  * Not using a typedef for condstack.
  * Test69 and test95 are old style.
  * Not all modeline variants are tested.
  * Test name used twice, option not restored properly.
  * :join does not add white space where it should. (Zdenek Dohnal)
  * Cannot get number of lines of another buffer.
  * Mouse clicks in the command line not tested.
  * Click in popup window doesn't close it in the GUI. (Sergey Vlasov)
  * Command line editing not sufficiently tested.
  * Filetype Rego not recognized.
  * Repeated word in comment.
  * Still some /* */ comments.
  * Searchpairpos() is not tested.
  * "gF" does not work on output of "verbose command".
  * Crash when make_extmatch() runs out of memory.
  * Missing check for out of memory.
  * Saving and restoring called_emsg is clumsy.
  * Not enough test coverage for match functions.
  * Missing renamed message.
  * Spell suggestions insufficiently tested.
  * Memory access error when "z=" has no suggestions.
  * Timers test is still flaky on Travis for Mac.
  * Leaking memory when selecting spell suggestion.
  * Clearing funccal values twice.
  * Timers test is still flaky on Travis for Mac.
  * Expression type is used inconsistently.
  * Script test fails.
  * Tests for spell suggestions are slow.
  * Another timers test is flaky on Travis for Mac.
  * Command line completion not fully tested.
  * After deleting a file mark it is still in viminfo.
  * Command line completion test skipped. (Christian Brabandt)
  * More-prompt not properly tested.
  * windowsversion() does not always return the right value.
  * :diffget and :diffput don't have good completion.
  * Cannot use ":gui" in vimrc with VIMDLL enabled.
  * Execution stack is incomplete and inefficient.
  * Cannot build with small features.
  * Running tests changes ~/.viminfo.
  * Compiler warnings for unused variables in small build. (Tony Mechelynck)
  * Message test only runs with one encoding. (Dominique Pelle)
  * The execute stack can grow big and never shrinks.
  * Wrong size argument to vim_snprintf(). (Dominique Pelle)

-------------------------------------------------------------------
Fri Dec 13 11:05:45 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Update to version 8.2.0000
 * make depend" does not work correctly for libvterm.
 * Crash when calling popup_close() in win_execute()
 * With a long file name the hit-enter prompt appears.
 * bufnr('$') is wrong after recycling popup buffer.
 * loading menus sets v:errmsg.
 * popup menu flickers if an info popup is used.
 * Crash when evaluating expression with error.
 * Function argument copied unnecessarily.
 * syntax menu and build instructions outdated.
 * matchadd_conceal test fails under valgrind.
 * :cexpr does not handle | in expression.
 * Use // comments where appropriate.
 * 'wincolor' is not used for 'listchars'.
 * Opening cmdline window with feedkeys() does not work.

-------------------------------------------------------------------
Tue Dec  3 14:38:54 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.2383, fixes the following problems
 + refreshed patches: vim-7.3-help_tags.patch
                      vim-7.3-name_vimrc.patch
                      vim-8.1.0297-dump3.patch
  * Cannot get the Vim command line arguments.
  * get_short_pathname() fails depending on encoding.
  * "C" with 'virtualedit' set does not include multi-byte char.
  * Ml_get error if pattern matches beyond last line.
  * Mode() result after usign "r" depends on whether CURSOR_SHAPE is
  defined. (Christian Brabandt)
  * Error in docs tags goes unnoticed.
  * Popup window width changes when scrolling.
  * Match highlight does not combine with 'wincolor'.
  * Creating docs tags uses user preferences. (Tony Mechelynck)
  * 'wrapscan' is not used for "gn".
  * Third character of 'listchars' tab shows in wrong place when 'breakindent'
  is set.
  * Some tests are still in old style.
  * "make vimtags" does not work in runtime/doc.
  * CTRL-W dot does not work in a terminal when modifyOtherKeys is enabled.
  * "make vimtags" does not print any message.
  * CTRL-U and CTRL-D don't work in popup window.
  * ":term command" may not work without a shell.
  * Compiler warning for int size.
  * Using "which" to check for an executable is not reliable.
  * May get hit-enter prompt after entering a number. (Malcolm Rowe)
  * Running tests may leave XfakeHOME behind.
  * With modifyOtherKeys set 'noesckeys' doesn't work. (James McCoy)
  * Unpack assignment in function not recognized.
  * 'noesckeys' test fails in GUI.
  * There are two test files for :let.
  * When popup with "botleft" does not fit it flips incorrectly.
  * Position unknown for a mouse click in a popup window.
  * Compiler warning for uninitialized variable. (Tony Mechelynck)
  * Spell file flag zero is not recognized.
  * Tags file with very long line stops using binary search.
  * "gf" is not tested in Visual mode.
  * Build error if FEAT_TAG_BINS is not defined. (John Marriott)
  * Test may hang at more prompt.
  * Wrong default when "pos" is changed with popup_atcursor().
  * Newlines in 'balloonexpr' result only work in the GUI.
  * Using "seesion" looks like a mistake.
  * Terminal window is not updated when info popup changes.
  * Using "cd" with "exe" may fail.
  * Computation of highlight attributes is too complicated.
  * Crash when passing partial to substitute().
  * 'showbreak' cannot be set for one window.
  * Crash when passing many arguments through a partial. (Andy Massimino)
  * Missed on use of p_sbr.
  * Compiler warning for unused variable. (Tony Mechelynck)
  * Padding in structures wastes memory.
  * Using border highlight in popup window leaks memory.
  * Using EndOfBuffer highlight in popup does not look good.
  * Not using all space when popup with "topleft" flips to above.
  * After :diffsplit closing the window does not disable diff.
  * Autocommand test fails.
  * Memory leak when executing command in a terminal.
  * v:mouse_winid not set on click in popup window.
  * Join adds trailing space when second line is empty. (Brennan Vincent)
  * Cursor position wrong when characters are concealed and asearch causes
  a scroll.
  * If buffer of popup is in another window cursorline sign shows.
  * Text properties are not combined with syntax by default.
  * The ex_vimgrep() function is too long.
  * Missing part of 8.1.2296.
  * ConPTY in MS-Windows 1909 is still wrong.
  * Redraw breaks going through list of popup windows.
  * :lockmarks does not work for '[ and '].
  * Cursor in wrong position after horizontal scroll.
  * Cannot get the mouse position when getting a mouse click.
  * No warning for wrong entry in translations.
  * Double and triple clicks are not tested.
  * Positioning popup doesn't work for buffer-local textprop.
  * Deleting text before zero-width textprop removes it.
  * Compiler warning for argument type.
  * No proper test for directory changes in quickfix.
  * Warning for missing function prototype.
  * "line:" field in tags file not used.
  * Debugging where a delay comes from is not easy.
  * vi' sometimes does not select anything.
  * Not always using the right window when jumping to an error.
  * FORTIFY_SOURCE can also be present in CPPFLAGS.
  * No test for spell affix file with flag on suffix.
  * Compiler warning for int size.
  * Insufficient test coverage for quickfix.
  * Cannot select all text with the mouse. (John Marriott)
  * Quickfix test fails in very big terminal.
  * Width of scrollbar in popup menu not taken into account.
  * Crash when using balloon with empty line.
  * Cannot parse a date/time string.
  * Cannot build with Hangul input.
  * A few hangul input pieces remain.
  * Mouse multiple click test is a bit flaky.
  * vi' does not always work when 'selection' is exclusive.
  * The option.c file is still very big.
  * Missing file in refactoring.
  * With modifyOtherKeys CTRL-^ doesn't work.
  * Possible NULL pointer dereference in popup_locate(). (Coverity)
  * Error message for function arguments may use NULL pointer. (Coverity)
  * When an expr mapping moves the cursor it is not restored.
  * Double-click time sometimes miscomputed.
  * Using Visual mark sith :s gives E20 if not set.
  * Insufficient testing for quickfix.
  * Quickfix test fails under valgrind and asan.
  * Not so easy to interrupt a script programatically.
  * Random number generator in Vim script is slow.
  * Using time() for srand() is not very random.
  * .cjs files are not recognized as Javascript.
  * CTRL-R CTRL-R doesn't work with modifyOtherKeys.
  * :const cannot be followed by "| endif".
  * :lockvar and :unlockvar cannot be followed by "| endif".
  * Other text for CTRL-V in Insert mode with modifyOtherKeys.
  * 'wincolor' not used for > for not fitting double width char. Also:
  popup drawn on right half of double width character looks            wrong.
  * rand() does not use the best algorithm.
  * No test with wrong argument for rand().
  * Cannot build without FEAT_FLOAT. (John Marriott)
  * Quickfix test coverage can still be improved.
  * Cannot place signs in a popup window. (Maxim Kim)
  * ml_get error when accessing Visual area in 'statusline'.
  * Missing tests for recent popupwin changes.
  * Using old C style comments.
  * Registers are not sufficiently tested.
  * Using old C style comments.
  * Cannot build with quickfix and without text properties.
  * Build problems on VMS.
  * FEAT_TEXT_PROP is a confusing name.
  * Cannot build with +popupwin but without +quickfix. (John Marriott)
  * Unused parts of libvterm are included.
  * No suffucient testing for registers.
  * Preprocessor indents are incorrect.
  * GUI: when losing focus a pending operator is executed.
  * Using old C style comments.
  * Not all register related code is covered by tests.

-------------------------------------------------------------------
Tue Oct 29 12:32:18 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.2233, fixes the following problems
- dropped python38-config.patch (upstream merged)
- refreshed  disable-unreliable-tests.patch and vim-8.0.1568-defaults.patch
  * No test for right click extending Visual area.
  * Crash when running out of memory very early.
  * No test for 'ttymouse' set from xterm version response.
  * State test is a bit flaky.
  * Combining text property and syntax highlight is wrong. (Nick Jensen)
  * Quickfix window height wrong when there is a tabline. (Daniel Hahler)
  * In a terminal window 'cursorlineopt' does not work properly.
  * First character after Tab is not highlighted.
  * Libvterm source files missing from distribution.
  * Terminal attributes missing in Terminal-normal mode.
  * Some mappings are listed twice.
  * Cannot build with +syntax but without +terminal.
  * Mapping test fails.
  * Popup resize test is flaky. (Christian Brabandt)
  * Cannot build with +spell but without +syntax.
  * Stuck when using "j" in a popupwin with popup_filter_menu if a line wraps.
  * Rubyeval() not tested as a method.
  * Mapping test fails on MS-Windows.
  * Heredoc assignment not skipped in if block.
  * Terminal flags are never reset.
  * Cannot build without the +termresponse feature.
  * Mouse support not always available.
  * Spell highlight is wrong at start of the line.
  * Searchit() has too many arguments.
  * Screen not recognized as supporting "sgr" mouse codes.
  * Meson files are not recognized.
  * Syntax attributes not combined with Visual highlighting. (Arseny Nasokin)
  * Dart files are not recognized.
  * Accessing uninitialized memory in test.
  * Pressing "q" at the more prompt doesn't stop Python output. (Daniel Hahler)
  * Error E303 is not useful when 'directory' is empty.
  * Highlighting wrong when item follows tab.
  * Test42 seen as binary by git diff.
  * Running a test is a bit verbose.
  * Option context is not copied when splitting a window. (Daniel Hahler)
  * Syntax test fails.
  * Cannot build without the +eval feature.
  * Error for bad regexp even though regexp is not used when writing a
  file. (Arseny Nasokin)
  * Build error for missing define.
  * Syntax highlighting wrong for tab.
  * Syntax test fails on Mac.
  * When using modifyOtherKeys CTRL-X mode may not work.
  * Cannot easily fill the info popup asynchronously.
  * Popup_setoptions(popup_getoptions()) does not work.
  * ModifyOtherKeys is not enabled by default.
  * Vim does not exit when closing a terminal window and it is the last window.
  * ExitPre autocommand may cause accessing freed memory.
  * Crash when using :center in autocommand.
  * Build failure when using normal features without GUI and EXITFREE defined.
  * Crash when memory allocation fails.
  * Cannot build with dynamically linked Python 3.8.
  * Running libvterm tests without the +terminal feature.
  * Crash on exit when closing terminals. (Corey Hickey)
  * Sign entry structure has confusing name.
  * No test for fixed issue #3893.
  * "gn" doesn't work quite right. (Jaehwang Jerry Jung)
  * Unix: Tabs in output might be expanded to spaces.
  * LF in escape codes may be expanded to CR-LF.
  * Using negative offset for popup_create() does not work.
  * Listener callback "added" argument is not the total. (Andy Massimino)
  * Cannot see the selection type in :reg output. (Ayberk Aydın)
  * Popup_textprop tests fail.
  * Too much is redrawn when 'cursorline' is set.
  * Unreachable code in adjusting text prop columns.
  * Text property in wrong place after :substitute.
  * Compiler warning for unused variable.
  * "gN" is off by one in Visual mode.
  * No autocommand for open window with terminal.
  * :cfile does not abort like other quickfix commands.
  * Cannot filter :disp output.
  * Accessing invalid memory. (Dominique Pelle)
  * Cannot see what buffer an ml_get error is for.
  * Cannot build Amiga version.
  * The "last used" info of a buffer is under used.
  * Cannot use system copy/paste in non-xterm terminals.
  * Layout wrong if 'lines' changes while cmdline window is open.
  * screenpos() returns wrong values when 'number' is set. (Ben Jackson)
  * Cannot color number column above/below cursor differently.
  * Not easy to move to the middle of a text line.
  * Cannot get the Vim command line arguments.

-------------------------------------------------------------------
Wed Oct 23 12:35:39 CEST 2019 - Matej Cepl <mcepl@suse.com>

- Add python38-config.patch to make vim buildable with new Python 3.8.
  (gh#vim/vim#4080)

-------------------------------------------------------------------
Mon Oct 14 10:45:44 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.2148, fixes the following problems
  * Using "x" before a closed fold may delete that fold.
  * SafeStateAgain not triggered if callback uses feedkeys().
  * Compiler test for Perl may fail.
  * Not easy to jump to function line from profile.
  * "make test" for indent files doesn't cause make to fail.
  * The screen.c file is much too big.
  * Function for ex command is named inconsistently.
  * Fix for "x" deleting a fold has side effects.
  * "precedes" in 'listchars' not used properly.
  * The mouse code is spread out.
  * Some tests fail when +balloon_eval_term is missing but _balloon_eval is
  present. (Dominique Pelle)
  * No tests for state().
  * No tests for SafeState and SafeStateAgain.
  * Test for SafeState and SafeStateAgain may fail.
  * Test for SafeStateAgain may still fail.
  * Mouse code is spread out.
  * When 'wincolor' is set text property changes highlighting. (Andy Stewart)
  * "gk" moves to start of line instead of upwards.
  * When editing a buffer 'colorcolumn' may not work.
  * Test for SafeState autocommand is a bit flaky.
  * Get many log messages when waiting for a typed character.
  * Crash when trying to put a terminal buffer in a popup window.
  * The ops.c file is too big.
  * Build error with +textprop but without +terminal. (Tony Mechelynck)
  * Popup window test fails without +terminal.
  * The terminal API is limited and can't be disabled.
  * The spell.c file is too big.
  * Some files have a weird name to fit in 8.3 characters.
  * Multi-byte chars do not work properly with "%.*S" in printf().
  * Missing a few changes for the renamed files.
  * Cannot easily select one test function to execute.
  * Renamed libvterm mouse.c file not in distributed file list.
  * Do not get a hint that $TEST_FILTER was active.
  * Not clear why channel log file ends.
  * Double free when memory allocation fails. (Zu-Ming Jiang)
  * The fileio.c file is too big.
  * Leaking memory when getting item from dict.
  * Too many #ifdefs.
  * :mksession is not sufficiently tested.
  * mksession test fails on MS-Windows.
  * state() test fails on some Mac systems.
  * :mksession is not sufficiently tested.
  * write_session_file() often defined but not used.
  * Can't build with GTK and FEAT_GUI_GNOME. (Tony Mechelynck)
  * wrong error message if "termdebugger" is not executable.
  * The normal.c file is too big.
  * No tests for dragging the mouse beyond the window.
  * Various memory leaks reported by asan.
  * Cannot close the cmdline window from CmdWinEnter. (George Brown)
  * popup_getoptions() hangs with tab-local popup.
  * CTRL-C closes two popups instead of one.
  * Viminfo file not sufficiently tested.
  * Build number for ConPTY is outdated.
  * ":help expr-!~?" only works after searching.
  * When a popup is closed with CTRL-C the callback aborts.
  * No check for out of memory.
  * CursorLine highlight used while 'cursorline' is off.
  * Termcodes test fails when $TERM is "dumb".
  * memory access error for empty string when 'encoding' is a single byte
  encoding.
  * Some MB_ macros are more complicated than necessary. (Dominique Pelle)
  * Mode is not updated when switching to terminal in Insert mode.
  * Cannot build without terminal feature.
  * Parsing CSI sequence is messy.
  * Ruler is not updated if win_execute() moves cursor.
  * Fnamemodify() fails when repeating :e.
  * Viminfo not sufficiently tested.
  * The indent.c file is a bit big.
  * Renamed libvterm sources makes merging difficult.
  * Using hard coded executable path in test.
  * MSVC build fails.
  * MSVC tests fail.
  * MS-Windows: screen mess when not recognizing insider build.
  * Some tests fail when run as root.
  * Modifier keys are not always recognized.
  * With modifyOtherKeys Alt-a does not work properly.
  * using freed memory with autocmd from fuzzer. (Dhiraj Mishra, Dominique
  Pelle)
  * Parsing the termresponse is not tested.
  * Including the build number in the Win32 binary is confusing.
  * The modifyOtherKeys codes are not tested.
  * "gk" and "gj" do not work correctly in number column.
  * :tselect has an extra hit-enter prompt.
  * Some key mappings do not work with modifyOtherKeys.
  * Cannot see each command even when 'verbose' is set.
  * Side effects when using t_ti to enable modifyOtherKeys.
  * Cannot map <C-H> when modifyOtherKeys is enabled.
  * Build failure.
  * Crash when allocating memory fails. (Zu-Ming Jiang)
  * No test for right click extending Visual area.

-------------------------------------------------------------------
Wed Sep 18 09:36:58 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.2052, fixes the following problems
- refreshed patches:
   disable-unreliable-tests.patch
   vim-8.0-ttytype-test.patch
  * Cleared/added match highlighting not updated in other window. (Andi
  Massimino)
  * Still some match functions in evalfunc.c.
  * 'hlsearch' and match highlighting in the wrong place.
  * Build error without the conceal feature.
  * Compiler warning for unused argument.
  * ":dl" is seen as ":dlist" instead of ":delete".
  * Compiler warning for unused variables. (Tony Mechelynck)
  * :args output is not aligned.
  * Coverity warns for using negative index.
  * Depending on the terminal width :version may miss a line break.
  * When redrawing popups plines_win() may be called often.
  * Resizing hashtable is inefficient.
  * Use of popup window mask is inefficient.
  * Build failure.
  * Leaking memory when using a popup window mask.
  * Autocommand that splits window messes up window layout.
  * Text added with appendbufline() to another buffer isn't displayed.
  * Count of g$ not used correctly when text is not wrapped.
  * No mode char for terminal mapping from maparg().
  * Extra line break for wrapping output of :args.
  * Filetype "vuejs" causes problems for some users.
  * Some filetype rules are in the wrong place.
  * Evalfunc.c is still too big.
  * ":browse oldfiles" is not tested.
  * get(func, dict, def) does not work properly.
  * Code for writing session file is spread out.
  * FEAT_SESSION defined separately.
  * Man plugin changes setting in current window.
  * 'shellslash' is also used for completion.
  * Cannot get the window ID of the popup preview window.
  * The preview popup window may be too far to the right.
  * Test is silently skipped.
  * Error message may be empty in filetype test.
  * Text added with a job to another buffer isn't displayed.
  * Useless checks for job feature in channel test.
  * Not showing the popup window right border is confusing.
  * Not showing the popup window right border is confusing.
  * Warning for file no longer available is repeated every time Vim is
  focused. (Brian Armstrong)
  * Amiga: no builtin OS readable version info.
  * Map functionality mixed with character input.
  * Double click in popup scrollbar starts selection.
  * Cannot resize a popup window.
  * missing changes in proto file
  * Cannot see file name of preview popup window.
  * :mkvimrc is not tested.
  * 'completeslash' also applies to globpath().
  * The vgetorpeek() function is too long.
  * Mixed comment style in globals.
  * Tests are flaky.
  * No syntax HL after splitting windows with :bufdo. (Yasuhiro Matsumoto)
  * :argdo is not tested
  * The vgetorpeek() function is too long.
  * Warning for unused variable in tiny version. (Tony Mechelynck)
  * Cannot avoid mapping for a popup window.
  * Function call functions have too many arguments.
  * Cannot build without the +eval feature.
  * Missing change to call_callback().
  * All builtin functions are global.
  * No test for display updating without a scroll region.
  * Au_did_filetype is declared twice.
  * Test for display updating doesn't check without statusline.
  * More functions can be used as a method.
  * Build failure for tiny version.
  * More functions can be used as a method.
  * Popup_getoptions() is missing an entry for "mapping".
  * Popup window color cannot be set to "Normal".
  * Reading a truncted undo file hangs Vim.
  * ATTENTION prompt for a preview popup window.
  * A long title in a popup window overflows.
  * Duplicating info for internal functions.
  * Cannot use a user defined function as a method.
  * Github contribution text is incomplete.
  * Unused variable.
  * :pedit does not work with a popup preview window.
  * Using expr->FuncRef() does not work.
  * No test for wrong number of method arguments.
  * Confusing error message when range is not allowed.
  * Command line history code is spread out.
  * Crash when correctly spelled word is very long. (Ben Kraft)
  * Allocating more memory than needed for extended structs.
  * Tests use hand coded feature and option checks.
  * Allocating more memory than needed for extended structs.
  * Not strict enough checking syntax of method invocation.
  * Difference in screenshots.
  * Confusing skipped message.
  * Win_execute() does not work in other tab. (Rick Howe)
  * Allocating a bit too much when spellbadword() does not find a bad word.
  * Cannot use a lambda as a method.
  * Cannot use printf() as a method.
  * Inaccurate memory estimate for Amiga-like OS.
  * Popup test fails if clipboard is supported but not working.
  * There is :spellwrong and :spellgood but not :spellrare.
  * Insufficient info when test fails because of screen size.
  * Testing: WorkingClipboard() is not accurate.
  * No test for Ex shift commands.
  * Test listed as flaky should no longer be flaky.
  * Might be freeing memory that was not allocated.
  * Buffer no longer unloaded when adding text properties to it.
  * May use NULL pointer when running out of memory.
  * Inconsistently using GetVimCommand() and v:progpath. (Daniel Hahler)
  * Suspend test is failing.
  * 'langmap' is not used for CTRL-W command in terminal.
  * Focus may remain in popup window.
  * Crash when sound_playfile() callback plays sound.
  * Timers test is flaky.
  * Timers test is still flaky.
  * Now another timer test is flaky.
  * Another failing timer test.
  * popup preview test fails sometimes. (Christian Brabandt)
  * Cannot use modifier with multi-byte character.
  * Test for multi-byte mapping fails on some systems.
  * Timer test sometimes fails on Mac.
  * Map timeout test is flaky.
  * Only some assert functions can be used as a method.
  * Coverity warns for not using return value.
  * Confusing error when using a builtin function as method while it does
  not support that.
  * Still a timer test that is flaky on Mac.
  * Spellrare and spellrepall in the wrong order.
  * Modeless selection in GUI does not work properly.
  * Still a timer test that is flaky on Mac.
  * Multibyte characters in 'listchars' don't work correctly if 'linebreak'
  is also enabled. (Martin Tournoij)
  * Code for the argument list is spread out.
  * Using :pedit from a help file sets the preview window to help
  filetype. (Wang Shidong)
  * Modeless selection in GUI still not correct.
  * When Vim exits because of a signal, VimLeave is not triggered. (Daniel
  Hahler)
  * Cannot build tiny version.
  * Modeless selection in popup window overlaps scrollbar.
  * Cannot get size and position of the popup menu.
  * proto file missing from distribution
  * Graduated features scattered.
  * Negative float before method not parsed correctly.
  * More functions can be used as methods.
  * Cannot show extra info for completion in a popup window.
  * Popup window test fails in some configurations.
  * Cannot specify properties of the info popup window.
  * Options test fails.
  * Cannot use mouse scroll wheel in popup in Insert mode.  Mouse clicks in
  popup close the popup menu.
  * Comments in libvterm are inconsistent.
  * Command line expansion code is spread out.
  * The +cmdline_compl feature is not in the tiny version.
  * More functions can be used as methods.
  * Coverity warns for using a NULL pointer.
  * Ml_get error when deleting fold marker.
  * Functions used in one file are global.
  * Missing index entry and option menu for 'completepopup'.
  * Script to summarize test results can be improved.
  * Not checking for out-of-memory of autoload_name().
  * Using NULL pointer when out of memory.
  * Compiler warning for unused variable.
  * May free memory twice when out of memory.
  * Crash when out of memory during startup.
  * sign_place() does not work as documented.
  * Sign test fails in the GUI.
  * The +insert_expand feature is not always available.
  * Cannot have an info popup without a border.
  * Cannot build without the +eval feature.
  * Cannot have an info popup align with the popup menu.
  * Cannot set all properties of the info popup.
  * Info popup size is sometimes incorrect.
  * Wrong position for info popup with scrollbar on the left.
  * Every popup window consumes a buffer number.
  * More functions can be used as methods.
  * Redrawing too much when toggling 'relativenumber'.
  * More functions can be used as methods.
  * More functions can be used as methods.
  * Not easy to compute the space on the command line.
  * Command line expansion code is spread out.
  * More functions can be used as methods.
  * Trying to allocate negative amount of memory when closing a popup.
  * Non-current window is not redrawn when moving popup. (Ben Jackson)
  * Redrawing popups is inefficient.
  * Using current window option values when passing a buffer to popup_create().
  * Cannot close a popup by the X when a filter consumes all events.
  * More functions can be used as methods.
  * In diff mode global operations can be very slow.
  * Some source files are not in a normal encoding.
  * Using empty string for current buffer is unexpected.
  * More functions can be used as methods.
  * Cursorline not redrawn when putting a line above the cursor.
  * Code for dealing with script files is spread out.
  * Popup windows don't move with the text when making changes.
  * No tests for text property popup window.
  * Cannot recognize .jsx and .tsx files.
  * Syntax test fails.
  * Ml_get errors after using append(). (Alex Genco)
  * The eval.c file is too big.
  * Not enough tests for text property popup window.
  * Test for text property popup window is flaky.
  * Not enough tests for text property popup window.
  * Errors when using javascriptreact.
  * May crash when out of memory.
  * Code for handling v: variables in generic eval file.
  * Script tests fail.
  * getftype() test fails on Mac.
  * Shadow directory gets outdated when files are added.
  * More code can be moved to evalvars.c.
  * Leaking memory when using sound callback.
  * Popup window "firstline" cannot be reset.
  * Memory error when profiling a function without a script ID.
  * When executing one test the report doesn't show it.
  * Mouse doesn't work in Linux console and causes 100% CPU. (James P. Harvey)
  * Cannot scroll a popup window to the very bottom.
  * Using NULL pointer after an out-of-memory.
  * Mouse double click test is a bit flaky.
  * More functions can be used as a method.
  * Tests contain typos.
  * Screenshot tests may use a different encoding. (Dominique Pelle)
  * More code can be moved to evalvars.c.
  * Old style comments taking up space.
  * When using "firstline" in popup window text may jump when redrawing
  it. (Nick Jensen)
  * Fold code is spread out.
  * More functions can be used as a method.
  * Leaking memory when using tagfunc().
  * Popup window filter may be called recursively when using a Normal mode
  command. (Nick Jensen)
  * Crash when using nested map() and filter().
  * The search count message is not displayed when using a mapping. (Gary
  Johnson)
  * Some code in options.c fits better elsewhere.
  * Line() only works for the current window.
  * Crash when using nested map().
  * Popup window filter is used in all modes.
  * Search stat space wrong, no test for 8.1.1965.
  * Manually enabling features causes build errors. (John Marriott)
  * No proper test for getchar().
  * Cannot build without the quickfix feature.
  * Travis log always shows test output.
  * Terminal debugger plugin may hang.
  * The eval.c file is too big.
  * Code for handling file names is spread out.
  * Fix for search stat not tested.
  * The evalfunc.c file is too big.
  * More functions can be used as methods.
  * Compiler nags for uninitialized variable and unused function.
  * More functions can be used as methods.
  * Code for dealing with paths is spread out.
  * More functions can be used as methods.
  * :startinsert! does not work the same way as "A".
  * The evalfunc.c file is still too big.
  * Cannot build with eval but without cscope.
  * Still cannot build with eval but without cscope.
  * The search stat moves when wrapping at the end of the buffer.
  * More functions can be used as methods.
  * No redraw after a popup window filter is invoked.
  * Redraw even when no popup window filter was invoked.
  * Calling both PlaySoundW() and PlaySoundA().
  * Plugin cannot get the current IME status.
  * Some source files are too big.
  * Version number 2000 missing.
  * More functions can be used as methods.
  * The regexp.c file is too big.
  * Build failure with huge features but without channel feature.
  * No test for what 8.1.1926 fixes.
  * Error for invalid range when using listener and undo. (Paul Jolly)
  * Cursorline highlighting not updated in popup window. (Marko Mahnič)
  * New file uses old style comments.
  * More functions can be used as methods.
  * More functions can be used as methods.
  * More functions can be used as methods.
  * Terminal altscreen test fails sometimes.
  * Terminal altscreen test still fails sometimes.
  * Terminal altscreen test now fails on MS-Windows.
  * Cannot execute commands after closing the cmdline window.
  * Using freed memory when out of memory and displaying message.
  * 'cursorline' always highlights the whole line.
  * It is not easy to change the window layout.
  * Some global functions can be local to the file.
  * The option.c file is too big.
  * No test for synIDattr() returning "strikethrough".
  * Delete call commented out for debugging.
  * Possibly using uninitialized memory.
  * Options test script does not work.
  * Cannot control 'cursorline' highlighting well.
  * Tests fail when build with normal features and terminal. (Dominique Pelle)
  * Cursor position wrong when resizing and using conceal.
  * Scrollbar thumb wrong in popup window.
  * Cannot build with tiny features.
  * Dark theme of GTK 3 not supported.
  * Recognizing octal numbers is confusing.
  * The str2nr() tests fail.
  * Can call win_gotoid() in cmdline window.
  * has('vimscript-4') is always 0.
  * Character from 'showbreak' does not use 'wincolor'. (Nick Jensen)
  * No highlighting of current line in quickfix window.
  * No test for diff mode with syntax highlighting.
  * The evalfunc.c file is too big.
  * Not sufficient testing for quoted numbers.
  * No easy way to process postponed work. (Paul Jolly)
  * The option.c file is too big.
  * SafeState may be triggered at the wrong moment.
  * Cannot check the current state.
  * Not clear why SafeState and SafeStateAgain are not triggered.
  * Cannot build tiny version.
  * Popup window test fails in some configurations. (James McCoy)
  * Double-click test is a bit flaky.
  * Using "x" before a closed fold may delete that fold.

-------------------------------------------------------------------
Wed Aug 28 01:19:56 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- By default do not put group in specfile as it is optional

-------------------------------------------------------------------
Wed Jul 24 11:47:56 UTC 2019 - Antonio Larrosa <alarrosa@suse.com>

- Update to version 8.1.1741, fixes the following problems
  * Cleared/added match highlighting not updated in other window.
  * Exepath() doesn't work for "bin/cat".
  * Deleted match highlighting not updated in other window.
  * Testing lambda with timer is slow.
  * :args command that outputs one line gives more prompt.
  * Viminfo support is spread out.
  * Can't build with tiny features.
  * The evalfunc.c file is too big.
  * The man ftplugin leaves an empty buffer behind.
  * Completion in cmdwin does not work for buffer-local commands.
  * Command line history not read from viminfo on startup.
  * Wrong place for mark viminfo support.
  * Heredoc with trim not properly handled in function.
  * Wrong place for command line history viminfo support.
  * Code for viminfo support is spread out.
  * The eval.txt help file is too big.
  * MS-Windows: E325 message may use incorrect date format.
  * Too much overhead checking for CTRL-C while processing text.
  * Heredoc assignment has no room for new features.
  * Error when scriptversion is 2 a making a dictionary access.
  * Build failure with normal features without netbeans interface.
  * Crash with very long %[] pattern.
  * Popup too wide when 'showbreak' is set.
  * Popup menu highlighting does not look good.
  * Last char in menu popup window highlighted.
  * Old style comments are wasting space
  * Emoji characters are seen as word characters for spelling.
  * Cannot preview a file in a popup window.
  * Highlighting cursor line only works with popup_menu().
  * Signs in number column cause text to be misaligned.
  * Listener callback called at the wrong moment
  * Coverity found dead code.
  * Coverity warns for possibly using a NULL pointer.
  * Coverity warns for using uninitialized variable.
  * Coverity warns for possibly using a NULL pointer.
  * Typo in #ifdef.
  * Using ~{} for a literal dict is not nice.
  * C-R C-W does not work after C-G when using 'incsearch'.
  * Breaking out of loop by checking window pointer is insufficient.
  * Compiler warning for uninitialized variable.
  * Appveyor build with MSVC fails puts progress bar in log.
  * Listener callback called for the wrong buffer.
  * Highlight_ga can be local instead of global.
  * Appveyor build with MSVC fails.
  * Cannot build with MSVC.
  * MSVC: link command line is too long.
  * Windows 10: crash when cursor is at bottom of terminal.

-------------------------------------------------------------------
Mon Jul 15 12:00:32 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.1694, fixes the following problems
  * Cannot specify highlighting for popup window scrollbar.
  * Missing changes to popup window test file.
  * Popup window cannot overflow on the left or right.
  * Crash when using unknown highlighting in text property.
  * Popup window scroll test is flaky.
  * Vim may delay processing messages on a json channel. (Pontus Leitzler)
  * On a narrow screen ":hi" output is confusing.
  * Popup window scrollbar does not respond to click.
  * The evalfunc.c file is too big.
  * The user cannot easily close a popup window.
  * There is no way to add or load a buffer without side effects.
  * Bufadd() reuses existing buffer without a name.
  * Cannot show an existing buffer in a popup window.
  * Popup window test fails with Athena and Motif.
  * 'numberwidth' can only go up to 10.
  * Crash when passing buffer number to popup_create(). (Yasuhiro Matsumoto)
  * No test for popup window with mask and position fixed.
  * Amiga-like systems quickly run out of stack.
  * Tests are not run with GUI on Travis.
  * No test for popup window with border and mask.
  * Amiga: time.h included twice.
  * Wrong width if displaying a lot of lines in a popup window.
  * Display wrong with signs in narrow number column.
  * When testing in the GUI may try to run gvim in a terminal.
  * Script line numbers are not exactly right.
  * No test for closing a popup window with a modified buffer.
  * Header file contains mixed comment style.
  * Popup window functions not in list of functions.
  * Terminal function help is in the wrong file.
  * Various small problems.
  * Displaying signs is inefficient.
  * Build with EXITFREE but without +arabic fails.
  * Cannot generate prototypes with X11 but without GUI.
  * Terminal test fails when term_getansicolors() is missing. Diff test
  fails without +rightleft.  (Dominique Pelle)
  * Warnings for unused variables in small version. (John Marriott)
  * Crash when popup has fitting scrollbar. (Trygve Aaberge)
  * After running tests and clean the XfakeHOME directory remains.
  * Running tests leaves some files behind.
  * Changing an autoload name into a script file name is inefficient.
  * The CursorHold autocommand takes down a balloon. (Paul Jolly)
  * Garbage collection may run at a wrong moment. (Trygve Aaberge)
  * May use uninitialized variable. (Patrick Palka)
  * Sign placement is wrong when 'foldcolumn' is set.
  * Sound test does not work on Travis.
  * Cannot use a popup window for a balloon.
  * build failure
  * Build error with GTK and hangulinput feature, im_get_status() defined
  twice. (Dominique Pelle)
  * Illegal memory access when closing popup window.
  * Warning for using uninitialized variable. (Tony Mechelynck)
  * Suspend test is flaky on some systems.
  * GUI: popup window doesn't close on mouse movement. (Paul Jolly)
  * Ubsan warns for possibly passing NULL pointer.
  * GUI: screen updates from 'balloonexpr' are not displayed.
  * Popup window border drawn wrong with multi-byte char. (Marcin Szamotulski)
  * Popup window width is wrong when using Tabs. (Paul Jolly)
  * Terminal: screen updates from 'balloonexpr' are not displayed.
  * Debug statements included in patch.
  * Popup window "mousemoved" values not correct.
  * Assert_fails() does not fail inside try/catch.
  * Cannot build with +textprop but without +balloon_eval.
  * Cannot build uninstal.exe with some version of MinGW.
  * Compiler warning for using size_t.
  * GUI resize may cause changing Rows at a bad time. (Dominique Pelle)
  * Crash when popup window with mask is below the screen.
  * Click in popup window scrollbar with border doesn't scroll.
  * Flags for Ex commands may clash with other symbols.
  * Popup window test is a bit flaky on some systems.
  * Travis: test results section is closed even when some tests failed.
  * Sign column not always properly aligned.
  * Copying a blob may result in it being locked.
  * "make cmdidxs" doesn't work.
  * Cannot easily find the popup window at a certain position.
  * Script to check a colorscheme can be improved.
  * Listener list not correctly updated on listener_remove().
  * "maxwidth" of popup window does not always work properly.
  * Tests get stuck when running into an existing swapfile.
  * When using popup_menu() does not scroll to show the selected line.
  * Test using SwapExists autocommand file may fail.
  * The command table is not well aligned.
  * Insert stray "{" when listener gets buffer line. (Paul Jolly)
  * Placing a larger number of signs is slow.
  * Dictionary with string keys is longer than needed.
  * Profiling functionality is spread out.
  * Missing file in distributed file list.
  * "*" of "*{" is recognized as multipy operator. (Yasuhiro Matsumoto)
  * The evalfunc.c file is too big.
  * Old makefiles are no longer useful.
  * Profiling code is spread out.
  * Default padding for popup window menu is too much.
  * Diff test fails on some systems. (Elimar Riesebieter)
  * Using *{} for literal dict is not backwards compatible. (Yasuhiro
  Matsumoto)
  * Syntax coloring and highlighting is in one big file.
  * The RUN_VIM variable is longer than needed.

-------------------------------------------------------------------
Wed Jun 26 18:01:57 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.1600, fixes the following problems
  * Popup_setoptions() is not implemented yet.
  * Popup window not always redrawn after popup_setoptions().
  * Crash when using closures.
  * Sign column takes up space.  (Adam Stankiewicz)
  * Error message when terminal closes while it is not in the current tab.
  * Localtime_r() does not respond to $TZ changes.
  * Cannot build with signs but without diff feature.
  * Icon signs not displayed properly in the number column.
  * textprop highlight starts too early if just after a tab.
  * Compiler warnings with tiny build. (Tony Mechelynck)
  * Textprop test fails if screenhots do not work.
  * Tabpage option not yet implemented for popup window.
  * Compiler warning for unused argument.
  * Command line redrawn for +arabic without Arabic characters. (Dominique
  Pelle)
  * Dict and list could be GC'ed while displaying error in a timer. (Yasuhiro
  Matsumoto)
  * Cannot make part of a popup transparent.
  * Shared functions for testing are disorganised.
  * Cannot build with +textprop but without +timers.
  * Set_ref_in_list() only sets ref in items.
  * The evalfunc.c file is getting too big.
  * :let-heredoc does not trim enough.
  * Error number used in two places.
  * Redraw problem when sign icons in the number column.
  * In :let-heredoc line continuation is recognized.
  * Popup window does not indicate scroll position.
  * Popup window test fails.
  * On error garbage collection may free memory in use.
  * May start file dialog while exiting.
  * Filetype not detected for C++ header files without extension.
  * May still start file dialog while exiting.
  * When resizing the screen may draw popup in wrong position. (Masato
  Nishihata)
  * Cannot scroll a popup window with the mouse.
  * Update to test file missing.
  * Compiler warning for uninitialized variable. (Tony Mechelynck)
  * Cannot specify highlighting for popup window scrollbar.

-------------------------------------------------------------------
Mon Jun 17 13:30:58 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.1561, fixes the following problems
- refreshed patches:
    disable-unreliable-tests.patch
    vim-7.4-highlight_fstab.patch
  * Cscope test fails.
  * The generated desktop files may be invalid.
  * No test for checking the cursor style response.
  * New Unicode character U32FF missing from double-width table.
  * 'background' not correctly set for 2-digit rgb termresponse.
  * Add_termcap_entry() is not tested.
  * New resolve() implementation causes problem for plugins.
  * 'ttybuiltin' is not tested.
  * Search string not displayed when 'rightleft' is set.
  * No statistics displayed after running tests.
  * Test summary fails in the tiny version.
  * Still an error when running tests with the tiny version.
  * Change included for debugging only.
  * Length for two-digit rgb termresponse is off by one.
  * No test for wincol() depending on the 'number' option.
  * Skipped tests are not properly listed.
  * Some tests are slow.
  * Double free when garbage_collect() is used in autocommand.
  * A listener change is merged even when it adds a line. (Paul Jolly)
  * Older msgfmt cannot generate proper .desktop file.
  * Summary of tests has incorrect failed count.
  * Sign order wrong when priority was changed.
  * When a single test fails the exit code is not set. (Daniel Hahler)
  * When skipping over code after an exception was thrown expression evaluation
  is aborted after a function call. (Ingo Karkat)
  * Redrawing with popups is slow and causes flicker.
  * Build failure.
  * Memory access error.
  * Popup window height is not recomputed.
  * Accessing memory beyond allocated space.
  * ":write" increments b:changedtick even though nothing changed. (Daniel
  Hahler)
  * Ruler not updated after popup window was removed.
  * Wrong shell command when building with VIMDLL and "!" in 'guioptions'.
  * New behavior of b:changedtick not tested.
  * Cannot play any sound.
  * Sound test fails on Travis.
  * Sound test still fails on Travis.
  * Running "make clean" twice gives errors.
  * Syntax error in Travis config.
  * Sound test still fails on Travis.
  * Sound keeps failing on Travis.
  * Cmdline_row can become negative, causing a crash.
  * A plugin cannot easily expand a command like done internally.
  * Matches in a popup window are not displayed properly.
  * ch_evalexpr() hangs when used recursively. (Paul Jolly)
  * All popup functionality is in functions, except :popupclear.
  * Memory leak reported for sound when build with EXITFREE.
  * Time reported for a test measured wrong.
  * When a popup changes all windows are redrawn.
  * Crash when setting 'columns' while a popup is visible.
  * 'backupskip' may contain duplicates.
  * Popup windows are ignored when dealing with mouse position.
  * When a popup window is closed the buffer remains.
  * Popup_notification() not implemented yet.
  * Cannot show range of buffer lines in popup window.
  * Tests are silently skipped.
  * Cannot move a popup window with the mouse.
  * No numerical value for the patchlevel.
  * When moving a popup window over the command line it is not redrawn.
  * Popup_any_visible() is unused.
  * Libcanberra is linked with even when not used.
  * Travis config is not optimal.
  * Clipboard type name is inconsistent.
  * Build fails.
  * Modeless selection in popup window selects too much.
  * Popup select test fails on Mac.
  * Popup select test still fails on Mac.
  * Using "tab" for popup window can be confusing.
  * Cannot specify highlighting for notifications.
  * Not easy to define a variable and lock it.
  * Cannot build without the +eval feature.
  * Check for ASAN is not reliable.
  * An OptionSet autocommand does not get enough info.
  * Const test fails with small features.
  * Some balloon tests don't run when they can.
  * When the screen is to small there is no message about that. (Daniel Hahler)
  * In some tests 'tags' is set but not restored. (Daniel Hahler)
  * Functionality of bt_nofile() is confusing.
  * Popup_dialog() is not implemented.
  * Quickfix test fails.
  * When a popup has left padding text may be cut off.
  * Warning for shadowing popup_dragwin. (Dominique Pelle)
  * Cursor position is wrong after sign column appears or disappears. (Yegappan
  Lakshmanan)
  * Not easy to change the text in a popup window.
  * Docs and tests for :const can be improved.
  * NOT_IN_POPUP_WINDOW is confusing. (Andy Massimino)
  * The command displayed to show a failing screenshot does not include the
  "testdir" directory.
  * Compiler warning for unused variables in tiny version. (Tony Mechelynck)
  * Popup_menu() and popup_filter_menu() are not implemented yet.
  * Popup window title property not implemented yet.
  * Popup window hidden option not implemented yet.
  * Popup_setoptions() is not implemented yet.

-------------------------------------------------------------------
Wed Jun  5 12:27:42 UTC 2019 - Ismail Dönmez <idonmez@suse.com>

- Updated to version 8.1.1467, fixes the following problems
  * Test 29 is old style.
  * Cannot flush change listeners without also redrawing.  The line numbers
    in the list of changes may become invalid.
  * Text properties don't always move after changes.
  * When buffer is hidden "F" in 'shortmess' is not used.
  * Listener callback is called after inserting text.
  * Some eval functionality is not covered by tests.
  * Get empty text prop when splitting line just after text prop.
  * Hang when concealing the '>' shown for a wide char that doesn't fit in
    the last cell.
  * Installer needs to product name et al.
  * Attributes from 'cursorline' overwrite textprop.
  * Text properties are lost when joining lines.
  * Using freed memory when joining line with text property.
  * Text properties not adjusted for Visual block mode delete.
  * Coverity complains about possibly using a NULL pointer and copying a
    string into a fixed size buffer.
  * Stuck in sandbox with ":s/../\=Function/gn".
  * Error for Python exception does not show useful info.
  * Fractional scroll position not restored after closing window.
  * Running tests may cause the window to move.
  * If writing runs into a conversion error the backup file is deleted.
  * "W" for wrapping not shown when more than 99 matches.
  * Text property wrong after :substitute.
  * Undofile() reports wrong name. (Francisco Giordano)
  * Undo test fails on Mac.
  * Getting a list of text lines is clumsy.
  * Obvious mistakes are accepted as valid expressions.
  * Some text in heredoc assignment ends the text. (Ozaki Kiichi)
  * Test 37 is old style.
  * Cannot enter character with a CSI byte.
  * Text property wrong after :substitute with backslash.
  * Buffer left 'nomodifiable' after :substitute. (Ingo Karkat)
  * Python setuptools don't work with Python 3.
  * Code and data in tests can be hard to read.
  * ":vert options" does not make a vertical split.
  * Design for popup window support needs more details.
  * Source command doesn't check for the sandbox. CVE-2019-12735
    boo#1137443
  * Using expressions in a modeline is unsafe.
  * can set 'modelineexpr' in modeline.
  * Modeline test fails with python but without pythonhome.
  * Get E484 when using system() during GUI startup.
  * Not using the new github feature for donations.
  * Cannot recover from a swap file.
  * When evaluating 'statusline' the current window is unknown. (Daniel Hahler)
  * "[p" in Visual mode puts in wrong line.
  * Check for file changed triggers too often.
  * Without "TS" in 'shortmess' get a hit-enter prompt often.
  * Warnings for size_t/int mixups.
  * MS-Windows GUI uses wrong shell command for bash. (Robert Bogomip)
  * Delete() can not handle a file name that looks like a pattern.
  * Filechanged test hangs.
  * MS-Windows building VIMDLL with MSVC: SUBSYSTEM is not set.
  * MS-Windows: missing build dependency.
  * Error when editing test file.
  * Warning for size_t/int mixup.
  * Using "int" for alloc() often results in compiler warnings.
  * Signed/unsigned compiler warning.
  * Unessesary type casts for lalloc().
  * Calling prop_add() in an empty buffer doesn't work. (Dominique Pelle)
  * Errors when calling prop_remove() for an unloaded buffer.
  * Changes are not flushed when end and start overlap. (Paul Jolly)
  * Search stats are off when using count or offset.
  * No popup window support.
  * Build failure in tiny version.
  * Unnecessary type casts.
  * Not restoring t_F2 in registers test.
  * Saving for undo may access invalid memory. (Dominique Pelle)
  * 'wincolor' does not apply to lines below the buffer.
  * Build fails in tiny version.
  * Duplicate line in MSVC build file.
  * Popup windows not adjusted when switching tabs.
  * Using global pointer for tab-local popups is clumsy.
  * Misspelled mkspellmem as makespellmem.
  * "timer" option of popup windows not supported.
  * Cannot build without the timer feature.
  * Cannot change the patch level when building with NSIS.
  * "highlight" option of popup windows not supported.
  * popup_hide() and popup_show() not implemented yet.
  * Popup_create() does not support text properties.
  * PFL_HIDDEN conflicts with system header file.
  * Coverity warns for using uninitialized memory.
  * Popup_move() is not implemented yet.
  * Coverity warns for divide by zero.
  * Test 30 is old style.
  * Error when the drive of the swap file was disconnected.
  * Alloc() returning "char_u *" causes a lot of type casts.
  * Build error in MS-Windows GUI.
  * Popup_getposition() not implemented yet.
  * MS-Windows: resolve() does not resolve all components of the path.
  * Win_execute() is not implemented yet.
  * Listener callbacks may be called recursively.
  * Popup window size only uses first line length.
  * Drawing "~" line in popup window.
  * Popup_getoptions() not implemented yet.
  * Popup windows use options from current window and buffer.
  * Crash when popup menu is deleted while waiting for char.
  * Win_execute() does not set window pointers properly.
  * No test for syntax highlight in popup window.
  * Popup window screenshot test fails.
  * Popup_atcursor() not implemented yet.
  * "pos" option of popup window not supported yet.
  * Popup window option "wrap" not supported.
  * Popup window listed as "Scratch".
  * Can't build with eval feature.
  * Win_execute() may leave popup window focused, eventually leading to a
    crash.
  * Test 3 is old style.
  * Memory usage test is a bit too flaky.
  * Writefile test fails when run under /tmp.
  * Code to handle callbacks is duplicated.
  * Some commands cause trouble in a popup window.
  * Json_encode() is very slow for large results.
  * Win_execute() test fails.
  * Popup window filter not yet implemented.
  * Popup windows not considered when the Vim window is resized.
  * Popup window padding and border not implemented yet.
  * Not using double line characters for popup border.
  * Popup window border highlight not implemented yet.
  * Popup window callback not implemented yet.
  * Not allowed to create an empty popup.
  * Statusline is sometimes drawn on top of popup.
  * Popup text truncated at end of screen.
  * Popup window positioning wrong when using padding or borders.
  * CTRL-L does not clear screen with a popup window.
  * Line and col property of popup windows not properly checked.
  * Popup window "moved" property not implemented yet.
  * Build failure without the conceal feature.
  * Popup_atcursor() not completely implemented.
  * WinBar not redrawn after scrolling one line.
  * Cannot reuse a buffer when loading a screen dump.
  * Crash when using gtags. (issue #4102)
  * Popup window border looks bad when 'ambiwidth' is "double".
  * Popup window border characters may be wrong.
  * Tests do not run or are not reliable on some systems.
  * MS-Windows: using special character requires quoting.
  * Gcc warns for uninitialized variable.
  * Only 4-digit rgb termresponse is recognized.
  * Allocating wrong amount of memory. (Yegappan Lakshmanan)
  * Not updating priority on existing sign.
  * Cscope test fails.
 

-------------------------------------------------------------------
Tue May 14 14:49:46 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.1330, fixes the following problems
- refreshed disable-unreliable-tests.patch
  * Running make in src/po leaves LINGUAS file behind. (Ken Takata)
  * Delaying half a second after the top-bot message.
  * Detecting *.tmpl as htmlcheetah is outdated.
  * Test17 is old style.
  * Running tests leaves XTest_tabpage_cmdheight file behind.
  * Cannot build with +eval but without +mouse.
  * Search stats don't show for mapped command.
  * May not have enough space to add "W" to search stats.
  * .hgignore and .gitignore are either distributed or in git, not both.
  * Not easy to change directory and restore.
  * Invalid command line arguments not tested.
  * When vimrun.exe does not exist external command may fail.
  * Crash when using invalid command line argument.
  * Invalid argument test fails without GTK.
  * Invalid argument test fails without X clipboard.
  * "extends" from 'listchars' is used when 'list' is off. (Hiroyuki Yoshinaga)
  * In a terminal 'ballooneval' does not work right away.
  * When compiled with VIMDLL some messages are not shown.
  * v:beval_text is not tested in Visual mode.
  * Not possible to hide a balloon.
  * There is no easy way to manipulate environment variables.
  * Borland support is outdated and doesn't work.
  * Cannot reconnect to the X server after it restarted.
  * The Normal highlight is not defined when compiled with GUI.
  * Test for Normal highlight fails on MS-Windows GUI.
  * Named function arguments are never optional.
  * Aborting an autocmd with an exception is not tested.
  * Coverity warning for using uninitialized variable.
  * Warnings for using localtime() and ctime().
  * There is always a delay if a termrequest is never answered.
  * Duplicated localtime() call.
  * Output from Travis can be improved.
  * Code for text changes is in a "misc" file.
  * Computing function length name in many places.
  * It is not possible to track changes to a buffer.
  * No docs or tests for listener functions.
  * Cygwin makefile is not nicely indented.
  * 'mouse' option is reset when using GPM mouse.
  * Stray comma in VMS makefile.
  * Cannot build with +eval but without +channel and +timers. (John Marriott)
  * No test for listener with partial.
  * Unnecessary scroll after horizontal split.
  * No test for listener with undo operation.
  * Plans for popup window support are spread out.
  * Using bold attribute in terminal changes the color. (Jason Franklin)

-------------------------------------------------------------------
Mon May  6 07:48:00 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.1282, fixes the following problems
- refresh disable-unreliable-tests.patch
  * Bracketed paste may remain active after Vim exists, because the terminal
  emulater restores the setting.
  * No test for :abclear.
  * Old style comments in debugger source.
  * Output of :command is hard to read.
  * Always get regexp debugging logs when building with -DDEBUG.
  * Some autocmd tests are old style.
  * Output of :command with address completion is not nice.
  * A BufReadPre autocommand may cause the cursor to move.
  * User command parsing and listing not properly tested.
  * Some compilers give warning messages.
  * Links to repository use wrong file name.
  * Clever compiler warns for buffer being too small.
  * Support for user commands is spread out. No good reason to make user
  commands optional.
  * Not all user command code is tested.
  * Signal PWR is not tested.
  * "make clean" in top dir does not cleanup indent test output.
  * Old style tests.
  * "make clean" does not remove generated src/po files.
  * Mouse middle click is not tested.
  * MS-Windows: no space reserved for font quality name.
  * Cannot set a directory for a tab page.
  * Not checking for NULL return from alloc().
  * Build fails on MS-Windows.
  * Filtering does not work when listing marks.
  * Middle mouse click test fails without a clipboard.
  * {not in Vi} remarks get in the way of useful help text.
  * Duplicate entries in the generate .desktop files. (Ralf Schandl)
  * Not possible to process tags with a function.
  * Warning for posix_openpt() not declared. (Tony Mechelynck)
  * A lot of code is shared between vim.exe and gvim.exe.
  * Asking about existing swap file unnecessarily.
  * Cannot build tiny version.
  * Compiler warnings for using STRLEN() value.
  * sjiscorr.c not found in shadow directory. (Tony Mechelynck)
  * Error for using "compl", reserved word in C++.
  * MS-Windows: compiler warning for sprintf() format.
  * Key with byte sequence containing CSI does not work.
  * Runtime desktop files are overwritten by build. (Tony Mechelynck)
  * Ex command info contains confusing information.
  * No cmdline redraw when tabpages have different 'cmdheight'.
  * Compiler warnings for incomplete switch statement. (Tony Mechelynck)
  * No tests for CTRL-mouse-click.
  * ":copen 10" sets height in full-height window. (Daniel Hahler)
  * Cannot handle negative mouse coordinate from urxvt.
  * Urxvt mouse codes are not tested.
  * No test for dec mouse.
  * Compiler warning for uninitialized variable.
  * No test for netterm mouse.
  * No test for completion of mapping keys.
  * Not all mapping completion is tested.
  * Mapping completion test fails.
  * Mapping completion contains dead code.
  * Building desktop files fails on FreeBSD. (Adam Weinberger)
  * Cannot navigate through errors relative to the cursor.
  * The "N files to edit" message can not be surpressed.
  * Crash when exiting early. (Ralf Schandl)
  * Comparing with pointer instead of value.
  * No error for quickfix commands with negative range.
  * Cannot simulate a mouse click in a test.
  * Mouse clicks in WinBar not tested.
  * Crash when closing window from WinBar click. (Ben Jackson)
  * When GPM mouse support is enabled double clicks in xterm do not work.
  * Winbar test doesn't test enough.
  * Cannot check if GPM mouse support is working.
  * Map completion test fails in GUI.
  * Cannot see current match position.
  * Compiler warnings for use of STRNCPY(). (John Marriott)
  * Click on WinBar of other window not tested.
  * Compiler warning in direct write code.
  * After :unmenu can still execute the menu with :emenu.
  * Cannot navigate to errors before/after the cursor.
  * Cannot combine text properties with syntax highlighting.
  * Missing screenshot update.
  * Missing change for "combine" field.
  * Cannot set 'spellang' to "sr@latin". (Bojan Stipic)
  * Cannot specify a count with :chistory.
  * Running make in src/po leaves LINGUAS file behind. (Ken Takata)

-------------------------------------------------------------------
Tue Apr 23 10:08:12 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.1198, fixes the following problems
  * Xterm mouse wheel escape sequence is not tested.
  * Plugins don't get notified when the popup menu changes.
  * No test for what is fixed in patch 8.1.0716.
  * Not easy to find out what neighbors a window has.
  * Terminal winpos test fails with very large terminal. (Dominique Pelle)
  * No test for dragging the window separators with the mouse.
  * May pass weird strings to file name expansion.
  * Too strict checking of the 'spellfile' option.
  * Compiler warning for unused function. (Tony Mechelynck)
  * Desktop file translations are requiring manual updates.
  * CTRL-L with 'incsearch' does not pick up char under cursor. (Smylers)
  * Building desktop files fails with older msgfmt.
  * Generating desktop files not tested on Travis.
  * Build fails when using shadow directory.
  * Msgfmt complains about missing LINGUAS file. (Tony Mechelynck)
  * Getting a newer msgfmt on Travis is too complicated.
  * Termcodes tests can be improved.
  * Unicode emoji and other image characters not recognized.
  * Unicode tables are out of date.
  * Json encoded string is sometimes missing the final NUL.
  * Termcodes test would fail in a very big terminal.
  * Unreachable code.
  * Incorrect coverage information; typo in color name.
  * Codecov does not report all the coverage information.
  * Gettitle test is failing when server name differs. (Kenta Sato)
  * No test for mouse clicks in the terminal tabpage line.
  * Gettitle test can still fail when another Vim is running.
  * No test for closing tab by click in tabline.
  * Not all screen update code of the terminal window is executed in tests.
  * Writing coverage info in a separate dir is not needed.
  * Terminal ANSI color test does not cover all colors.
  * Statusline test could fail in large terminal.
  * Cursor properties were not fully tested.
  * Suspend test has duplicated lines.
  * No test for dragging a tab with the mouse and for creating a new tab by
  double clicking in the tabline.
  * Test for dragging a tab is flaky.
  * .ts files are recognized as xml, while typescript is more common.
  * When mouse click tests fails value of 'ttytype' is unknown.
  * No test for mouse clicks in the fold column.
  * Vim script debugger tests are old style.
  * Tests for mouse clicks are a bit flaky when run in an interactive terminal.
  * Some function prototypes are outdated.
  * Typos in VisVim comments.
  * Undo file left behind after running test.
  * Mapping for CTRL-X is inconsistent.
  * readdir() allocates list twice.
  * Cannot recognize Pipfile.
  * Not all Vim variables require the v: prefix.
  * Mode is not cleared when leaving Insert mode.
  * has('vimscript-3') does not work.
  * Not all debug commands are covered by a test.
  * Mode is not cleared when leaving Insert mode with mapped Esc.
  * Typos and small problems in test files.
  * Typos and small problems in source files.
  * Vim script debugger functionality needs cleanup.
  * Parallel build may fail.
  * When starting with multiple tabs file messages is confusing.

-------------------------------------------------------------------
Mon Apr  8 08:47:34 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.1137, fixes the following problems
- refreshed disable-unreliable-tests.patch
  * Cannot get all the information about current completion.
  * Source README file doesn't look nice on github.
  * Issue templates are not good enough.
  * Cannot get composing characters from the screen.
  * Extending sign and foldcolumn below the text is confusing.
  * Space in number column is on wrong side with 'rightleft' set.
  * Python test doesn't wipe out hidden buffer.
  * Function reference count wrong in Python code.
  * File for Insert mode is much too big.
  * reg_executing() is reset by calling input().
  * When 'listchars' is set a composing char on a space is wrong.
  * No need for a separate ScreenLinesUtf8() test function.
  * When a screendump test fails, moving the file is a hassle.
  current code page.
  * "Conceal" match is mixed up with 'hlsearch' match.
  * Cannot delete a match from another window. (Paul Jolly)
  * Compiler warning for possibly uninitialized variable. (Tony Mechelynck)
  * Too many curly braces.
  * tag stack is incorrect after CTRL-T and then :tag
  * Height of quickfix window not retained with vertical split.
  * Tutor does not check $LC_MESSAGES.
  * Setting 'guifont' when maximized resizes the Vim window. When 'guioptions'
  contains "k" gvim may open with a tiny window.
  * Support for outdated tags format slows down tag parsing.
  * Long line in tags file causes error.
  * Quickfix code duplication.
  * The do_tag() function is too long.
  * Tag file without trailing newline no longer works. (Marco Hinz)
  * Signals test may fail in the GUI.
  * Long escape sequences may be split up.
  * No test for 'writedelay'.
  * No test for 'visualbell'.
  * Test for 'visualbell' doesn't work.
  * Deleted file still in list of distributed files.
  * Composing chars on space wrong when 'listchars' is set.
  * It is not easy to check for infinity.
  * Duplicate code in quickfix file.
  * Making an autocommand trigger once is not so easy.
  * Confusing overloaded operator "." for string concatenation.
  * Cannot build with older C compiler.
  * Cannot enforce a Vim script style.
  * Build failure without the +eval feature.
  * A couple of conditions are hard to understand.
  * Cannot easily get directory entry matches.
  * Test for term_gettitle() was disabled.
  * char2nr() does not handle composing characters.
  * No way to avoid filtering for autocomplete function, causing flickering
  of the popup menu.
  * Insert completion flags are mixed up.
  * Libvterm does not handle the window position report.
  * Build failure with +terminal but without tgetent.
  * When making a new screendump test have to create the file.
  * Compiler warning for uninitialized struct member. (Yegappan Lakshmanan)
  * Buffer for quickfix window is reused for another file.
  * Build failure for small version. (Tony Mechelynck)
  * Decoding of mouse click escape sequence is not tested.
  * Xterm mouse wheel escape sequence is not tested.

-------------------------------------------------------------------
Tue Mar 29 10:24:36 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.1066, fixes the following problems
  * Test fails because t_F2 is not set.
  * Repeated code in quickfix support.
  * Using closure may consume a lot of memory.
  * Lua interface leaks memory.
  * Indent from autoindent not removed from blank line. (Daniel Hahler)
  * Memory leak with E461.
  * Quickfix buffer shows up in list, can't get buffer number.
  * Off-by-one error in filetype detection.
  * Window cleared when entering Terminal-Normal twice. (Epheien)
  * Lua: may garbage collect function reference in use.
  * Compiler warning for Python3 interface.
  * pyeval() and py3eval() leak memory.
  * May use NULL pointer when out of memory. (Coverity)
  * May use NULL pointer when indexing a blob. (Coverity)
  * Stray log calls in terminal code. (Christian Brabandt)
  * Checking NULL pointer after addition. (Coverity)
  * Unused condition. (Coverity)
  * Memory usage test sometimes fails.
  * DirectWrite doesn't take 'linespace' into account.
  * Quickfix function arguments are inconsistent.
  * Memory usage test may still fail.
  * Warnings from clang static analyzer. (Yegappan Lakshmanan)
  * Memory usage test may still fail on some systems. (Elimar Riesebieter)
  * Too many #ifdefs.
  * prop_remove() second argument is not optional.
  * Quickfix function arguments are inconsistent.
  * Memory usage test may still fail on some systems.
  * Arabic support excludes Farsi.
  * FEAT_TAG_ANYWHITE is not enabled in any build.
  * Test for Arabic no longer needed.
  * The paste test doesn't work properly in the Windows console.
  * Lua interface does not support Blob.
  * No way to check the reference count of objects.
  * E315 ml_get error when using Python and hidden buffer.
  * the "secure" variable is used inconsistently. (Justin M. Keyes)
  * WINCH signal is not tested.
  * Minor issues with tests.
  * When user tries to exit with CTRL-C message is confusing.
  * Blank srceen when DirectWrite failed.
  * Not all ways to switch terminal mode are tested.
  * test for CTRL-C message sometimes fails
  * Warning for missing return statement. (Dominique Pelle)
  * Not checking return value of ga_grow(). (Coverity)
  * CTRL-G U in Insert mode doesn't work to avoid splitting the undo sequence
  for shift-left and shift-right.
  * No eval function for Ruby.
  * Memory usage test may still fail on some systems.
  always used.
  * When substitute string throws error, substitute happens anyway.
  * Quickfix code is repeated.
  * Insufficient testing for wildmenu completion.
  * No test for output conversion in the GTK GUI.
  * No test for using and deleting menu in the GUI.
  * VIMDLL isn't actually used.

-------------------------------------------------------------------
Thu Mar 14 22:18:58 UTC 2019 - Christian Boltz <suse-beta@cboltz.de>

- apparmor.vim: add network 'xdp' keyword

-------------------------------------------------------------------
Tue Mar 12 10:24:36 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.1005, fixes the following problems
- vim-8.1.0297-dump3.patch - disabled another flakky test
  * Failure when closing a window when location list is in use.
  * Terminal test is a bit flaky.
  * Tests for restricted mode no run for MS-Windows GUI.
  * Can modify a:000 when using a reference.
  * A messed up rgb.txt can crash Vim. (Pavel Cheremushkin)
  * No need to check restricted mode for setwinvar().
  * Index in getjumplist() may be wrong. (Epheien)
  * Incomplete set of assignment operators.
  * Struct uses more bytes than needed.
  * USE_LONG_FNAME never defined.
  * Complicated regexp causes a crash. (Kuang-che Wu)
  * Using clumsy way to get console window handle.
  * CI tests on AppVeyor are failing.
  * Can't handle large value for %{nr}v in regexp. (Kuang-che Wu)
  * Crash with tricky search pattern. (Kuang-che Wu)
  * Tag line with Ex command cannot have extra fields.
  * CI crashes when running out of memory.
  * Code related to findfile() is spread out.
  * fsync() may not work properly on Mac.
  * With Python 3.7 "find_module" is not made available.
  * Double free when running out of memory.
  * Compiler warnings.
  * In Terminal-Normal mode job output messes up the window.
  * Terminal test sometimes fails; using memory after free.
  * Terminal scrollback test is flaky.
  * Terminal dump diff swap does not update file names.
  * Terminal scrollback test still flaky.
  * Terminal scrollback test still still flaky.
  * No test for :wnext, :wNext and :wprevious.
  * USE_CR is never defined.
  * Stray log function call.
  * No error when requesting ConPTY but it's not available.
  * Typo in Makefile.
  * vtp_working included in GUI build but unused.
  * Farsi support is outdated and unused.
  * When using VTP scroll region isn't used properly.
  * Invalid memory access in search pattern. (Kuang-che Wu)
  * Old regexp engine may use invalid buffer for 'iskeyword' or uninitialized
  buffer pointer. (Kuang-che Wu)
  * May leak memory when using 'vartabstop'. (Kuang-che Wu)
  * Invalid memory access in search pattern. (Kuang-che Wu)
  * Background color is wrong in MS-Windows console when not using VTP.
  * No completion for sign group names.
  * Options window still checks for the multi_byte feature.
  * Still a trace of Farsi support.
  * Format of nbdbg() arguments is not checked.
  * Internal error when using pattern with NL in the range.
  * Coveralls is not very useful.
  * When built without +eval "Vim --clean" produces errors. (James McCoy)
  * Using :python sets 'pyxversion' even when not executed.
  * Compilation warnings when building the MS-Windows installer.
  * A very long file is truncated at 2^31 lines.
  * Arguments of semsg() and siemsg() are not checked.
  * Matchit autoload directory not in installer. (Chris Morgan)
  * Using context:0 in 'diffopt' does not work well.
  * Compiling weird regexp pattern is very slow.
  * Sorting large numbers is not tested and does not work properly.
  * When using ConPTY garbage collection has undefined behavior.
  * Building with MinGW and static libs doesn't work. (Salman Halim)
  * Illegal memory access when using 'incsearch'.
  * Cannot see in CI why a screenshot test failed.
  * Search test fails.
  * One terminal test is flaky.
  * Stray dependency in test Makefile.
  * Crash when using search pattern \%Ufffffc23.
  * Message written during startup is truncated.
  * Text properties test fails when 'encoding' is not utf-8.
  * Failure for selecting quoted text object moves cursor.
  * Cannot switch from terminal window to next tabpage.
  * Pattern with syntax error gives threee error messages. (Kuang-che Wu)
  * Cannot switch from terminal window to previous tabpage.
  * Using STRNCPY() wrongly. Warning for uninitialized variable.
  * Dosinstall still has buffer overflow problems.
  * Blob not tested with Ruby.
  * Blob not tested with Perl.
  * Compiler warning for unused functions. (Yasuhiro Matsumoto)
  * extend() insufficiently tested.
  * Pasting in terminal insufficiently tested.
  * update_cursor() called twice in :shell.
  * Checking __CYGWIN32__ unnecessarily.
  * Unnecessary #ifdefs.
  * Crash with large number in regexp. (Kuang-che Wu)
  * rename() is not propertly tested.
  * Unnecessary condition in #ifdef.
  * Deleting a location list buffer breaks location list window functionality.
  * Various small code ugliness.
  * Floating point exception with "%= 0" and "/= 0".
  * Cannot build with FEAT_EVAL defined and FEAT_SEARCH_EXTRA undefined,
  and with FEAT_DIFF defined and FEAT_EVAL undefined.
  * A :normal command while executing a register resets the reg_executing()
  result.
  * ch_read() may return garbage if terminating NL is missing.
  * Relative cursor position is not calculated correctly.
  * A getchar() call while executing a register resets the reg_executing()
  result.
  * A few screendump tests fail because of scrolling.
  * Using GUI colors in vim.exe when 'termguicolors' is off.
  * getcurpos() unexpectedly changes "curswant".
  * Use register one too often and not properly tested.
  * Indenting is off.
  * Visual area not correct when using 'cursorline'.
  * "gf" does not always work when URL has a port number. (Jakob Schöttl)
  * Playing back recorded key sequence mistakes key code.
  * Function "luaV_setref()" not covered with tests.
  * Test fails because t_F2 is not set.

-------------------------------------------------------------------
Mon Feb 25 08:53:19 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.0892, fixes the following problems
  * New buffer used every time the quickfix window is opened.
  * Can execute shell commands in rvim through interfaces.
  * Checking for FEAT_MBYTE which doesn't exist anymore.
  * Missing some changes for Ex commands.
  * Double check for bsd systems.
  * Compiler warning for adding to NULL pointer and a condition that is
  always true.
  * The 'l' flag in :subsitute is sticky.
  * The a: dict is not immutable as documented.
  * Pty allocation wrong if using file for out channel and using null for
  in channel and null for error channel.
  * Substitute command inssuficiently tested.
  * Failure when closing a window when location list is in use.

-------------------------------------------------------------------
Thu Feb  7 12:47:37 UTC 2019 - Stephan Kulow <coolo@suse.com>

- Update to version 8.1.0887, fixes the following problems
  * Undo with text properties not tested.
  * setline() and setbufline() do not clear text properties.
  * Text properties are not adjusted for :substitute.
  * If a buffer was deleted a channel can't write to it.
  * Channel test fails sometimes.
  * When using text props may free memory that is not allocated.
  * Internal error when using :popup.
  * When test_edit fails 'insertmode' may not be reset and the next test may get stuck. (James McCoy)
  * ":sign place" requires the buffer argument.
  * Clearing the window is used too often, causing the command line to be cleared when opening a tab. (Miroslav Koškár)
  * Compiler warning for uninitialized variable. (Tony Mechelynck)
  * Using "gt" sometimes does not redraw a tab. (Jason Franklin)
  * Sign message not translated and inconsistent spacing.
  * ":sign place" only uses the current buffer.
  * Compiler warnings with 64-bit compiler.
  * Building with Ruby 2.6 gives compiler warnings.
  * :colorscheme isn't tested enough
  * Tabline is not always redrawn when something that is used in 'tabline' changes.
  * Text property columns are not adjusted for changed indent.
  * Third argument for redrawWinline() is always FALSE.
  * Windows are updated for every added/deleted sign.
  * When using timers may wait for job exit quite long.
  * Test files still use function!.
  * MS-Windows build instructions are a bit outdated.
  * Images for NSIS take up too much space.
  * Unessesary #if lines in GTK code.
  * Superfluous call to redraw_win_later().
  * Get warning message when 'completefunc' returns nothing.
  * There is no function for the ":sign jump" command.
  * A couple compiler warnings.
  * Too many #ifdefs.
  * Cannot easily change the current quickfx list index.
  * Conceal mode is not sufficiently tested.
  * Cannot build without the virtualedit feature.
  * Cannot run specific test when in src/testdir the same was as in the src directory.
  * Build for MinGW fails.
  * Conceal mode is not completely tested.
  * Redrawing specifically for conceal feature.
  * Compiler warning for sprintf() argument.
  * Cannot avoid breaking after a single space.
  * There is a SourcePre autocommand event but not a SourcePost.
  * Compiler warning for get_buf_arg() unused.
  * JS encoding does not handle negative infinity.
  * Cannot build without the eval feature.
  * Too many #ifdefs for the multi-byte feature.
  * The hlsearch state is not stored in a session file.
  * Cannot handle binary data.
  * Code for Blob not sufficiently tested.
  * Compiler warning for uninitialized variable.
  * Using freed memory, for loop over blob leaks memory.
  * Text objects in not sufficiently tested.
  * Tcl test fails.
  * Viminfo with Blob is not tested.
  * Not all Blob operations are tested.
  * Giving error messages is not flexible.
  * Compiler warnings for signed/unsigned strings.
  * Compiler warnings for signed/unsigned string.
  * Highlighting not updated with conceal and 'cursorline'.
  * map() with a bad expression doesn't give an error. (Ingo Karkat)
  * Using sprintf() instead of semsg().
  * Error message contains garbage. (Dominique Pelle)
  * When the last sign is deleted the signcolumn may not be removed even though 'signcolumn' is "auto".
  * Some regexp errors are not tested.
  * One more compiler warning for signed/unsigned string.
  * printf format not checked for semsg().
  * Preferred column is lost when setting 'cursorcolumn'.
  * Error message for get() on a Blob with invalid index.
  * copy() does not make a copy of a Blob.
  * Not enough documentation for Blobs.
  * Font number is always one instead of the actual.
  * Showing two characters for tab is limited.
  * No proper test for using 'termencoding'.
  * Default value for brief_wait is wrong.
  * Compiler warning.
  * Nobody is using the Sun Workshop support.
  * List of distributed files is outdated.
  * String format of a Blob can't be parsed back.
  * Various problems when using Vim on VMS.
  * When deleting lines at the bottom signs are misplaced.
  * Updating completions may cause the popup menu to flicker.
  * :stop is covered in two tests.
  * Inconsistent use of ELAPSED_FUNC.
  * Some shell filetype patterns end in a star.
  * The sign_define_by_name() function is too long.
  * Not all crypt code is tested.
  * VMS build is missing the blob file.
  * Matching too many files as zsh. (Danek Duvall)
  * Travis does not build a version without GUI on Linux.
  * Win32: using pipes for channel does not work well.
  * Terminal test fails on MS-Windows.
  * Argument for message functions is inconsistent.
  * Terminal test fails on Mac.
  * Build error when using if_xcmdsrv.c.
  * Win32: cursor blinks when Vim is not active.
  * Compiler warning for signed/unsigned.
  * Messy indent in if statement.
  * Depending on the configuration some functions are unused.
  * ml_get error when updating the status line and a terminal had its scrollback cleared.
  * Compiler warning for unused function. (Tony Mechelynck)
  * Cannot build with tiny features.
  * Sourcing a session sets v:errmsg.
  * Code for creating tabpages in session is too complex.
  * A few compiler warnings on VMS.
  * Popup menu is displayed on top of the cmdline window if it is opened from Insert completion. (Bjorn Linse)
  * Incorrect error messages for functions that now take a Blob argument.
  * White space before " -Ntabmove" causes problems.
  * Cannot build without popup menu.
  * MS-Windows 7: problem with named pipe on channel.
  * Error E898 is used twice.
  * Changing a blob while iterating over it works strangely.
  * Calling deleted function; test doesn't work on Mac.
  * May use a lot of memory when a function creates a cyclic reference.
  * MinGW: no hint that tests fail because of small terminal.
  * Negative index doesn't work for Blob.
  * Session file has problem with single quote in file name.
  * Crash when setting v:errmsg to empty list. (Jaon Franklin)
  * Too many #ifdefs.
  * Session test fails on MS-Windows.
  * MS-Windows: build error with GUI.
  * Unicode 16 feature is not useful and cannot be detected.
  * FileChangedShell not sufficiently tested.
  * :mksession cannot handle a very long 'runtimepath'.
  * Dialog for file changed outside of Vim not tested.
  * Test for 'runtimepath' in session fails on MS-Windows.
  * ":=" command is not tested.
  * MS-Windows: cannot send large data with ch_sendraw().
  * A failed assert with a long string is hard to read.
  * Test for sending large data over channel sometimes fails.
  * Xxd "usage" output and other arguments not tested.
  * Peeking and flushing output slows down execution.
  * Not sufficient testing of xxd.
  * SunOS/Solaris has a problem with ttys.
  * Code for autocommands is mixed with file I/O code.
  * Too many #ifdefs.
  * Missing dependency in Makefile.
  * Still using FEAT_VIRTUALEDIT.
  * When 'hidden' is set session creates extra buffers.
  * Test leaves directory behind on MS-Windows.
  * Xxd test fails if man page has dos fileformat.
  * confirm() is not tested.
  * Memory leak when jumps output is filtered.
  * GUI may wait too long before dealing with messages.  Returning
    early may cause a mapping to time out.
  * GUI build fails on MS-Windows.
  * User completion test can fail on MS-Windows.
  * Timer interrupting cursorhold and mapping not tested.
  * Compiler warning for type conversion.
  * When using VTP wrong colors after a color scheme change.
  * getchar(0) never returns a character in the terminal.
  * Travis config to get Lua on MacOS is too complicated.
  * getchar_zero test fails on MS-Windows.
  * Memory leak when running "make test_cd".
  * When timer fails test will hang forever.
  * Having job_status() free the job causes problems.
  * Not easy to recognize the system Vim runs on.
  * May use terminal after it was cleaned up.
  * Cannot build with Ruby 1.8. (Tom G. Christensen)
  * Cursorline highlight is not always updated.
  * Test for 'backupskip' is not correct.
  * feedkeys() with "L" does not work properly.
  * findfile() and finddir() are not properly tested.
  * Options test fails on Mac.
  * xxd does not work with more than 32 bit addresses.
  * Cannot build xxd with MSVC 10.
  * When scrolling a window other than the current one the cursorline
    highlighting is no
* refresh patches:
  - disable-unreliable-tests.patch
  - vim-7.4-filetype_apparmor.patch

-------------------------------------------------------------------
Thu Jan  3 21:26:40 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.0687 , fixes the following problems
  + refreshed disable-unreliable-tests.patch
  * Asan complains about reading before allocated block.
  * SGR not enabled for mintty because $TERM is "xterm".
  * Error for NUL byte in ScreenLines goes unnoticed.
  * Error message for NUL byte in ScreenLines breaks Travis CI.
  * Execute() always resets display column to zero. (Sha Liu)
  * 'commentstring' not used when adding fold marker. (Maxim Kim)
  * Non-silent execute() resets display column to zero.
  * Stopping a job does not work properly on OpenBSD.
  * Cannot redefine user command without ! in same script
  * 'commentstring' not used when adding fold marker in C.
  * Termdebug: clearing multi-breakpoint does not work.
  * Indent script tests pick up installed scripts.
  * Tabpage right-click menu never shows "Close tab".
  * Cannot disable arabic, rightleft and farsi in configure.
  * Cannot attach properties to text.
  * Invalid memory access when using text properties.
  * Double free without the text properties feature.
  * Text properties are not enabled.
  * Using illogical name for get_dict_number()/get_dict_string().
  * With search CTRL-L does not pick up composing characters.
  * Undo test may fail on MS-Windows.
  * :digraph output is not easy to read.
  * GvimExt: realloc() failing is not handled properly.
  * Cannot define a sign with space in the text.
  * Compilation error in gvimext.cpp.
  * When a job ends the closed channels are not handled.
  * Channel sort test is flaky.
  * The libvterm tests are not run as part of Vim tests.
  * Illegal memory access in libvterm test.
  * Libvterm tests are not run with coverage.
  * Not all parts of printf() are tested.
  * Cannot run test_libvterm from the top directory.
  * Indent tests may use the wrong Vim binary.
  * Without the +eval feature the indent tests don't work.
  * Channel test is flaky.
  * A few compiler warnings.
  * DirChanged is also triggered when the directory didn't change
  * The :stop command is not tested.
  * Running make in the top directory echoes a comment.
  * 'cryptmethod' defaults to a very old method.
  * Proto files are not in sync with the source code.
  * Coverals is not updating.
  * Crash when using terminal with long composing characters.
  * Cannot use two global runtime dirs with configure.
  * When executing an insecure function the secure flag is stuck.
  * Placing signs can be complicated.
  * Get_tv function names are not consistent.
  * term_getjob() does not return v:null as documented.
  * :echomsg and :echoerr do not handle List and Dict like :echo does. 
  * Overuling CONF_ARGS from the environment no longer works.
  * Terminal debugger does not handle unexpected debugger exit.
  * Adding quickfix items marks items as valid errors. (Daniel Hahler)
  * Iterating through window frames is repeated.
  * Overuling CONF_ARGS from the environment still does not work.
  * Python cannot handle function name of script-local function.
  * Compiler warning on MS-Windows.
  * "gn" selects the wrong text with a multi-line match.
  * "wincmd p" does not work after using an autocmd window.
  * Test for :stop fails on Arch.
  * Using sign group names is inefficient.
  * Crash when out of memory while opening a terminal window.
  * Text properties cannot cross line boundaries.
  * Coverity complains about null pointer use.
  * line2byte() gives wrong values with text properties.
  * Text property highlighting is off by one column.
  * text properties test fails on MS-Windows
  * Get E14 while typing command :tab with 'incsearch' set.
  * No check for out-of-memory when converting regexp.
  * swapinfo() leaks memory.
  * Computing byte offset wrong.
  * Finding next sign ID is inefficient.
  * Coverity warns for possible use of NULL pointer.
  * Cannot build with Ruby 2.6.0.
  * Custom operators can't act upon a forced motion.
  * setjmp() variables defined globally are used in one file.
  * Command line argument -q [errorfile] is not tested.
  * :args \"foo works like :args without argument.
  * Freeing memory for balloon eval too early.
  * Arglist test fails on MS-windows.
  * When deleting a line text property flags are not adjusted.
  * When appending a line text property flags are not added.
  * Trying to reconnect to X server may cause problems.
  * Get error for using regexp recursively.
  * Deleting signs and completion for :sign is insufficient.
  * Build failure without the sign feature.
  * sign_unplace() may leak memory.
  * Clipboard regexp might be used recursively.
  * Needlessly searching for tilde in string.
  * Text property display wrong when 'number' is set.
  * Configure "fail-if-missing" does not apply to the enable-gui
  argument.
  * Text property display wrong when 'spell' is set.
  * Text property test fails.
  * Textprop test leaves file behind.
  * No test for overstrike mode in the command line.
  * The ex_sign() function is too long.
  * Macro for popup menu width is unused.
  * Cursor in the wrong column after auto-formatting.
  * The Lua interface doesn't know about v:null.
  * Functionality for signs is spread out over several files.
  * Leaking memory when updating a single line.
  * Text property column is screen columns is not practical.
  * Textprop screendump test fails.
  * Look-behind match may use the wrong line number. (Dominique Pelle)
  * Text properties as not adjusted for inserted text.
  * Sign functions do not take buffer argument as documented.
  * Not easy to see what features are unavailable.
  * Text properties as not adjusted for deleted text.
  * Text properties are not adjusted when backspacing replaced text.
  * Spell highlighting does not always end.
  * Warnings from 64-bit compiler.

-------------------------------------------------------------------
Thu Dec  6 11:33:06 UTC 2018 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.0565, fixes the following problems
  * Using 'shiftwidth' from wrong buffer for folding.
  * Flaky test sometimes fails in different ways.
  * Channel and terminal tests that start a server can be flaky.
  * Flaky tests often fail with a common error message.
  * Cannot distinguish between quickfix and location list.
  * Screendump tests can be flaky.
  * Increment/decrement might get interrupted by updating folds.
  * File time test fails when using NFS.
  * ui_breakcheck() may be called recursively, which doesn't work.
  * Evaluating a modeline might invoke using a shell command.
  * Cannot build without the sandbox.
  * May evaluate insecure value when appending to option.
  * Help message in dosinst.c is outdated.
  * shiftwidth() does not take 'vartabstop' into account.
  * Coverity warns for leaking memory and using wrong struct.
  * Setting 'filetype' in a modeline causes an error (Hirohito Higashi).
  * When executing indent tests user preferences interfere.
  * Modeline test with keymap fails.
  * Crash when job callback unloads a buffer.
  * Netbeans test depends on README.txt contents.
  * Expression evaluation may repeat an error message.
  * Saved last search pattern may not be restored.
  * It is not easy to edit a script that was sourced.
  * Popup menu overlaps with preview window.
  * Crash when last search pat is set but not last substitute pat.
  * Saving/restoring search patterns share saved last_idx.
  * Termdebug: gdb may use X.Y for breakpoint number.
  * Command line completion not sufficiently tested.
  * Cannot use address type "other" with with user command.
  * MSCV error format has changed.
  * Parsing of 'diffopt' is slightly wrong.
  * Setting v:errors to a string give confusing error.
  * Setting v:errors to wrong type still possible.
  * Asan complains about reading before allocated block.
 
-------------------------------------------------------------------
Thu Nov 15 08:03:42 UTC 2018 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to version 8.1.0527 - fixes the following problems
- refreshed disable-unreliable-tests.patch
  * Missing change to diff test.
  * When CTRL-C is mapped it triggers InsertLeave.
  * Filter command test may fail if helplang is not set.
  * Modeline test fails when run by root.
  * .raml files not properly detected.
  * Suspend test fails when run by root.
  * Checking cwd not accessible fails for root.
  * Filter test fails when $LANG is C.UTF-8.
  * ml_get error when calling a function with a range.
  * 'helplang' default is inconsistent for C and C.UTF-8.
  * No error for set diffopt+=algorithm:.
  * CTRL-W ^ does not work when alternate buffer has no name.
  * Reloading a script gives errors for existing functions.
  * :move command marks buffer modified when nothing changed.
  * Test_window_split_edit_alternate() fails on AppVeyor.
  * Test_window_split_edit_bufnr() fails on AppVeyor.
  * Cannot save and restore the tag stack.
  * Screen diff test sometimes fails.
  * Cannot build with +eval but without +quickfix.
  * :terminal does not show trailing empty lines.
  * Opening window from quickfix leaves empty buffer behind.
  * Running out of signal stack in RealWaitForChar.
  * Using 'shiftwidth' from wrong buffer for folding.

-------------------------------------------------------------------
Fri Nov  2 12:49:10 UTC 2018 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to 8.1.0503, fixes the following problems
- small change in vim-changelog.sh
  * Failure when setting 'varsofttabstop' to end in a comma.
  * When "Terminal" highlight is reverted cursor doesn't show.
  * Some file types are not recognized.
  * term_start() does not check if directory is accessible.
  * Can't build in MS-Windows.
  * No menus specifically for the terminal window.
  * Using freed memory in quickfix code.
  * Crash when autocmd clears vimpgrep location list.
  * If a terminal dump has CR it is considered corrupt.
  * "Edit with existing Vim" list can get long.
  * argv() and argc() only work on the current argument list.
  * Functions do not check for a window ID in other tabs.
  * :filter only supports some commands.
  * No tests for indent files.
  * :%diffput changes order of lines.
  * /etc/gitconfig not recognized at a gitconfig file.
  * :2vimgrep causes an ml_get error
  * Cleaning up in src/tee may not always work.
  * Cppcheck warns for using array index before bounds check.
  * Internal diff fails when diffing a context diff.
  * Missing change to diff test.

-------------------------------------------------------------------
Tue Oct 16 07:19:18 UTC 2018 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to revision 479, fixes the following problems
  * resolve() was not tested with a symlink cycle.
  * Checking for empty quickfix stack is not consistent.
  * Running test hangs when the input file is being edited.
  * Win32 console: key mappings don't work.
  * Ml_get error and crash when using "do".
  * Test_executable fails when there is a dog in the system.
  * assert_fails() does not take a message argument
  * Quickfix code uses too many /* */ comments.
  * When using ConPTY Vim can be a child process.
  * "simalt ~x" in .vimrc blocks swap file prompt.
  * Client-server test fails.
  * Autocmd test fails.
  * Too often indexing in qf_lists[].
  * Pointer ownership around fname_expand() is unclear.
  * Some tests are flaky or fail on some systems.
  * Dosinst command has a few flaws.
  * User doesn't notice file does not exist when swap file does.
  * Directory where if_perl.c is written is inconsistent.
  * Memory not freed on exit when quit in autocmd.
  * Memory leaks in test_escaped_glob.
  * Tiny build fails.
  * Failure when setting 'varsofttabstop' to end in a comma.

-------------------------------------------------------------------
Fri Oct  5 17:56:36 UTC 2018 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to revision 451, fixes the following problems
  * Can get the text of inputsecret() with getcmdline().
  * May access freed memory when syntax HL times out.
  * The ex_make() function is too long.
  * Recursive use of getcmdline() still not protected.
  * remove() with a range not sufficiently tested.
  * Build failure without command line history.
  * GUI: Cursor not drawn after ":redraw | sleep".
  * Unnecessary static function prototypes.
  * Unnecessary check for NULL pointer.
  * Setting 'term' does not store location for termcap options.
  * Options test fails in the GUI.
  * GUI scrollbar test fails with Athena and Motif.
  * Cursorline not removed when using 'cursorbind'.
  * When 'rnu' is set folded lines are not displayed correctly.
  * Build failure without the +fold feature.

-------------------------------------------------------------------
Wed Sep 26 19:14:26 UTC 2018 - Ondřej Súkup <mimi.vx@gmail.com>

- Updated to revision 436, fixes the following problems
  * Can't get swap name of another buffer.
  * The DiffUpdate event isn't triggered for :diffput.
  * Header file missing from distribution.
  * Accessing invalid memory with long argument name.
  * Too many #ifdefs for GTK.
  * Several command line arguments are not tested.
  * Quickfix code mixes using the stack and a list pointer.
  * Startup test fails on MS-Windows.
  * The ex_copen() function is too long.
  * Renamed file missing from distribution.
  * Cannot build with GTK 2.4.
  * Test output is duplicated or missing.
  * v:option_old and v:option_new are cleared when using :set in OptionSet
  autocmd.
  * Not actually using 16 colors with vtp.
  * Sort doesn't report deleted lines.
  * Several command line arguments are not tested.
  * ml_get error and crash with appendbufline().
  * Accessing invalid memory in SmcOpenConnection().
  * The qf_jump() function is too long.
  * Compiler warning for signed/unsigned.
  * Mapping can obtain text from inputsecret
  * copy_loclist() is too long.
  * Cursorline highlight not removed in some situation.
  * Can get the text of inputsecret() with getcmdline()

-------------------------------------------------------------------
Mon Sep 17 08:34:57 UTC 2018 - Ondřej Súkup <mimi.vx@gmail.com>

- update to version 8.1.401
 * refresh vim-8.1.0297-dump3.patch
 * Can't get swap name of another buffer.
 * Using freed memory with :diffget.
 * 'hlsearch' highlight remains in other window
 * No event triggered after updating diffs
 * Diffs are not always updated correctly
 * Not all white space difference options available.
 * Error while typing :/foo/s// with 'incsearch' enabled
 * Building in a shadow directory fails.
 * Coverity complains about possible NULL pointer use.
 * Sign ordering depends on +netbeans feature.
 * Missing source file rename.
 * some make programs can't handle dependency on "xdiff/../"
 * Variable declaration not at start of block.
 * "make proto" doesn't work well.
 * Xdiff doesn't use the Vim memory allocation functions
 * Compiler warning for uninitialized variable.
 * Moving the cursor is slow when 'relativenumber' is set.
 * Screen updating still slow when 'cursorline' is set.
 * Argument types for select() may be wrong.
 * Not using internal diff if 'diffopt' is not changed
 * Continuation lines cannot contain comments.
 * GTK code has too many #ifdefs and building fails with GTK 2.10.
 * getchar(1) no longer processes pending messages
 * Pieces of the xdiff code are not used.
 * Function profile doesn't specify where it was defined.
 * compiler warning in xdiff code
 * Internal diff isn't used by default as advertised.
 * Cannot get the script line number when executing a function.
 * Remote user not used for completion.
 * Using an external diff program is slow and inflexible.
 * Crash when using term_dumpwrite() after the job finished.
 * Using :s with 'incsearch' prevents CTRL-R CTRL-W.
 * Incorrect adjusting the popup menu for the preview window.
 * an "after" directory of a package is appended to 'rtp'
 * browsing compressed tar files does not always work
 * 'incsearch' for :/foo/s//<Esc> changes last search pattern.
 * Vim may block on ch_sendraw()
 * Crash when wiping buffer in a callback.
 * Cannot get the window id associated with the location list.
 * 'hlsearch' highlighting has a gap after /$.
 * 'shellslash' is not used for getcwd() with local directory.
 * Crash when a callback deletes a window that is being used.
 * :argadd in empty buffer changes the buffer name
 * wrong highlight when 'incsearch' set and cancelling :s.
 * :file fails in quickfix command.
 * 'autowrite' takes effect when buffer is not to be written.
 * :mkview does not restore cursor properly after "$"
 * Get Gdk-Critical error on first balloon show.
 * The qf_add_entries() function is too long.
 * using inputlist() during startup results in garbage
 * inputlist() doesn't work with a timer.
 * Screen dump does not consider NUL and space equal.
 * Strings in swap file may not be NUL terminated.
 * 'incsearch' regression: /\v highlights everything.
 * Too much 'incsearch' highlight for pattern matching everything.

-------------------------------------------------------------------
Wed Aug 22 19:12:45 UTC 2018 - mimi.vx@gmail.com

- update to version 8.1.318
- add vim-8.1.0297-dump3.patch - disable broken test
  * helpgrep with language doesn't work properly
  * build failure without the +eval feature
  * information about a swap file is unavailable
  * wrong type for flags used in signal handlers
  * filtering entries in a quickfix list is not easy
  * File info message not always suppressed with 'F' in 'shortmess'.
  * profiling does not show a count for condition lines
  * a quick undo shows "1 seconds ago"
  * there is no good way to get the window layout
  * plural messages are not translated properly
  * no redraw when using a STOP signal on Vim and then CONT
  * line2byte() is wrong for last line with 'noeol'
  * crash when using :suspend and "fg"
  * GTK: input method popup displayed on wrong screen.
  * the old window title might be freed twice
  * command parsing for 'incsearch' is a bit ugly
  * no 'incsearch' highlighting for :vimgrep and similar
  * checks for type of stack is cryptic
  * 'incsearch' highlighting not used for :sort
  * "cit" on an empty HTML tag changes the whole tag
  * cursor moves to wrong column after quickfix jump
  * quickfix code uses cmdidx too often
  * MAX is not defined everywhere
  * 'incsearch' does not apply to :smagic and :snomagic
  * 'cursorline' highlighting wrong with 'incsearch'
  * 'incsearch' does not work with command modifiers
  * parsing command modifiers is not separated
  * 'incsearch' highlighting does not work for ":g!/"
  * 'incsearch' highlighting does not skip white space
  * incsearch' highlighting does not accept reverse range
  * 'incsearch' highlighting wrong in a few cases
  * no test for 'incsearch' highlighting with :s
  * 'incsearch' with :s doesn't start at cursor line
  * 'incsearch' triggers on ":source"
  * invalid memory access when using 'incsearch'
  * 'incsearch' doesn't work for :s, :g or :v
  * checking for a Tab in a line could be faster
  * Ruby Kernel.#p method always returns nil
  * file type checking has too many #ifdef
  * no good check if restoring quickfix list worked
  * parsing Ex address range is not a separate function
  * the getcmdline() function is way too big
  * backup tests fail when CWD is in /tmp
  * channel log doesn't show part of channel

-------------------------------------------------------------------
Thu Aug  9 10:08:25 UTC 2018 - mimi.vx@gmail.com

- update to 8.1.0258
 * Using setline() in TextChangedI splits undo.
 * Saving and restoring window title does not always work.
 * using full path is not supported for 'backupdir'
 * GTK: when screen DPI changes Vim does not handle it.
 * duplicated quickfix code.
 * Python: error message for failing import is incorrect.
 * Build failure without the +eval feature.
 * calling setline() in TextChangedI autocmd breaks undo
 * no redraw when using a STOP signal on Vim and then CONT
 * Using :term ++close ++hidden closes a window
 * Insert mode completion may use an invalid buffer pointer.
 * Effect of ":tabmove N" is not clear.
 * g:actual_curbuf set in wrong scope. 
 * Now Ruby build fails on other systems.
 * 'buftype' is cleared when using ":term ++hidden cat"
 * Ruby build fails when ruby_intern is missing

-------------------------------------------------------------------
Thu Aug  2 20:52:07 UTC 2018 - mimi.vx@gmail.com

- update to 8.1.0235
  * More help tags that jump to the wrong location.
  * Incorrect reference counting in Perl interface.
  * "safe" argument of call_vim_function() is always FALSE.
  * Ruby error does not include backtrace.
  * :help -? goes to help for -+.
  * Directly checking 'buftype' value.

-------------------------------------------------------------------
Mon Jul 30 15:14:57 UTC 2018 - mimi.vx@gmail.com

- update to 8.1.0229
- refresh disable-unreliable-tests.patch and vim-7.4-disable_lang_no.patch
  * Crash when dumping profiling data.
  * Dropping files is ignored while Vim is busy.
  * Mode() does not indicate using CTRL-O from Insert mode.
  * Hang in bracketed paste mode when t_PE not encountered.
  * Completing shell command finds sub-directories in $PATH.
  * Ruby converts v:true and v:false to a number.
  * Expanding ## fails to escape backtick.
  * Cannot add matches to another window. 
  * Compiler warning for variable set but not used.
  * No error if configure --with-x cannot configure X.
  * +autochdir feature not reported by has() or :version.
  * CTRL-W CR does not work properly in a quickfix window
  * Preferred cursor column not set in interfaces.
  * Expanding a file name "~" results in $HOME.
  * Stderr output from Ruby messes up display.
  * Invalid memory access with invalid modeline.
  * :version always shows +packages.
  * Newer Python uses "importlib" instead of "imp".
 
-------------------------------------------------------------------
Sat Jul 21 11:21:49 UTC 2018 - mimi.vx@gmail.com

- update to 8.1.0200
- drop u_lua53_on_32bit.patch - merged by upstream
  * There is no hint that syntax is disabled for 'redrawtime'.
  * Terminal debugger error with .gdbinit file.
  * Terminal debugger commands don't always work.
  * Possibly use of NULL pointer.
  * Terminal debugger buttons don't always work. 
  * Executing regexp recursively fails with a crash.
  * Perl refcounts are wrong.
  * getwininfo() and win_screenpos() return different numbers.
  * Not easy to figure out the window layout
  * Lua API changed, breaking the build
  * Unicode standard was updated.
  * Memory leak with trailing characters in skip expression.
  * Static analysis errors in Lua interface

-------------------------------------------------------------------
Fri Jul 13 14:10:46 UTC 2018 - mimi.vx@gmail.com

- update to 8.1.0179
- add u_lua53_on_32bit.patch - fix lua53 support on 32bit 
 * Redundant condition for boundary check

-------------------------------------------------------------------
Thu Jul 12 20:01:14 UTC 2018 - mimi.vx@gmail.com

- update to 8.1 revision 8.1.0178 
- refresh disable-unreliable-tests.patch
   vim-7.3-filetype_changes.patch
   vim-7.3-filetype_ftl.patch
   vim-7.3-filetype_spec.patch
   vim-7.3-help_tags.patch
   vim-7.3-name_vimrc.patch
   vim-7.4-filetype_apparmor.patch
 * Warning for passing pointer to non-pointer argument.
 * Overlapping string argument for strcpy().
 * Marks test fails in very wide window
 * After paging up and down fold line is wrong.
 * 'viminfofile' option does not behave like a file name.
 * Typing CTRL-W n in a terminal window causes ml_get error.
 * Invalid memory use with complicated pattern.
 * Calling message_filtered() a bit too often.
 * output of :marks is too short with multi-byte chars
 * lock flag in new dictitem is reset in many places
 * using dict_add_nr_str() is clumsy
 * :clist output can be very long.
 * luaeval('vim.buffer().name') returns an error.
 * Danish and German man pages are not installed.
 * Buffer not updated with 'autoread' set if file was deleted.
 * completion for user names does not work for a prefix.
 * GUI: input() fails if CTRL-C was pressed before
 * Evim.man missing from the distribution.
 * Crash with "set smarttab shiftwidth=0 softtabstop=-1".
 * Build with SHADOWDIR fails.
 * session is wrong with multiple tabs when :lcd was used
 * Memory leak when using :tcl expr command.
 * Compiler warning when building with Python 3.7.
 * Matchit and matchparen don't handle E363.
 * Xterm and vt320 builtin termcap missing keypad keys.
 * cexpr no longer jumps to the first error.
 * Recording into a register has focus events. 
 * Negative value of 'softtabstop' not used correctly.
 * Undo message delays screen update for CTRL-O u.
 * Lua interface does not support funcref.
 * tagfiles() can have duplicate entries
 * ":profdel func" does not work if func was called already
 * still some xterm-like terminals get a stray "p"
 *  Build failure when disabling the session feature. 
 * Various problems with 'vartabstop'.
 * Virtual edit replace with multi-byte fails at end of line.
 * has('vcon') returns true even for non-win32 terminal.
 * Crash when using ballooneval related to 'vartabstop'.
 * Buffer 'modified' set even when :sort has no changes.
 * Duplicate error message for put command.
 * URL in install program still points to SourceForge.
 * display problem with 'vartabstop' and 'linebreak'

-------------------------------------------------------------------
Mon Jun 25 10:32:38 UTC 2018 - mimi.vx@gmail.com

- update to 8.1 revision 0115
- refresh vim-7.4-disable_lang_no.patch
 * The matchparen plugin may throw an error.
 * Rename new_ts to new_vts_array.
 * No error when using bad arguments with searchpair()
 * File name not displayed with ":file" when 'F' is in 'shortmess'.
 * New po makefile missing from distribution.
 * Python: getting buffer option clears message
 * Build fails when HAVE_DATE_TIME is undefined.
 * All tab stops are the same
 * Can't build without the +eval feature.
 * Build the string in init_longVersion()
 * Cannot build without syntax highlighting.
 * Terminal debugger: error when setting a watch point.
 * exclamation mark in error message not needed
 * Segfault when pattern with \z() is very slow.
 * Superfluous space before exclamation mark.
 * Dialog for ":browse tabnew" says "new window".
 * Cannot interrupt gdb when program is running.
 * Set 'nomodified' before closing the window.
 * "..." used inconsistently in a message.
 * error when ending the terminal debugger
 * v:shell_error is always zero when using terminal for "!cmd".
 * "is" and "as" have trouble with quoted punctuation.
 * in terminal window, typing : at more prompt, inserts ':'
 * terminal debugger doesn't adjust to changed 'background'.
 * can't see the breakpoint number in the terminal debugger.
 * "..." used inconsistently in messages.
 * Command getting cleared with CTRL-W : in a terminal window.
 * Crash when autocommands call setloclist().
 * Use of 'termwinkey' is inconsistent.
 * Terminal debugger only works with the terminal feature.
 * Cannot handle pressing CTRL-C in a prompt buffer.
 * Nasty autocommands can still cause using freed memory.
 * Syntax highlighting not working when re-entering a buffer.
 * balloon displayed at the wrong position
 * Typing CTRL-W in a prompt buffer shows mode "-- --".
 * Popup menu broken if a callback changes the window layout.
 * Window title is wrong after resetting and setting 'title'.
 * crash when autocommands delete the current buffer
 * Displayed digraph for "ga" wrong with 'encoding' "cp1251".
 * Display problem with margins and scrolling.
 * Popup menu displayed wrong when using autocmd.
 * Crash when using :hardcopy with illegal byte.
 * first argument of 'completefunc' has inconsistent type
 * When a mapping to <Nop> times out the next mapping is skipped
 * $VIM_TERMINAL is also set when not in a terminal window
 * shell cannot tell running in a terminal window
 * vim_str2nr() does not handle numbers close to the maximum.
 * no completion for :unlet $VAR
 * loading a session file fails if 'winheight' is big
 * ++bad argument of :edit does not work properly

-------------------------------------------------------------------
Mon Jun 11 21:18:38 UTC 2018 - mimi.vx@gmail.com

- update to 8.1 revision 0042
- modernize spec.skeleton
 * if omni completion opens a window Insert mode is stopped
 * Attribute "width" missing from python window attribute list
 * Cannot easily delete lines in another buffer
 * Cannot easily append lines to another buffer
 * Not restoring Insert mode if leaving a prompt buffer by using a
     mouse click
 * Not easy to switch between prompt buffer and other windows

-------------------------------------------------------------------
Tue Jun  5 16:04:54 UTC 2018 - mimi.vx@gmail.com

- update to 8.1 revision 0034 
 * cursor not restored with ":edit #"
 * keys to stop Vim in terminal are wrong
 * BS in prompt buffer starts new line
 * terminal test aucmd_on_close if flaky
 * stoping Vim running in a terminal may not work
 * difficult to make a plugin that feeds a line to a job
 * gcc 8.1 warns for use of strncpy()
 * repeating put from expression register fails

-------------------------------------------------------------------
Wed May 23 10:15:50 UTC 2018 - mimi.vx@gmail.com

- update to 8.1 revision 0020
- refresh disable-unreliable-tests.patch vim-8.0-ttytype-test.patch
- refresh vim73-no-static-libpython.patch
- added:
  * term command - built in terminal window
- fixes:
  * Using "gn" may select wrong text when wrapping.
  * Shell command completion has duplicates
  * Possible crash in term_wait()
  * qf_init_ext() is too long.
  * Using freed memory when changing terminal cursor color
  * maparg() and mapcheck() confuse empty and non-existing.
  * syn_id2cterm_bg() may be undefined.
  * :stopinsert changes the message position.
  * The netrw plugin does not work.

------------------------------------------------------------------
Wed Apr  4 00:00:57 UTC 2018 - stefan.bruens@rwth-aachen.de

- Pre-convert gvim icons, otherwise building vim depends on
  rsvg-convert -> librsvg -> cargo -> Rust -> LLVM
- Cleanup SVG icon, make lines pixel-grid aligned
- Correct RPM Group

-------------------------------------------------------------------
Tue Apr  3 15:34:22 CEST 2018 - kukuk@suse.de

- Use %license instead of %doc [bsc#1082318]

-------------------------------------------------------------------
Fri Mar 23 12:15:38 UTC 2018 - lnussel@suse.de

- instead of explicitly unsetting mouse, remove it from the defaults in the
  first place (boo#1079185, vim-8.0.1568-defaults.patch)

-------------------------------------------------------------------
Thu Mar  8 10:44:01 UTC 2018 - idonmez@suse.com

- Switch to make -j1 clean to see if it fixes random build failures
  on Leap/SLE 15.

-------------------------------------------------------------------
Mon Mar  5 11:22:48 UTC 2018 - idonmez@suse.com

- Updated to revision 1568, fixes the following problems
  * No test using a screen dump yet.
  * Screen dump test fails on MS-Windows.
  * Dead code found.
  * Assert_equalfile() does not close file descriptors. (Coverity)
  * Dump test fails when using a shadow directory.
  * Cannot use 24 bit colors in MS-Windows console.
  * Compiler warnings without termguicolors feature.
  * Libterm doesn't support requesting fg and bg color.
  * C syntax test fails when using gvim
  * C syntax test still fails when using gvim.
  * Quotestar test is flaky when using the GUI.
  * Xxd does not skip NUL lines when using ebcdic.
  * Popupmenu is too far left when completion is long. (Linwei)
  * No test for the popup menu positioning.
  * Popup menu positioning fails with longer string.
  * synpat_T is taking too much memory.
  * Terminal screen dump does not include cursor position.
  * With 'termguicolors' Normal color doesn't work correctly.
  * When using 'termguicolors' SpellBad doesn't show.
  * Screen dumps not included in distribution.
  * Using feedkeys() in a terminal window may trigger mappings. 
    (Charles Sheridan)
  * Undo in the options window makes it empty.
  * Screen dump test script not included in distribution.
  * Various small problems in test files.
  * Various small problems in source files.
  * On Mac 'maxmemtot' is set to a weird value.
  * May leak file descriptors when executing job.
  * Cannot see what digraph is used to insert a character.
  * Custom plugins loaded with --clean.
  * Build error for some combination of features.
  * May not parse the t_RS response correctly, resulting in wrong characters
    in the input stream.
  * printf() does not work with only one argument. (Daniel Hahler)
  * No right-click menu in a terminal.
  * Build failure without GUI.
  * Build failure without GUI on MS-Windows.
  * Crash with rust syntax highligting. (Edd Barrett)
  * The terminal debugger can't set a breakpoint with the mouse.
  * Timeout of getwinposx() can be too short. (lilydjwg)
  * Too many #ifdefs.
  * Can't build Mac version without GUI.
  * Too many #ifdefs.
  * Cannot build Win32 GUI without IME. (John Marriott)
  * Can't build on older Mac, header file is missing.
 

-------------------------------------------------------------------
Fri Mar  2 12:53:09 UTC 2018 - idonmez@suse.com

- Recommend vim-data so that colors can work by default 

-------------------------------------------------------------------
Tue Feb 20 11:25:28 UTC 2018 - idonmez@suse.com

- Updated to revision 1525, fixes the following problems
  * Compiler complains about uninitialized variable. (Tony Mechelynck)
  * Missing -D_FILE_OFFSET_BITS=64 may cause problems if a library is compiled
    with it.
  * Cannot act on edits in the command line.
  * Acessing freed memory after window command in auto command. (gy741)
  * Still too many old style tests.
  * Segmentation fault when Ruby throws an exception inside :rubyfile command.
  * Slow redrawing with DirectX.
  * Endless loop when gui_mch_stop_blink() is called while blink_state is
    BLINK_OFF. (zdohnal)
  * It is difficult to set the python home directory properly for Python
    2.7 and 3.5 since both use $PYTHONHOME.
  * Terminal test fails on some systems. (jonathonf)
  * Terminal test fails on some slow terminals.
  * When in silent mode too much output is buffered.
  * If $SHELL contains a space then the default value of 'shell' is
    incorrect. (Matthew Horan)
  * Timer test on travis Mac is still flaky.
  * Clojure now supports a shebang line.
  * Filetype detection test does not check all scripts.
  * Cannot handle change of directory.
  * Missing file in patch.
  * Missing another file in patch.
  * Missing yet another file in patch.
  * Test fails without 'autochdir' option.
  * Completing directory after :find does not add slash.
  * Python2 and python3 detection not tested. (Matej Cepl)
  * Older GTK versions don't have gtk_entry_get_text_length().
  * Libvterm doesn't handle illegal byte sequence correctly.
  * Illegal memory access in del_bytes().
  * When package path is a symlink adding it to 'runtimepath' happens at
    the end.
  * Integer overflow when using regexp pattern. (geeknik)
  * On MS-Windows CursorIM highlighting no longer works.
  * MS-Windows: nsis installer is a bit slow.
  * MS-Windows: D&D fails between 32 and 64 bit apps.
  * Visual C 2017 has multiple MSVCVER numbers.
  * Invalid memory access in read_redo(). (gy741)
  * Screen isn't always updated right away.
  * Redraw flicker when moving the mouse outside of terminal window.
  * Unnecessary condition for "len" being zero.
  * Insert mode completion state is confusing.
  * Patch missing change.
  * Clearing a pointer takes two lines.
  * Using feedkeys() does not work to test Insert mode completion. (Lifepillar)
  * Searchpair() might return an invalid value on timeout.
  * Reduntant conditions.
  * Weird autocmd may cause arglist to be changed recursively.
  * Accessing invalid memory with "it". (Dominique Pelle)
  * Test 14 fails.
  * Emacs tags no longer work. (zdohnal)
  * There is no easy way to get the global directory, esp. if some windows
    have a local directory.
  * Number of spell regions is spread out through the code.
  * The minimum width of the popup menu is hard coded.
  * Memory leak in balloon_split().
  * Completion items cannot be annotated.
  * No autocmd triggered in Insert mode with visible popup menu.
  * Having 'pumwidth' default to zero has no merit.
  * Clearing a pointer takes two lines.
  * Getting the jump list requires parsing the output of :jumps.
  * Getjumplist() returns duplicate entries. (lacygoill)
  * Out-of-memory situation not correctly handled. (Coverity)
  * Possible NULL pointer dereference. (Coverity)
  * Out-of-memory situation not correctly handled. (Coverity)
  * In out-of-memory situation character is not restored. (Coverity)
  * Access memory beyond end of string. (Coverity)
  * Win32: the screen may be cleared on startup.
  * Debugger can't break on a condition. (Charles Campbell)
  * New version of HP NonStop (Tandem) doesn't like the default header
    for setenv().
  * Timer test is a bit flaky.
  * The :drop command is not always available.
  * Test for failing drag-n-drop command no longer fails.
  * Cannot test if a command causes a beep.
  * Some code for the debugger watch expression is clumsy.
  * Warning for possibly using NULL pointer. (Coverity)
  * The jumplist is not always properly cleaned up.
  * Getting the list of changes is not easy.
  * BufWinEnter event fired when opening hidden terminal.
  * Errors for job options are not very specific.
  * Invalid memory acces with pattern using look-behind match. (Dominique
    Pelle)
  * Error messages suppressed after ":silent! try". (Ben Reilly)
  * Getchangelist() does not use argument as bufname().
  * Cursor is in the wrong line when using a WinBar in a Terminal window.
  * Shift-Tab does not work in a terminal window.
  * Popup menu is positioned in the wrong place. (Davit Samvelyan, Boris
    Staletic)
  * Cannot write and read terminal screendumps.
  * Compiler warnings for uninitialized variables. (Tony Mechelynck)
  * Using :wqa exits even if a job runs in a terminal window. (Jason Felice)
 
-------------------------------------------------------------------
Wed Feb 14 12:39:39 UTC 2018 - idonmez@suse.com

- Split vim-data into vim-data-common package for low-disk usage
  scenarios bsc#1078722 bsc#1078554 bsc#1075541
- Make set mouse= default in suse.vimrc bsc#1079185 bsc#1078564
  bsc#1067890 bsc#1064068 bsc#1062691

-------------------------------------------------------------------
Wed Jan 31 10:49:07 UTC 2018 - idonmez@suse.com

- Updated to revision 1442, fixes the following problems
  * Crash when calling term_start() with empty argument.
  * Crash when term_start() fails.
  * MS-Windows: vimtutor fails if %TMP% has special chars.
  * After ":copen" can't get the window-ID of the quickfix
    window. (FalacerSelene)
  * Illegal memory access after undo. (Dominique Pelle)
  * GTK: :promtfind does not put focus on text input. (Adam Novak)
  * Memory leak in test_arabic.
  * Not enough information about what Python version may work.
  * Pkg-config doesn't work with cross compiling.
  * Filetype detection test not updated for change.
  * If cscope fails a search Vim may hang.
  * Terminal window: some vterm responses are delayed.
  * Using ":undo 0" leaves undo in wrong state.
  * Using pointer before it is set. 

-------------------------------------------------------------------
Wed Jan 24 11:15:08 UTC 2018 - idonmez@suse.com

- Make vim require vim-data bsc#1077352 bsc#1075541 bsc#1074790

-------------------------------------------------------------------
Wed Jan 17 11:18:07 UTC 2018 - tchvatal@suse.com

- Sort with spec-cleaner
- Add conditional to build with python2 in order to build with py3
  only enviroment
- Convert dependencies to pkgconfig style

-------------------------------------------------------------------
Mon Jan  8 11:32:31 UTC 2018 - idonmez@suse.com

- Updated to revision 1428, fixes the following problems
  * No test for expanding backticks.
  * Cursor column is not updated after ]s. (Gary Johnson)
  * Accessing freed memory in vimgrep.
  * Accessing invalid memory with overlong byte sequence.
  * No fallback to underline when undercurl is not set. (Ben Jackson)
  * Error in return not caught by try/catch.
  * The timer_pause test is flaky on Travis.
  * execute() does not work in completion of user command. (thinca)
  * "gf" and <cfile> don't accept ? and & in URL. (Dmitrii Tcyganok)
  * The :leftabove modifier doesn't work for :copen.
  * Compiler warning on 64 bit MS-Windows system. 

-------------------------------------------------------------------
Mon Jan  8 11:18:32 UTC 2018 - normand@linux.vnet.ibm.com

- ignore make check transient errors for PowerPC
  bypass boo#1072651

-------------------------------------------------------------------
Sun Jan  7 17:08:12 UTC 2018 - suse-beta@cboltz.de

- Update apparmor.vim (taken from AppArmor 2.12)
  * add support for the "smc" network keyword

-------------------------------------------------------------------
Wed Dec 20 10:51:27 UTC 2017 - idonmez@suse.com

- Updated to revision 1417, fixes the following problems
  * Encoding empty string to JSON sometimes gives "null".
  * Build fails with --with-features=huge --disable-channel.
  * Too much highlighting with 'hlsearch' and 'incsearch' set.
  * Cannot intercept a yank command.
  * It is not easy to see if a colorscheme is well written.
  * Memory leak when CTRL-G in search command line fails.
  * Pattern with \& following nothing gives an error.
  * :packadd does not load packages from the "start" directory.
  * Warnings and errors when building tiny version. (Tony Mechelynck)
  * Color scheme check script shows up as color scheme.
  * Cannot build with GTK but without XIM. (Guido)
  * Crash with nasty autocommand. (gy741, Dominique Pelle)
  * Using freed buffer in grep command. (gy741, Dominique Pelle)
  * Invalid memory access on exit when autocommands wipe out a buffer.
  * Duplicated code for getting a typed character. CursorHold is called too
    often in the GUI. (lilydjwg)
  * Difficult to track changes to a quickfix list.
  * GUI: CursorHold may trigger before 'updatetime' when using timers.
  * Crash in setqflist().
  * Buffer overflow in :tags command.
  * Hang when using count() with an empty string.
  * Reading invalid memory with CTRL-W :.
  * Using free memory using setloclist(). (Dominique Pelle)
  * Accessing freed memory in :cbuffer.
  * Accessing freed memory in :lfile.
  * Warning for unused function without timers feature.
  * Crash when searching for a sentence.
  * Test doesn't search for a sentence. Still fails when searching for start
    of sentence. (Dominique Pelle)

-------------------------------------------------------------------
Fri Dec 15 13:19:21 UTC 2017 - idonmez@suse.com

- Updated to revision 1390, fixes the following problems
  * Balloon shows when cursor is in WinBar.
  * terminal test hangs, executing abcde. (Stucki)
  * Cannot drag status line or vertical separator of new terminal
    window. (UncleBill)
  * MS-Windows: drawing underline, curl and strike-throw is slow, mFallbackDC
    not properly updated.
  * Channel test for callback is flaky.
  * Shift-Insert doesn't always work in MS-Windows console.
  * Profile log may be truncated halfway a character.
  * No error when settting 'renderoptions' to an invalid value before starting
    the GUI.
  * CTRL-A does not work with an empty line. (Alex)
  * Window size wrong after maximizing with WinBar. (Lifepillar)
  * Cursor in terminal not always updated.
  * Cannot call a dict function in autoloaded dict.
  * Autoload script sources itself when defining function.
  * Configure check for selinux does not check for header file.
  * When recovering a file with "vim -r swapfile" the hit-enter prompt is
    at the top of the window.
  * ch_readraw() waits for NL if channel mode is NL.
  * Get "no write since last change" message if a terminal is open.
  * Local additions in help skips some files. (joshklod)
  * Not enough quickfix help; confusing winid.
  * Python 3.5 is getting old.
  * Cannot select modified buffers with getbufinfo().
  * Wordcount test is old style.
  * Char not overwritten with ambiguous width char, if the ambiguous char
    is single width but we reserve double-width space.
  * getqflist() items are missing if not set, that makes it more difficult
    to handle the values.
  * DirectX scrolling can be slow, vertical positioning is off. 

-------------------------------------------------------------------
Mon Dec  4 10:23:05 UTC 2017 - idonmez@suse.com

- Updated to revision 1365, fixes the following problems
  * Libvterm ANSI colors can not always be recognized from the RGB
    values. The default color is wrong when t_RB is empty.
  * The Terminal highlighting doesn't work in a terminal.
  * Some users don't want to diff with hidden buffers.
  * Terminal window colors wrong when using Terminal highlighting.
  * Recovering does not work when swap file ends in .stz.
  * There is no easy way to get the window position.
  * When one channel test fails others fail as well.

-------------------------------------------------------------------
Wed Nov 29 11:36:40 UTC 2017 - idonmez@suse.com

- Update to revision 1358
  * Too many changes to list
- Fixes CVE-2017-1000382 bsc#1065958
- Refresh patches:
  * disable-unreliable-tests.patch
  * vim-7.3-filetype_spec.patch
  * vim-7.4-disable_lang_no.patch
  * vim-7.4-highlight_fstab.patch
  * vim-8.0-ttytype-test.patch

-------------------------------------------------------------------
Tue Nov 14 13:03:01 UTC 2017 - mpluskal@suse.com

- Explicitly require python2-devel

-------------------------------------------------------------------
Thu Oct 12 07:56:31 UTC 2017 - idonmez@suse.com

- Add disable-unreliable-tests.patch to disable unreliable tests
  bsc#1054723

-------------------------------------------------------------------
Mon Jun 19 10:57:45 UTC 2017 - idonmez@suse.com

- Bump priorities so we can upgrade from 12.3 

-------------------------------------------------------------------
Tue Jun  6 10:22:14 UTC 2017 - idonmez@suse.com

- Updated to revision 627, fixes the following problems
  * Call for requesting color and ambiwidth is too early. (Hirohito Higashi)
  * "1gd" may hang.
  * Bracketed paste is still enabled when executing a shell command.
  (Michael Smith)
  * Can't run make with several jobs, creating directories has a race
  condition.
  * The cursor line number becomes negative when using :z^ in an empty
  buffer. (neovim #6557)
  * Building the command table requires Perl.
  * Running parallel make after distclean fails. (Manuel Ortega)
  * Get only one quickfix list after :caddbuf.
  * Using freed memory when resetting 'indentexpr' while evaluating
  it. (Dominique Pelle)
  * Can't build when configure choses "install-sh". (Daniel Hahler)
  * Warning for uninitialized variable. (John Marriott)
  * :simalt on MS-Windows does not work properly.
  * Duplicate test case for quickfix.
  * Cannot set the valid flag with setqflist().
  * Moving folded text is sometimes not correct.
  * Illegal memory access with z= command. (Dominique Pelle)
  * Fold test hangs on MS-Windows.
  * Memory leak when executing quickfix tests.
  * Test_options fails when run in the GUI.
  * No test for mapping timing out.
  * Configure check for return value of tgetent is skipped.
  * job_stop() often assumes the channel will be closed, while the job
    may not actually be stopped. (Martin Gammelsæter)
  * :simalt still does not work.
  * Cannot add a context to locations.
  * Changes to eval functionality not documented.
  * If a job writes to a buffer and the user is typing a command, the screen
  isn't updated. When a message is displayed the changed            buffer
  may cause it to be cleared. (Ramel Eshed)
  * Duplication of code for adding a list or dict return value.
  * Build failure when windows feature is missing.
  * Coverity warning for not checking return value of dict_add().
  * Crash when complete() is called after complete_add() in
  'completefunc'. (Lifepillar)
  * Off-by-one error in buffer size computation.
  * Building with gcc 7.1 yields new warnings.
  * diff mode is insufficiently tested
  * test_recover fails on some systems.
  * No test coverage for :spellrepall.
  * When gF fails to edit the file the cursor still moves to the found
  line number.
  * gF test fails on MS-Windows.
  * gF test fails still on MS-Windows.
  * The buffer that quickfix caches for performance may become invalid. (Daniel
  Hahler)
  * Cannot set the context for a specified quickfix list.
  * When creating a bufref, then using :bwipe and :new it might get the same
  memory and bufref_valid() returns true.
  * Cannot manipulate other than the current quickfix list.
  * For some people the hint about quitting is not sufficient.
  * The screen is redrawn when t_BG is set and used to detect the value for
  'background'.
  * When t_u7 is sent a few characters in the second screen line are
  overwritten and not redrawn later. (Rastislav Barlik)
  * Package directories are added to 'runtimepath' only after loading
  non-package plugins.
  * The conf filetype detection is done before ftdetect scripts from packages
  that are added later.
  * float2nr() is not exactly right.
  * Using % with :hardcopy wrongly escapes spaces. (Alexey Muranov)
  * When setting the cterm background with ":hi Normal" the value of
  'background' may be set wrongly.
  * Hardcopy test hangs on MS-Windows.
  * NFA regex engine handles [0-z] incorrectly.
  * In the GUI, when a timer uses feedkeys(), it still waits for an
  event. (Raymond Ko)
  * Since we only support GTK versions that have it, the ckeck for
  HAVE_GTK_MULTIHEAD is no longer needed.
  * The ":stag" command does not respect 'switchbuf'.
  * Using a text object to select quoted text fails when 'selection' is set to
  "exclusive". (Guraga)
  * The message "Invalid range" is used for multiple errors.
  * Warning for unused variable in tiny build. (Tony Mechelynck)
  * shellescape() always escapes a newline, which does not work with some
  shells. (Harm te Hennepe)
  * In the GUI the cursor may flicker.
  * When 'wrapscan' is off "gn" does not select the whole pattern when it's
  the last one in the text. (KeyboardFire)

-------------------------------------------------------------------
Fri Apr 28 10:58:31 UTC 2017 - werner@suse.de

- Extend vimrc with mappings for  8-bit controls key escape sequences

-------------------------------------------------------------------
Thu Apr 27 12:59:53 UTC 2017 - idonmez@suse.com

- Conflict with old vim versions to fix the upgrade from 12.3
  boo#1036583

-------------------------------------------------------------------
Tue Apr 18 10:15:22 UTC 2017 - idonmez@suse.com

- Updated to revision 566, fixes the following problems
  * :windo allows for ! but it's not supported.
  * Undefined behavior when using backslash after empty line.
  * Not enough test coverage for syntax commands.
  * Crash when getting the window position in tmux.
  * Cannot detect Bazel BUILD files on some systems.
  * Using freed memory in :caddbuf after clearing quickfix list.
  * Setting nocompatible for the tiny version moves the cursor.
- Refresh and re-add vim-8.0-ttytype-test.patch
 
-------------------------------------------------------------------
Mon Apr 10 12:17:59 UTC 2017 - idonmez@suse.com

- Updated to revision 559, fixes the following problems
  * Test_edit causes older xfce4-terminal to close. (Dominique Pelle)
  * Cppcheck warnings.
  * Edit test may fail on some systems.
  * Swap file exists briefly when opening the command window.
  * Extra line break in verbosefile when using ":echomsg". (Ingo Karkat)
  * Saving the redo buffer only works one time, resulting in the "." command
    not working well for a function call inside another function call.
  * No test for the 8g8 command.
  * Some etags format tags file use 0x01, breaking the parsing.
  * The typeahead buffer is reallocated too often.
  * Toupper and tolower don't work properly for Turkish when 'casemap'
    is empty. (Bjorn Linse)
  * Toupper/tolower test with Turkish locale fails on Mac.
  * Toupper and tolower don't work properly for Turkish when 'casemap'
    contains "keepascii". (Bjorn Linse)
  * Toupper/tolower test fails on OSX without Darwin.
  * Getting the window position fails if both the GUI and term code is
    built in.
  * GTK: using static gravities is not useful.
  * The :ownsyntax command is not tested.
  * Setting ttytype to xxx does not always fail as expected.
- Remove vim-8.0-ttytype-test.patch, fixed upstream. 

-------------------------------------------------------------------
Mon Apr 10 11:41:51 UTC 2017 - tchvatal@suse.com

- Update the update-alternatives code

-------------------------------------------------------------------
Wed Apr  5 09:19:45 UTC 2017 - idonmez@suse.com

- Updated to revision 542, fixes the following problems
  * ml_get errors in silent Ex mode. (Dominique Pelle)
  * A large count on a normal command causes trouble. (Dominique Pelle)
  * There is no way to remove quickfix lists (for testing).
  * Storing a zero byte from a multi-byte character causes fold text to show
    up wrong.
  * Character classes are not well tested. They can differ between platforms.
  * Using a function pointer instead of the actual function, which we know.
  * GtkForm handling is outdated.
  * MS-Windows: when 'clipboard' is "unnamed" yyp does not work in a :global
    command.
  * dv} deletes part of a multi-byte character. (Urtica Dioica)
  * Folds are messed up when 'encodin' is "utf-8".
  * Coverity complains about possible negative value.
  * RISC OS support was removed long ago, but one file is still included.
  * When 'wildmenu' is set and 'wildmode' has "longest" then the first file
    name is highlighted, even though the text shows the longest match.
  * Line in test commented out.
  * Buffer overflow when 'columns' is very big. (Nikolai Pavlov)
  * Test with long directory name fails on non-unix systems.
  * Test with long directory name fails on Mac.
  * Abbreviation doesn't work after backspacing newline. (Hkonrk)
  * Defaults.vim does not work well with tiny features. (crd477)
  * Memory leak when exiting from within a user function.
  * Quickfix window not updated when freeing quickfix stack.
  * Illegal memory access with :z and large count.
  * No test for falling back to default term value.
  * Startup test fails on Mac.
  * Building unit tests fails.
  * Compiler warning on MS-Windows.
  * getpos() can return a negative line number. (haya14busa)
 
-------------------------------------------------------------------
Fri Mar 31 09:19:29 UTC 2017 - idonmez@suse.com

- Update spec.skeleton with spec-cleaner 

-------------------------------------------------------------------
Mon Mar 27 10:14:04 UTC 2017 - idonmez@suse.com

- Updated to revision 514, fixes the following problems
  * Insufficient testing for statusline.
  * 'makeencoding' missing from the options window.
  * Git and hg see new files after running tests. (Manuel Ortega)
  * Options test does not always test everything.
  * Options test fails or hangs on MS-Windows.
  * 'cinoptions' cannot set indent for extern block.
  * "make shadow" creates an invalid link.
  * Quite a few beeps when running tests.
  * Clang version not correctly detected.
  * Some functions are not tested.
  * Running the options test sometimes resizes the terminal.
  * The packadd test does not create the symlink correctly and does not test
    the right thing.
  * The fnamemodify test changes 'shell' in a way later tests may not be
    able to use system().
  * Using ":%argdel" while the argument list is already empty gives an
    error. (Pavol Juhas)
  * Not enough test coverage in Insert mode.
  * Dead code in #ifdef.
  * Patch shell command uses double quotes around the argument, which allows
    for $HOME to be expanded. (Etienne)
  * Terminal width is set to 80 in test3.
  * Diffpatch fails when the file name has a quote.
  * Getpgid is not supported on all systems.
  * The ";" command does not work after characters with a lower byte that
    is NUL.
  * Getting font name does not work on X11.
  * Some macros are in lower case, which can be confusing.
  * Part of fold patch accidentally included.
  * v:progpath is not reliably set.
  * Some macros are in lower case.
  * Some macros are in lower case.
  * Adding fold marker creates new comment.
  * Compiler warnings for comparing unsigned char with 256 always being
    true. (Manuel Ortega)
  * The mode test may hang in Test_mode(). (Michael Soyka)
  * Typo in MinGW test makefile.
  * Using :move messes up manual folds.
  * Potential crash if adding list or dict to dict fails.
  * Old fix for :move messing up folding no longer needed, now that we have
    a proper solution.
  * Can't build on HPUX.
  * Test 45 hangs on MS-Windows.
  * If an MS-Windows tests succeeds at first and then fails in a way it does
    not produce a test.out file it looks like the test succeeded.
  * Resetting 'compatible' in defaults.vim has unexpected side effects. 
    (David Fishburn)
  * Can't find executable name on Solaris and FreeBSD.
  * Off-by-one error in using :move with folding.
  * There are still a few macros that should be all-caps.
  * Using g< after :for does not show the right output. (Marcin Szamotulski)
  * After aborting an Ex command g< does not work. (Marcin Szamotulski)
  * Compiler warnings on MS-Windows.
  * Not enough testing for help commands.
  * Exit callback test sometimes fails.
  * When a test fails and test.log is created, Test_edit_CTRL_I matches it
    instead of test1.in.
  * No test covering arg_all().
  * The client-server feature is not tested.
  * Not enough testing for the client-server feature.
  * Missing change to main.c.
  * The client-server test may hang when failing.
  * Tests use assert_true(0) and assert_false(1) to report errors.
  * remote_peek() is not tested.
  * The remote_peek() test fails on MS-Windows.
  * Unnecessary if statement.
  * The setbufvar() function may mess up the window layout. (Kay Z.)
  * Illegal memory access when using :all. (Dominique Pelle)
  * Using :lhelpgrep with an argument that should fail does not produce an
    error if the previous :helpgrep worked.
  * Not all windows commands are tested.
  * Crash and endless loop when closing windows in a SessionLoadPost
    autocommand.
  * The autocmd test hangs on MS-Windows.
  * Running tests leaves an "xxx" file behind.
  * Clipboard and "* register is not tested.
  * Splitting a 'winfixwidth' window vertically makes it one column
    smaller. (Dominique Pelle)
  * The quotestar test fails when a required feature is missing.
  * A failing client-server request can make Vim hang.
  * Crash with cd command with very long argument.
  * Build failure with older compiler on MS-Windows.
  * The quotestar test uses a timer instead of a timeout, thus it cannot be
    rerun like a flaky test.
  * Insufficient testing for folding.
  * Arabic support is not fully tested.
  * Two autocmd tests are skipped on MS-Windows.
  * taglist() does not prioritize tags for a buffer.
  * Quotestar test is still a bit flaky.
  * On MS-Windows ":!start" does not work as expected.
  * Coverity complains about possible NULL pointer.
  * Endless loop in updating folds with 32 bit ints.
  * Looking up an Ex command is a bit slow.
  * Failed window split for :stag not handled. (Coverity CID 99204)
  * Can't build with ANSI C.
  * Client-server tests fail when $DISPLAY is not set.
  * Coveralls no longer shows per-file coverage.
  * No link to codecov.io results.
  * Typo in link to codecov.io results.
  * Menuage for skipping client-server tests is unclear.
  * Check for available characters takes too long.
  * Getting name of cleared highlight group is wrong. (Matt Wozniski)
  * Script for creating cmdidxs can be improved.
 
-------------------------------------------------------------------
Mon Mar 20 16:46:58 CET 2017 - kukuk@suse.de

- Disable term=xxx test, does not work with any vim version
  * vim-8.0-ttytype-test.patch

-------------------------------------------------------------------
Sun Mar 19 20:55:16 UTC 2017 - suse-beta@cboltz.de

- Update apparmor.vim (taken from AppArmor 2.11)
  * add support for the "kcm" and "qipcrtr" network keywords
  * update change_profile rule highlighting

-------------------------------------------------------------------
Sat Mar 11 10:55:35 CET 2017 - kukuk@suse.de

- Build default vim without X11 support, use update-alternatives
  to prefer gvim if installed for X11 support.

-------------------------------------------------------------------
Mon Mar  6 08:40:25 UTC 2017 - idonmez@suse.com

- Updated to revision 425, fixes the following problems
  * Packadd test does not clean up symlink.
  * Packadd test uses wrong directory name.
  * The E11 error message in the command line window is not translated.
  * The "zero count" error doesn't have a number. (Hirohito Higashi)
  * Xfontset and guifontwide are not tested.
  * Illegal memory access after "vapo". (Dominique Pelle)
  * Restoring help snapshot accesses freed memory. (Dominique Pelle)
  * GUI test fails on some systems.
  * Illegal memory access when 'complete' ends in a backslash.
  * Can't access b:changedtick from a dict reference.
  * Functions test fails.
  * Flags of :substitute not sufficiently tested.
  * Invalid memory access in :recover command.
  * :recover test fails on MS-Windows.
  * Illegal memory access with vi'
  * Not checking return valud of dict_add(). (Coverity)
  * When using complete() and typing a character undo is saved after the
    character was inserted. (Shougo)
  * Double free when compiled with EXITFREE and setting 'ttytype'.
  * b:changedtick can be unlocked, even though it has no effect.
  * Unlet command leaks memory. (Nikolai Pavlov)
  * islocked('d.changedtick') does not work.
  * Vim relies on limits.h to be included indirectly, but on Solaris 9 it
    may not be. (Ben Fritz)
  * When using CTRL-X CTRL-U inside a comment, the use of the comment leader
    may not work. (Klement)
  * When building with a shadow directory on macOS lacks the +clipboard
    feature.
  * Redrawing errors with GTK 3.
  * Not enough test coverage for Perl.
  * No test for concatenating an empty string that results from out of
    bounds indexing.
  * The condition for when a typval needs to be cleared is too complicated.
  * If [RO] in the status line is translated to a longer string, it is
    trunctted to 4 bytes.
  * Test to check that setting termcap key fails sometimes.
  * Using uninitialized memory when 'isfname' is empty.
  * Leaking memory when setting 'ttytype'.
  * Crash when setting 'guicursor' to weird value.
  * Invalid memory access in C-indent code.
  * 'number' and 'relativenumber' are not properly tested.
  * Sometimes VimL is used, which is confusing.
  * GUI initialisation is not sufficiently tested.
  * Tests fail on MS-Windows.
  * Travis is too slow to keep up with patches.
  * ]s does not move cursor with two spell errors in one line.
  * Might free a dict item that wasn't allocated.
  * Build fails with tiny features.
  * If configure defines _LARGE_FILES some include files are included before
    it is defined.
  * Not all options are tested with a range of values.
  * The 'balloondelay', 'ballooneval' and 'balloonexpr' options are not defined
    without the +balloon_eval feature. Testing that an option value
    fails does not work for unsupported options.
  * Invalid memory access when setting wildchar empty.
  * Leaking memory when setting v:completed_item.
  * More options are not always defined.
  * Build fails without +folding.
  * Invalid memory access when using :sc in Ex mode. (Dominique Pelle)
  * The "+ register is not tested.
  * Size computations in spell file reading are not exactly right.
  * Possible overflow when reading corrupted undo file.
    CVE-2017-6349 bsc#1027057
  * Another possible overflow when reading corrupted undo file.
    CVE-2017-6350 bsc#1027053
  * CTRL-Z and mouse click use CTRL-O unnecessary.
  * With 'linebreak' set and 'breakat' includes ">" a double-wide character
    results in "<<" displayed.
  * Diff mode is not sufficiently tested.
  * Warning in tiny build for unused variable. (Tony Mechelynck)
  * Misplaced #ifdef. (Christ van Willigen)
  * Timer test failed for no apparent reason.
  * No tests for arabic.
  * Tiny build has a problem with generating the options test.
  * compiler warnings
  * filtering lines through "cat", without changing the line count, changes
    manual folds.
  * Test for arabic does not check what is displayed.
  * When the window scrolls horizontally when the popup menu is displayed
    part of it may not be cleared. (Neovim issue #6184)
  * Arabic support is verbose and not well tested.
  * GUI test fails with Athena and Motif.
  * When the same tag appears more than once, the order is
    unpredictable. (Charles Campbell)
  * Tabs are not aligned when scrolling horizontally and a Tab doesn't
    fit. (Axel Bender)
  * Testing the + register fails with Motif.
  * 'balloonexpr' only works synchronously.
  * Cannot build with the viminfo feature but without the eval feature.
  * Illegal memory access with "t".
  * Crash when using balloon_show() when not supported. (Hirohito Higashi)
  * Some tests have a one second delay.
  * Test fails with missing balloon feature.
  * :map completion does not have <special>. (Dominique Pelle)
  * GUI tests may fail.
  * Not enough testing for quickfix.
  * v:progpath may become invalid after ":cd".
  * The arabic shaping code is verbose.
  * Filtering folds with marker method not tested.
  * Updating folds does not work properly when inserting a file and a few
    other situations.
  * set_progpath is defined but not always used
  * Newer gettext/iconv library has extra dll file.
  * We can't change the case in menu entries, it breaks translations.
  * Menu test fails on MS-Windows.
  * Menu test fails on MS-Windows using gvim.
  * Balloon eval is not tested.
  * Balloon test fails on MS-Windows.
  * Setting v:progpath is not quite right.
  * Test for the clipboard fails sometimes.
  * ASAN logs are disabled and don't cause a failure.
  * Test for v:progpath fails on MS-Windows.
  * When running :make the output may be in the system encoding, different
    from 'encoding'.
  * Diff mode is displayed wrong when adding a line at the end of a buffer.
  * Python test fails with Python 3.6.
  * The effect of adding "#" to 'cinoptions' is not always removed.
  * Compiler warnings on MS-Windows. (Ajit Thakkar)
  * Build errors when building without folding.

- Drop test87-python36.patch, fixed upstream. 

-------------------------------------------------------------------
Thu Feb 16 14:00:34 UTC 2017 - idonmez@suse.com

- Add test87-python36.patch to update test results for Python 3.6 

-------------------------------------------------------------------
Fri Feb 10 12:10:59 UTC 2017 - idonmez@suse.com

- Updated to revision 324, fixes the following problems
  * When a json message arrives in pieces, the start is dropped and the
    decoding fails.
  * Not enough testing for GUI functionality.
  * getcmdtype(), getcmdpos() and getcmdline() are not tested.
  * ":help :[range]" does not work. (Tony Mechelynck)
  * ":help z?" does not work. (Pavol Juhas)
  * No test for setting 'guifont'.
  * Small mistake in 7x13 font name.
  * Insert mode completion does not respect "start" in 'backspace'.
  * Warning for unused variable with small build.
  * When using the tiny version trying to load the matchit plugin gives an
    error. On MS-Windows some default mappings fail.
  * Possible overflow with spell file where the tree length is corrupted.
    CVE-2017-5953 bsc#1024724
  * When running the command line tests there is a one second wait.
  * Illegal memory access with "1;y".
 

-------------------------------------------------------------------
Mon Feb  6 10:12:18 UTC 2017 - idonmez@suse.com

- Updated to revision 311, fixes the following problems
  * Double free on exit when using a closure. (James McCoy)
  * Ex command range with repeated search does not work. (Bruce DeVisser)
  * When the GUI window is resized Vim does not always take over the new
    size. (Luchr)
  * Cannot stop diffing hidden buffers. (Daniel Hahler)
  * No tests for ":set completion" and various errors of the :set command.
  * Cannot set terminal key codes with :let.
  * Bracketed paste does not work in Visual mode.
  * Assign test fails in the GUI.
  * Invalid memory access when option has duplicate flag.
  * mode() not sufficiently tested.
  * Asan detects a memory error when EXITFREE is defined. (Dominique Pelle)
  * When using a symbolic link, the package path will not be inserted at
    the right position in 'runtimepath'. (Dugan Chen, Norio Takagi)
  * Cannot use an empty key in json.
  * Not enough testing for GUI functionality.
  * Linebreak tests are old style. 

-------------------------------------------------------------------
Fri Feb  3 12:12:19 UTC 2017 - idonmez@suse.com

- Updated to revision 296, fixes the following problems
  * Jumping to a tag that is a static item in the current file fails. 
    (Kazunobu Kuriyama)
  * The test for :profile is slow and does not work on MS-Windows.
  * On MS-Windows the system() test skips a few parts.
  * Some syntax arguments take effect even after "if 0". (Taylor Venable)
  * Warning for an unused parameter when the libcall feature is disabled.
    Warning for a function type cast when compiling with -pedantic.
  * Some syntax arguments are not tested.
  * When completing a group name for a highlight or syntax command cleared
    groups are included.
  * No test for invalid syntax group name.
  * Order of complication flags is sometimes wrong.
  * Compiler warns for uninitialized variable. (Tony Mechelynck)
  * After :undojoin some commands don't work properly, such as :redo.
    (Matthew Malcomson)
  * Test coverage for :retab insufficient.
  * Leaking file descriptor when system() cannot find the buffer. (Coverity)
  * Internally used commands for CTRL-Z and mouse click end up in
    history. (Matthew Malcomson)
  * When using :substitute with the "c" flag and 'cursorbind' is set the
    cursor is not updated in other windows.
  * Vim does not support bracketed paste, as implemented by xterm and other
    terminals.
  * Build fails if the multi-byte feature is disabled.
  * The buffer used to store a key name theoreticaly could be too
    small. (Coverity)
  * The Netbeans "specialKeys" command does not check if the argument fits
    in the buffer. (Coverity)
  * Leaking memory when syntax cluster id is unknown. (Coverity)
  * When a Cscope line contains CTRL-L a NULL pointer may be used. (Coverity)
  * When decoding JSON with a JS style object the JSON test may use a NULL
    pointer. (Coverity)
  * Build fails without the cscope feature.
  * No command line completion for :cexpr, :cgetexpr, :caddexpr, etc.
  * Ubsan reports errors for integer overflow.
  * Completion for :match does not show "none" and other missing highlight
    names.
  * Checking if PROTO is defined inside a function has no effect.
  * When a multi-byte character ends in a zero byte, putting blockwise text
    puts it before the character instead of after it.
  * Coverity gets confused by the flags passed to find_tags() and warnts
    for an uninitialized variable.
  * When 'fileformats' is changed in a BufReadPre auto command, it does not
    take effect in readfile(). (Gary Johnson)
  * When a block is visually selected and put is used on the end of the
    selection only one line is changed.
  * The test for patch 8.0.0224 misses the CR characters and passes even
    without the fix. (Christian Brabandt)
  * Crash when 'fileformat' is forced to "dos" and the first line in the
    file is empty and does not have a CR character.
  * When pasting test in an xterm on the command line it is surrounded by
    <PasteStart> and <PasteEnd>. (Johannes Kaltenbach)
  * When freeing a buffer the local value of the 'formatprg' option is
    not cleared.
  * When using bracketed paste line breaks are not respected.
  * There are no tests for bracketed paste mode.
  * Pasting in Insert mode does not work when bracketed paste is used and
    'esckeys' is off.
  * The paste test fails if the GUI is being used.
  * When several lines are visually selected and one of them is short,
    using put may cause a crash. (Axel Bender)
  * Memory leak detected when running tests for diff mode.
  * Gcc complains that a variable may be used uninitialized. Confusion
    between variable and label name. (John Marriott)
  * When setting wildoptions=tagfile the completion context is not set
    correctly. (desjardins)
  * When using bracketed paste autoindent causes indent to be increased.
  * The address sanitizer sometimes finds errors, but it needs to be run
    manually.
  * The clang build on CI fails with one configuration.
  * Vim defines a mch_memmove() function but it doesn't work, thus is
    always unused.
  * Completion of user defined functions is not covered by tests.
  * When making a character lower case with tolower() changes the byte cound,
    it is not made lower case.
  * When the user sets t_BE empty after startup to disable bracketed paste,
    this has no direct effect.
  * The generated zh_CN.cp936.po message file is not encoded properly.
  * Compiler warnings for int to pointer conversion.
  * Under some circumstances, one needs to type Ctrl-N or Ctrl-P twice to
    have a menu entry selected. (Lifepillar)
  * vim_strcat() cannot handle overlapping arguments.
  * When two submits happen quick after each other, the tests for the first
    one may error out.
  * When virtcol() gets a column that is not the first byte of a multi-byte
    character the result is unpredictable. (Christian            Ludwig)
  * It is not so easy to write a script that works with both Python 2 and
    Python 3, even when the Python code works with both.
  * Characters below 256 that are not one byte are not always recognized as
    word characters.
  * When creating a session when winminheight is 2 or larger and loading
    that session gives an error.
  * When using an assert function one can either specify a message or get
    a message about what failed, not both.
  * When calling setpos() with a buffer argument it often is ignored. 
    (Matthew Malcomson)
  * Tests fail because some changes were not included.
  * The keyword test file is not included in the archive.
  * The keyword test file is not included in the archive.
  * Tab commands do not handle count correctly. (Ken Hamada)
  * Build fails with tiny features.
  * Not enough test coverage for eval functions.
  * Farsi support is barely tested.
  * Farsi support is not tested enough.
  * Memory error reported by ubsan, probably for using the string returned
    by execute().
  * May get ml_get error when :pydo deletes lines or switches to another
    buffer. (Nikolai Pavlov, issue #1421)
  * Compiler warning for using uninitialized variable.
  * A channel test sometimes fails on Mac.
  * May get ml_get error when :luado deletes lines or switches to another
    buffer. (Nikolai Pavlov, issue #1421)
  * May get ml_get error when :perldo deletes lines or switches to another
    buffer. (Nikolai Pavlov, issue #1421)
  * May get ml_get error when :rubydo deletes lines or switches to another
    buffer. (Nikolai Pavlov, issue #1421)
  * May get ml_get error when :tcldo deletes lines or switches to another
    buffer. (Nikolai Pavlov, closes #1421)
  * Crash on exit is not detected when running tests.
  * Dead code detected by Coverity when not using gnome.
  * When update_single_line() is called recursively, or another screen update
    happens while it is busy, errors may occur.
  * When checking for CTRL-C typed the GUI may detect a screen resize and
    redraw the screen, causing trouble.
  * Checking for FEAT_GUI_GNOME inside GTK 3 code is unnecessary.
  * The GUI test may trigger fontconfig and take a long time.
  * GUI test fails on MS-Windows.
  * With MSVC 2015 the dll name is vcruntime140.dll.
  * On MS-Windows setting an environment variable with multi-byte strings
    does not work well.
  * MS-Windows files are still using ARGSUSED while most other files have
    UNUSED.
  * When doing a Visual selection and using "I" to go to insert mode, CTRL-O
    needs to be used twice to go to Normal mode. (Coacher)
  * The return value of mode() does not indicate that completion is active
    in Replace and Insert mode. (Zhen-Huan (Kenny) Hu)
  * The Test_collapse_buffers() test failed once, looks like it is flaky.
  * Tests fail with tiny build on Unix.
  * When concealing is active and the screen is resized in the GUI it is
    not immediately redrawn.
  * Cannot access the arguments of the current function in debug mode.
    (Luc Hermitte)
  * Errors reported while running tests.
  * No test for "ga" and :ascii.
  * If a wide character doesn't fit at the end of the screen line, and the
    line doesn't fit on the screen, then the cursor position may be
    wrong. (anliting)
  * Visual block insertion does not insert in all lines.
  * The stat test is a bit slow.
  * Some tests have a one or three second wait.
  * Argument list is not stored correctly in a session file. (lgpasquale)
  * test_viml hangs.
  * Bracketed paste can only append, not insert.
 
-------------------------------------------------------------------
Tue Jan 24 11:44:03 UTC 2017 - idonmez@suse.com

- Improve summary bsc#1021040 

-------------------------------------------------------------------
Thu Jan 19 09:55:20 UTC 2017 - idonmez@suse.com

- Add missing %changelog to spec.skeleton 

-------------------------------------------------------------------
Mon Jan 16 11:36:46 UTC 2017 - idonmez@suse.com

- Updated to revision 194, fixes the following problems
  * When compiling with EBCDIC defined the build fails. (Yaroslav Kuzmin)
  * For completion "locale -a" is executed on MS-Windows, even though it
    most likely won't work.
  * Setting language in gvim on MS-Windows does not work when libintl.dll
    is dynamically linked with msvcrt.dll.
  * Using :change in between :function and :endfunction fails.
  * When opening a buffer on a directory and inside a try/catch then the
    BufEnter event is not triggered.
  * test_command_count may fail when a previous test interferes, seen on
    MS-Windows.
  * 'formatprg' is a global option but the value may depend on the type of
     buffer. (Sung Pae)
  * Error E937 is used both for duplicate key in JSON and for trying to
    delete a buffer that is in use.
  * When 'cursorbind' and 'cursorcolumn' are both on, the column highlignt
    in non-current windows is wrong.
  * When 'cursorbind' and 'cursorline' are set, but 'cursorcolumn' is not,
   then the cursor line highlighting is not updated. (Hirohito Higashi)
  * Ubsan warns for using a pointer that is not aligned.
  * When in Ex mode and an error is caught by try-catch, Vim still exits
    with a non-zero exit code.
  * The system() test fails on MS-Windows.
  * The error message from assert_notequal() is confusing.
  * Building with a new Ruby version fails.
  * Using NOT_VALID for redraw_later() to update the cursor line/column
    highlighting is not efficient.
  * There are no tests for the :profile command.
  * Detecting duplicate tags uses a slow linear search.
  * Some systems do not have ruby_sysinit(), causing the build to fail.
  * Build fails with tiny features.
  * Accidentally removed #ifdef.
  * Profile tests fails if total and self time are equal. 

-------------------------------------------------------------------
Thu Jan 12 11:55:45 UTC 2017 - idonmez@suse.com

- Updated to revision 172, fixes the following problems
  * When a C preprocessor statement has two line continuations the
    following line does not have the right indent. (Ken Takata)
  * ":earlier" and ":later" do not work after startup or reading
    the undo file.
  * When the pattern of :filter does not have a separator then
    completion of the command fails.
  * To pass buffer content to system() and systemlist() one has to
    first create a string or list.
  * Running the channel test creates channellog.
  * system() test fails on MS-Windows.
  * system() test fails on OS/X.
  * When sorting zero elements a NULL pointer is passed to qsort(),
    which ubsan warns for.
  * Several float functions are not covered by tests.
  * No command line completion for ":syntax spell" and ":syntax
    sync".
  * On MS-Windows some float functions return a different value when
    passed unusual values.  strtod() doesn't work for "inf" and "nan".
  * Using a NULL pointer when using feedkeys() to trigger drawing
    a tabline.
  * EMSG() is sometimes used for internal errors.
  * Build fails when using small features.
  * Build error on Fedora 23 with small features and gnome2.
  * Ruby 2.4 no longer supports rb_cFixnum.
  * Outdated and misplaced comments.
  * Ubsan warns for integer overflow.
  * JSON with a duplicate key gives an internal error. (Lcd)
  * str2nr() and str2float() do not always work with negative values.
  * Still some float functionality is not covered by tests.
  * For complicated string json_decode() may run out of stack space.
  * Channel test fails for using freed memory.
  * JS style JSON does not support single quotes.
  * The command selected in the command line window is not
    executed. (Andrey Starodubtsev) 

-------------------------------------------------------------------
Sun Jan  8 08:24:18 UTC 2017 - idonmez@suse.com

- Updated to revision 147, fixes the following problems
  * Not enough test coverage for syntax commands.
  * Test fails because of using :finish.
  * "2;'(" causes ml_get errors in an empty buffer.
  * Null pointer access reported by UBsan.
  * An address relative to the current line, ":.,+3y", does not work
    properly on a closed fold.
  * When using indent folding and changing indent the wrong fold is
    opened.
  * When 'maxfuncdepth' is set above 200 the nesting is limited to 200.
  * Small build fails.
  * Warning for unused argument.
  * Pasting inserted text in Visual mode does not work properly.
  * Nested function test fails on AppVeyor.
  * Normal colors are wrong with 'termguicolors'.
  * Line number of current buffer in getbufinfo() is wrong.
  * When using MSVC the GvimExt directory is cleaned twice.
  * Running tests on MS-Windows is a little bit noisy.
  * When using 'termguicolors' on MS-Windows the RGB definition causes
    the colors to be wrong.
  * searchpair() does not work when 'magic' is off. 

-------------------------------------------------------------------
Sat Dec 10 15:32:28 UTC 2016 - idonmez@suse.com

- Updated to revision 130, fixes the following problems
  * Not enough testing for entering Ex commands.
  * Display problem with 'foldcolumn' and a wide character. (esiegerman)
  * Cancelling completion still inserts text when formatting is done  for
  'textwidth'. (lacygoill)
  * Display test fails on MS-Windows.
  * Parallel make still doesn't work. (Lewis Muir)
  * Configure uses "ushort" while the Vim code doesn't. 

-------------------------------------------------------------------
Tue Dec  6 10:34:58 UTC 2016 - idonmez@suse.com

- Updated to revision 124, fixes the following problems
  * May not process channel readahead. (skywind)
  * Value of 'thesaurus' option not checked properly.
  * When using ch_read() with zero timeout, can't tell the difference between
    reading an empty line and nothing available.
  * Cannot use a semicolon in 'backupext'. (Jeff)
  * When reading channel output in a timer, messages may go missing. (Skywind)
  * The channel "drop" option is not tested.
  * Still checking if memcmp() exists while every system should have it now.
  * Drop command doesn't use existing window.
  * The :history command is not tested.
  * Tests 92 and 93 are old style.
  * When reading English help and using CTRl-] the language from 'helplang'
    is used.
  * Parallel make fails. (J. Lewis Muir)
  * No test for using CTRL-R on the command line.
  * Setting 'cursorline' changes the curswant column. (Daniel Hahler)
  * Internal error for assert_inrange(1, 1). 

-------------------------------------------------------------------
Sat Nov 26 09:21:03 UTC 2016 - idonmez@suse.com

- Updated to revision 101, fixes the following problems
  * When the input or output is not a tty Vim appears to hang.
  * When a channel callback consumes a lot of time Vim becomes
    unresponsive. (skywind)
  * Can't build on MS-Windows.
  * Popup menu always appears above the cursor when it is in the
    lower half of the screen. (Matt Gardner)
  * Options that are a file name may contain non-filename characters.
  * Some options are not strictly checked.
  * (after 8.0.0101) cannot set 'dictionary' to a path

-------------------------------------------------------------------
Tue Nov 22 12:03:22 UTC 2016 - idonmez@suse.com

- Updated to revision 95, fixes the following problems
  * Problems with GTK 3.22.2 fixed in 3.22.4.
 
-------------------------------------------------------------------
Mon Nov 21 16:01:17 UTC 2016 - dimstar@opensuse.org

- Export "TERM=linux" before running the test suite: vim does quite
  an extensive test relying on a full fledged terminal inside OBS,
  stdio is redirected to a serial console (where the build log is
  being recorded/extracted. Systemd set non-local tty by default to
  vt220 in upcoming versions (which the vi test suite fails to
  run on; this should be considered a vim bug).

-------------------------------------------------------------------
Fri Nov 18 08:47:34 UTC 2016 - idonmez@suse.com

- Updated to revision 92, fixes the following problems
  * Using NUL instead of NULL.
  * Crash when using the preview window from an unnamed buffer. (lifepillar)
  * On Windows job_stop() stops cmd.exe, not the processes it runs. (Linwei)
  * When a match ends in part of concealed text highlighting, it might mess
  up concealing by resetting prev_syntax_id.
  * An exiting job is detected with a large latency.
  * New code for job_stop() breaks channel test on AppVeyor.
  * Conceal test passes even without the bug fix.
  * No test for what 8.0.0047 fixes.
  * On Windows job_stop() stops cmd.exe, not the processes it runs. (Linwei)
  * Minor comment and style deficiencies.
  * When setting 'filetype' there is no check for a valid name.
  * Tests fail without the 'keymap' features.
  * Positioning of the popup menu is not good.
  * Vim does not build on VMS systems.
  * When using an Ex command for 'keywordprg' it is escaped as with a shell
  command. (Romain Lafourcade)
  * Compiler warning for unused variable.
  * No digraph for HORIZONTAL ELLIPSIS.
  * Compiler warning for comparing with unsigned. (Zoltan Arpadffy)
  * Normal test fails on MS-Windows.
  * Compiler warning for unused function in tiny build. (Tony Mechelynck)
  * when calling an operator function when 'linebreak' is set, it is internally
  reset before calling the operator function.
  * VMS has a problem with infinity.
  * Checking did_throw after executing autocommands is wrong. (Daniel Hahler)
  * Compiler warning for self-comparison.
  * Tests referred in Makefile that no longer exist.
  * Exit value from a shell command is wrong. (Hexchain Tong)
  * MS-Windows: Crash with long font name. (Henry Hu)
  * More comparisons between firstwin and lastwin.
  * Cannot make Vim fail on an internal error.
  * Using number for exception type lacks type checking.
  * Channel log has double parens ()().
  * The GUI code is not tested by Travis.
  * Accessing freed memory in quickfix.
  * Accessing freed memory in quickfix. (Domenique Pelle)
  * The OS X build fails on Travis.
  * Inconsistent function names.
  * Extension for configure should be ".ac".
  * Using freed memory with win_getid(). (Domenique Pelle)
  * Using freed memory when adding to a quickfix list. (Domenique Pelle)
  * Using freed memory with recursive function call. (Dominique Pelle)
  * Cannot add a comment after ":hide". (Norio Takagi)
  * When the channel callback gets job info the job may already have been
  deleted. (lifepillar)
  * When a test fails in Setup or Teardown the problem is not reported.
  * Various problems with GTK 3.22.2.
  * Cursor moved after last character when using 'breakindent'.
  * Test_help_complete sometimes fails in MS-Windows console.
  * C indenting does not support nested namespaces that C++ 17 has.
- Drop bsc-1008800.patch, fixed upstream. 

-------------------------------------------------------------------
Mon Nov  7 12:51:19 UTC 2016 - idonmez@suse.com

- Add bsc-1008800.patch to fix gvim rendering with recent gtk+
  update. Fixes bsc#1008800. Patch by Jan Alexander Steffens.

-------------------------------------------------------------------
Wed Oct 19 07:49:14 UTC 2016 - idonmez@suse.com

- Updated to revision 45, fixes the following problems
  * Cannot use overlapping positions with matchaddpos().
  * No completion for ":messages".
  * Order of matches for 'omnifunc' is messed up. (Danny Su)
  * Detecting that a job has finished may take a while.
  * Get E924 when switching tabs.
  * OPEN_CHR_FILES not defined for FreeBSD using Debian userland files.
  * When Vim 8 reads an old viminfo and exits, the next time marks are not
  read from viminfo. (Ned Batchelder)
  * Whole line highlighting with matchaddpos() does not work.
  * When using Insert mode completion but not actually inserting anything
  an undo item is still created. (Tommy Allen)
  * When using Insert mode completion with 'completeopt' containing "noinsert"
  change is not saved for undo.  (Tommy Allen)
  * When using Insert mode completion with 'completeopt' containing "noinsert"
  with CTRL-N the change is not saved for undo.  (Tommy            Allen)
  * In diff mode the cursor may end up below the last line, resulting in an
  ml_get error.
  * Calling job_stop() right after job_start() does not work. 

-------------------------------------------------------------------
Fri Oct 14 07:26:14 UTC 2016 - idonmez@suse.com

- Updated to revision 32, fixes the following problems
  * getwinvar() returns wrong Value of boolean and number options, especially
  non big endian systems. (James McCoy)
  * A string argument for function() that is not a function name results in
  an error message with NULL. (Christian Brabandt)
  * Netbeans test fails with Python 3. (Jonathonf)
  * ":lb" is interpreted as ":lbottom" while the documentation says it means
  ":lbuffer".
  * Vim 7.4 is still mentioned in a few places.
  * Popup complete test is disabled.
  * Unnecessary workaround for AppVeyor.
  * Crash when editing file that starts with crypt yeader. (igor2x)
  * On OSX Test_pipe_through_sort_all() sometimes fails.
  * Typos in comments.
  * Missing comma in list.
  * Crypt tests are old style.
  * Can't tell which part of a channel has "buffered" status.
  * Build fails.
  * Cannot get the number of the current quickfix or location list.
  * When using ":sleep" channel input is not handled.
  * Test_command_count is old style.
  * The regexp engines are not reentrant.
  * In the GUI when redrawing the cursor it may be on the second half of a
  double byte character.
  * If a channel in NL mode is missing the NL at the end the remaining
  characters are dropped.
  * "gd" and "gD" may find a match in a comment or string.
  * When the netbeans channel closes, "DETACH" is put in the output
  part. (Ozaki Kiichi)
  * Inconsistent use of spaces vs tabs in gd test.
  * Error format with %W, %C and %Z does not work. (Gerd Wachsmuth)
  * A channel is closed when reading on stderr or stdout fails, but there
  may still be something to read on another part.
  * Superfluous semicolons.
  * Code for MS-Windows is complicated because of the exceptions for old
  systems.
  * Mouse mode is not automatically detected for tmux.
  * After ":bwipeout" 'fileformat' is not set to the right default. 

-------------------------------------------------------------------
Mon Sep 12 17:57:14 UTC 2016 - idonmez@suse.com

- Updated to revision 3, fixes the following problems
  * getwinvar() returns wrong Value of boolean and number options,
    especially non big endian systems. (James McCoy)

-------------------------------------------------------------------
Mon Sep 12 14:41:09 UTC 2016 - idonmez@suse.com

- Updated to revision 2, fixes the following problems
  * Intro screen still mentions version7. (Paul)
  * The netrw plugin does not work.

-------------------------------------------------------------------
Mon Sep 12 13:09:03 UTC 2016 - idonmez@suse.com

- Update to version 8.0
  * Crash on exit when EXITFREE is defined. (Dominique Pelle)
  * Valgrind reports using uninitialzed memory. (Dominique Pelle)
  * Test 86 and 87 fail with some version of Python.
  * Netbeans test fails when run from unpacked MS-Windows sources.
  * Netbeans test fails in shadow directory.
  * Not enough test coverage for Normal mode commands.
  * The example that explains nested backreferences does not work properly
    with the new regexp engine. (Harm te Hennepe)
  * Regexp fails to match when using "\>\)\?". (Ramel)
  * Reading past end of line when using previous substitute pattern. 
    (Dominique Pelle)
  * Attempt to read history entry while not initialized.
  * Compiler warnings with Solaris Studio when using GTK3.
  * Memory leak in timer_start().
  * Invalid memory access when formatting. (Dominique Pelle)
  * Checking for last_timer_id to overflow is not reliable. (Ozaki Kiichi)
  * Illegal memory access with ":1@". (Dominique Pelle)
  * Superfluous function prototypes.
  * Sort test sometimes fails.
  * Needless line break. Confusing directory name.
  * MS-Windows gvim.exe does not have DirectX support.
  * Test runner misses a comma.

-------------------------------------------------------------------
Fri Sep  9 07:16:49 UTC 2016 - idonmez@suse.com

- Updated to revision 2347, fixes the following problems
  * submatch() does not check for a valid argument.
  * The 'langnoremap' option leads to double negatives.  And it does not
    work for the last character of a mapping.
  * Can't use "." and "$" with ":tab".
  * With SGR mouse reporting (suckless terminal) the mouse release and scroll
    up/down is confused.
  * Warning for missing declaration of skip_vimgrep_pat(). (John Marriott)
  * Tests using the sleep time can be flaky.
  * Timer test sometimes fails.
  * Timer test sometimes fails.
  * Warning for assigning negative value to unsigned. (Danek Duvall)
  * Adding pattern to ":oldfiles" is not a generic solution.
  * Filter test fails.
  * Oldfiles test fails.
  * Tiny build fails. (Tony Mechelynck)
  * When cancelling the :ptjump prompt a preview window is opened for a
    following command.
  * Missing colon in error message.
  * Some error message cannot be translated.
  * In rare cases diffing 4 buffers is not enough.
  * Compiler warnings for signed/unsigned in expression.
  * Check for Windows 3.1 will always return false.  (Christian Brabandt)
  * Compiler warnings in MzScheme code.
  * The script that checks translations can't handle plurals.
  * Coverity complains about null pointer check.
  * Coverity complains about not checking for NULL.
  * Two JSON messages are sent without a separator.
  * With 'incsearch' can only see the next match.
  * Channel test is flaky.
  * Build fails with small features.
  * Fail to read register content from viminfo if it is 438 characters
    long. (John Chen)
  * :filter does not work for many commands.  Can only get matching messages.
  * When adding entries to an empty quickfix list the title is reset.
  * printf() isn't tested much.
  * printf() test fails on Windows. "-inf" is not used.
  * Build fails on MS-Windows.
  * Using CTRL-N and CTRL-P for incsearch shadows completion keys.
  * Using 'hlsearch' highlighting instead of matchpos if there is no search
    match.
  * Insufficient testing for NUL bytes on a raw channel.
  * Netbeans test doesn't read settings from file.
  * getbufinfo(), getwininfo() and gettabinfo() are inefficient.
  * getwininfo() and getbufinfo() are inefficient.
  * Command line completion on "find **/filename" drops sub-directory.
  * ":diffoff!" does not remove filler lines.
  * Command line test fails on Windows when run twice.
  * Memory leak in getbufinfo() when there is a sign. (Dominique Pelle)
  * New users have no idea of the 'scrolloff' option.
  * Starting diff mode with the cursor in the last line might end up only
    showing one closed fold. (John Beckett)
  * printf() doesn't handle infinity float values correctly.
  * Timer test fails sometimes.
  * When a child process is very fast waiting 10 msec for it is
    noticeable. (Ramel Eshed)
  * Part of ":oldfiles" command isn't cleared. (Lifepillar)
  * Comment in scope header file is outdated. (KillTheMule)
  * Generated files are outdated.
  * The tee program isn't included.  Makefile contains build instructions
    that don't work.
  * The callback passed to ch_sendraw() is not used.
  * MS-Windows build instructions are clumsy. "dosbin" doesn't build.
  * When installing and $DESTDIR is set the icons probably won't be installed.
  * Compiler warning in tiny build. (Tony Mechelynck)
  * printf() handles floats wrong when there is a sign.
  * Not all systems understand %F in printf().
  * Modelines in source code are inconsistent.
  * Sign test fails on MS-Windows when using the distributed zip archives.
  * Cscope test fails.
  * No tests for :undolist and "U" command.
  * When starting a job that reads from a buffer and reaching the end,
    the job hangs.
  * It is not possible to close the "in" part of a channel.
  * QuickFixCmdPre and QuickFixCmdPost autocommands are not always triggered.
  * Get warning for deleting autocommand group when the autocommand using
    the group is scheduled for deletion. (Pavol Juhas)
  * MS-Windows: some files remain after testing.
  * Default interface versions for MS-Windows are outdated.
  * When using "is" the mode isn't always updated.
  * In a timer callback the timer itself can't be found or stopped. (Thinca)
  * Marks, writefile and nested function tests are old style.
  * Default value for 'langremap' is wrong.
  * Several tests are old style.
  * Old charsearch test still listed in Makefile.
  * Crash when doing tabnext in a BufUnload autocmd. (Dominique Pelle)
  * Accessing freed memory when a timer does not repeat.
  * Appveyor 64 bit build still using Python 3.4
  * Crash when autocommand moves to another tab. (Dominique Pelle)
  * Crash when deleting an augroup and listing an autocommand.
    (Dominique Pelle)
  * No error when deleting an augroup while it's the current one.
  * Insufficient testing for Normal mode commands.
  * Channel sort test is flaky.
  * Normal mode tests fail on MS-Windows.
  * When 'incsearch' is not set CTRL-T and CTRL-G are not inserted as before.
  * No way for a system wide vimrc to stop loading defaults.vim. 
    (Christian Hesse)
  * Redraw problem when using 'incsearch'.
  * When a test is commented out we forget about it.
  * Access memory beyond the end of the line. (Dominique Pelle)
  * Using freed memory when using 'formatexpr'. (Dominique Pelle)
  * Crash when editing a new buffer and BufUnload autocommand wipes out the
    new buffer. (Norio Takagi)
  * Tiny build fails.
  * Illegal memory access when Visual selection starts in invalid
    position. (Dominique Pelle)
  * Freeing a variable that is on the stack.
  * Crash when BufWinLeave autocmd goes to another tab page. (Hirohito Higashi)
  * Error for min() and max() contains %s. (Nikolay Pavlov)
  * Coverity complains about not checking curwin to be NULL.
  * Using CTRL-X CTRL-V to complete a command line from Insert mode does
    not work after entering an expression on the command line.
  * Crash when stop_timer() is called in a callback of a callback. Vim hangs
    when the timer callback uses too much time.
  * Outdated comments in test.
  * On MS-Windows test_getcwd leaves Xtopdir behind.
  * taglist() is slow. (Luc Hermitte)
  * Running normal mode tests leave a couple of files behind. (Yegappan
    Lakshmanan)
  * taglist() is still slow. (Luc Hermitte)
  * Can't build with small features. (John Marriott)
  * Tab page test fails when run as fake root.
  * MS-Windows: Building with Ruby uses old version.
  * Tiny things.  Test doesn't clean up properly.
  * Typo in MS-Windows build script.
  * Too many old style tests.
  * The "Reading from channel output..." message can be unwanted. Appending
    to a buffer leaves an empty first line behind.
  * For MinGW RUBY_API_VER_LONG isn't set correctly.  Many default version
    numbers are outdated.
  * Autocommand test fails when run directly, passes when run as part of
    test_alot. 

-------------------------------------------------------------------
Tue Sep  6 08:03:40 UTC 2016 - idonmez@suse.com

- Updated to revision 2334, fixes the following problems
  * No tests for :undolist and "U" command.
  * When starting a job that reads from a buffer and reaching the end,
    the job hangs.
  * It is not possible to close the "in" part of a channel.
  * QuickFixCmdPre and QuickFixCmdPost autocommands are not always triggered.
  * Get warning for deleting autocommand group when the autocommand using
    the group is scheduled for deletion. (Pavol Juhas)
  * MS-Windows: some files remain after testing.
  * Default interface versions for MS-Windows are outdated.
  * When using "is" the mode isn't always updated.
  * In a timer callback the timer itself can't be found or stopped. (Thinca)
  * Marks, writefile and nested function tests are old style.
  * Default value for 'langremap' is wrong.
  * Several tests are old style.
  * Old charsearch test still listed in Makefile.
  * Crash when doing tabnext in a BufUnload autocmd. (Dominique Pelle)
  * Accessing freed memory when a timer does not repeat.
  * Appveyor 64 bit build still using Python 3.4
  * Crash when autocommand moves to another tab. (Dominique Pelle)
  * Crash when deleting an augroup and listing an autocommand. 
    (Dominique Pelle)
  * No error when deleting an augroup while it's the current one.
  * Insufficient testing for Normal mode commands.
  * Channel sort test is flaky.
  * Normal mode tests fail on MS-Windows.
  * When 'incsearch' is not set CTRL-T and CTRL-G are not inserted as before.
  * No way for a system wide vimrc to stop loading defaults.vim. 
    (Christian Hesse)
  * Redraw problem when using 'incsearch'.
  * When a test is commented out we forget about it.
  * Access memory beyond the end of the line. (Dominique Pelle)
  * Using freed memory when using 'formatexpr'. (Dominique Pelle)
  * Crash when editing a new buffer and BufUnload autocommand wipes out the
    new buffer. (Norio Takagi)
  * Tiny build fails.
  * Illegal memory access when Visual selection starts in invalid
    position. (Dominique Pelle)
  * Freeing a variable that is on the stack.
  * Crash when BufWinLeave autocmd goes to another tab page. (Hirohito Higashi)
  * Error for min() and max() contains %s. (Nikolay Pavlov)
  * Coverity complains about not checking curwin to be NULL.
  * Using CTRL-X CTRL-V to complete a command line from Insert mode does
    not work after entering an expression on the command line.
  * Crash when stop_timer() is called in a callback of a callback. Vim hangs
    when the timer callback uses too much time.
  * Outdated comments in test.
  * On MS-Windows test_getcwd leaves Xtopdir behind. 

-------------------------------------------------------------------
Wed Aug 31 06:44:36 UTC 2016 - idonmez@suse.com

- Updated to revision 2295, fixes the following problems
  * The field names used by getbufinfo(), gettabinfo() and getwininfo()
    are not consistent.
  * Tab page tests are old style.
  * Test files have inconsistant modelines.
  * Startup test fails on Solaris.
  * There is no equivalent of 'smartcase' for a tag search.
  * ":oldfiles" output is a very long list.
  * The default ttimeoutlen is very long.
  * Crash when using funcref() with invalid name. (Dominique Pelle)
  * Can't build with +eval but without +quickfix. (John Marriott)
  * submatch() does not check for a valid argument.
  * The 'langnoremap' option leads to double negatives.  And it does not
    work for the last character of a mapping.
  * Can't use "." and "$" with ":tab".
  * With SGR mouse reporting (suckless terminal) the mouse release and scroll
    up/down is confused.
  * Warning for missing declaration of skip_vimgrep_pat(). (John Marriott)
  * Tests using the sleep time can be flaky.
  * Timer test sometimes fails.
  * Timer test sometimes fails.
  * Warning for assigning negative value to unsigned. (Danek Duvall)
  * Adding pattern to ":oldfiles" is not a generic solution.
  * Filter test fails.
  * Oldfiles test fails.
  * Tiny build fails. (Tony Mechelynck)
  * When cancelling the :ptjump prompt a preview window is opened for a
    following command.
  * Missing colon in error message.
  * Some error message cannot be translated.
  * In rare cases diffing 4 buffers is not enough.
  * Compiler warnings for signed/unsigned in expression.
  * Check for Windows 3.1 will always return false.  (Christian Brabandt)
  * Compiler warnings in MzScheme code.
  * The script that checks translations can't handle plurals.
  * Coverity complains about null pointer check.
  * Coverity complains about not checking for NULL.
  * Two JSON messages are sent without a separator.
  * With 'incsearch' can only see the next match.
  * Channel test is flaky.
  * Build fails with small features.
  * Fail to read register content from viminfo if it is 438 characters
    long. (John Chen)
  * :filter does not work for many commands.  Can only get matching messages.
  * When adding entries to an empty quickfix list the title is reset.
  * printf() isn't tested much.
  * printf() test fails on Windows. "-inf" is not used.
  * Build fails on MS-Windows.
  * Using CTRL-N and CTRL-P for incsearch shadows completion keys.
  * Using 'hlsearch' highlighting instead of matchpos if there is no search
    match.
  * Insufficient testing for NUL bytes on a raw channel.
  * Netbeans test doesn't read settings from file.
  * getbufinfo(), getwininfo() and gettabinfo() are inefficient.
  * getwininfo() and getbufinfo() are inefficient.
  * Command line completion on "find **/filename" drops sub-directory.
  * ":diffoff!" does not remove filler lines.
  * Command line test fails on Windows when run twice.
  * Memory leak in getbufinfo() when there is a sign. (Dominique Pelle)
  * New users have no idea of the 'scrolloff' option.
  * Starting diff mode with the cursor in the last line might end up only
  showing one closed fold. (John Beckett)
  * printf() doesn't handle infinity float values correctly.
  * Timer test fails sometimes.
  * When a child process is very fast waiting 10 msec for it is
  noticeable. (Ramel Eshed)
  * Part of ":oldfiles" command isn't cleared. (Lifepillar)
  * Comment in scope header file is outdated. (KillTheMule)
  * Generated files are outdated.
  * The tee program isn't included.  Makefile contains build instructions
  that don't work.
  * The callback passed to ch_sendraw() is not used.
  * MS-Windows build instructions are clumsy. "dosbin" doesn't build.
  * When installing and $DESTDIR is set the icons probably won't be installed.
  * Compiler warning in tiny build. (Tony Mechelynck)
  * printf() handles floats wrong when there is a sign.
  * Not all systems understand %F in printf().
  * Modelines in source code are inconsistent.
  * Sign test fails on MS-Windows when using the distributed zip archives.
  * Cscope test fails.
 
-------------------------------------------------------------------
Thu Aug 18 07:27:20 UTC 2016 - idonmez@suse.com

- Updated to revision 2225, fixes the following problems
  * When using matchaddpos() a character after the end of the
    line can be highlighted.
  * Can't build with +timers when +digraph is not included.
  * Recursive call to substitute gets stuck in sandbox.
  * printf() gives an error when the argument for %s is not a string.
  * printf() does not support binary format.
  * Sourcing a script where a character has 0x80 as a second byte
    does not work.
  * Buffer overflow when using latin1 character with feedkeys().
  * Compiler warnings with older compiler and 64 bit numbers.
  * Crash when placing a sign in a deleted buffer. 

-------------------------------------------------------------------
Tue Aug 16 07:55:28 UTC 2016 - idonmez@suse.com

- Updated to revision 2216, fixes the following problems
  * The qf_init_ext() function is too big.
  * Compiler warning for initializing a struct.
  * There is still code and help for unsupported systems.
  * There is no way to get a list of the error lists.
  * When using ":vimgrep" may end up with duplicate buffers.
  * No proper testing of trunc_string().
  * Coverage report is messed up by the unittests.
  * Can't run scripttests in the top directory.
  * Wrong part of #ifdef removed.
  * eval.c is too big.
  * Build fails.
  * eval.c is too big.
  * eval.c is too big.
  * Non-Unix builds fail.
  * Wrong file name.
  * qf_init_ext() is too big.
  * Using dummy variable to compute struct member offset.
  * eval.c is still too big.
  * Coverity warns for possible buffer overflow.
  * Compiler warns for uninitialzed variable. (John Marriott)
  * getcompletion() not well tested.
  * Compiler warning for char/char_u conversion.
  * Not all arguments of trunc_string() are tested.
    Memory access error when running the message tests.
  * spell.c is too big.
  * Missing change to include file.
  * The return value of type() is difficult to use.
  * substitute() does not support a Funcref argument.
  * rgb.txt is read for every color name.
  * One more place using a dummy variable.
  * No autocommand event to initialize a window or tab page.
  * Syntax error when dict has '>' key.
  * Cannot update 'tabline' when a tab was closed.
  * Running checks in po diretory fails.
  * Netbeans test fails on non-Unix systems.
  * When using PERROR() on some systems assert_fails() does not see the error.
  * Line numbers in the error list are not always adjusted.
  * Not much test coverage for digraphs.
  * Coverity complains about not restoring a value.
  * New digraph test makes testing hang.
  * Digraph tests fails on some systems.
  * Using the system default encoding makes tests unpredictable.
  * Digraph code test coverage is still low.
  * Keymap test fails with normal features.
  * Color handling of X11 GUIs is too complicated.
  * Using submatch() in a lambda passed to substitute() is verbose.
  * Coverity reports a resource leak when out of memory.
  * GTK 3 build fails with older GTK version.
  * Netbeans test fails once in a while.  Leaving log file behind.
  * The color allocation in X11 is overly complicated.
  * Man test fails when run with the GUI.
  * Lambda functions show up with completion.
  * Warning from 64 bit compiler.
  * Text object tests are old style.
  * When a keymap is active only "(lang)" is displayed.
  * "cgn" and "dgn" do not work correctly with a single character match
    and the replacement includes the searched pattern.
  * Looping over windows, buffers and tab pages is inconsistant.
  * Tiny build with GUI fails.
  * Can't have "augroup END" right after ":au!".
  * Code duplication when unreferencing a function.
  * Configure reports default features to be "normal" while it is "huge".
  * Clang warns about missing field in initializer.
  * Misplaced equal sign.
  * Netbeans test is flaky.
  * Setting 'display' to "lastline" is a drastic change, 
    while omitting it results in lots of "@" lines.
  * When there is an CmdUndefined autocmd then the error for a missing
    command is E464 instead of E492. (Manuel Ortega)
  * Defaults are very conservative.
  * getcompletion(.., 'dir') returns a match with trailing "*"
    when there are no matches.
  * Test for undo is flaky.
  * Tiny build fails.
  * Loading defaults.vim with -C argument.
  * The default vimrc for Windows is very conservative.
  * Deleting an augroup that still has autocmds does not give a warning.
    The next defined augroup takes its place.
  * Mac: can't build with tiny features.
  * Closures are not supported.
  * User defined functions can't be a closure.
  * No easy way to check if lambda and closure are supported.
  * Mac: don't get +clipboard in huge build.
  * No new style test for diff mode.
  * diffmode test leaves files behind, breaking another test.
  * Compiler warning for loss of data.
  * No tests for :diffget and :diffput
  * The short form of ":noswapfile" is ":noswap" instead of ":nos".
  * Memory leak when saving for undo fails.
  * Memory leak when using timer_start(). (Dominique Pelle)
  * Pending timers cause false memory leak reports.
  * More memory leaks when using partial, e.g. for "exit-cb".
  * test_partial has memory leaks reported.
  * Can't build with tiny features.
  * No error for using function() badly.
  * Various tiny issues.
  * Closure function fails.
  * Using function() with a name will find another function when it is redefined.
  * Test 86 and 87 fail.
  * :delfunction causes illegal memory access.
  * Tiny build fails.
  * Coverity reports bogus NULL check.
  * Leaking memory when redefining a function.
  * A funccal is garbage collected while it can still be used.
  * On MS-Windows quickix does not handle a line with 1023 bytes ending in CR-LF properly.
  * Win32: Using CreateThread/ExitThread is not safe.
  * Not enough testing for popup menu.  CTRL-E does not always work properly.
  * test_alot fails.
  * Not much testing for cscope.
  * If a test leaves a window open a following test may fail.
  * Warning with MinGW 64. (John Marriott)
  * Quickfix test fails on MS-Windows.
  * No proper translation of messages with a count.
  * GUI test isn't testing much.
  * Test_communicate() fails sometimes.
  * Quotes make GUI test fail on MS-Windows.
  * Compiler warning.
  * Test_job_start_fails() is expected to report memory leaks,
    making it hard to see other leaks in test_partial.
  * Result of getcompletion('', 'cscope') depends on previous completion.
  * Insufficient testing for cscope.
  * setmatches() mixes up values. (Nikolai Pavlov)
  * Expression test fails without conceal feature.
  * Result of getcompletion('', 'sign') depends on previous completion.
  * match() and related functions tested with old style test.
  * It is not possible to use plugins in an "after" directory to tune the behavior of a package.
  * Startup test fails on MS-Windows.
  * Small build can't run startup test.
  * Small build can't run tests.
  * Not running the startup test on MS-Windows.
  * Startup test gets stuck on MS-Windows.
  * Cannot get information about timers.
  * MS-Windows build fails.
  * No test for "vim --help".
  * Can't test help on MS-Windows.
  * Adding duplicate flags to 'whichwrap' leaves commas behind.
  * Insufficient testing of cscope.
  * #ifdefs in main() are complicated.
  * No testing for -C and -N command line flags, file arguments, startuptime.
  * No test for reading from stdin.
  * Reading from stdin test fails on MS-Windows.
  * There is no easy way to stop all timers.  There is no way to temporary pause a timer.
  * Compiler warning for unused variable.
  * Color Grey40 used in startup but not in the short list.
  * Sign tests are old style.
  * Tests that use RunVim() do not actually perform the test.
  * Test glob2regpat does not test much.
  * Timers test is flaky.
  * glob2regpat test fails on Windows.
  * Completion does not work properly with some plugins.
  * Cannot detect encoding in a fifo.
  * When startup test fails it's not easy to find out why. GUI test fails with Gnome.
  * No automatic prototype for vim_main2().
  * Generating prototypes with Cygwin doesn't work well.
  * With Gnome when the GUI can't start test_startup hangs.
  * Sign tests don't cover enough.
  * MS-Windows: The vimrun program does not support Unicode.
  * glob2regpat test doesn't test everything on MS-Windows.
  * All functions are freed on exit, which may hide leaks.
  * Test alot sometimes fails under valgrind. (Dominique Pelle)
  * In the GUI the cursor is hidden when redrawing any window, causing flicker.
  * Cannot get all information about a quickfix list.
  * The sign column disappears when the last sign is deleted.
  * Build fails with small features.
  * Test fails with normal features.
  * It is not easy to get information about buffers, windows and tabpages.
  * 'wildignore' always applies to getcompletion().
  * Warning for unused function.
  * The +xpm feature is not sorted properly in :version output.
  * Test for mappings is old style.
  * Cannot map <M-">. (Stephen Riehm)
  * On OSX configure mixes up a Python framework and the Unix layout.
  * Mouse support is not automatically enabled with simple term.
  * Mark " is not set when closing a window in another tab. (Guraga)
  * Cannot highlight the "~" lines at the end of a window differently.
  * A font that uses ligatures messes up the screen display.
  * It's not easy to find out if a window is a quickfix or location list window.
  * Test fails without the +sign feature.
 
-------------------------------------------------------------------
Sat Jul 16 08:09:39 UTC 2016 - idonmez@suse.com

- Updated to revision 2045, fixes the following problems
  * Looking up a buffer by number is slow if there are many.
  * Netbeans file authentication not tested.
  * GTK: display updating is not done properly and can be slow.
  * setbufvar() causes a screen redraw.
  * filter() and map() either require a string or defining a function.
  * Memory leak when using a function callback. 

-------------------------------------------------------------------
Thu Jul 14 08:38:51 UTC 2016 - idonmez@suse.com

-  Updated to revision 2033, fixes the following problems
  * Memory access error when reading viminfo. (Dominique Pelle)
  * "gd" hangs in some situations. (Eric Biggers)
  * Not all quickfix tests are also done  with the location lists.
  * Background is not drawn properly when 'termguicolors' is set.
  * Coverity warns for unreachable code.
  * Win32: Cannot compile with XPM feature using VC2015
  * The Man plugin doesn't work that well.
  * File list does not include new XPM libraries.
  * Viminfo continuation line with wrong length isn't skipped. (Marius Gedminas)
  * Using Ctrl-A with double-byte encoding may result in garbled text.
  * Minor problems with the quickfix code.
  * Quickfix long lines test not executed for buffer.
  * Ruby test is old style.
  * Cscope interface does not support finding assignments.
  * Not all parts of the quickfix code are tested.
  * No test for what 7.4.1948 fixes.
  * Using 32-bit Perl with 64-bit time_t causes memory corruption. (Christian Brabandt)
  * When using CTRL-W f and pressing "q" at the ATTENTION dialog the newly opened window is not closed.
  * Perl interface has obsolete workaround.
  * Perl interface preprocessor statements not nicely indented.
  * Crash when running test_channel.vim on Windows.
  * Unicode standard 9 was released.
  * When 'insertmode' is reset while doing completion the popup menu remains even though Vim is in Normal mode.
  * Two test files for increment/decrement.
  * Running Win32 Vim in mintty does not work.
  * The quickfix init function is too big.
  * When using a job in raw mode to append to a buffer garbage characters are added.
  * Coverity reports a resource leak.
  * Falling back from NFA to old regexp engine does not work properly. (fritzophrenic)
  * Invalid memory access with "\<C-">.
  * When the netbeans channel is closed consuming the buffer may cause a crash.
  * Using ":insert" in an empty buffer sets the jump mark. (Ingo Karkat)
  * It is not easy to see unrecognized error lines below the current error position.
  * On Solaris select() does not work as expected when there is typeahead.
  * GUI has a problem with some termcodes.
  * On MS-Windows large files (> 2Gbyte) cause problems.
  * Number variables are not 64 bits while they could be.
  * With 64 bit changes don't need three calls to sprintf().
  * Large file test does not delete its output.
  * Getting value of binary option is wrong. (Kent Sibilev)
  * 'errorformat' is parsed for every call to ":caddexpr".  Can't add to two location lists asynchronously.
  * No testing for Farsi code.
  * Viminfo file contains duplicate change marks.
  * farsi.c and arabic.c are included in a strange way.
  * Not all quickfix features are tested.
  * Missing changes in VMS build file.
  * Compiler warns for loss of data.
  * When copying unrecognized lines for viminfo, end up with useless continuation lines.
  * When updating viminfo with file marks there is no time order.
  * filter() and map() only accept a string argument.
  * Cscope items are not sorted.
  * glob() does not add a symbolic link when there are no wildcards.
  * Values for true and false can be confusing.
  * Not all TRUE and FALSE arguments are tested.
  * True-false test fails.
  * GUI: cursor drawn in wrong place if a timer callback causes a screen update. (David Samvelyan)
  * Capturing the output of a command takes a few commands.
  * Cannot easily scroll the quickfix window.
  * When writing buffer lines to a job there is no NL to NUL conversion.
  * evalcmd() doesn't work recursively.
  * Evalcmd test fails.
  * Tiny build fails. (Tony Mechelynck)
  * Crash when passing number to filter() or map().
  * Still cursor flickering when a callback updates the screen. (David Samvelyan)
  * GUI: cursor displayed in the wrong position.
  * After using evalcmd() message output is in the wrong position. (Christian Brabandt)
  * Crash when using tabnext in BufUnload autocmd. (Norio Takagi)
  * Running the tests leaves a viminfo file behind.
  * evalcmd() has a confusing name.
  * Messages test fails.
  * There is a :cbottom command but no :lbottom command.
  * It is not easy to get a list of command arguments.
  * Test for getcompletion() does not pass on all systems.
  * Using "noinsert" in 'completeopt' breaks redo.
  * Using "noinsert" in 'completeopt' does not insert match.
  * When a file gets a name when writing it 'acd' is not effective. (Dan Church)
  * Warning from MinGW about _WIN32_WINNT redefined. (John Marriott)
  * When there are many errors adding them to the quickfix list takes a long time.
  * buf_valid() can be slow when there are many buffers.
  * When ignoring case utf_fold() may consume a lot of time.
  * Can't build without +autocmd feature.
  * Still too many buf_valid() calls.
  * Warnings from 64 bit compiler.
  * buflist_findname_stat() may find a dummy buffer.
  * More buf_valid() calls can be optimized.
  * The cursor blinking stops or is irregular when receiving date over a
    channel and writing it in a buffer, and when updating the status.
  * Reference counting for callbacks isn't right.
  * Can't build with +eval but without +menu.
  * cppcheck warns for using index before limits check.
  * printf() does not work with 64 bit numbers.
  * ARCH must be set properly when using MinGW.
  * The list_lbr_utf8 test fails if ~/.vim/syntax/c.vim sets 'textwidth' to a non-zero value.
  * Build fails with 64 bit MinGW. (Axel Bender)
  * 'cscopequickfix' option does not accept new value "a".
 
-------------------------------------------------------------------
Wed Jun 15 11:17:53 UTC 2016 - idonmez@suse.com

- Updated to revision 1938, fixes the following problems
  * Updating marks in a quickfix list is very slow when the list is long.
  * When waiting for a character is interrupted by receiving channel
    data and the first character of a mapping was typed, the mapping
    times out.
  * When receiving channel data 'updatetime' is not respected.
  * Wrong computation of remaining wait time in RealWaitForChar()
  * When umask is set to 0177 Vim can't create temp files.
  * GUI: When channel data is received the cursor blinking is interrupted.
  * Channel reading very long lines is slow.
  * balloon eval only gets the window number, not the ID.
  * Cannot easily get the window ID for a buffer.
  * Cannot get the window ID for a mouse click.
  * Cannot use a window ID where a window number is expected.
  * Invoking mark_adjust() when adding a new line below the last line
    is pointless.
  * Various typos, long lines and style mistakes.
  * User commands don't support modifiers.
  * GTK 3: cursor blinking doesn't work well.
  * Using CTRL-] in the help on "{address}." doesn't work.
  * Win32: the "Disabled" menu items would appear enabled.
  * No test for collapsing buffers for a channel.  Some text is lost.
  * When writing viminfo merging current history with history in viminfo
    may drop recent history entries.
  * Some compilers can't handle a double semicolon.
  * Collapsing channel buffers and searching for NL does not work properly.
  * Warnings from 64 bit compiler.
  * Netbeans uses uninitialzed pointer and freed memory.
  * Doubled semicolons.
  * Tests using external command to delete directory.
  * Recent history lines may be lost when exiting Vim.
  * No test for using setqflist() on an older quickfix list.
  * When ":doautocmd" is used modelines are used even when no
    autocommands were executed.
  * Executing autocommands while using the signal stack has a high chance
    of crashing Vim.
  * The effect of the PopupMenu autocommand isn't directly visible.
  * No proper test for what 7.4.1906 fixes.
  * History lines read from viminfo in different encoding than when writing
    are not converted.
  * Not enough testing for parsing viminfo lines.
  * Register contents is not merged when writing viminfo.
  * Missing test changes.
  * vim_time() not included when needed.
  * Ruby 2.4.0 unifies Fixnum and Bignum into Integer.
  * Command line editing is not tested much.
  * Missing "void" for functions without argument.
  * Viminfo does not merge file marks properly.
  * Possible crash with many history items.
  * Compiler warning for signed/unsigned.
  * Overwriting pointer argument.
  * Inconsistent indenting and weird name.
  * Can't build without +spell but with +quickfix.
  * Using both old and new style file mark lines from viminfo.
  * When writing viminfo the jumplist is not merged with the one in the viminfo file.
  * Compiler warning about uninitialzed variable.
  * New style tests not executed with MinGW compiler.
  * When using the GUI search/replace a second match right after the replacement is skipped.
  * Off-by-one error in bounds check.
  * No test for directory stack in quickfix.
  * When writing viminfo numbered marks were duplicated.
- Refresh vim-7.3-filetype_spec.patch

-------------------------------------------------------------------
Fri Jun  3 18:54:57 UTC 2016 - idonmez@suse.com

- Link to perl directly instead of dlopen'ing it. 

-------------------------------------------------------------------
Fri Jun  3 15:38:50 UTC 2016 - crrodriguez@opensuse.org

- vim must require %{?libperl_requires}, if perl is not
  updated with vim in lockstep, the following error
  occurs:
  vim: error while loading shared libraries: libperl.so
  and the program stops working. (boo#982869)

-------------------------------------------------------------------
Fri Jun  3 09:55:54 UTC 2016 - idonmez@suse.com

- Updated to revision 1883, fixes the following problems
  * Python: encoding error with Python 2.
  * Memory leaks in test49.
  * Invalid memory access when exiting with EXITFREE defined.
  * Memory leak in test_matchstrpos.
  * Setting really_exiting causes memory leaks to be reported.
  * Appending to the quickfix list while the quickfix window is open
    is very slow.
  * When a callback adds a timer the GUI doesn't use it until later.
  * Comparing functions and partials doesn't work well.
  * Typing "k" at the hit-enter prompt has no effect.
  * Whether a job has exited isn't detected until a character is typed.
    After calling exit_cb the cursor is in the wrong place.
  * Channel test is flaky.
  * Appending to a long quickfix list is slow.
  * Check for line break at end of line wrong.
  * Cppcheck found 2 incorrect printf formats.

-------------------------------------------------------------------
Wed Jun  1 07:18:35 UTC 2016 - idonmez@suse.com

- Updated to revision 1862, fixes the following problems
  * Using a partial for timer_start() may cause a crash.
  * Compiler warnings with 64 bit compiler.
  * string() with repeated argument does not give a result usable
    by eval(). 

-------------------------------------------------------------------
Mon May 30 09:05:44 UTC 2016 - idonmez@suse.com

- Updated to revision 1859, fixes the following problems
  * Tests involving Python are flaky.
  * Ubsan detects a multiplication overflow.
  * Getting an item from a NULL dict crashes.
  * Can't build with Strawberry Perl 5.24 (obsoletes perl-5.24.patch)
  * Still trying to read from channel that is going to be closed.
  * GUI freezes when using a job.
  * test_syn_attr fails when using the GUI.
  * Unix: Cannot run all tests with the GUI.
  * Crash when job and channel are in the same dict while using partials.
  * When setting 'termguicolors' the Ignore highlighting doesn't work.
  * Valgrind reports memory leak for job that is not freed.
  * When a channel appends to a buffer that is 'nomodifiable' there
    is an error but appending is done anyway.
  * When a channel writes to a buffer it doesn't find a buffer by
    the short name but re-uses it anyway.
  * Cannot use a function reference for "exit_cb". 

-------------------------------------------------------------------
Thu May 26 08:24:46 UTC 2016 - suse-beta@cboltz.de

- Update apparmor.vim (taken from AppArmor 2.10.1)
  * add support for the "unspec" network keyword

-------------------------------------------------------------------
Wed May 25 10:53:20 UTC 2016 - idonmez@suse.com

- Updated to revision 1842, fixes the following problems
  * non-antialiased misnamed.
  * When timer_stop() is called with a string there is no proper
    error message.
  * Memory leak in debug commands.
  * Cannot use an Ex command for 'keywordprg'.
  * Possible crash when conceal is active.
  * When splitting and closing a window the status height changes.
  * When using a partial on a dictionary it always gets bound to that
    dictionary.
  * The BufUnload event is triggered twice, when :bunload is used with
    `bufhidden` set to `unload` or `delete`.
  * Functions specifically for testing do not sort together.
  * Cannot get the items stored in a partial.
  * When using packages an "after" directory cannot be used.
  * The code to reallocate the buffer used for quickfix is repeated.
  * get() works for Partial but not for Funcref. 

-------------------------------------------------------------------
Tue May 24 07:12:15 UTC 2016 - idonmez@suse.com

- Fix build with perl 5.24 (perl-5.24.patch) 

-------------------------------------------------------------------
Tue May 10 07:06:48 UTC 2016 - idonmez@suse.com

- Updated to revision 1829, fixes the following problems
  * No error when invoking a callback when it's not safe.
  * May try to access buffer that's already freed.
  * No message on channel log when buffer was freed. 

-------------------------------------------------------------------
Mon May  9 14:46:34 UTC 2016 - idonmez@suse.com

- Updated to revision 1826, fixes the following problems
  * The screen is not updated if a callback is invoked when closing
    a channel.
  * Help completion adds @en to all matches except the first one.
  * Compiler warnings when sprintf() is a macro.
  * Removing language from help tags too often.
  * Redirecting stdout of a channel to "null" doesn't work.
  * When a job is no longer referenced and does not have an exit
    callback the process may hang around in defunc state.
  * When job writes to buffer nothing is written. 
  * Callbacks are invoked when it's not safe.

-------------------------------------------------------------------
Mon May  2 07:24:31 UTC 2016 - idonmez@suse.com

- Updated to revision 1816, fixes the following problems
  * 'guicolors' is a confusing option name.
  * Quickfix doesn't handle long lines well, they are split.
  * GTK3 doesn't handle menu separaters properly.
  * Can't use Vim as MANPAGER.
  * Running tests in shadow dir fails.
  * 'termguicolors' option missing from the options window.
  * Test_out_close_cb sometimes fails.
  * Using wrong feature name to check for 'termguicolors'.
  * Using wrong short option name for 'termguicolors'.
  * Sending DETACH after a channel was closed isn't useful.
  * Netbeans channel gets garbage collected.
  * Memory access error when running test_quickfix.
  * A channel may be garbage collected while it's still being used by a job.
  * Looping over a null list throws an error.
- Refresh vim-7.4-filetype_mine.patch

-------------------------------------------------------------------
Thu Apr 28 07:31:10 UTC 2016 - idonmez@suse.com

- Updated to revision 1796, fixes the following problems
  * Cannot use ch_read() in the close callback.
  * Leading white space in a job command matters.
  * Channel could be garbage collected too early.
  * Color name decoding is implemented several times.
  * Some character classes may differ between systems.

-------------------------------------------------------------------
Sun Apr 24 16:15:34 UTC 2016 - idonmez@suse.com

- Updated to revision 1786, fixes the following problems
  * When using the term truecolor feature, the t_8f and t_8b termcap
    options are not set by default.
  * Using negative index in strcharpart().
  * Warnings reported by cppcheck.
  * synIDattr() does not respect 'guicolors'.
  * strcharpart() does not work properly with some multi-byte characters.
  * The old regexp engine doesn't handle character classes correctly.
  * Compiled-in colors do not match rgb.txt. 

-------------------------------------------------------------------
Sat Apr 23 10:05:11 UTC 2016 - idonmez@suse.com

- Updated to revision 1778, fixes the following problems
  * When using complete() it may set 'modified' even though nothing
    was inserted.
  * When using feedkeys() in a timer the inserted characters are not
    used right away.
  * Undo options are not together in the options window.
  * Arguments of setqflist() are not checked properly.
  * No "closed", "errors" and "encoding" attribute on Python output.
  * Cannot use true color in the terminal.
  * Newly added features can escape the sandbox.
  * When using the term truecolor feature, the t_8f and t_8b termcap
    options are not set by default. 

-------------------------------------------------------------------
Tue Apr 20 14:17:00 UTC 2016 - idonmez@suse.com

- Updated to revision 1754, fixes the following problems
  * When a buffer gets updated while in command line mode, the screen
    may be messed up.
  * Crash when 'tagstack' is off. (Dominique Pelle)
  * When adding to the quickfix list the current position is reset. 
  * "noinsert" in 'completeopt' is sometimes ignored
  * syntax not set when using ":buf" and 'filetype' set manually

-------------------------------------------------------------------
Mon Apr 18 07:48:17 UTC 2016 - idonmez@suse.com

- Updated to revision 1749, fixes the following problems
  * Cannot detect a crash in tests when caused by garbagecollect().
  * The help for functions require a space after the "(".
  * The Perl interface cannot use 'print' operator for writing
    directly in standard IO.
  * It is not easy to get a character out of a string.
  * Python: turns partial into simple funcref.
  * Folds may close when using autocomplete.
  * Test fails when not using utf-8.
  * It is not possible to only see part of the message history.
    It is not possible to clear messages.
  * Count for ":messages" depends on number of lines.
  * syn-cchar defined with matchadd() does not appear if there are no
    other syntax definitions which matches buffer text.
  * Not testing utf-8 characters.
  * strgetchar() does not work correctly.
  * Clang warns for uninitialzed variable. (Michael Jarvis)
  * Python: Converting a sequence may leak memory.
  * Memory leak in Perl.
  * Coverity: missing check for NULL pointer.
  * "gD" does not find match in first column of first line.
  * When using GTK 3.20 there are a few warnings. 

-------------------------------------------------------------------
Thu Apr 14 08:03:14 UTC 2016 - idonmez@suse.com

- Updated to revision 1726, fixes the following problems
  * Crash when calling garbagecollect() after starting a job.
  * When using try/catch in 'tabline' it is still considered an error
    and the tabline will be disabled.
  * Tabline test fails in GUI.
  * Compiler errors for non-ANSI compilers.
  * ANSI compiler complains about string length. 

-------------------------------------------------------------------
Mon Apr 11 07:53:30 UTC 2016 - idonmez@suse.com

- Updated to revision 1721, fixes the following problems
  * Leaking memory when opening a channel fails.
  * Coverity: not using return value of set_ref_in_item().
  * Leaking memory when there is a cycle involving a job and a partial.
  * Tests fail without the job feature. 

-------------------------------------------------------------------
Thu Apr  7 06:19:03 UTC 2016 - idonmez@suse.com

- Updated to revision 1716, fixes the following problems
  * When using try/catch in 'statusline' it is still considered an
    error and the status line will be disabled.
  * For plugins in packages, plugin authors need to take care of all
    dependencies.
  * GTK GUI doesn't work on Wayland.
  * Non-GUI specific settings in the gvimrc_example file.
  * Double free when a partial is in a cycle with a list or dict.
  * 'autochdir' doesn't work for the first file. 

-------------------------------------------------------------------
Tue Apr  5 08:26:17 UTC 2016 - idonmez@suse.com

- Updated to revision 1710, fixes the following problems
  * feedkeys('i', 'x') gets stuck, waits for a character to be typed.
  * Building the Perl interface gives compiler warnings.
  * ":syn reset" clears the effect ":syn iskeyword". (James McCoy)
  * When using :stopinsert in a silent mapping the "INSERT" message
    isn't cleared.
  * Display problems when the 'ambiwidth' and 'emoji' options are not
    set properly or the terminal doesn't behave as expected.
  * :packadd does not work the same when used early or late.
  * Using freed memory when parsing 'printoptions' fails.
  * Using freed memory with "wincmd p". (Dominique Pelle)
  * Cannot use empty dictionary key, even though it can be useful.
  * New regexp engine does not work properly with EBCDIC.
  * Not all output of an external command is read. 

-------------------------------------------------------------------
Fri Apr  1 08:28:53 UTC 2016 - idonmez@suse.com

- Updated to revision 1691, fixes the following problems
  * When reading JSON from a channel all readahead is used.
  * channel_get_all() does multiple allocations.
  * When writing buffer lines to a pipe Vim may block.
  * Completion doesn't work well for a variable containing "#".
  * When help exists in multiple languages, adding @ab while "ab"
    is the default help language is unnecessary.
  * The Dvorak support is a bit difficult to install.
  * The justify plugin has to be copied or sourced to be used.
  * The editexisting plugin has to be copied or sourced to be used.
  * The swapmous plugin has to be copied or sourced to be used.
  * The shellmenu plugin has to be copied or sourced to be used.
  * A reference to the removed file_select plugin remains.
  * Coverity: copying value of v_lock without initializing it.
  * Coverity warns for not checking name length (false positive).
  * Coverity warns for fixed size buffer length (false positive).
  * Coverity: no check for NULL.
  * README text is slightly outdated.
  * There is no easy way to get all the information about a match.
  * When running tests $HOME/.viminfo is written.
  * The channel close_cb option does not work.
  * MzScheme does not support partial.
  * Ruby interface has inconsistent coding style.
  * Can't compile with the conceal feature but without multi-byte.
  * When switching to a new buffer and an autocommand applies syntax
    highlighting an ml_get error may occur. 

-------------------------------------------------------------------
Mon Mar 28 07:32:06 UTC 2016 - idonmez@suse.com

- Updated to revision 1665, fixes the following problems
  * When 'F' is in 'shortmess' the prompt for the encryption key
    isn't displayed.
  * When binding a function to a dict the reference count is wrong.
  * Invoking garbage collection may cause a double free.
  * Crash when an autocommand changes a quickfix list.
  * Handling emoji characters as full width has problems with
    backwards compatibility.
  * Terminating file name has side effects.
  * Using string() on a partial that exists in the dictionary it binds
    results in an error.
  * When a dict contains a partial it can't be redefined as a function.
  * Using Python vim.bindeval() on a partial doesn't work.
  * Using freed memory after setqflist() and ":caddbuffer".
  * Compiler has a problem copying a string into di_key[].
  * The matchit plugin needs to be copied to be used.
  * Quickfix test fails.
  * Old style test for fnamemodify().
  * Users who loaded matchit.vim manually have to change their startup.
  * Crash when using expand('%:S') in a buffer without a name.
  * remote_expr() hangs.
  * Crash when using partial with a timer.
  * On Unix in a terminal: channel messages are not handled right away.
  * A plugin does not know when VimEnter autocommands were already triggered.
  * has('patch-7.4.1') doesn't work.
  * No test for special characters in channel eval command.
  * No test for an invalid Ex command on a channel.
  * Crash in :cgetexpr.
  * Crash when calling job_start() with a NULL string.

-------------------------------------------------------------------
Tue Mar 22 11:02:39 UTC 2016 - idonmez@suse.com

- Updated to revision 1635, fixes the following problems
  * Quickfix code using memory after being freed.
  * Using channel timeout instead of request timeout.
  * Timers don't work on Unix.
  * Not checking for failed open().
  * Memory leak when out of memory.
  * When starting the GUI fails a swap file is left behind.
  * Timer with an ":echo" command messes up display.
  * Although emoji characters are ambiguous width, best is to treat
    them as full width.
  * Catching exception that won't be thrown.
  * Having type() handle a Funcref that is or isn't a partial differently
    causes problems for existing scripts.
  * Comparing a function that exists on two dicts is not backwards compatible.
  * string() doesn't handle a partial.
  * Contents file is only for Amiga distro.
  * Compiler warnings for non-virtual destructor.
  * The versplit feature makes the code uneccessary complicated.
  * Can't build with small features.
  * Still can't build with small features.
  * Still quickfix test in old style.
  * Build fails with tiny features.
  * Malformed channel request causes a hang.
  * When a JSON message is split it isn't decoded.
  * Starting job with output to buffer changes options in the current buffer.
  * When 'fileformats' is set in the vimrc it applies to new buffers
    but not the initial buffer.
  * Emoji characters are not considered as a kind of word character.
  * Channel test doesn't work with Python 2.6.
  * Channel demo doesn't work with Python 2.6.
  * All Channels share the message ID, it keeps getting bigger.
  * Can't get info about a channel.
  * Trying to close file descriptor that isn't open.
  * Missing changes to structs.
  * Channel out_cb and err_cb are not tested.
  * 64-bit Compiler warning.
  * Handling emoji characters as full width has problems with backwards
    compatibility.
  * Unicode table for double width is outdated.
  * Compiler doesn't understand switch on all enum values.
  * List of test targets is outdated.
  * If the help tags file was removed "make install" fails.
  * Vertical movement after CTRL-A ends up in the wrong column.
  * Channel test is a bit flaky. 

-------------------------------------------------------------------
Sat Mar 19 06:43:42 UTC 2016 - idonmez@suse.com

- Updated to revision 1591, fixes the following problems
  * Crash when using function reference.
  * Using ":call dict.func()" where the function is a partial
    does not work.
  * Get E923 when using function(dict.func, [], dict).
  * Warning for unitinialized variable.
  * Partial is not recognized everywhere.
  * Nesting partials doesn't work.
  * Compiler warnings with 64 bit compiler.
  * Old style test for quickfix.
  * Combining dict and args with partial doesn't always work.
  * Warning for shadowed variable.
  * The quickfix title is truncated. 

-------------------------------------------------------------------
Wed Mar 16 11:18:05 UTC 2016 - idonmez@suse.com

- Updated to revision 1579, fixes the following problems
  * Passing cookie to a callback is clumsy.
  * Dict options with a dash are more difficult to use.
  * Missing update to proto file.
  * ":helptags ALL" crashes.
  * An empty list in function() causes an error.
  * Crash when assert_equal() runs into a NULL string.
  * Crash in assert_fails().
  * Using CTRL-] in help on option in parentheses doesn't work.
  * Using old style tests for quickfix.
  * There is no way to avoid the message when editing a file.
  * No test for ":help".
  * Setting 'compatible' in test influences following tests.
  * Tests get stuck at the more prompt.
  * ":undo 0" does not work.
  * Write error of viminfo file is not handled properly.
  * Cannot pass "dict.Myfunc" around as a partial.
  * There is no way to invoke a function later or periodically.

-------------------------------------------------------------------
Mon Mar 14 08:22:42 UTC 2016 - idonmez@suse.com

- Updated to revision 1558, fixes the following problems
  * Using "ever" for packages is confusing.
  * Specifying buffer number for channel not implemented yet.
  * MS-Windows job_start() closes wrong handle.
  * Compiler warning for unitinialized variable.
  * MS-Windows channel leaks file descriptor.
  * Using feedkeys() with an empty string disregards 'x' option.
  * Compiler warning for shadowed variable.
  * The feedkeys test has a one second delay.
  * Cannot re-use a channel for another job.
  * Too many feature flags for pipes, jobs and channels.
  * Selection with the mouse does not work in command line mode.
  * Too much code in eval.c.
  * Channel test is a bit flaky.
  * Missing job_info().
  * job_start() with a list is not tested.
  * Channel log methods are not tested.
  * On Win32 escaping the command does not work properly.
  * GTK3: horizontal cursor movement in Visual selection not good.
  * Sticky type checking is more annoying than useful.
  * Getting a cterm highlight attribute that is not set results in the string "-1".
  * Two tests fail.
  * Cannot load packages early.
  * Cannot generate help tags in all doc directories.
  * ":colorscheme" does not use 'packpath'.
  * ":runtime" does not use 'packpath'.
  * Completion for :colorscheme does not use 'packpath'.
  * List of test targets incomplete.
  * "make install" changes the help tags file, causing it to differ from the repository.
  * Windows cannot be identified.
  * It is not easy to find out what windows display a buffer. 

-------------------------------------------------------------------
Thu Mar 10 09:52:43 UTC 2016 - idonmez@suse.com

- Switch back to GTK+2 because GTK+3 interface seems to be slower. 

-------------------------------------------------------------------
Wed Mar  9 08:16:44 UTC 2016 - idonmez@suse.com

- Updated to revision 1525, fixes the following problems
  * Statusline highlighting is sometimes wrong.
  * "J" fails if there are not enough lines.
  * Channel output to file not implemented yet.
  * Channel test is a bit flaky.
  * Channel with disconnected in/out/err is not supported.
  * Channel test: Waiting for a file to appear doesn't work.
  * Cannot write channel err to a buffer.
  * On a high resolution screen the toolbar icons are too small. 

-------------------------------------------------------------------
Tue Mar  8 08:11:13 UTC 2016 - idonmez@suse.com

- Updated to revision 1510, fixes the following problems
  * Crash when starting a job fails.
  * Keeping both a variable for a job and the channel it refers to is a hassle.
  * Channel test fails on AppVeyor. 

-------------------------------------------------------------------
Mon Mar  7 08:16:01 UTC 2016 - idonmez@suse.com

- Updated to revision 1506, fixes the following problems
  * No error message when :packadd does not find anything.
  * Garbage collection with an open channel is not tested.
  * Writing last-but-one line of buffer to a channel isn't implemented yet.
  * Crash when using ch_getjob().
  * No test for reading last-but-one line.
  * When channel log is enabled get too many "looking for messages" log entries.
  * Job cannot read from a file. 

-------------------------------------------------------------------
Sun Mar  6 08:28:03 UTC 2016 - idonmez@suse.com

- Updated to revision 1498, fixes the following problems
  * ":loadplugin" is not optimal, some people find it confusing.
  * Not using key when result from hangul_string_convert() is NULL.
  * "inline" is not supported by old MSVC.
  * Compiler warning for unused function.
  * Visual-block shift breaks multi-byte characters.
  * No command line completion for ":packadd".
  * Wrong callback invoked for zero-id messages.
  * clr_history() does not work properly.
  * Crash when built with GUI but it's not active.
  * Cursor drawing problem with GTK 3.
  * Error for locked item when using json_decode(). 

-------------------------------------------------------------------
Fri Mar  4 11:10:14 UTC 2016 - idonmez@suse.com

- Updated to revision 1485, fixes the following problems
  * When using hangulinput with utf-8 a CSI character is misintepreted.
  * Function arguments marked as unused while they are not.
  * Test_reltime is flaky, it depends on timing.
  * ":loadplugin" doesn't take care of ftdetect files.
  * No test for ":loadplugin".
  * Cannot add a pack direcory without loading a plugin.
  * "timeout" option not supported on ch_eval*().
  * A one-time callback is not used for a raw channel.
  * Channel "err-io" value "out" is not supported.
  * Job input from buffer is not implemented. 

-------------------------------------------------------------------
Thu Mar  3 07:56:37 UTC 2016 - idonmez@suse.com

- Updated to revision 1474, fixes the following problems
  * Sort test doesn't test with "1" argument.
  * Channel test sometimes fails, especially on OS/X.
  * Coverity reports missing restore.
  * Missing out-of-memory check.  And Coverity warning.
  * Can't build without the autocommand feature.
  * Compiler warnings without the float feature. 

-------------------------------------------------------------------
Tue Mar  1 08:37:53 UTC 2016 - idonmez@suse.com

- Updated to revision 1467, fixes the following problems
  * Error when reading fails uses wrong errno.  Keeping channel open
    after job stops results in test failing.
  * The "out-io" option for jobs is not implemented yet.
  * When encoding JSON, turning NaN and Infinity into null without
    giving an error is not useful.
  * JSON encoding doesn't handle surrogate pair.
  * Can't get buffer number of a channel.
  * Using empty name instead of no name for channel buffer.
  * Memory corruption when 'encoding' is not utf-8.
  * Crash when using json_decode().
  * Memory leak when using ch_read().
  * JSON tests fail if 'encoding' is not utf-8.
  * Json encoding still fails when encoding is not utf-8.
  * Vim hangs when a channel has a callback but isn't referenced.
  * Test 87 fails with Python 3.5.
  * Opening a channel with select() is not done properly.
  * When a JSON channel has a callback it may never be cleared.
  * When the argument of sort() is zero or empty it fails.

-------------------------------------------------------------------
Fri Feb 26 08:21:14 UTC 2016 - idonmez@suse.com

- Updated to revision 1421, fixes the following problems
  * When calling ch_close() the close callback is invoked,
    even though the docs say it isn't.
  * Using "u_char" intead of "char_u", which doesn't work everywhere.
  * Tests slowed down because of the "not a terminal" warning.
  * May free a channel when a callback may need to be invoked. 

-------------------------------------------------------------------
Wed Feb 24 19:56:00 UTC 2016 - idonmez@suse.com

- Disable sniff support, its unmaintained. 

-------------------------------------------------------------------
Wed Feb 24 09:06:22 UTC 2016 - idonmez@suse.com

- Updated to revision 1410, fixes the following problems
  * The close-cb option is not implemented yet.
  * Perl eval doesn't work properly on 64-bit big-endian machine.
  * Having 'autochdir' set during startup and using diff mode doesn't work.
  * GTK 3 is not supported.
  * Completion menu flickers.
  * Leaking memory in cs_print_tags_priv().
  * json_encode() does not handle NaN and inf properly.
  * Leaking memory in cscope interface. 

-------------------------------------------------------------------
Tue Feb 23 08:25:46 UTC 2016 - idonmez@suse.com

- Updated to revision 1397, fixes the following problems
  * When the Job exit callback is invoked, the job may be freed too
    soon.
  * Starting a job hangs in the GUI.
  * Can't sort inside a sort function.

-------------------------------------------------------------------
Mon Feb 22 13:17:45 UTC 2016 - idonmez@suse.com

- Drop vim-7.1.314-CVE-2009-0316-debian.patch, Python 2.7 has
  the appropriate fix.

-------------------------------------------------------------------
Mon Feb 22 09:53:40 UTC 2016 - idonmez@suse.com

- Updated to revision 1385, fixes the following problems
  * Job and channel options parsing is scattered.
  * Channel test ch_sendexpr() times out.
  * Can't remove a callback with ch_setoptions().
  * Channels don't have a queue for stderr.
  * X11 GUI callbacks don't specify the part of the channel.
  * Channel read implementation is incomplete.
  * Calling a Vim function over a channel requires turning the
    arguments into a string.
  * ch_setoptions() cannot set all options.
  * Can't change job settings after it started.
  * The job exit callback is not implemented.
  * Can't get the job of a channel.
  * It is not easy to use a set of plugins and their dependencies.

-------------------------------------------------------------------
Fri Feb 19 08:32:41 UTC 2016 - idonmez@suse.com

- Updated to revision 1353, fixes the following problems
  * Compiler warnings in build with -O2.
  * When there is any error Vim will use a non-zero exit code.
  * When the test server fails to start Vim hangs.
  * When the port isn't opened yet when ch_open() is called it may
    fail instead of waiting for the specified time.
  * The test script lists all functions before executing them.

-------------------------------------------------------------------
Thu Feb 18 11:12:03 UTC 2016 - idonmez@suse.com

- Updated to revision 1345, fixes the following problems
  * Crash when using channel that failed to open.
  * Crash when closing the channel in a callback.
  * Channel test fails on non-darwin builds.
  * Channel NL mode is not supported yet.
  * It's difficult to add more arguments to ch_sendraw() and ch_sendexpr().
  * Can't compile with +job but without +channel.

-------------------------------------------------------------------
Tue Feb 16 09:57:19 UTC 2016 - idonmez@suse.com

- Updated to revision 1328, fixes the following problems
  * Cursor changes column with up motion when the matchparen
    plugin saves and restores the cursor position. (Martin Kunev)
  * "\%1l^#.*" does not match on a line starting with "#".
  * Channel with pipes doesn't work in GUI.
  * Crash when unletting the variable that holds the channel
    in a callback function.
  * Can't compile with +job but without +channel.

-------------------------------------------------------------------
Mon Feb  8 13:22:33 UTC 2016 - idonmez@suse.com

- Updated to revision 1294, fixes the following problems
  * copy() and deepcopy() fail with special variables.
  * Encoding {'key':} to JSON doesn't give an error.
  * assert_false(v:false) reports an error.
  * When jsonencode() fails it still returns something.
  * jsonencode() is not producing strict JSON.
  * Crash when evaluating the pattern of ":catch" causes an error.
  * The job feature isn't available on MS-Windows.
  * ch_open() with a timeout doesn't work correctly.
  * ch_sendexpr() does not use JS encoding.
- Remove vim-7.3-diff_check.patch

-------------------------------------------------------------------
Fri Jan 29 08:45:41 UTC 2016 - idonmez@suse.com

- Updated to revision 1194, fixes the following problems
  * New lines in the viminfo file are dropped.
  * Old style tests for the argument list.
  * Generated function prototypes still have __ARGS().
  * Wrong argument to assert_exception() causes a crash.
  * Illegal memory access when using :copen and :cclose.
  * When running gvim in the foreground some icons are missing.
  * Recognizing <sid> does not work when the language is Turkish.
  * Using searchpair() with a skip expression that uses syntax
    highlighting sometimes doesn't work.
  * Cannot define keyword characters for a syntax file.
  * Can't sort on floating point numbers.
  * Default features are conservative.
  * Conflict for "chartab".
  * Using the local value of 'errorformat' causes more problems than it solves.
  * 'langmap' applies to the first character typed in Select mode.
  * Langmap test fails with normal build.
  * Autocommands triggered by quickfix cannot always get the current title value.
  * No support for JSON.
  * Build with normal features fails.
  * Coverity warns for NULL pointer and ignoring return value.
  * type() does not work for v:true, v:none, etc.
  * Automatically generated function prototypes use __ARGS.
  * No error for jsondecode('"').
  * ":argadd" without argument is supposed to add the current buffer name to the arglist.
  * Missing error number in MzScheme.
  * Expressions "0 + v:true" and "'' . v:true" cause an error.
  * No tests for "is" and "isnot" with the new variables.
  * This doesn't give the right result: eval(string(v:true)).
  * No test for new behavior of v:true et al.
  * The +channel feature is not in :version output.
  * empty() doesn't work for the new special variables.
  * test_writefile and test_viml do not delete the tempfile.
  * Crash with invalid argument to glob2regpat().
  * free_tv() can't handle special variables.
  * Error messages for security context are hard to translate.
  * The channel feature isn't working yet.
  * Can't build with FEAT_EVAL but without FEAT_MBYTE.
  * Compiler warning for not using return value of fwrite().

-------------------------------------------------------------------
Mon Jan 18 20:34:16 UTC 2016 - idonmez@suse.com

- Updated to revision 1130, fixes the following problems
  * Repeating CTRL-A doesn't work.
  * No tests for :hardcopy and related options.
  * When making a change while need_wait_return is set there is a two second delay.
  * With 'rightleft' and concealing the cursor may move to the wrong position.
  * Vim can create a directory but not delete it.
  * When using ":next" with an illegal file name no error is reported.
  * Using {ns} in variable name does not work. (lilydjwg)
  * delete() does not work well with symbolic links.
  * delete(x, 'rf') does not delete files starting with a dot.
  * No longer get "." and ".." in directory list.
  * argidx() has a wrong value after ":%argdelete". (Yegappan Lakshmanan)
  * delete(x, 'rf') fails if a directory is empty. (Lcd)
  * Using ":argadd" when there are no arguments results in the second
    argument to be the current one. (Yegappan Lakshmanan)
  * There is no perleval().
  * Can only get the directory of the current window.
  * Python None value can't be converted to a Vim value.
  * Memory leak in :vimgrep.

-------------------------------------------------------------------
Sun Jan 11 08:11:21 UTC 2016 - idonmez@suse.com

- Updated to revision 1087, fixes the following problems
  * Wrong way to check for unletting internal variables.
  * The Tcl interface can't be loaded dynamically on Unix.
  * Crash when using an invalid command.
  * CTRL-A does not work well in right-left mode.
  * Using "." to repeat CTRL-A in Visual mode increments the wrong numbers.
  * The CTRL-A and CTRL-X commands do not update the '[ and '] marks.
  * Crash with an extremely long buffer name. 
  * CTRL-A and CTRL-X work badly with blockwise visual selection

-------------------------------------------------------------------
Sat Jan  9 16:34:06 UTC 2016 - idonmez@suse.com

- Updated to revision 1066, fixes the following problems
  * Segfault when unletting "count".
  * Illegal memory access with weird syntax command. (Dominique Pelle)
  * Typos in the :options window.
  * Compiler warning for ignoring return value of fwrite().
  * When a spell file has single letter compounding creating
    suggestions takes an awful long time.

-------------------------------------------------------------------
Mon Jan  4 10:27:55 UTC 2016 - idonmez@suse.com

- Updated to revision 1046, fixes the following problems
  * The fix in patch 7.3.192 is not tested.
  * When a symbolic link points to a file in the root directory,
    the swapfile is not correct.
  * Vim overwrites the value of $PYTHONHOME.
  * The local value of 'errorformat' is not used for ":lexpr" and ":cexpr".
  * The column is not restored properly when the matchparen plugin
    is used in Insert mode and the cursor is after the end of the line.
  * When there is a backslash in an option ":set -=" doesn't work.
  * An Ex range gets adjusted for folded lines even when the range
    is not using line numbers.
  * Using "q!" when there is a modified hidden buffer does not unload
    the current buffer, resulting in the need to abandon it again.
  * g-CTRL-G shows the word count, but there is no way to get the word count in a script.

-------------------------------------------------------------------
Thu Dec 31 13:49:01 UTC 2015 - idonmez@suse.com

- Updated to revision 1004, fixes the following problems
  * searchpos() always starts searching in the first column, 
    which is not what some people expect. (Brett Stahlman)
  * Leaking memory when hash_add() fails. Coverity error 99126.

-------------------------------------------------------------------
Sat Dec 19 18:52:34 UTC 2015 - idonmez@suse.com

- Updated to revision 979, fixes the following problems
  * When pasting on the command line line breaks result in literal <CR> characters.
    This makes pasting a long file name difficult.
  * When using :diffsplit the cursor jumps to the first line.
  * Using ":sort" on a very big file sometimes causes text to be corrupted. (John Beckett)
  * test_cdo fails when using another language than English.
  * When changing the crypt key the blocks read from disk are not decrypted.

-------------------------------------------------------------------
Sun Dec 13 16:13:24 UTC 2015 - idonmez@suse.com

- Updated to revision 972, fixes the following problems
  * Test 87 doesn't work in a shadow directory.
  * Configure doesn't work with a space in a path.
  * test86 and test87 are flaky in Appveyor.
  * Rare crash in getvcol(). (Timo Mihaljov)
  * The asin() function can't be used.
  * Memory leak when there is an error in setting an option. 

-------------------------------------------------------------------
Sun Dec  6 14:47:49 UTC 2015 - idonmez@suse.com

- Updated to revision 963, fixes the following problems
  * Crash when dragging with the mouse.
  * Segfault reading unitialized memory.
  * X11 and GTK have moure mouse buttons than Vim supports.
  * Memory leak when encountering a syntax error.
  * vt52 terminal codes are not correct.
  * There is no way to ignore case only for tag searches.
  * test_tagcase breaks for small builds.
  * Writing tests for Vim script is hard.
  * New style testing is incomplete.
  * Missing changes in source file.
  * Test_listchars fails with MingW. (Michael Soyka)
  * Can't build when the insert_expand feature is disabled.
  * When using 'colorcolumn' and there is a sign with a fullwidth character the highlighting is wrong. (Andrew Stewart)
  * v:errors is not initialized.
  * Sorting number strings does not work as expected. (Luc Hermitte)
  * 'lispwords' is tested in the old way.
  * When a test script navigates to another buffer the .res file is created with the wrong name.
  * When using Lua there may be a crash. (issue #468)
  * Vim doesn't recognize .pl6 and .pod6 files.
  * A few more file name extensions not recognized.
  * Test_tagcase fails when using another language than English.
  * Vim checks if the directory "$TMPDIR" exists.
  * When setting 'term' the clipboard ownership is lost.
  * Test107 fails in some circunstances.
  * Cannot run the tests with gvim.  Cannot run individual new stests.
  * test_listlbr_utf8 sometimes fails. 

-------------------------------------------------------------------
Sun Nov 22 16:27:59 UTC 2015 - idonmez@suse.com

- Updated to revision 935, fixes the following problems
  * Test 94 fails on some systems.
  * test_utf8 has confusing dummy command.
  * Crash when using longest completion match.

-------------------------------------------------------------------
Fri Nov 20 10:45:56 UTC 2015 - idonmez@suse.com

- Updated to revision 930, fixes the following problems
  * When a BufLeave autocommand changes folding in a way it syncs undo,
    undo can be corrupted.
  * Python interface can produce error "vim.message' object has no attribute 'isatty'".
  * Libraries for dynamically loading interfaces can only be defined at compile time.
  * Compiler complains about type punned pointer.
  * t_Ce and t_Cs are documented but not supported. (Hirohito Higashi)
  * Wrong indenting for C++ constructor.
  * No utf-8 support for the hangul input feature.
  * New compiler warning: logical-not-parentheses
  * When removing from 'path' and then adding, a comma may go missing. (Malcolm Rowe)
  * When running out of memory while copying a dict memory may be freed twice. (ZyX)
  * Compiler warning for comparing signed and unsigned.
  * A digit in an option name has problems.
  * The dll options are not in the options window.
  * The rubydll option is not in the options window.
  * Missing proto file update. (Randall W. Morris)
  * Leaking memory with ":helpt {dir-not-exists}".
  * Prototypes not always generated.
  * User may yank or put using the register being recorded in.
  * Completing the longest match doesn't work properly with multi-byte characters.
  * Ruby crashes when there is a runtime error.
  * A clientserver message interrupts handling keys of a mapping.
  * "gv" after paste selects one character less if 'selection' is "exclusive".
  * MS-Windows: Most users appear not to like the window border. 
- Refresh vim-7.3-sh_is_bash.patch

-------------------------------------------------------------------
Wed Oct 14 17:25:26 UTC 2015 - idonmez@suse.com

- Updated to revision 898, fixes the following problems
  * Build failure when using dynamic python but not python3.
  * Indentation of array initializer is wrong.
  * On MS-Windows the iconv DLL may have a different name.
  * C indenting is wrong below a "case (foo):"
  * vimrun.exe is picky about the number of spaces before -s.
  * Custom command line completion does not work for a command containing digits.
  * Editing a URL, which netrw should handle, doesn't work.
  * Freeze and crash when there is a sleep in a remote command. (Karl Yngve Lervåg)
  * The 'fixendofline' option is set on with ":edit". 

-------------------------------------------------------------------
Wed Sep 30 09:10:28 UTC 2015 - idonmez@suse.com

- Updated to revision 889, fixes the following problems
  * Crash when changing the 'tags' option from a remote command. (Benjamin Fritz)
  * 'smarttab' is also effective when 'paste' is enabled. (Alexander Monakov)
  * May get into an invalid state when using getchar() in an expression mapping.
  * Vim leaks memory, when 'wildignore' filters out all matches.
  * Compiler warning for unused variable. (Tony Mechelynck)
  * Not obvious how to contribute.
  * ":find" sometimes fails. (Excanoe)
  * Coverity error for clearing only one byte of struct.
  * Can't see line numbers in nested function calls.
  * Test 49 fails.
  * When leaving the command line window with CTRL-C while a completion menu is displayed the menu isn't removed.
  * Block-mode replace works characterwise instead of blockwise after column 147. (Issue #422)
  * When doing an upwards search without wildcards the search fails if the initial directory doesn't exist.
  * Using uninitialized memory for regexp with back reference. (Dominique Pelle)
  * The OptionSet autocommands are not triggered from setwinvar().
  * Triggering OptionSet from setwinvar() isn't tested. 

-------------------------------------------------------------------
Sat Sep 26 20:39:19 UTC 2015 - opensuse@cboltz.de

- Updated apparmor.vim (taken from AppArmor 2.10.0)
  * add support for the "ib" and "mpls" network keywords

-------------------------------------------------------------------
Mon Sep 14 13:20:02 UTC 2015 - idonmez@suse.com

- Updated to revision 865, fixes the following problems
  * GTK: font glitches for combining characters
  * "zt" still doesn't work well with filler lines. (Gary Johnson)
  * Dragging the current tab with the mouse doesn't work properly.
  * It's a bit clumsy to execute a command on a list of matches.
  * Vim doesn't recognize all htmldjango files.
  * Filetype detection is outdated.
  * pango_shape_full() is not always available.
  * Still problems with pango_shape_full() not available.
  * plines_nofill() used without the diff feature.

-------------------------------------------------------------------
Thu Sep  3 12:24:50 UTC 2015 - idonmez@suse.com

- Updated to revision 854, fixes the following problems
  * When '#' is in 'isident' the is# comparator doesn't work.
  * Compiler warning for possible loss of data.
  * "vi)d" may leave a character behind.
  * CTRL-A on hex number in Visual block mode is incorrect.
  * Moving the cursor in Insert mode starts new undo sequence.
  * <Esc> does not show up.
  * Saving and restoring the console buffer does not work properly.
  * "zt" in diff mode does not always work properly. (Gary Johnson)
  * Missing information about runtime files. 

-------------------------------------------------------------------
Tue Sep  1 09:06:38 UTC 2015 - idonmez@suse.com

- Updated to revision 843, fixes the following problems
  * Xxd doesn't have a license notice.
  * The ruler shows "Bot" even when there are only filler lines missing. (Gary Johnson)
  * CTRL-A in Visual mode doesn't work properly with "alpha" in 'nrformat'.
  * After CTRL-V CTRL-A mode isn't updated. (Hirohito Higashi)
  * With a sequence of commands using buffers in diff mode E749 is given. (itchyny)
  * Invalid memory access when using "exe 'sc'".
  * Gcc sanitizer complains about using a NULL pointer to memmove().
  * It is not possible to save and restore character search state.
  * Illegal memory access with "sy match a fold".
  * Invalid memory access when doing ":call g:".
  * Invalid memory access when doing ":fun X(".
  * Invalid memory access in file_pat_to_reg_pat().
  * 'linebreak' breaks c% if the last Visual selection was block. (Chris Morganiser, Issue 389)
  * Invalid memory access in file_pat_to_reg_pat.
  * Cursor moves after CTRL-A on alphabetic character.
  * Invalid memory access for ":syn keyword x a[".
  * Crash when using "syn keyword x c". (Dominique Pelle)
  * Crash when clicking in beval balloon. (Travis Lebsock)
  * Resetting 'encoding' when doing ":set all&" causes problems. (Bjorn Linse) Display is not updated.
  * When expanding `=expr` on the command line and encountering an error, the command is executed anyway.
  * $HOME in `=$HOME . '/.vimrc'` is expanded too early.
  * More side effects of ":set all&" are missing. (Björn Linse)
  * gettabvar() doesn't work after Vim start. (Szymon Wrozynski)
  * Comparing utf-8 sequences does not handle different byte sizes correctly.
  * Can't compile without the crypt feature. (John Marriott)
- Refresh vim-7.3-diff_check.patch

-------------------------------------------------------------------
Wed Jul 29 08:55:32 UTC 2015 - idonmez@suse.com

- Updated to revision 803, fixes the following problems
  * Repeating a change in Visual mode does not work as expected. (Urtica Dioica)
  * Accessing memory before an allocated block.
  * Using freed memory when triggering CmdUndefined autocommands.
  * Test for ":diffoff" doesn't catch all potential problems.
  * Using "A" in Visual mode while 'linebreak' is set is not tested.
  * C indent does not support C11 raw strings. (Mark Lodato) 

-------------------------------------------------------------------
Tue Jul 28 08:01:33 UTC 2015 - idonmez@suse.com

- Updated to revision 797, fixes the following problems
  * Using freed memory and crash. (Dominique Pellej)
  * Test fails when the autochdir feature is not available.
    Test output contains the test script.
  * The buffer list can be very long.
  * Can only conceal text by defining syntax items.
  * Can't specify when not to ring the bell.
  * The 'fixeol' option is not copied to a new window.
  * Warning from 64 bit compiler.
  * Crash when using more lines for the command line than 'maxcombine'. 

-------------------------------------------------------------------
Sun Jul 19 12:19:20 UTC 2015 - idonmez@suse.com

- Updated to revision 788, fixes the following problems
  * CTRL-A and CTRL-X in Visual mode do not always work well.
  * :diffoff only works properly once.
  * Behavior of :diffoff is not tested.
  * Background color response with transparency is not ignored.
  * Search does not handle multi-byte character at the start position correctly.
  * 'langmap' is used in command-line mode when checking for mappings. Issue 376.
  * When using the CompleteDone autocommand event it's difficult to get to the completed items.
  * It is not possible to avoid using the first item of completion.
  * Equivalence class for 'd' does not work correctly.
  * Coverity warns for uninitialized variable.
  * Using CTRL-A in a line without a number moves the cursor. 
    May cause a crash when at the start of the line. (Urtica Dioica)
  * Compiler complains about uninitialized variable and clobbered variables.
  * line2byte() returns one less when 'bin' and 'noeol' are set.
  * Still a few problems with CTRL-A and CTRL-X in Visual mode.
  * copy_chars() and copy_spaces() are inefficient.
  * Using both "noinsert" and "noselect" in 'completeopt' does not work properly.
  * On some systems automatically adding the missing EOL causes problems.
    Setting 'binary' has too many side effects.
  * It is not possible for a plugin to adjust to a changed setting.
  * snprintf() isn't available everywhere.

-------------------------------------------------------------------
Sun Jun 28 08:39:37 UTC 2015 - idonmez@suse.com

- Updated to revision 763, fixes the following problems
  * Appending in Visual mode with 'linebreak' set does not work
    properly.  Also when 'selection' is "exclusive". (Ingo Karkat)
  * Using CTRL-A in Visual mode does not work well. (Gary Johnson)
  * It is not easy to count the number of characters.
  * Cannot detect the background color of a terminal.
  * When 'conceallevel' is 1 and quitting the command-line window
    with CTRL-C the first character ':' is erased.
  * Spelling mistakes are not displayed after ":syn spell".
  * The request-background termcode implementation is incomplete.
  * Comment for may_req_bg_color() is wrong. (Christ van Willegen)

-------------------------------------------------------------------
Mon Jun 22 13:04:02 UTC 2015 - idonmez@suse.com

- Updated to revision 752, fixes the following problems
  * When setting the crypt key and using a swap file, text may be
    encrypted twice or unencrypted text remains in the swap file.
  * The tab menu shows "Close tab" even when it doesn't work.
  * The cursor line is not always updated for the "O" command.
  * ml_get error when using "p" in a Visual selection in the last line.
  * Wrong argument for sizeof().
  * In a string "\U" only takes 4 digits, while after CTRL-V U eight
    digits can be used.
  * ":1quit" works like ":.quit". (Bohr Shaw)
  * When using += with ":set" a trailing comma is not recognized. (Issue 365)
  * Cannot specify a vertical split when loading a buffer for a quickfix command.
  * "p" in Visual mode causes an unexpected line split.
  * No tests for Ruby and Perl.
  * The entries added by matchaddpos() are returned by getmatches() 
    but can't be set with setmatches(). (Lcd)
  * ":[count]tag" is not always working. (cs86661)
  * ":cnext" may jump to the wrong column when setting 'virtualedit=all'
  * For some options two consecutive commas are OK. (Nikolay Pavlov)
  * It is not obvious how to enable the address sanitizer.
  * Unicode 8.0 not supported. 

-------------------------------------------------------------------
Wed Jun 10 12:02:06 UTC 2015 - idonmez@suse.com

- Make Perl support dynamic bsc#804070 

-------------------------------------------------------------------
Fri May 22 09:06:09 UTC 2015 - idonmez@suse.com

- Updated to revision 729, fixes the following problems
  * Illegal memory access when there are illegal bytes.
  * ":let list += list" can change a locked list.
  * Autocommands triggered by quickfix cannot get the current title value.
  * Overflow when adding MAXCOL to a pointer.
  * When 'list' is set Visual mode does not highlight anything in empty lines. (mgaleski)
  * 0x202f is not recognized as a non-breaking space character.
  * For indenting, finding the C++ baseclass can be slow.
  * ":call setreg('"', [])" reports an internal error.
  * Occasional crash with 'list' set. 

-------------------------------------------------------------------
Mon Apr 27 10:45:14 UTC 2015 - idonmez@suse.com

- Updated to revision 712, fixes the following problems
  * Out-of-bounds read, dectected by Coverity.
  * Not freeing memory when encountering an error.
  * The filename used for ":profile" must be given literally.
  * Various problems with locked and fixed lists and dictionaries.
  * E315 when trying to delete a fold. (Yutao Yuan)
  * Fold can't be opened after ":move". (Ein Brown)
  * Compiler warning for using uninitialized variable. (Yasuhiro Matsumoto)
  * Joining an empty list does uneccessary work.
  * Compiler warning for start_dir unused when building unittests.
  * Searching for a character matches an illegal byte and causes invalid memory access. (Dominique Pelle)
  * Can't build with Ruby 2.2.
  * Window drawn wrong when 'laststatus' is zero and there is a command-line window. (Yclept Nemo)
  * Undo files can have their executable bit set.
  * gettext() is called too often.
  * ":tabmove" does not work as documented.
  * It is not possible to make spaces visibible in list mode.

-------------------------------------------------------------------
Mon Apr 13 11:25:34 UTC 2015 - idonmez@suse.com

- Updated to revision 694, fixes the following problems
  * When starting several Vim instances in diff mode, the temp files
    used may not be unique. (Issue 353)
  * When there are illegal utf-8 characters the old regexp engine may
    go past the end of a string.
  * "zr" and "zm" do not take a count.
  * There is no way to use a different in Replace mode for a terminal.
  * When "$" is in 'cpo' the popup menu isn't undrawn correctly.
    (Issue 166)
  * Memory access errors when changing indent in Ex mode. Also missing
    redraw when using CTRL-U. (Knil Ino)
  * Can't build with MzScheme.
  * Session file is not correct when there are multiple tab pages.
  * Running tests changes the .viminfo file. 

-------------------------------------------------------------------
Thu Mar 26 09:16:27 UTC 2015 - idonmez@suse.com

- Updated to revision 683, fixes the following problems
  * When using --remote the directory may end up being wrong.
  * CTRL-W in Insert mode does not work well for multi-byte
    characters.
  * MS-Windows: When Vim is minimized the window height is computed
    incorrectly.
  * The search highlighting and match highlighting replaces the
    cursorline highlighting, this doesn't look good.
  * Typo in the vimtutor command.

-------------------------------------------------------------------
Tue Mar 24 11:37:52 UTC 2015 - idonmez@suse.com

- Updated to revision 676, fixes the following problems
  * When 'ruler' is set the preferred column is reset. (Issue 339)
  * Using freed memory when g:colors_name is changed in the colors
    script. (oni-link)
  * Using "0 CTRL-D" in Insert mode may have CursorHoldI interfere.
    (Gary Johnson)
  * When 'M' is in the 'cpo' option then selecting a text object in
    parenthesis does not work correctly.
  * When using netbeans a buffer is not found in another tab.
  * When 'compatible' is reset 'numberwidth' is set to 4, but the
    effect doesn't show until a change is made.
  * 'linebreak' does not work properly with multi-byte characters.
  * There is a chance that Vim may lock up.
  * 'colorcolumn' isn't drawn in a closed fold while 'cursorcolumn'
    is. (Carlos Pita)
  * Can't use a glob pattern as a regexp pattern.
  * When netbeans is active the sign column always shows up.
  * Using 'cindent' for Javascript is less than perfect.
  * Warning for shadowing a variable.
  * When completing a shell command, directories in the current
    directory are not listed.
  * The first syntax entry gets sequence number zero, which doesn't
    work. (Clinton McKay)
  * Missing changes in one file.
  * When a FileReadPost autocommand moves the cursor inside a line it
    gets moved back.
- Refresh vim73-no-static-libpython.patch

-------------------------------------------------------------------
Tue Mar 10 07:58:51 UTC 2015 - idonmez@suse.com

- Updated to revision 658, fixes the following problems
  * The tabline menu was using ":999tabnew" which is now invalid.
  * When using "gf" escaped spaces are not handled.
  * Stratus VOS doesn't have sync().
  * When splitting the window in a BufAdd autocommand while still in
    the first, empty buffer the window count is wrong.
  * ":bufdo" may start at a deleted buffer.
  * Compiler complains about ignoring return value of fwrite().
    (Michael Jarvis)
  * Configure check may fail because the dl library is not used.
  * Can't match "%>80v" properly for multi-byte characters.
  * Xxd lacks a few features.
  * Insert mode completion with complete() may have CTRL-L work like
    CTRL-P.
  * glob() and globpath() cannot include links to non-existing files.
    (Charles Campbell)
  * Text deleted by "dit" depends on indent of closing tag.
    (Jan Parthey)
  * Missing changes for glob() in one file.
  * Compiler warnings for pointer mismatch.
  * 'formatexpr' is evaluated too often. 

-------------------------------------------------------------------
Fri Feb 20 09:49:43 UTC 2015 - idonmez@suse.com

- Updated to revision 640, fixes the following problems
  * When using Insert mode completion combined with autocommands the
    redo command may not work.
  * The default conceal character is documented to be a space but it's
    initially a dash. (Christian Brabandt)
  * 7.4.592 breaks the netrw plugin, because the autocommands are
    skipped.
  * Marks are not restored after redo + undo.
  * If no NL or CR is found in the first block of a file then the
    'fileformat' may be set to "mac". (Issue 77)
  * A search with end offset gets stuck at end of file. (Gary Johnson)
  * Incorrectly read the number of buffer for which an autocommand should be registered. 
  * Can't build with Lua 5.3 on Windows.
  * Combination of linebreak and conceal doesn't work well.
  * After deleting characters in Insert mode such that lines are
    joined undo does not work properly. (issue 324) 

-------------------------------------------------------------------
Wed Feb 11 11:42:11 UTC 2015 - idonmez@suse.com

- Updated to revision 629, fixes the following problems
  * For complicated list and dict use the garbage collector can run
    out of stack space.
  * Syntax error.
  * The NFA engine does not implement the 'redrawtime' time limit.
  * Vim hangs when freeing a lot of objects.
  * Wrong ":argdo" range does not cause an error.
  * luaV_setref() is missing a return statement. (Ozaki Kiichi)
  * luaV_setref() not returning the correct value.
  * Compiler warning for unitinialized variable. (Tony Mechelynck)
  * Returning 1 in the wrong function. (Raymond Ko)
  * Compiler warning for unused argument.
  * Crash with pattern: \(\)\{80000}  (Dominique Pelle)
  * May leak memory or crash when vim_realloc() returns NULL.
  * Possible NULL pointer dereference.
  * The last screen cell is not updated.
  * Compiler warning for variable might be clobbered by longjmp.
  * Coverity warning for Out-of-bounds read. 
- Remove vim-speedup-gc.patch, fixed upstream

-------------------------------------------------------------------
Mon Feb  2 13:17:21 UTC 2015 - idonmez@suse.com

- Updated to revision 608, fixes the following problems
  * Compiler warnings for unitinialized variables. (John Little)
  * Can't match "%>80v" properly. (Axel Bender)
  * Range for :bdelete does not work. (Ronald Schild)
  * Parallel building of the documentation html files is not reliable. 
  * Conceal does not work properly with 'linebreak'. (cs86661)
  * ":0argedit foo" puts the new argument in the second place instead
    of the first.
  * Using ctrl_x_mode as if it contains flags.
  * test_listlbr_utf8 fails when the conceal feature is not available.
  * When doing ":e foobar" when already editing "foobar" and 'buftype'
    is "nofile" the buffer is cleared. (Xavier de Gaye)
  * Crash when searching for "x\{0,90000}". (Dominique Pelle)
  * Using a block delete while 'breakindent' is set does not work
    properly.
  * The test_command_count test fails when using Japanese.
  * Tiny build doesn't compile.  (Ike Devolder)
  * Cannot change the result of systemlist().
  * Out-of-memory error.
  * Memory wasted in struct because of aligning.
  * It is not possible to have feedkeys() insert characters.
  * ":set" does not accept hex numbers as documented.
  * 'foldcolumn' may be set such that it fills the whole window, not
    leaving space for text.
  * Running tests changes viminfo.
  * The # register is not writable, it cannot be restored after
    jumping around.
  * May crash when using a small window.
  * Compiler warnings for unused variables. 

-------------------------------------------------------------------
Fri Jan 30 09:45:18 UTC 2015 - idonmez@suse.com

- Add vim-speedup-gc.patch to improve garbage collection performance.
  Based on https://github.com/neovim/neovim/pull/1761 (boo#899747)

-------------------------------------------------------------------
Thu Jan 29 12:25:06 UTC 2015 - idonmez@suse.com

- Modify vim-7.3-filetype_changes.patch to expand tabs when editing
  *.changes files (bnc#900839)

-------------------------------------------------------------------
Thu Jan 29 10:45:52 UTC 2015 - idonmez@suse.com

- Update suse.vimrc to stop remembering file positions for git
  commit cases. This fixes bnc#538369 and based on msys commits
  1ef258e and 65ffc90.

-------------------------------------------------------------------
Thu Jan 15 11:32:14 UTC 2015 - idonmez@suse.com

- Updated to revision 580, fixes the following problems
  * Ex range handling is wrong for buffer-local user commands.
  * Segfault with wide screen and error in 'rulerformat'. (Ingo Karkat)
  * No test for replacing on a tab in Virtual replace mode.
  * FEAT_OSFILETYPE is used even though it's never defined.
  * Ranges for arguments, buffers, tabs, etc. are not checked to be
    valid but limited to the maximum.  This can cause the wrong thing
    to happen.
  * :argdo, :bufdo, :windo and :tabdo don't take a range.
  * Non-ascii vertical separater characters are always redrawn.
  * Giving an error for ":0wincmd w" is a problem for some plugins.
  * Having CTRL-C interrupt or not does not check the mode of the
    mapping. (Ingo Karkat)
  * Building with dynamic library does not work for Ruby 2.2.0
  * Can't build with tiny features. (Ike Devolder)
  * Address type of :wincmd depends on the argument.
  * Mapping CTRL-C in Visual mode doesn't work. (Ingo Karkat)
  * No error for eval('$').
  * Unicode character properties are outdated.
  * Redrawing problem with 'relativenumber' and 'linebreak'.
  * Matching with a virtual column has a lot of overhead on very long
    lines. (Issue 310)
  * Using getcurpos() after "$" in an empty line returns a negative
    number.
  * Wrong cursor positioning when 'linebreak' is set and lines wrap.
  * ":52wincmd v" still gives an invalid range error. (Charles
    Campbell) 

-------------------------------------------------------------------
Mon Jan  5 09:54:11 UTC 2015 - idonmez@suse.com

- Updated to revision 560, fixes the following problems
  * Tests fail with small features plus Python.
  * Crash when computing buffer count.  Problem with range for user
    commands.  Line range wrong in Visual area.
  * Cannot build with tiny and small features. (Taro Muraoka)
  * Crash when doing a range assign.
  * Using a range for window and buffer commands has a few problems.
    Cannot specify the type of range for a user command.
  * Since patch 7.4.232 "1,3s/\n//" joins two lines instead of three.
    (Eliseo Martínez)  Issue 287
  * Warnings for unused arguments when compiling with a combination of
    features.
  * Highlighting for multi-line matches is not correct.
  * Repeated use of vim_snprintf() with a number.
  * Using "vit" does not select a multi-byte character at the end correctly.
  * Function name not recognized correctly when inside a function.
  * curs_rows() function is always called with the second argument false.
  * "ygn" may yank too much. (Fritzophrenic)  Issue 295.
  * Langmap applies to Insert mode expression mappings.
  * Various small issues.
  * Missing part of patch 7.4.519.
  * test_close_count may fail for some combination of features.
  * Failed commands in Python interface not handled correctly.
  * One more small issue.
  * When the X server restarts Vim may get stuck.
  * Appending a block in the middle of a tab does not work correctly
    when virtualedit is set.
  * Memory leak using :wviminfo. Issue 296. 

-------------------------------------------------------------------
Tue Dec 16 21:55:48 UTC 2014 - lars@linux-schulserver.de

- use SUSE LINUX GmbH everywhere

-------------------------------------------------------------------
Fri Nov 28 07:14:34 UTC 2014 - idonmez@suse.com

- Updated to revision 537, fixes the following problems
  * With a wrapping line the cursor may not end up in the right place.
    (Nazri Ramliy)
  * Using status line height in width computations.
  * Crash when using syntax highlighting.
  * Sun PCK locale is not recognzed.
  * When using "vep" a mark is moved to the next line. (Maxi Padulo,
    Issue 283)
  * Specifying wrong buffer size for GetLongPathName().
  * When the X11 server is stopped and restarted, while Vim is kept in
    the background, copy/paste no longer works. (Issue 203)
  * When using ":ownsyntax" spell checking is messed up. (Issue 78)
  * map() leaks memory when there is an error in the expression.
  * matchstr() fails on long text. Daniel Hahler)
  * Still confusing regexp failure and NFA_TOO_EXPENSIVE.
  * Crash when using matchadd() (Yasuhiro Matsumoto)
  * No test for what 7.4.517 fixes.
  * Many commands take a count or range that is not using line
    numbers.
  * Comments about parsing an Ex command are wrong.
  * When using 'incsearch' "2/pattern/e" highlights the first match.
  * ":hardcopy" leaks memory in case of errors.
  * Warnings when compiling if_ruby.c.
  * Can't build with tiny features.
  * Test 63 fails when using a black&white terminal.
  * Value of v:hlsearch reflects an internal variable. 

-------------------------------------------------------------------
Tue Nov 18 11:50:40 UTC 2014 - idonmez@suse.com

- Updated to revision 516, fixes the following problems
  * When generating ja.sjis.po the header is not correctly adjusted.
  * Users are not aware their encryption is weak.
  * "-fwrapv" argument breaks use of cproto.
  * Generating proto for if_ruby.c uses type not defined elsewhere.
  * Crash because reference count is wrong for list returned by
    getreg().
  * Memory access error. (Dominique Pelle)
  * In a help buffer the global 'foldmethod' is used.  (Paul Marshall)
  * Completing a function name containing a # does not work.  Issue
    253.
 
-------------------------------------------------------------------
Thu Nov  6 10:54:25 UTC 2014 - idonmez@suse.com

- Updated to revision 507, fixes the following problems
  * Setting the local value of 'backupcopy' empty gives an error.
    (Peter Mattern)
  * Compiler warning.
  * Crash when expanding a very long string.
  * CTRL-W } does not open preview window. (Erik Falor)
  * 'linebreak' does not work well together with Visual mode.
  * Issue 26: CTRL-C does not interrupt after it was mapped and then
    unmapped.
  * The "precedes" entry in 'listchar' will be drawn when 'showbreak
    is set and list is not.
  * Cursor movement is incorrect when there is a number
    column/sign/fold column and 'sbr' is displayed.
  * Can't compile on a system where Xutf8SetWMProperties() is not in
    the X11 library.  Issue 265.
  * When using ":%diffput" and the other file is empty an extra empty
    line remains.
  * Using byte length instead of character length for 'showbreak'.
  * When 'balloonexpr' results in a list, the text has a trailing
    newline. (Lcd)
  * A 0x80 byte is not handled correctly in abbreviations.
  * Abbreviations don't work. (Toothpik)
  * Check for writing to a yank register is wrong.
  * ":sign jump" may use another window even though the file is
    already edited in the current window.
  * test_mapping fails for some people.
  * Cursor movement still wrong when 'lbr' is set and there is a
    number column. (Hirohito Higashi)
  * Cannot specify the buffer to use for "do" and "dp", making them
    useless for three-way diff.
  * When winrestview() has a negative "topline" value there are
    display errors.
  * In Insert mode, after inserting a newline that inserts a comment
    leader, CTRL-O moves to the right. (ZyX) Issue 57.
  * A TextChanged autocommand is triggered when saving a file.
    (William Gardner)
  * Cursor shape is wrong after a CompleteDone autocommand.
  * XPM isn't used correctly in the Cygwin Makefile.
  * With some regexp patterns the NFA engine uses many states and
    becomes very slow.  To the user it looks like Vim freezes.
  * substitute() can be slow with long strings.
  * Test 72 still fails once in a while.
  * Typo in file pattern.
  * Language mapping also applies to mapped characters.
  * Cannot append a list of lines to a file.

-------------------------------------------------------------------
Sat Oct 18 13:53:50 UTC 2014 - opensuse@cboltz.de

- Updated apparmor.vim (taken from AppArmor 2.9.0)
  * add support for 'hat' keyword
  * fix highlighting of comments in alias and link rules

-------------------------------------------------------------------
Mon Sep 29 11:28:00 UTC 2014 - idonmez@suse.com

- Updated to revision 461, fixes the following problems
  * When using a Visual selection of multiple words and doing CTRL-W_]
    it jumps to the tag matching the word under the cursor, not the
    selected text.  (Patrick hemmer)
  * Completion for :buf does not use 'wildignorecase'. (Akshay H)
  * 'backupcopy' is global, cannot write only some files in a
    different way.
  * Using getchar() in an expression mapping may result in K_CURSORHOLD, 
    which can't be recognized.
  * Issue 252: Cursor moves in a zero-height window.
  * Can't change the icon after building Vim.
  * Can't build without the quickfix feature. (Erik Falor) 
  * Error reported by ubsan when running test 72.
  * Reversed question mark not recognized as punctuation. (Issue 258)
  * Clipboard may be cleared on startup.
  * In some situations, when setting up an environment to trigger an
    autocommand, the environment is not properly restored.
  * Spell files from Hunspell may generate a lot of errors.
  * Using ETO_IGNORELANGUAGE causes problems.
  * Can't easily close the help window. (Chris Gaal)
  * Not all commands that edit another buffer support the +cmd
    argument.
  * Calling system() with empty input gives an error for writing the
    temp file.

-------------------------------------------------------------------
Fri Sep 26 09:51:50 UTC 2014 - zaitor@opensuse.org

- Add gvim.svg as Source24, taken from gnome-colors-icon-theme.
  Convert the svg to all relevant hicolor sizes, and install them.
- Add rsvg-view BuildRequires: Needed to do the above conversion.
- Call relevant macros in %post/%postun:
  + %icon_theme_cache_post/postun because the package ships themed
    icons.

-------------------------------------------------------------------
Fri Sep 12 12:39:19 UTC 2014 - opensuse@cboltz.de

- Updated apparmor.vim (taken from AppArmor 2.8.96)

-------------------------------------------------------------------
Wed Sep 10 14:16:55 UTC 2014 - idonmez@suse.com

- Updated to revision 442, fixes the following problems
  * test_listlbr fails when compiled with normal features.
  * Compiler warning.
  * When the startup code expands command line arguments, setting
    'encoding' will not properly convert the arguments.
  * gettabvar() is not consistent with getwinvar() and getbufvar().
  * Line formatting behaves differently when 'linebreak' is set.
    (mvxxc)
  * ml_get error for autocommand that moves the cursor of the current
    window.
  * New and old regexp engine are not consistent.
  * Cached values for 'cino' not reset for ":set all&".
  * Duplicate message in message history.  Some quickfix messages
    appear twice. (Gary Johnson)
  * Omni complete popup drawn incorrectly.
  * Endless loop and other problems when 'cedit' is set to CTRL-C.
  * Using unitinialized variable. 

-------------------------------------------------------------------
Sat Aug 30 14:21:44 UTC 2014 - idonmez@suse.com

- Updated to revision 429, fixes the following problems
  * When leaving ":append" the cursor shape is like in Insert mode.
    (Jacob Niehus)
  * When part of a list is locked it's possible to make changes.
  * Crash when searching for "\ze*". (Urtica Dioica)
  * When using conceal with linebreak some text is not displayed
    correctly. (Grüner Gimpel)
  * expand("$shell") does not work as documented.
  * Get ml_get error when using Python to delete lines in a buffer
    that is not in a window.  issue 248.
  * When 'showbreak' is used "gj" may move to the wrong position.
    (Nazri Ramliy)
  * When an InsertCharPre autocommand executes system() typeahead may
    be echoed and messes up the display. (Jacob Niehus)
  * Build fails with fewer features. (Elimar Riesebieter)

-------------------------------------------------------------------
Fri Aug 29 08:01:50 UTC 2014 - coolo@suse.com

- fix license for spdx 1.2

-------------------------------------------------------------------
Wed Aug 27 12:29:19 UTC 2014 - idonmez@suse.com

- Use a disabled _service file
- Remove the un-needed Perl hack in the spec file

-------------------------------------------------------------------
Mon Aug 25 11:05:19 UTC 2014 - idonmez@suse.com

- Use mercurial tags instead of applying patches one by one. This
  reduces unexpected failures.
- Updated to revision 417, fixes the following problems
  * Can't build with Perl on Fedora 20.
  * Fold does not open after search when there is a CmdwinLeave
    autocommand.
  * "foo bar" sorts before "foo" with sort(). (John Little)
  * Cannot define a command only when it's used.
  * Cannot build.  Warning for shadowed variable. (John Little)
  * Problem with breakindent/showbreak and tabs.
  * After splitting a window and setting 'breakindent' the default
    minimum with is not respected.
  * Screen updating is slow when using matches.
  * Inserting text for Visual block mode, with cursor movement,
    repeats the wrong text. (Aleksandar Ivanov)
  * Visual block insert breaks a multi-byte character.
  * Compiler warning for unused argument and unused variable.
  * Character after "fb" command not mapped if it might be a composing
    character.
  * Test 63 fails when run with GUI-only Vim.
  * Popup menu flickers too much.
  * When 'equalalways' is set a split may report "no room" even though
    there is plenty of room.
  * Title of quickfist list is not kept for setqflist(list, 'r').
  * Accessing freed memory after using setqflist(list, 'r'). (Lcd)
  * Loading python may cause Vim to exit.
  * Get u_undo error when backspacing in Insert mode deletes more than
    one line break. (Ayberk Ozgur)
  * Mapping characters may not work after typing Esc in Insert mode.
  * Bad interaction between preview window and omnifunc.
  * Test 102 fails when compiled with small features.
  * When building with tiny or small features building the .mo files
    fails.
  * When splitting a window the changelist position is wrong.
  * "4gro" replaces one character then executes "ooo". (Urtica Dioica)
  * With 'linebreak' set and 'list' unset a Tab is not counted
    properly. (Kent Sibilev)
  * Still sometimes Vim enters Replace mode when starting up.
  * Advancing pointer over end of a string.
  * No 'cursorline' highlighting when the cursor is on a line with
    diff highlighting. (Benjamin Fritz)
  * Not easy to detect type of command line window.
  * C indent is wrong below an if with wrapped condition followed by
    curly braces. (Trevor Powell)
  * When 'clipboard' is "unnamed", :g/pat/d is very slow. (Praful)
  * Matchparen only uses the topmost syntax item.
  * Encryption implementation is messy.  Blowfish encryption has a
    weakness.
  * Test 72 crashes under certain conditions. (Kazunobu Kuriyama)
  * Valgrind reports errors when running test 72. (Dominique Pelle)

-------------------------------------------------------------------
Tue Jul 22 09:04:57 UTC 2014 - idonmez@suse.com

- Updated to revision 373, fixes the following problems
  * Crash when using ":botright split" when there isn't much space.
  * Other solution for redrawing after completion.
  * Restoring the window sizes after closing the command line window
    doesn't work properly if there are nested splits.
  * Using freed memory when exiting while compiled with EXITFREE.
  * Linebreak test fails when encoding is not utf-8. (Danek Duvall)
  * When 'linebreak' is set control characters are not correctly
    displayed. (Kimmy Lindvall)
  * When 'winminheight' is zero there might not be one line for the
    current window.
  * Compiler warning for unused argument and unused variable.

-------------------------------------------------------------------
Mon Jul 14 09:09:30 UTC 2014 - idonmez@suse.com

- Updated to revision 364, fixes the following problems
  * When 'verbose' is set to display the return value of a function,
    may get E724 repeatedly.
  * Selection of inner block is inconsistent.
  * When moving the cursor and then switching to another window the
    previous window isn't scrolled. (Yukihiro Nakadaira)
  * Using a regexp pattern to highlight a specific position can be
    slow.
  * Relative numbering not updated after a linewise yank.  Issue 235.
  * GTK: When a sign icon doesn't fit exactly there can be ugly gaps.
  * Compiler warning for unused function.
  * Unitialized variables, causing some problems.
  * No digraph for the new rouble sign.
  * Setting 'history' to a big value causes out-of-memory errors.
  * When there is an error preparing to edit the command line, the
    command won't be executed. (Hirohito Higashi)
  * Cannot wrap lines taking indent into account.
  * Local function is available globally.
  * Error from sed about illegal bytes when installing Vim.
  * sort() doesn't handle numbers well.
  * Clang gives warnings.
  * matchdelete() does not always update the right lines.
  * Unnecessary initializations and other things related to
    matchaddpos().
  * Indent is not updated when deleting indent.
  * Indent is not updated when changing 'breakindentopt'. (itchyny)
  * test55 fails on some systems.
  * When using "J1" in 'cinoptions' a line below a continuation line
    gets too much indent.
  * When there are matches to highlight the whole window is redrawn,
    which is slow.
  * Using C indenting for Javascript does not work well for a {} block
    inside parenthesis.
  * With 'linebreak' a tab causes missing line break.
  * 'linebreak' doesn't work with the 'list' option.
  * Several problems with Javascript indenting.
  * After completion some characters are not redrawn.
  * Sort is not always stable.
  * When 'ttymouse' is set to 'uxterm' the xterm version is not
    requested. (Tomas Janousek)
  * In a regexp pattern a "$" followed by \v or \V is not seen as the
    end-of-line.
  * Lots of flickering when filling the preview window for 'omnifunc'.
  * When matchaddpos() uses a length smaller than the number of bytes
    in the (last) character the highlight continues until the end of
    the line.
  * In Windows console typing 0xCE does not work.
  * When the viminfo file can't be renamed there is no error message.
    (Vladimir Berezhnoy)

-------------------------------------------------------------------
Mon Jun 16 10:54:34 UTC 2014 - idonmez@suse.com

- Updated to revision 326, fixes the following problems
  * When using ":diffsplit" on an empty file the cursor is displayed
    on the command line.
  * When increasing the size of the lower window, the upper window
    jumps back to the top. (Ron Aaron)
  * getpos()/setpos() don't include curswant.
  * Can't use winrestview to only restore part of the view.
  * Cannot figure out what argument list is being used for a window.
  * Changing the return value of getpos() causes an error. (Jie Zhu)
  * Completion messages can get in the way of a plugin.
  * Fixes for computation of topline not tested.
  * Warning from 64-bit compiler.
  * Crash when starting gvim.  Issue 230.
  * Check for whether a highlight group has settings ignores fg and bg
    color settings.
  * Crash when putting zero bytes on the clipboard.
  * Possible crash when an BufLeave autocommand deletes the buffer.
  * Using "msgfmt" is hard coded, cannot use "gmsgfmt".
  * Substitute() with zero width pattern breaks multi-byte character.
  * In Ex mode, cyrillic characters are not handled. (Stas Malavin)
  * When starting the gui and changing the window size the status line
    may not be drawn correctly.
  * Can't build Tiny version. (Elimar Riesebieter)

-------------------------------------------------------------------
Mon May 26 08:40:24 UTC 2014 - idonmez@suse.com

- Updated to revision 307, fixes the following problems
  * Setting 'langmap' in the modeline can cause trouble.  E.g. mapping
    ":" breaks many commands. (Jens-Wolfhard Schicke-Uffmann)
  * When 'relativenumber' is set and deleting lines or undoing that,
    line numbers are not always updated. (Robert Arkwright)
  * Error messages are inconsistant. (ZyX)
  * When 'spellfile' is set the screen is not redrawn.
  * Pattern with repeated backreference does not match with new regexp
    engine. (Urtica Dioica)
  * A non-greedy match followed by a branch is too greedy. (Ingo
    Karkat)
  * Searching for "a" does not match accented "a" with new regexp
    engine, does match with old engine. (David Bürgin)
    "ca" does not match "ca" with accented "a" with either engine.
  * It is not possible to ignore composing characters at a specific
    point in a pattern.
  * Memory leak from result of get_isolated_shell_name().
  * Can't have a funcref start with "t:".
  * When running configure twice DYNAMIC_PYTHON_DLL may become empty.
  * Still a scrolling problem when loading a session file.
  * Signs placed with 'foldcolumn' set don't show up after filler
    lines.
  * When using double-width characters the text displayed on the
    command line is sometimes truncated.
  * Cannot always use Python with Vim.
  * Making 'ttymouse' empty after the xterm version was requested
    causes problems. (Elijah Griffin)
  * getchar(0) does not return Esc.
  * Can't build without the +termresponse feature.

-------------------------------------------------------------------
Tue May 13 19:40:29 UTC 2014 - sleep_walker@suse.cz

- minor tweaks of spec.skeleton

-------------------------------------------------------------------
Mon May 12 13:04:17 UTC 2014 - idonmez@suse.com

- Updated to revision 283, fixes the following problems
  * Smack support detection is incomplete.
  * Configure check for smack doesn't work with all shells. (David
    Larson)
  * Using systemlist() may cause a crash and does not handle NUL
    characters properly.
  * Compiler warning, possibly for mismatch in parameter name.
  * Configure fails if $CC contains options.
  * Warning for misplaced "const".
  * It is possible to define a function with a colon in the name.  It
    is possible to define a function with a lower case character if a
    "#" appears after the name.
  * When updating the window involves a regexp pattern, an interactive
    substitute to replace a "\n" with a line break fails. (Ingo
    Karkat)
  * Duplicate code in regexec().
  * GCC 4.8 compiler warning for hiding a declaration (Francois Gannaz)
  * Can't define a function starting with "g:".  Can't assign a
    funcref to a buffer-local variable.
  * Can't call a global function with "g:" in an expression.
  * Test 62 fails.
  * The '[ mark is in the wrong position after "gq". (Ingo Karkat)
  * Using exists() on a funcref for a script-local function does not
    work.
  * CTRL-U in Insert mode does not work after using a cursor key.
    (Pine Wu)
  * Comparing pointers instead of the string they point to.
  * Using just "$" does not cause an error message.
  * "make autoconf" and "make reconfig" may first run configure and
    then remove the output.
  * When doing ":update" just before running an external command that
    changes the file, the timestamp may be unchanged and the file
    is not reloaded.
  * When changing the type of a sign that hasn't been placed ther is
    no error message.
  * The fish shell is not supported.
  * Using ":sign unplace *" may leave the cursor in the wrong position
    (Christian Brabandt)
  * globpath() returns a string, making it difficult to get a list of
    matches. (Greg Novack)
  * When using a session file the relative position of the cursor is
    not restored if there is another tab. (Nobuhiro Takasaki)
  * When a session file has more than one tabpage and 'showtabline' is
    one the positions may be slightly off.
  * Compiler warning about unused variable. (Charles Cooper)

-------------------------------------------------------------------
Mon Apr  7 13:43:01 UTC 2014 - idonmez@suse.com

- Updated to revision 253, fixes the following problems
  * Crash for "vim -u NONE -N  -c '&&'".
  * Configure message for detecting smack are out of sequence.
  * When passing input to system() there is no way to keep NUL and
    NL characters separate.
  * Cannot distinguish between NL and NUL in output of system().
  * Some test files missing from distribution.
  * Crash when BufAdd autocommand wipes out the buffer.
  * Critical error in GTK, removing timer twice.
  * Crash when using cpp syntax file with pattern using external
    match. (Havard Garnes)

-------------------------------------------------------------------
Thu Apr  3 12:12:45 UTC 2014 - idonmez@suse.com

- Updated to revision 244, fixes the following problems
  * ":tjump" shows "\n" as "\\n".
  * The string returned by submatch() does not distinguish between a
    NL from a line break and a NL that stands for a NUL character.
  * getreg() does not distinguish between a NL used for a line break
    and a NL used for a NUL character.
  * Cannot use setreg() to add text that includes a NUL.
  * The smack feature causes stray error messages.

-------------------------------------------------------------------
Wed Apr  2 13:34:20 UTC 2014 - idonmez@suse.com

- Updated to revision 239, fixes the following problems
  * Compilation problems on HP_nonStop (Tandem).
  * Inconsistency: ":sp foo" does not reload "foo", unless "foo" is
    the current buffer. (Liang Li)
  * Compiler warnings. (Tony Mechelynck)
  * When src/auto/configure was updated, "make clean" would run
    configure pointlessly.
  * It's not easy to remove duplicates from a list.
  * When 'relativenumber' or 'cursorline' are set the window is
    redrawn much to often. (Patrick Hemmer, Dominique Pelle)
  * Test 105 does not work in a shadow dir. (James McCoy)
  * Quickfix doesn't resize on ":copen 20". (issue 199)
  * The Ruby directory is constructed from parts.
  * Still using an older autoconf version.
  * /usr/bin/grep on Solaris does not support -F.
  * Dynamic Ruby doesn't work on Solaris.
  * Cursurline highlighting not redrawn when scrolling. (John
    Marriott)
  * Can't build with Ruby 1.8.
  * Compiler warnings when building with Python 3.2.
  * Using ":let" for listing variables and the second one is a curly
    braces expression may fail.
  * Error when using ":options".
  * An error in ":options" is not caught by the tests.
  * ":%s/\n//" uses a lot of memory. (Aidan Marlin)
  * Escaping special characters for using "%" with a shell command is
    inconsistant, parenthesis are escaped but spaces are not.
  * Can't get the command that was used to start Vim.
  * It is not easy to get the full path of a command.
  * It's not that easy to check the Vim patch version.
  * When some patches was not included has("patch-7.4.123") may return
    true falsely.
  * Vim does not support the smack library.
  * ":e +" does not position cursor at end of the file.

-------------------------------------------------------------------
Mon Mar 24 11:46:08 UTC 2014 - idonmez@suse.com

- Updated to revision 213, fixes the following problems
  * The cursor report sequence is sometimes not recognized and results
    in entering replace mode.
  * Mercurial picks up some files that are not distributed.
  * When repeating a filter command "%" and "#" are expanded.
  * Visual block mode plus virtual edit doesn't work well with tabs.
    (Liang Li)
  * ":lu" is an abbreviation for ":lua", but it should be ":lunmap".
    (ZyX)
  * Now that the +visual feature is always enabled the #ifdefs for it
    are not useful.
  * It's not possible to open a new buffer without creating a swap
    file.

-------------------------------------------------------------------
Sun Mar 23 09:18:30 UTC 2014 - schwab@linux-m68k.org

- Clean up after the testsuite

-------------------------------------------------------------------
Thu Mar 13 11:13:57 UTC 2014 - idonmez@suse.com

- Updated to revision 205, fixes the following problems
  * Typos in messages.
  * Python tests fail.
  * Can't build Vim with Perl when -Dusethreads is not specified for
    building Perl, and building Vim with --enable-perlinterp=dynamic.
  * (issue 197) ]P doesn't paste over Visual selection.
  * Too many #ifdefs in the code.
  * 'lispwords' is a global option.
  * Parsing 'errorformat' is not correct.
  * A mapping where the second byte is 0x80 doesn't work.
  * ":mksession" writes command to move to second argument while it
    does not exist.  When it does exist the order might be wrong.

-------------------------------------------------------------------
Thu Mar  6 22:24:41 UTC 2014 - idonmez@suse.com

- Now that python3 is fixed, reenable test87

-------------------------------------------------------------------
Wed Feb 26 19:34:27 UTC 2014 - opensuse@cboltz.de

- Updated apparmor.vim (taken from AppArmor 2.8.3)
  * Fixes the attach_disconnected flag

-------------------------------------------------------------------
Tue Feb 25 09:56:21 UTC 2014 - idonmez@suse.com

- Updated to revision 192, fixes the following problems
  * Warning for type-punned pointer. (Tony Mechelynck)
  * Older Python versions don't support %ld.
  * When using 'pastetoggle' the status lines are not updated. (Samuel
    Ferencik, Jan Christoph Ebersbach)
  * Building with mzscheme and racket does not work. (David Chimay)
  * match() does not work properly with a {count} argument.
  * Clang gives warnings.
  * Insert in Visual mode sometimes gives incorrect results. (Dominique Pelle)
  * Delete that crosses line break splits multi-byte character.
  * SIZEOF_LONG clashes with similar defines in header files.
  * Compiler warning for unused argument.
  * Compiler warning for using %lld for off_t.
  * Escaping a file name for shell commands can't be done without a function.
  * Memory leak when giving E853.
- Disable test87 until python 3.4 is fixed (http://bugs.python.org/issue20763)

-------------------------------------------------------------------
Thu Feb 20 16:12:38 UTC 2014 - robin.roth@kit.edu

- enable xterm_clipboard again, restoring features present in openSuSE 12.3

-------------------------------------------------------------------
Wed Feb 12 09:34:44 UTC 2014 - idonmez@suse.com

- Updated to revision 178, fixes the following problems
  * Some help tags don't work with ":help". (Tim Chase)
  * Redo does not set v:count and v:count1.
  * The blowfish code mentions output feedback, but the code is
    actually doing cipher feedback.
  * When using scrollbind the cursor can end up below the last line.
    (mvxxc)
  * Compiler warnings for Python interface. (Tony Mechelynck)
  * When a wide library function fails, falling back to the non-wide
    function may do the wrong thing.
  * Dictionary.update() thows an error when used without arguments.
    Python programmers don't expect that.
  * Compiler warning for unused variable. (Tony Mechelynck)
  * The J command does not update '[ and '] marks. (William Gardner) 

-------------------------------------------------------------------
Fri Feb  7 09:48:35 UTC 2014 - idonmez@suse.com

- Updated to revision 169, fixes the following problems
  * Running tests in shadow dir doesn't work.
  * By default, after closing a buffer changes can't be undone.
  * Auto-loading a function for code that won't be executed.
  * Fixes are not tested.
  * Can't compile with Ruby 2.1.0.
  * ":sleep" puts cursor in the wrong column. (Liang Li)
- Dropped vim-7.4-ruby21.patch, fixed upstream

-------------------------------------------------------------------
Tue Feb  4 11:20:35 UTC 2014 - idonmez@suse.com

- Updated to revision 161, fixes the following problems
  * Crash in Python exception handling.

-------------------------------------------------------------------
Tue Jan 28 09:22:41 UTC 2014 - idonmez@suse.com

- Updated to revision 160, fixes the following problems
  * TextChangedI is not triggered.
  * getregtype() does not return zero for unknown register.
  * When starting Vim with "-u NONE" v:oldfiles is NULL.
  * Get E685 error when assigning a function to an autoload variable.
    (Yukihiro Nakadaira)
  * :keeppatterns is not respected for :s.
  * Python: slices with steps are not supported.
  * Python: Cannot iterate over options.
  * Compiler warning for pointer type.
  * Still a problem with auto-loading.
  * ":keeppatterns /pat" does not keep search pattern offset.
  * Error number used twice. (Yukihiro Nakadaira)
  * Pattern containing \zs is not handled correctly by substitute().
  * Completion hangs when scanning the current buffer after doing
    keywords. (Christian Brabandt)

-------------------------------------------------------------------
Tue Jan 14 14:13:34 UTC 2014 - idonmez@suse.com

- Use Unix line endings in vim-7.3-filetype_ftl.patch (bnc#815840)

-------------------------------------------------------------------
Mon Jan 13 10:23:03 UTC 2014 - idonmez@suse.com

- Updated to revision 142, fixes the following problems
  * Clang warns for using NUL.
  * Spurious space in MingW Makefile.
  * Directory change messages are not recognized.
  * Crash when using :cd in autocommand. (François Ingelrest)
  * Crash when wiping out buffer triggers autocommand that wipes out
    only other buffer.
  * Problems when building with Borland: st_mode is signed short;
    can't build with Python; temp files not ignored by Mercurial;
    building with DEBUG doesn't define _DEBUG.

-------------------------------------------------------------------
Fri Jan 10 08:10:52 UTC 2014 - kkaempf@suse.com

- Fix dynamic loading of Ruby for Ruby 2.1
  Add patch vim-7.4-ruby21.patch

-------------------------------------------------------------------
Tue Dec 17 12:10:00 UTC 2013 - idonmez@suse.com

- Updated to revision 131, fixes the following problems
  * ":help s/\_" reports an internal error. (John Beckett)
  * Completing a tag pattern may give an error for invalid pattern.
  * Python: When vim.eval() encounters a Vim error, a try/catch in the
    Python code doesn't catch it. (Yggdroot Chen)
  * "zG" and "zW" leave temp files around on MS-Windows.
  * ColorScheme autocommand matches with the current buffer name.
  * "gUgn" cannot be repeeated. (Dimitar Dimitrov)
  * Memory leak in Python OptionsAssItem. (Ken Takata)
  * New GNU make outputs messages about changing directory in another
    format.
  * When using Zsh expanding ~abc doesn't work when the result
    contains a space.
  * When a mapping starts with a space, the typed space does not show
    up for 'showcmd'.
  * It's possible that redrawing the status lines causes
    win_redr_custom() to be called recursively.
  * Can't build with Perl 5.18 on Linux. (Lcd 47)
  * Completion doesn't work for ":py3d" and ":py3f". (Bohr Shaw)
  * Compiler warnings for "const" and incompatible types.
  * getline(-1) returns zero. (mvxxc)
  * Relative line numbers mix up windows when using folds.
  * Syncbind causes E315 errors in some situations. (Liang Li)

-------------------------------------------------------------------
Fri Nov 22 10:49:10 UTC 2013 - idonmez@suse.com

- Updated to revision 103, fixes the following problems
  * Unexpected behavior change related to 'virtualedit'. (Ingo Karkat)
  * When using ":'<,'>del" errors may be given for the visual line numbers being out of range.
  * Append in blockwise Visual mode with "$" is wrong.
  * NFA regexp doesn't handle backreference correctly.
  * Using \1 in pattern goes one line too far. (Bohr Shaw, John Little)
  * Crash when interrupting "z=".

-------------------------------------------------------------------
Thu Nov 14 09:27:18 UTC 2013 - idonmez@suse.com

- Updated to revision 092, fixes the following problems
  * Reading past end of the 'stl' string.
  * byteidx() does not work for composing characters.
  * set_last_cursor() may encounter w_buffer being NULL.  (Matt Mkaniaris)
  * Declaration has wrong return type for PyObject_SetAttrString().
  * Crash when using invalid key in Python dictionary.
  * When replacing a character in Visual block mode, entering a CR does not cause a repeated line break.
  * When recording, the character typed at the hit-enter prompt is recorded twice. (Urtica Dioica)
  * After inserting comment leader, CTRL-\ CTRL-O does move the cursor. (Wiktor Ruben)
  * Cannot right shift lines starting with #.
  * Passing limits around too often.
  * Crash when using Insert mode completion.
  * Setting undolevels for one buffer changes undo in another.
  * When undo'ing all changes and creating a new change the undo structure is incorrect. (Christian Brabandt)
  * Locally setting 'undolevels' is not tested.
  * "cgn" does not wrap around the end of the file. (Dimitrov Dimitrov)
  * A script cannot detect whether 'hlsearch' highlighting is actually displayed.
  * Missing documentation for v:hlsearch.
  * Wrong logic when ANALYZE is "yes".
  * Using "gf" in a changed buffer suggests adding "!", which is not possible. (Tim Chase)
  * It's hard to avoid adding a used pattern to the search history.
  * Python: interrupt not being properly discarded. (Yggdroot Chen)
  * When inserting text in Visual block mode and moving the cursor the wrong text gets repeated in other lines.
  * Skipping over an expression when not evaluating it does not work properly for dict members.
  * When spell checking is enabled Asian characters are always marked as error.
  * When editing a file in a directory mounted through sshfs Vim doesn't set the security context on a renamed file.
- Drop vim-7.4-python-decl.patch, patch upstream now.

-------------------------------------------------------------------
Mon Oct 28 10:12:29 UTC 2013 - schwab@suse.de

- vim-7.4-python-decl.patch: Use correct return type of
  PyObject_SetAttrString

-------------------------------------------------------------------
Mon Oct 21 10:47:39 UTC 2013 - idonmez@suse.com

- Updated to revision 052, fixes the following problems
  * Can't use Tcl 8.6.
  * When using input() in a function invoked by a mapping it doesn't
    work.
  * Recent clang version complains about -fno-strength-reduce.
  * In Ex mode, when line numbers are enabled the substitute prompt is
    wrong.
  * "gn" selects too much for the pattern "\d" when there are two
    lines with a single digit. (Ryan Carney)
  * Syntax highlighting a Yaml file causes a crash. (Blake Preston)
  * With 'fo' set to "a2" inserting a space in the first column may
    cause the cursor to jump to the previous line.

-------------------------------------------------------------------
Mon Sep 30 08:14:20 UTC 2013 - idonmez@suse.com

- Updated to revision 045, fixes the following problems
  * NFA engine does not capture group correctly when using \@>. (ZyX)
  * Using "\ze" in a sub-pattern does not result in the end of the
    match to be set. (Axel Bender)
  * Using "zw" and "zg" when 'spell' is off give a confusing error
    message. (Gary Johnson)
  * Valgrind error on exit when a script-local variable holds a
    reference to the scope of another script.
  * Visual selection does not remain after being copied over. (Axel
    Bender)
  * When using ":setlocal" for 'spell' and 'spellang' then :spelldump
    doesn't work. (Dimitar Dimitrov)
  * substitute() does not work properly when the pattern starts with
    "\ze".

-------------------------------------------------------------------
Mon Sep 23 19:25:12 UTC 2013 - schwab@suse.de

- Remove unused buildrequires on systemd

-------------------------------------------------------------------
Mon Sep 23 10:49:50 UTC 2013 - idonmez@suse.com

- Updated to revision 035, fixes the following problems
  * Equivalence classes are not working for multi-byte characters.
  * An error in a pattern is reported twice.
  * The -mno-cygwin argument is no longer supported by Cygwin.
  * ":diffoff!" resets options even when 'diff' is not set. (Charles
    Cooper)
  * NFA engine does not match the NUL character. (Jonathon Merz)
  * When the terminal has only 20 lines test 92 and 93 overwrite the
    input file.
  * Using "p" in Visual block mode only changes the first line. 

-------------------------------------------------------------------
Mon Sep  9 10:53:43 UTC 2013 - idonmez@suse.com

-Updated to revision 027, fixes the following problems
  * Crash with invalid argument to mkdir().
  * Cannot find out if "acl" and "xpm" features are supported.
    multi-byte characters.
  * File name buffer too small for utf-8.
  * ":help !!" does not find the "!!" tag in the help file. (Ben
    Fritz)
  * When completing item becomes unselected. (Shougo Matsu)
  * NFA engine matches too much with \@>. (John McGowan)
  * NFA regexp: Using \ze in one branch which doesn't match may cause
    end of another branch to be wrong. (William Fugh)
  * Deadlock while exiting, because of allocating memory.
  * When root edits a file the undo file is owned by root while the
    edited file may be owned by another user, which is not allowed.
    (cac2s)
  * Reading before start of a string.
  * Clang warning for int shift overflow.
  * Another valgrind error when using CTRL-X CTRL-F at the start of
    the line. (Dominique Pelle)

-------------------------------------------------------------------
Thu Sep  5 18:50:28 CEST 2013 - mls@suse.de

- add libperl_requires, as we link against libperl and thus
  need a specific version of perl

-------------------------------------------------------------------
Mon Aug 26 09:15:30 UTC 2013 - idonmez@suse.com

- Updated to revision 009, fixes the following problems
  * Character classes such as [a-z] to not react to 'ignorecase'.
    Breaks man page highlighting. (Mario Grgic)
  * Pattern with two alternative look-behind matches does not match.
    (Amadeus Demarzi)
  * Memory access error in Ruby syntax highlighting. (Christopher Chow)
  * When closing a window fails ":bwipe" may hang.
  * Using "vaB" while 'virtualedit' is set selects the wrong area.
    (Dimitar Dimitrov)
  * mkdir("foo/bar/", "p") gives an error message. (David Barnett)
  * Creating a preview window on startup leaves the screen layout in a
    messed up state. (Marius Gedminas)
  * New regexp engine can't be interrupted.
  * When a file was not decrypted (yet), writing it may destroy the
    contents. 

-------------------------------------------------------------------
Sat Aug 24 23:41:27 UTC 2013 - opensuse@cboltz.de

- update apparmor.vim (taken from AppArmor 2.8.2)
  * add network vsock

-------------------------------------------------------------------
Fri Aug 16 12:08:44 UTC 2013 - idonmez@suse.com

- Overhaul vim.spec
  * Remove (g)vim-{base, enchanced} subpackages
  * Dynamically load Python, Ruby so we can support
    all of them without different subpackages.
  * Python3 support (bnc#817774).
  * LUA support.
  * Disable TCL as it cannot be linked dynamically.

-------------------------------------------------------------------
Mon Aug 12 06:35:53 UTC 2013 - idonmez@suse.com

- Update to version 7.4
  * A new, faster regular expression engine.
  * More than a thousand fixes and small improvements.
- Drop vim-7.3-grub.patch, applied upstream
- Refresh the following patches
  * vim-7.4-disable_lang_no.patch
  * vim-7.4-filetype_apparmor.patch
  * vim-7.4-filetype_mine.patch
  * vim-7.4-highlight_fstab.patch

-------------------------------------------------------------------
Mon Jun 17 12:55:13 UTC 2013 - coolo@suse.com

- add explicit buildrequire on krb5-mini to avoid cycles

-------------------------------------------------------------------
Fri May 17 13:39:31 UTC 2013 - idonmez@suse.com

- Updated to revision 962, fixes the following problems
  * No completion for :xmap and :smap. (Yukihiro Nakadaira)
  * Compiler warning for uninitialized variable. (Tony Mechelynck)
  * E381 and E380 make the user think nothing happened.
  * Init stack works differently on 64 bit systems.
  * Ruby 1.8: Missing piece for static linking on 64 bit systems.
  * More can be shared between Python 2 and 3.
  * Python: not easy to get to window number.
  * Using Py_BuildValue is inefficient sometimes.
  * Python: Can't get position of window.
  * Stuff in if_py_both.h is ordered badly.
  * Python: SEGV in Buffer functions.
  * Python: Negative indices were failing.
  * External program receives the termrespone.
  * Python: List of buffers is not very useful.
  * Sometimes get stuck in waiting for cursor position report,
    resulting in keys starting with <Esc>[ not working.
  * Python: No iterator for vim.list and vim.bufferlist.
  * Python: no easy access to tabpages.
  * Python: Stack trace printer can't handle messages.
  * Python exceptions have problems.
  * Python: It's not easy to change window/buffer/tabpage.
  * Python: string exceptions are deprecated.
  * No check if PyObject_IsTrue fails.
  * Python: Not enough tests.
  * Python vim.bindeval() causes SIGABRT.
  * Python does not have a "do" command like Perl or Lua.
  * Python: Iteration destructor not set.
  * Missing error number.
  * Compiler warning for unused variable.
  * Tests 86 and 87 fail when using another language than English.
  * Python tests are not portable.

-------------------------------------------------------------------
Mon May  6 14:51:45 UTC 2013 - idonmez@suse.com

- Updated to revision 929, fixes the following problems
  * An empty nl.po file does not work with an old msgfmt.
  * Compiler warning for size_t to int.
  * Trying to create a fontset handle when 'guifontset' is not set.
  * No test for what 7.3.918 fixes.
  * Check for X11 header files fails on Solaris.
  * Python interface can't easily access options.
  * Typos in source files.
  * Autocommands are triggered by setwinvar() et al. Missing BufEnter
    on :tabclose. Duplicate WinEnter on :tabclose. Wrong order of
    events for :tablose and :tabnew.
  * Missing combining characters when putting text in a register.
  * Can't build with strict C compiler.
  * Compiler warning for unused variable. Not freeing unused string. 

-------------------------------------------------------------------
Thu Apr 25 09:36:37 UTC 2013 - idonmez@suse.com

- Updated to revision 918, fixes the following problems
  * The "sleep .2" for running tests does not work on Solaris.
  * Python uses IndexError when a dict key is not found.
  * Possible crash when using a list in Python.
  * Duplicate Python code.
  * Python code in #ifdef branches with only minor differences.
  * Python: Access to Vim variables is not so easy.
  * Typing a ":" command at the hit-enter dialog does not work if the
    "file changed" dialog happens next.
  * Still a crash when writing viminfo.
  * ~/.viminfo is messed up when running tests.
  * When reading a file with encoding conversion fails at the end the
    next encoding in 'fencs' is not used.
  * Using freed memory when pasting with the mouse (Issue 130).
  * When a path ends in a backslash appending a comma has the wrong
    effect.
  * Repeating an Ex command after using a Visual motion does not work.

-------------------------------------------------------------------
Tue Apr 16 11:50:52 UTC 2013 - idonmez@suse.com

- Updated to revision 905, fixes the following problems
  * Can't build with Ruby 2.0 on a 64 bit system.
  * Test 79 fails on Windows. (Michael Soyka)
  * Merging viminfo history doesn't work well.
  * Still merging problems for viminfo history.
  * Crash when using b:, w: or t: after closing the buffer, window or
    tabpage.
  * Using wrong RUBY_VER causing Ruby build to break.
  * Valgrind error in test 91. (Issue 128)
  * Memory leaks in Lua interface.
  * Configure doesn't always find the shared library.
  * Memory leak reported by valgrind in test 91.
  * #if indents are off.
  * Not obvious that some mouse features are mutual-exclusive.
  * Outdated comment, ugly condition.
  * When deleting last buffer in other tab the tabline is not updated.
  * Crash on exit writing viminfo. (Ron Aaron)
  * Using memory freed by the garbage collector.
  * Crash when writing viminfo. (Ron Aaron)

-------------------------------------------------------------------
Sat Apr 13 07:44:52 UTC 2013 - idonmez@suse.com

- Updated to revision 888, fixes the following problems
  * Double free for list and dict in Lua. (Shougo Matsu)
  * Can't build with multi-byte on Solaris 10.
  * No tests for Visual mode operators, what 7.3.879 fixes.
  * Filename completion with 'fileignorecase' does not work for
    multi-byte characters.

-------------------------------------------------------------------
Tue Apr  9 08:58:31 UTC 2013 - idonmez@suse.com

- Updated to revision 884, fixes the following problems
  * Build problem with some combination of features.
  * #if indents are off.
  * Forward searching with search() is broken.
  * 'fileignorecase' is missing in options window and quickref.
  * When using an ex command in operator pending mode, using Esc to
    abort the command still executes the operator. (David Bürgin)
  * When writing viminfo, old history lines may replace lines written
    more recently by another Vim instance.
  * Python list does not work correctly.
  * CursorHold may trigger after receiving the termresponse.
  * Can't build with some combination of features.
  * Compiler warning for variable shadowing another. (John Little) 

-------------------------------------------------------------------
Wed Mar 20 16:09:34 UTC 2013 - idonmez@suse.com

- Updated to revision 874, fixes the following problems
  * Mouse position may be wrong.
  * Not serving the X selection during system() isn't nice.
  * Matchparen does not update match when using auto-indenting.
    (Marc Aldorasi)
  * When at the hit-return prompt and using "k" while no text has
    scrolled off screen, then using "j", an empty line is displayed.
  * bufwinnr() matches buffers in other tabs.
  * Compiler warnings when using MingW 4.5.3.
  * search('^$', 'c') does not use the empty match under the cursor.
  * On some systems case of file names is always ignored, on others
    never.
  * Comparing file names does not handle multi-byte characters
    properly.

-------------------------------------------------------------------
Mon Mar 18 14:00:53 UTC 2013 - idonmez@suse.com

- Updated to revision 865, fixes the following problems
  * Compiler warnings.
  * When calling system() multi-byte clipboard contents is garbled.
  * The QuitPre autocommand event does not trigger for :qa and :wq.
  * "gv" selects the wrong area after some operators.
  * 'ambiwidth' must be set by the user.
  * When using --remote-expr try/catch does not work. (Andrey Radev)
  * ":setlocal number" clears global value of 'relativenumber'.
  * Dragging the status line can be slow.
  * Problem with 'ambiwidth' detection for ANSI terminal.
  * Can't build without the mouse feature.
  * Mouse position may be wrong.

-------------------------------------------------------------------
Fri Mar  8 16:07:36 UTC 2013 - idonmez@suse.com

- Updated to revision 854, fixes the following problems
  * Compiler warning.
  * In the terminal the scroll wheel always scrolls the active window.
  * Ruby 2.0 has a few API changes.
  * "xxd -i" fails on an empty file.
  * Clipboard does not work on Win32 when compiled with Cygwin.
  * Empty lines in :version output when 'columns' is 320.
  * Insufficient testing for mksession.
  * Some files missing in the list of distributed files.
  * "\@<!" in regexp does not work correctly with multi-byte
    characters, especially cp932.
  * When a "cond ? one : two" expression has a subscript it is not
    parsed correctly. (Andy Wokula)
  * Compiler warning for signed/unsigned pointer.
  * Missing test file changes.
  * Enum is not indented correctly with "public" etc.
  * Enum indenting is not tested.
  * Missing proto file, listing a non-existing proto file.
  * Test 55 fails when messages are translated.
  * Can't build with Ruby 2.0 when using MinGW x64 or MSVC10.
  * ":g//" gives "Pattern not found error" with E486.  Should not use
    the error number, it's not a regular error message.
  * ":vimgrep //" matches everywhere.
  * Using an empty pattern with :sort silently continues when there is
    no previous search pattern.
  * system() breaks clipboard text. (Yukihiro Nakadaira)
  * Using "ra" in multiple lines on multi-byte characters leaves a few
    characters not replaced.
  * After using backspace in insert mode completion, CTRL-N and CTRL-P
    do not highlight the right entry. (Olivier Teuliere)

-------------------------------------------------------------------
Tue Feb 26 10:02:48 UTC 2013 - idonmez@suse.com

- Add Categories to the gvim.desktop file, part of bnc#804930

-------------------------------------------------------------------
Thu Feb 21 14:29:08 UTC 2013 - idonmez@suse.com

- Updated to revision 831, fixes the following problems
  * Python threads don't run in the background (issue 103).
  * "\k" in regexp does not work in other window.
  * After reloading a buffer the modelines are not processed.
  * MzScheme interface doesn't work propely.
  * ":substitute" works differently without confirmation.
  * New interactive :substutite behavior is not tested.
  * Tiny build fails. (Tony Mechelynck)
  * MzScheme does not build with tiny features.
  * Compiler warning for size_t to int conversion. (Skeept)
  * MzScheme: circular list does not work correctly.
  * The color column is not correct when entering a buffer.
  * The " mark is not adjusted when inserting lines. (Roland Eggner)
  * ":window set nu?" displays the cursor line. (Nazri Ramliy)
  * Compiler warning for tiny build. (Tony Mechelynck)
  * Python threads still do not work properly.
  * The dosinst.c program has a buffer overflow. (Thomas Gwae)
  * 'relativenumber is reset unexpectedly.
  * Useless termresponse parsing for SGR mouse.
  * When 'indentexpr' moves the cursor "curswant" not restored.
  * Can't compute a hash.
  * Test 89 fails with tiny and small features.
  * Compiling without +eval and with Python isn't working.
  * Crash when accessing freed buffer.
  * Can redefine builtin functions.  (ZyX)
  * With Python errors are not always clear.
  * List of features in :version output is hard to read.
  * Python tests fail.
  * Mappings are not aware of wildmenu mode.
  * Clumsy to handle the situation that a variable does not exist.
- Refresh vim-7.1.314-CVE-2009-0316-debian.patch

-------------------------------------------------------------------
Tue Feb 12 21:51:53 UTC 2013 - mkoegler@auto.tuwien.ac.at

- Reenable ACL support- 

-------------------------------------------------------------------
Mon Jan 28 11:03:55 UTC 2013 - idonmez@suse.com

- Updated to revision 785, fixes the following problems
  * Jumping to a mark does not open a fold if it is in the same line.
  * Not all message translation files are installed.
  * Segfault when doing "cclose" on BufUnload in a python function.
  * ":help cpo-*" jumps to the wrong place.
  * settabvar() and setwinvar() may move the cursor.
  * 'matchpairs' does not work with multi-byte characters.
  * Vim.h indentation is inconsistent.
  * Uninitialized variable. (Yasuhiro Matsumoto)
  * Cursor is at the wrong location and below the end of the file
  * Crash when OriginalFirstThunk is zero.
  * Tiny GUI version misses console dialog feature.
  * ml_get error when searching, caused by curwin not matching curbuf.
  * When building with Gnome locale gets reset.
  * Compiler error for adding up two pointers. (Titov Anatoly)
  * Backwards search lands in wrong place when started on a multibyte
  * char2nr() and nr2char() always use 'encoding'.
  * Drawing with 'guifontwide' can be slow.
  * Crash when mark is not set. (Dominique Pelle)
  * Error when 'guifontwide' has a comma.
  * Crash with specific use of search pattern.

-------------------------------------------------------------------
Thu Jan  3 19:51:55 UTC 2013 - opensuse@cboltz.de

- update apparmor.vim (taken from AppArmor 2.8)
  * add capability block_suspend

-------------------------------------------------------------------
Tue Jan  1 11:16:59 UTC 2013 - idonmez@suse.com

- Updated to revision 762, fixes the following problems
  * Automatically setting 'ttymouse' doesn't work.
  * Memory leaks when using location lists.
  * Cannot properly test conceal mode.
  * Python interface doesn't build without the multi-byte feature.
  * The justify macro does not always work correctly.
  * Test 61 is flaky, it fails once in a while.
  * Test 49 script file doesn't fold properly.
  * When there is a QuitPre autocommand using ":q" twice does not work
  * Autoconf doesn't find Python 3 if it's called "python".
  * A location list can get a wrong count in :lvimgrep.
  * Issue 96: May access freed memory when a put command triggers
  * Matchit plugin does not handle space in #ifdef.
  * dv_ deletes the white space before the line.
  * In Visual mode a "-p does not work. (Marcin Szamotulski)
  * On some systems the tabline is not redrawn.

-------------------------------------------------------------------
Tue Dec 18 10:56:26 UTC 2012 - idonmez@suse.com

- gvim should require vim-data package, bnc#793311

-------------------------------------------------------------------
Sat Dec  1 13:40:48 UTC 2012 - idonmez@suse.com

- Updated to revision 744, fixes the following problems
  * printf() can only align to bytes, not characters.
  * Inconsistency: :set can be used in the sandbox, but :setlocal and
  * Crash when calling setloclist() in BufUnload autocmd. (Marcin
  * Error on exit when using Python 3.
  * When changing the font size, only MS-Windows limits the window
  * When re-using the current buffer the buffer-local options stay.
  * Cannot run new version of cproto, it fails on missing include
  * Proto files are outdated.
  * Ruby interface defines local functions globally.
  * Perl flags may contain "-g", which breaks "make proto".
  * Building with Ruby and Tcl on MS-Windows 64 bit does not work.
  * :aboveleft and :belowright have no effect on :copen.
  * Typos and duplicate info in README.
  * Building with Ruby fails on some systems.
  * Crash in PHP file when using syntastic.
  * Py3Init_vim() is exported uneccessarily.
  * Compiler warnings for function arguments.
  * Tests fail when including MzScheme.
  * Cannot put help files in a sub-directory.
  * File name completion in input() escapes white space.
  * Unused function argument.
  * Computing number of lines may have an integer overflow.
  * IOC tool complains about undefined behavior for int.
  * Tiny build fails.
  * Leaking memory when :vimgrep restores the directory.
  * Tiny build still fails.
  * 64 bit compiler warning.

-------------------------------------------------------------------
Fri Nov  2 16:06:58 UTC 2012 - idonmez@suse.com

- Update to patchlevel 712, fixes the following problems
  * Can't build Ruby interface with Ruby 1.9.3.
  * End of color scheme name not clear in E185. (Aaron Lewis)
  * Buffer overflow in unescaping text. (Raymond Ko)
  * MSVC 11 is not supported.
  * Unused variables in Perl interface.
  * Building with Perl loaded dynamically  still uses static library.
  * When building with Cygwin loading Python dynamically fails.
  * Python: memory leaks when there are exceptions.
  * More Python code can be shared between Python 2 and 3.
  * Not possible to lock/unlock lists in Python interface.
  * Using "gN" while 'selection' is "exclusive" misses one character.
  * Using uninitialized memory with very long file name.
  * buf_spname() is used inconsistently.
  * Ruby .so name may not be correct.
  * Ruby detection uses Config, newer Ruby versions use RbConfig.
  * Some files missing in the list of distributed files.
  * List of distributed files picks up backup files.
  * Compiler complains about incompatible types.
  * ":python" may crash when vimbindeval() returns None.
  * "make test" does not delete lua.vim.
  * Using CTRL-\ e mappings is useful also when entering an
  * Test 16 fails when $DISPLAY is not set.
  * Python 3.3 is not supported.
  * MzScheme and Lua may use a NULL string.
  * When the current directory name is exactly the maximum path length
  * State specific to the Python thread is discarded.
  * Can't build GTK version with GTK 2.0.
  * Can't make 'softtabstop' follow 'shiftwidth'.
  * Now that 'shiftwidth' may use the value of 'tabstop' it is not so
  * Balloon cannot show multi-byte text.
  * Message about added spell language can be wrong.
  * Leaking resources when setting GUI font.
  * Python 3 does not preserve state beween commands.
  * When 'ttymouse' is set to "sgr" manually, it is overruled by
  * Cannot detect URXVT and SGR mouse support.
  * When 'undofile' is reset the hash is computed unnecessarily.
  * Repeating "cgn" does not always work correctly.
  * Mouse features are not sorted properly. (Tony Mechelynck)
  * Problems loading a library for a file name with non-latin
  * Filler lines above the first line may be hidden when opening Vim.
  * Compiler warning for unused argument.
  * vim.current.buffer is not available. (lilydjwg)
- Drop vim-7.3-ruby_ldflags_configure.patch, unneeded now

-------------------------------------------------------------------
Tue Oct  2 12:54:03 UTC 2012 - idonmez@suse.com

- Add Obsoletes/Provides for vim-plugin-matchit package 

-------------------------------------------------------------------
Wed Sep 12 21:27:54 UTC 2012 - idonmez@suse.com

- Update to patchlevel 661, fixes the following problems
  * "gnd" doesn't work correctly in Visual mode.
  * Crash when using a very long file name. (ZyX)
  * When 'clipboard' is set to "unnamed" small deletes end up in the
  * Completion after ":help \{-" gives an error message and messes up
  * Completion after ":help \{-" gives an error message.
  * Workaround for Python crash isn't perfect.
  * MingW needs build rule for included XPM files.  Object directory
  * When creating a Vim dictionary from Python objects an empty key
  * Internal error in :pyeval.
  * Python bindings silently truncate string values containing NUL.
  * NUL bytes truncate strings when converted from Python.
  * Recent Python changes are not tested.
  * ":help !" jumps to help for ":!".
  * SEGV in Python code.

-------------------------------------------------------------------
Sat Sep  1 17:51:41 UTC 2012 - idonmez@suse.com

- Update to patchlevel 646, fixes the following problems 
  * Segfault with specific autocommands.
  * Not all zero-width matches handled correctly for "gn".
  * Cannot select beyond 222 columns with the mouse in xterm.
  * "|" does not behave correctly when 'virtualedit' is set.
  * There is no way to make 'shiftwidth' follow 'tabstop'.
  * "gn" does not handle zero-width matches correctly.
  * Completion for a user command does not recognize backslash before
    a space.
  * Auto formatting messes up text when 'fo' contains "2".
  * Cannot operate on the text that a search pattern matches.
  * File names in :checkpath! output are garbled.
  * winrestview() does not always restore the view correctly.
  * CTRL-P completion has a problem with multi-byte characters.
  * inputdialog() doesn't use the cancel argument in the console.
  * <f-args> is not expanded properly with DBCS encoding.
  * Can only move to a tab by absolute number.
  * Crash when $HOME is not set
  * "ygt" tries to yank instead of giving an error.
  * ":vimgrep" does not obey 'wildignore'.

-------------------------------------------------------------------
Fri Jul  6 08:57:31 UTC 2012 - lnussel@suse.de

- don't package /var/run/vi.recover anymore (bnc#765288)

-------------------------------------------------------------------
Tue Jun 26 09:27:19 UTC 2012 - idonmez@suse.com

- Update to patchlevel 566, fixes the following problems 
  * Redo after completion does not work correctly when refresh.
  * ":profdel" should not work when the +profile feature is disabled.
  * Crash when an autocommand wipes out a buffer when it is hidden.
  * The cursor is in the wrong line after using ":copen".
  * 'efm' does not handle Tabs in pointer lines.
  * When spell checking the German sharp s is not seen as a word
    character.
  * When using an InsertCharPre autocommand autoindent fails.
  * Gvim does not work when 'guioptions' includes "f".
  * Using a count before "v" and "V" does not work.
  * ":diffupdate" doesn't check for files changed elsewhere.
  * Using "z=" on a multi-byte character may cause a crash.
  * 'wildignorecase' only applies to the last part of the path.
  * No completion for :history command.
  * Cannot use CTRL-E and CTRL-Y with "r".
  * ":vimgrep" fails when 'autochdir' is set.

-------------------------------------------------------------------
Mon Jun 25 11:59:21 UTC 2012 - cfarrell@suse.com

- license update: SUSE-Vim
  Choose a license from the list at http://www.spdx.org/licenses or from
  the list linked at http://license.opensuse.org

-------------------------------------------------------------------
Sun Jun 17 21:47:35 UTC 2012 - opensuse@cboltz.de

- update apparmor.vim (taken from AppArmor 2.8)
  * update list of capabilities and network protocols

-------------------------------------------------------------------
Mon Jun  4 20:16:11 UTC 2012 - seife+obs@b1-systems.com

- specfile hack to fix build with newer perl(?) on Factory

-------------------------------------------------------------------
Wed Apr 25 08:53:49 UTC 2012 - saschpe@suse.de

- Add a vim-python subpackage that only enables Python interpreter support
  (and X11 clibboard, too), for users that don't want the extra dependencies
  of vim-enhanced (basically the perl, ruby and tcl base packages)

-------------------------------------------------------------------
Sat Mar 24 20:08:15 UTC 2012 - idonmez@suse.com

- Try to fix bnc#753907 

-------------------------------------------------------------------
Fri Mar 23 17:43:36 UTC 2012 - gregkh@opensuse.org

- add patchlevel to package version.  This makes it easier for proper version
  to be determined, and to let other repos properly handle "which version is
  newer than the other" without having to rely on the Release number, which osc
  does not keep track of cross-repos.  Side effect, openSUSE:Tumbleweed can
  properly include vim now.

-------------------------------------------------------------------
Wed Feb 29 12:55:57 UTC 2012 - mvyskocil@suse.cz

- remove pointless systemd dependency and run the tmpfiles binary
  only in case it exists

-------------------------------------------------------------------
Tue Feb 28 12:58:08 UTC 2012 - idonmez@suse.com

- Update to patchlevel 456, fixes the following problems 
  * Using many continuation lines can be slow.
  * Pasting in the command line is slow.
  * Undo broken when pasting close to the last line.
  * Crash when a BufWinLeave autocommand closes 
    the only other window.
  * ":all!" and ":sall!" give error E477, even though the
    documentation says these are valid commands.
  * Vim does not support UTF8_STRING for the X selection.
  * Compiler warnings to size casts in Perl interface.
  * Search history lines are duplicated.
  * "it" and "at" don't work properly 
    with a dash in the tag name.
  * DBCS encoding in a user command does not always work.
  * When a user complete function returns -1 an error message
    is given.
  * Completion of functions stops once a dictionary is encountered.
  * Storing a float in a session file has an additional '&'.
  * Pasting in Visual mode using the "" register does not work.
  * Multi-byte characters in b:browsefilter are not handled correctly.
  * ":helpgrep" does not trigger QuickFixCmd* autocommands.
  * ":cd" doesn't work when the path contains wildcards.
  * When placing a mark while starting up a screen redraw messes up
    the screen.
  * Mapping CTRL-K in Insert mode breaks CTRL-X CTRL-K for dictionary
    completion.

-------------------------------------------------------------------
Sun Feb 19 19:00:03 UTC 2012 - coolo@suse.com

- vim needs more than what gtk requires - so buildrequire pkgconfig(xt)

-------------------------------------------------------------------
Fri Dec 23 11:18:17 UTC 2011 - idonmez@suse.com

- Update to patchlevel 382, fixes the following problems
  * IME characters are inserted twice.
  * C-indenting wrong for a function header.
  * C-indenting wrong for static enum.
  * No support for bitwise AND, OR, XOR and invert.
  * A tags file with an extremely long name may cause 
    an infinite loop.

-------------------------------------------------------------------
Wed Dec 21 10:51:09 UTC 2011 - coolo@suse.com

- add autoconf as buildrequire to avoid implicit dependency

-------------------------------------------------------------------
Fri Dec  9 13:20:50 UTC 2011 - idonmez@suse.com

- Update to patchlevel 372, fixes the following problems 
  * Crash when using a large Unicode character in a file that has
    syntax highlighting.
  * :wundo and :rundo use a wrong checksum.
  * When using a command line mapping to <Up> with file name 
    completion to go one directory up, 'wildchar' is inserted.

-------------------------------------------------------------------
Wed Dec  7 10:09:25 UTC 2011 - aj@suse.de

- Move require of systemd to base package since the base postinstall
  needs it.

-------------------------------------------------------------------
Mon Dec  5 12:45:08 UTC 2011 - idoenmez@suse.de

- Update to patchlevel 364, fixes the following problems
  * C indenting is wrong after #endif followed by a semicolon.
  * ml_get error when using ":g" with folded lines.
  * Accessing memory after it is freed when EXITFREE is defined.
  * Interrupting the load of an autoload function may cause a crash.
  * Command line completion shows dict functions.
  * Using "o" with 'cindent' set may freeze Vim.
  * ":set backspace+=eol" doesn't work when 'backspace' has a 
    backwards compatible value of 2.
  * When completing methods dict functions and script-local functions
    get in the way.
  * Text formatting uses start of insert position when it should not.
  * Block of code after ":lua << EOF" may not work.
  * When running out of memory during startup trying to open a
    swapfile will loop forever.
  * "call range(1, 947948399)" causes a crash
  * When dropping text from a browser on Vim it receives HTML even
    though "html" is excluded from 'clipboard'
  * When switching language with ":lang" the window title doesn't
    change until later.
  * Problem with GUI startup related to XInitThreads.
  * No mouse support for urxvt.
  * Using getchar() in an expression mapping doesn't work well.
  * Screen doesn't update after resizing the xterm until a character
    is typed.
  * When a tags file specifies an encoding different from 'enc' it
    may hang and using a pattern doesn't work.
  * When 'imdisable' is reset from an autocommand in Insert mode it
    doesn't take effect.
  * Using "." to repeat a Visual delete counts the size in bytes, not
    characters. 
  * Indent after "public:" is not increased in C++ code.
  * "vit" selects wrong text when a tag name starts with the same text
    as an outer tag name.
  * When longjmp() is invoked if the X server gives an error the state
    is not properly restored.
  * When skipping over code from ":for" to ":endfor" get an error for
    calling a dict function.
  * When command line wraps the cursor may be displayed wrong when
    there are multi-byte characters.
  * When jumping to a help tag a closed fold doesn't open.
  * A duplicated function argument gives an internal error.
  * Completion for ":compiler" shows color scheme names.
  * The default 'errorformat' does not ignore some "included from"
    lines.

-------------------------------------------------------------------
Fri Dec  2 19:33:41 UTC 2011 - idoenmez@suse.de

- vim doesn't support -D_FORTIFY_SOURCE=2 , we must use level 1,
  see http://goo.gl/g9d8F for details.

-------------------------------------------------------------------
Tue Nov 29 12:33:04 UTC 2011 - aj@suse.de

- Use Requires instead of Requires(post).

-------------------------------------------------------------------
Wed Nov 23 13:05:42 UTC 2011 - aj@suse.de

- Create tmpfiles during install
- Fix tmpfiles handling
- Own directory /var/run/vi.recover

-------------------------------------------------------------------
Tue Nov 22 22:49:39 UTC 2011 - reddwarf@opensuse.org

- Set tinfo as the terminal library for openSUSE > 12.1 since it
  has been splitted from ncurses

-------------------------------------------------------------------
Mon Nov  7 12:59:21 UTC 2011 - idonmez@suse.com

- Move spec skeleton functionality into /etc/vimrc (bnc#720898) 

-------------------------------------------------------------------
Sun Nov  6 03:49:09 UTC 2011 - crrodriguez@opensuse.org

- vim-enhanced,gvim: Never ever link against static libpython
  this happends because %{_libdir}/python$vesion/config is
  searched first and picks libpython.a instead of .so ...


-------------------------------------------------------------------
Tue Oct 18 17:16:30 CEST 2011 - dmueller@suse.de

- fix detection of email addresses in .changes files

-------------------------------------------------------------------
Thu Sep 22 09:14:38 UTC 2011 - idonmez@suse.com

- Update to official patchlevel 322
  Following bugs are fixed:

  * Redobuff doesn't always include changes of the completion leader.
  * "C" on the last line deletes that line if it's blank.
  * Calling debug.debug() in Lua may cause Vim to hang.
  * Crash when 'colorcolumn' is set and closing buffer.
  * Opening a window before forking causes problems for GTK.
  * Complete function isn't called when the leader changed.
  * Writing to 'verbosefile' has problems, e.g. for :highlight.
  * Python 3 doesn't support slice assignment.
  * When closing a window there is a chance that deleting a scrollbar
    triggers a GUI resize, which uses the window while it is not in a
    valid state.
  * Auto-loading a function while editing the command line causes
    scrolling up the display.
  * Python doesn't parse multi-byte argument correctly.
  * Built-in colors are different from rgb.txt.
  * Can't load Perl 5.14 dynamically.
  * When writing to an external command a zombie process may be left
    behind.
  * When filtering text with an external command Vim may not read all
    the output.
  * Crash when using fold markers and selecting a visual block that
    includes a folded line and goes to end of line. (Sam Lidder)
  * Configure doesn't work properly with Python3.
  * When a BufWriteCmd autocommand resets 'modified' this doesn't
    change older buffer states to be marked as 'modified' like
    ":write" does.  (Yukihiro Nakadaira)

-------------------------------------------------------------------
Fri Sep 16 17:53:21 UTC 2011 - opensuse@cboltz.de

- apparmor.vim update 
  - support "deny $filename x" rules
  - apparmor.vim generated from AppArmor 2.7 beta2

-------------------------------------------------------------------
Wed Aug 31 09:22:53 UTC 2011 - idonmez@suse.com

- Update to official patchlevel 289
  * python3 fixes
  * Fix: Crash when using "zd" on a large number of folds.
  * Fix: Mapping <Char-123> no longer works.
  * Fix: After using "expand('%:8')" the buffer name is changed.
  * Fix: With GTK, when gvim is full-screen and a tab is opened and
    using a specific monitor configuration the window is too big.
  * Fix: Passing the file name to open in VisVim doesn't work.
  * Fix: A BOM in an error file is seen as text.
  * Fix: ":put =list" does not add an empty line for a trailing
    empty item.
  * Fix: 'shellcmdflag' only works with one flag.
  * Fix: Vim freezes when executing an external command with zsh.

-------------------------------------------------------------------
Thu Aug 18 23:30:06 UTC 2011 - opensuse@cboltz.de

- apparmor.vim update
  - allow pux and PUx rules
  - add some new capabilities
  - fix pattern for variable names (allow numbers, except for first char)
  - apparmor.vim generated from AppArmor trunk aka 2.7 beta

-------------------------------------------------------------------
Thu Aug  4 11:54:55 UTC 2011 - idonmez@novell.com

- Update to official patchlevel 266
  * Fix python 3.2 detection
  * Python: Errors in Unicode characters not handled nicely.
  * "gH<Del>" deletes the current line, except when it's the last
    line.
  * "echo 'abc' > ''" returns 0 or 1, depending on 'ignorecase'.
  * The coladd field is not reset when setting the line number for a
    ":call" command.
  * When editing a file such as "File[2010-08-15].vim" an E16 error is
    given.
  * Equivalence classes only work for latin characters.
  * CursorHold triggers on an incomplete mapping.
  * G++ error message errornously recognized as error.
  * When the current directory name contains wildcard characters, such
    as "foo[with]bar", the tags file can't be found.
  * When storing a pattern in search history there is no proper check
    for the separator character.
  * In Gvim with iBus typing space in Insert mode doesn't work.

-------------------------------------------------------------------
Tue Jul 11 15:00:00 UTC 2011 - idonmez@novell.com

- Update to official patchlevel 243
  * Fix multiple illegal memory accesses
  * Fix: Using CTRL-R CTRL-W on the command line may insert only 
    part of the word.
  * Fix: Python corrects the cursor column without taking 
    'virtualedit' into account.
  * Fix: Python 3 doesn't compile without +multi_byte
  * Fix: ";" gets stuck on a "t" command, it's not useful.
  * Fix: ":scriptnames" and ":breaklist" show long file names.
  * Fix: ":wundo" and ":rundo" don't unescape their argument
  * Fix: "2gj" does not always move to the correct position.
  * Fix: On a 64 bit system "syn sync fromstart" is very slow.
  * Fix: Can't pass dict to sort function.
  * Fix: Text from the clipboard is sometimes handled as linewise, 
    but not consistently.
  * Fix: Inside an "if" a ":wincmd" causes problems.

-------------------------------------------------------------------
Wed Jul  6 08:11:28 UTC 2011 - aj@suse.de

- Use /usr/lib/tmpfiles.d instead of /etc/tmpfiles.d.

-------------------------------------------------------------------
Tue May 17 07:43:45 UTC 2011 - idoenmez@novell.com

- Update to official patchlevel 189
- Drop outdated README.SUSE 

-------------------------------------------------------------------
Mon Apr 18 15:00:38 UTC 2011 - idoenmez@novell.com

- Run spec-cleaner and fix build on SLE 10 

-------------------------------------------------------------------
Mon Feb 28 21:33:24 CET 2011 - stian@viskjer.net

- add vim-7.3-filetype_mine.patch to enable syntax highlighting in
  .mine files. E.g. %{name}.spec.mine files generated by "osc pull"

-------------------------------------------------------------------
Mon Jan 31 22:51:16 UTC 2011 - opensuse@cboltz.de

- update apparmor.vim to better match the syntax of AppArmor 2.5
  - support audit and deny for capability, network, link
  - fixed rlimit syntax
  - various small fixes

-------------------------------------------------------------------
Sun Jan  9 17:02:15 UTC 2011 - opensuse@cboltz.de

- update apparmor.vim to match (most of) the AppArmor 2.5 syntax
- package apparmor.vim as separate source file, no longer as part of
  vim-7.3-filetype_apparmor.patch

-------------------------------------------------------------------
Mon Nov 22 09:03:54 CET 2010 - freespacer@gmx.de

- add disable_gcc_warning_eval_c.patch
  http://lists.opensuse.org/opensuse-packaging/2010-11/msg00182.html
- add disable_lang_no.patch
- update spec file

-------------------------------------------------------------------
Sun Nov 21 08:15:17 CET 2010 - freespacer@gmx.de

- update to version 7.3
- clean up the additional vim patches and files
  - remove vim-7.2-lang.tar.bz2 (obsolete)
  - remove vim-7.2-extra.tar.bz2 (obsolete)
  - remove ANNOUNCEMENT.vim-7.2 (obsolete)
  - remove vim-7.0-no_nb.patch (obsolete)
  - remove remove-terrible-hack.patch (obsolete)
  - remove php.patch (obsolete)
  - remove lib64.patch (obsolete)
  - remove vim-7.2.257.patch (obsolete)
  - remove flex-array.patch (responsible for broken build)
  - disable lzma.patch (partly supported)
  - add ANNOUNCEMENT.vim-7.3
  - renew official patches from upstream
  - renew gvimrc_fontset.patch
  - renew highlight_fstab.patch
  - renew sh_is_bash.patch
  - renew filetype_ftl.patch
  - renew help_tags.patch
  - renew use_awk.patch
  - renew name_vimrc.patch
  - renew mktemp_tutor.patch
  - renew ruby_ldflags_configure.patch
  - renew grub.patch
  - renew filetype_apparmor.patch
  - renew diff_check.patch
  - renew filetype_changes.patch
- update spec file

-------------------------------------------------------------------
Wed Nov 17 21:17:43 UTC 2010 - fisiu@opensuse.org

- Update spec.skeleton

-------------------------------------------------------------------
Fri Nov  5 14:16:23 UTC 2010 - aj@suse.de

- Add vim.conf for tmpfs mounting via systemd.

-------------------------------------------------------------------
Tue Sep  7 12:55:35 UTC 2010 - aj@suse.de

- BuildRequire gpm-devel

-------------------------------------------------------------------
Fri Aug 27 07:17:53 UTC 2010 - aj@suse.de

- Fix rpmlint warnings about duplicate files.
- Remove now obsolete option --with-xusetheXWindowSystem.
- Do not record build time in binary

-------------------------------------------------------------------
Tue Apr 27 12:06:07 CEST 2010 - werner@suse.de

- Add screen control sequences to inputrc (bnc#598903)

-------------------------------------------------------------------
Sat Mar 27 11:48:28 CET 2010 - vuntz@opensuse.org

- Use the icon from the tarball instead of our custom icon. It
  looks much better.
- Drop gvim.png from the source package.

-------------------------------------------------------------------
Tue Feb  9 17:01:46 CET 2010 - prusnak@suse.cz

- build data subpackage as noarch

-------------------------------------------------------------------
Tue Nov  3 19:09:50 UTC 2009 - coolo@novell.com

- updated patches to apply with fuzz=0

-------------------------------------------------------------------
Tue Oct 13 12:04:46 CEST 2009 - mmarek@suse.cz

- add patch vim-7.2.257.patch to hide gtk assertions (bnc#536535).

-------------------------------------------------------------------
Mon Sep 28 15:32:01 CEST 2009 - werner@suse.de

- Avoid network based systems calls during ~/.vimrc (bnc#538768)

-------------------------------------------------------------------
Wed May 13 12:16:32 CEST 2009 - prusnak@suse.cz

- added Recommends, Suggests, Freshens, EssentialFor, Supplements
  and Enhances to .spec preamble keywords (added to filetype_spec.patch)

-------------------------------------------------------------------
Thu Feb 26 14:38:19 CET 2009 - werner@suse.de

- Add file type detection to personal vimrc skeleton (bnc#404013)

-------------------------------------------------------------------
Wed Feb 25 16:55:54 CET 2009 - werner@suse.de

- Upto version 7.2.127
- Be sure that lib64 is found by configure
- Add patch for CVE-2009-0316 from debian
- lzma support
- Add some missed fstab keywords

-------------------------------------------------------------------
Mon Feb 16 17:15:16 CET 2009 - werner@suse.de

- Update to patchlevel 108 ... fixes bnc#470100, bnc#465255,
  bnc#439148, bnc#436755, bnc#457098, and bnc#470100

-------------------------------------------------------------------
Fri Nov 28 14:50:42 CET 2008 - mkoenig@suse.de

- don't set timeout in default vimrc [bnc#449932] 

-------------------------------------------------------------------
Thu Oct  9 11:42:03 CEST 2008 - mkoenig@suse.de

- update apparmor.vim [bnc#425848] 

-------------------------------------------------------------------
Wed Oct  1 15:00:46 CEST 2008 - mkoenig@suse.de

- add directories
  /usr/share/vim/site/{autoload,colors,doc,plugin} 

-------------------------------------------------------------------
Fri Sep 26 12:45:48 CEST 2008 - mkoenig@suse.de

- update upstream patches
- fix code exec via K or g] [bnc#427627] 
- remove some offending mappings [bnc#406456]
- set timeout [bnc#426682]

-------------------------------------------------------------------
Thu Sep 11 15:29:42 CEST 2008 - mkoenig@suse.de

- update to version 7.2
  * bugfixes and security enhancements
  * support for floating point numbers 
- fixes security vulnerabilities [bnc#400508,bnc#406693,bnc#409516]
- fixes ada support [bnc#419506]
- remove patches:
  vim-7.1-ftplugin_changelog.patch
  vim-7.1-netrw_urlencode.patch

-------------------------------------------------------------------
Wed May 28 13:40:09 CEST 2008 - rodrigo@suse.de

- Added vim-7.1-remove-terrible-hack.patch to remove a "terrible"
  hack that was moving the mouse 100 pixels to the top left for
  KDE 3.1 window manager (bnc#392061) 

-------------------------------------------------------------------
Wed Apr 30 17:34:47 CEST 2008 - mkoenig@suse.de

- use Utility as primary category for the desktop file [bnc#382779] 

-------------------------------------------------------------------
Wed Mar 12 17:09:14 CET 2008 - mkoenig@suse.de

- remove ycp syntax file, moved over to yast2-devtools 
- cleanup: move syntax files and filetype changes into
  unique patches

-------------------------------------------------------------------
Thu Feb 28 14:30:14 CET 2008 - mkoenig@suse.de

- update to patchlevel 266
  * fixes crash on completion [bnc#361844] 
- update ycp syntax file [bnc#364509]

-------------------------------------------------------------------
Thu Jan 31 12:38:24 CET 2008 - mkoenig@suse.de

- get perl version we build with dynamically rather than
  hardcoding it.
- Change Provides: vi_clone to vi
  vi_clone last used about 6 years ago

-------------------------------------------------------------------
Thu Jan 24 14:17:22 CET 2008 - mkoenig@suse.de

- provide site wide runtimepath /usr/share/vim/site
  might be used by other packages to install vim files
- fix diff patch [#353375]
- add explicit version dependency on perl 5.10.0 [#353699]

-------------------------------------------------------------------
Wed Dec 12 11:23:16 CET 2007 - mkoenig@suse.de

- fix shell escaping [#332571] 

-------------------------------------------------------------------
Thu Oct  4 15:19:43 CEST 2007 - mkoenig@suse.de

- fix alternatives problem which resulted from linking to the
  dummy script in install process [#305790]
- update upstream patches to 135 

-------------------------------------------------------------------
Fri Aug 31 12:37:39 CEST 2007 - mkoenig@suse.de

- let vim detect a failing diff [#252901]
- add /bin/ex symlink [#306423] 

-------------------------------------------------------------------
Wed Aug 22 15:40:16 CEST 2007 - mkoenig@suse.de

- really enable syntax highlighting [#274600]
- update apparmor syntax rules [#301605]

-------------------------------------------------------------------
Wed Aug 15 11:38:42 CEST 2007 - kssingvo@suse.de

- fixed helpline issue CVE-2007-2953, swamp#12271 [#292433]

-------------------------------------------------------------------
Thu Jul 26 14:28:16 CEST 2007 - mkoenig@suse.de

- avoid duplicate installs of manpages [#294155]
- remove old Obsoletes for vim-fat

-------------------------------------------------------------------
Mon Jul  9 14:26:23 CEST 2007 - mkoenig@suse.de

- fix spec syntax rules 

-------------------------------------------------------------------
Thu Jul  5 16:30:52 CEST 2007 - coolo@suse.de

- put desktop file into the package

-------------------------------------------------------------------
Tue Jun 19 12:13:42 CEST 2007 - mkoenig@suse.de

- fix changelog ftplugin [#284970] 

-------------------------------------------------------------------
Wed May 23 12:05:55 CEST 2007 - mkoenig@suse.de

- update to version 7.1
- removed patches:
  vim-7.0-fstab_match_uuid.patch   
  vim-7.0-fix_duplicate_key_assignment_de.patch
- enable syntax highlighting by default [#274600]

-------------------------------------------------------------------
Tue May 15 17:46:34 CEST 2007 - mrueckert@suse.de

- move a few files back into the base package so we can e.g. enable
  syntax highlighting by default. it would still be black/white
  for most filetypes.

-------------------------------------------------------------------
Wed May  9 15:10:23 CEST 2007 - mkoenig@suse.de

- fix duplicate key assignment in dialog when .swp file exists
  [#270312] 

------------------------------------------------------------------
Mon May  7 17:23:56 CEST 2007 - mkoenig@suse.de

- update official patches to 243
  * Fixes modeline exploit, CVE-2007-2438 [#270496]

-------------------------------------------------------------------
Wed Apr 25 01:53:59 CEST 2007 - ro@suse.de

- add prereqs for update-alternative in subpackages 

-------------------------------------------------------------------
Mon Apr 23 13:48:24 CEST 2007 - mrueckert@suse.de

- another run on the package layout. this should finally work with
  all package manager. although it will allow you to install vim-base
  without a vim_client package.
- added %{_datadir}/vim/current/tools/missing-vim-client:
  this script will be used as the default binary if only vim-base
  is installed. this avoids dangling symlinks and gives the user
  an hint how to solve the problem.

-------------------------------------------------------------------
Thu Apr  5 16:58:46 CEST 2007 - mkoenig@suse.de

- Keep %ghost for gvimrc only 

-------------------------------------------------------------------
Tue Apr  3 19:01:43 CEST 2007 - mkoenig@suse.de

- change %ghost %config(missingok) to %config(noreplace)
  for /etc/vimrc and /etc/gvimrc 

-------------------------------------------------------------------
Tue Mar 27 18:54:22 CEST 2007 - mrueckert@suse.de

- another minor layout change

-------------------------------------------------------------------
Tue Mar 27 14:58:20 CEST 2007 - mrueckert@suse.de

- add subdirs in /usr/share/vim/vim70/ to the base package

-------------------------------------------------------------------
Mon Mar 26 19:27:24 CEST 2007 - mrueckert@suse.de

- new package layout for the vim package to allow a smaller vim
  installation in the minimal system (#239838)

-------------------------------------------------------------------
Fri Feb  2 23:49:38 CET 2007 - dmueller@suse.de

- fix fortify workaround

-------------------------------------------------------------------
Wed Jan 24 16:53:04 CET 2007 - mkoenig@suse.de

- move gvim and related stuff from /usr/X11R6/bin to /usr/bin 

-------------------------------------------------------------------
Tue Jan 23 17:43:33 CET 2007 - mkoenig@suse.de

- set default backspace functionality to a more "useful" 
  value [#34519]

-------------------------------------------------------------------
Mon Jan 22 14:25:35 CET 2007 - mkoenig@suse.de

- added official patches 147-188:
  * no error message for ":call d.foo()" when "foo" doesn't exist
  * when resizing windows scrolling is not done in the best way
  * when resizing the Vim window scrollbinding doesn't work
  * button order in GTK file dialog is different from Gnome rules
  * crash when using lesstif 2
  * crash with cscope when temp file can't be opened
  * when 'foldnextmax' is negative Vim could hang
  * when getchar() returns a mouse button the position is unknown
  * (extra) Vim doesn't compile on Amiga OS4
  * profiling info was bogus for a recursively called function
  * cursor in closed fold after adding new line
  * not enough information for an I/O error in the swap file
  * ":@a" echoes the command
  * (extra) Win32: window and tabline menu may use wrong encoding
  * doesn't exit with "vim -o a b" and abort at ATTENTION prompt
  * can't get the position of a sign over the netbeans interface
  * ":redir @+" doesn't work
  * using CTRL-L to add to a search pattern fails for some chars
  * crash with cscope when a file descriptor is NULL
  * can't redefine a function in a dictionary
  * reading uninitialized memory and a memory leak in recovery
  * Visual block highlighting not removed for "I" and "A"
  * (extra) Win32: un-maximizing and tab pages line problem
  * (extra) VMS: problem with file names with multiple paths
  * crash when recovering a file and quitting hit-enter prompt
  * ":call f().TT()" doesn't work
  * ":mksession" doesn't restore tab page window layout properly
  * tr() didn't add a final NUL
  * ":emenu" isn't executed directly, breaks the crypt key prompt
  * key from mapping at press-enter prompt would be remapped
  * comparing utf-8 strings with 'ic' may look past NUL bytes
  * crash when recovering without a swap file name
  * (extra) VMS: build problem and problem with swap files
  * when reloading a buffer an extra empty line may appear
  * cannot reach every point in the undo tree after using "g-"
  * accessing memory already freed after ":redir => var" ":let"
  * cscope interface doesn't work with mlcscope
  * multi-byte chars in message get attributes from previous char
  * ml_get error when doing "/\_s*/e" with utf-8 'encoding'
  * can't properly source a remote script
  * (after 7.0.186) warning for wrong pointer type

-------------------------------------------------------------------
Mon Nov  6 11:05:29 CET 2006 - mkoenig@suse.de

- add apparmor syntax highlighting [#190084] 

-------------------------------------------------------------------
Tue Oct 31 12:22:31 CET 2006 - mkoenig@suse.de

- enable grub mode for different root dir [#113647]

-------------------------------------------------------------------
Tue Oct 24 12:28:28 CEST 2006 - mkoenig@suse.de

- added official patchs 077-146:
  * minor bugfixes
- fix UUID matching in fstab syntax mode [#211238] 

-------------------------------------------------------------------
Wed Aug 30 10:36:19 CEST 2006 - kssingvo@suse.de

- added official patches 067-076:
  *  undo problems when using input method
  *  'ignorecase' is not used properly for Insert mode completion
  *  crash when setting 'guitablabel' to "%!expand(\%)"
  *  compiler warnings for shadowed and uninitialized variables
  *  using empty search pattern may cause a crash
  *  can't specify anything to do when starting the GUI fails
  *  CR in Insert mode completion may select original text
  *  (extra) Win32: tooltips can be in the wrong encoding
  *  winsaveview() could store wrong desired cursor column
  *  (after 7.0.010) could not get spell files from non-ftp server

-------------------------------------------------------------------
Wed Aug 23 11:59:20 CEST 2006 - kssingvo@suse.de

- added official patches 051-066:
   * (after 7.0.44) compile and/or run problem with Perl interface
   * the Vim server may expose more functionality than expected
   * shortening multi-byte directory name may fail
   * using an empty menu name may cause a crash
   * ":startins" in CmdwinEnter autocmd doesn't work immediately
   * can't use "#!" in Vim scripts to make them executable
   * (extra, after 7.0.45) compilation trouble with Borland C 5.5
   * gbk and gb18030 encodings are not recognized
   * Perl interface doesn't compile with ActiveState Perl 5.8.8
   * code for switching buffers is repeated in several places
   * crash in Vim command completion when nothing to complete
   * Mac: crash when using popup menu with spell error
   * tiny chance for a memory leak
   * compiler warnings for unused variables
   * (extra) Mac: horizontal scroll wheel caused vertical scroll
   * tab pages line not redrawn after removing the popup menu

-------------------------------------------------------------------
Wed Aug  9 17:30:49 CEST 2006 - kssingvo@suse.de

- fixed vim-enhaced package:
   * builds now more conform
   * without gui now
   * removed unneccesary binaries introduced through rebuild
- added official patches 038-050:
   * complete() can be used from expr. mapping after inserting text
   * third argument for inputdialog() doesn't work in the console
   * mouse selection with "z=" and inputlist() gets wrong entry
   * cursor([1, 2]) failed, required third item in the list
   * crash or hang when pasting a block in Insert mode
   * "%!" at start of 'statusline' didn't work
   * Perl: changing a line in a non-current buffer may not work
   * (extra) Win32: MSVC 2005 compiler warnings for OLE version
   * the matchparen plugin didn't handle parens in single quotes
   * the exit status of the configure script can be wrong
   * the gzip plugin can't handle file names that have a paren
   * some Tcl scripts are not recognized
   * can't properly close a buffer through the NetBeans interface
- patch for ruby output on query of LDFLAGS
- fixed use_update_desktop_file: no longer destroys shell echo 

-------------------------------------------------------------------
Fri Jul 21 15:15:22 CEST 2006 - schwab@suse.de

- Add /bin/ex [#193953].
- Fix file list.

-------------------------------------------------------------------
Wed Jul 12 11:00:58 CEST 2006 - kssingvo@suse.de

- added new official patches 036-037
- splitted vim-enhanced package with all features

-------------------------------------------------------------------
Tue Jul 11 17:12:57 CEST 2006 - kssingvo@suse.de

- update to 7.0
o Spell checking support for about 50 languages
o Intelligent completion for C, HTML, Ruby, Python, PHP, etc.
o Tab pages, each containing multiple windows
o Undo branches: never accidentally lose text again
o Vim script supports Lists and Dictionaries (similar to Python)
o Vim script profiling
o Improved Unicode support
o Highlighting of cursor line, cursor column and matching braces
o Translated manual pages support.
o Internal grep; works on all platforms, searches compressed files
o Browsing remote directories, zip and tar archives
o Printing multi-byte text

-------------------------------------------------------------------
Wed Jun  7 17:13:49 CEST 2006 - kssingvo@suse.de

- fix for crash in gui (bugzilla#182212)

-------------------------------------------------------------------
Sat Mar 18 01:24:54 CET 2006 - jw@suse.de

- fixed bugzilla # 112930
  no more segv upon svn commit.

-------------------------------------------------------------------
Fri Feb 24 13:28:58 CET 2006 - hvogel@suse.de

- Dont package any gvimrc (except in %doc), just use apps defaults.
  Otherwise we will play default settings ping pong
  forever [#152830]

-------------------------------------------------------------------
Thu Feb  2 21:32:01 CET 2006 - rml@suse.de

- Make X selection again work in gvim (Bug #144109) 

-------------------------------------------------------------------
Wed Feb  1 17:40:28 CET 2006 - hvogel@suse.de

- generate help-tags tag during build

-------------------------------------------------------------------
Mon Jan 30 11:43:00 CET 2006 - mmj@suse.de

- Add FreeMarker templates syntax highlighting [#144295]

-------------------------------------------------------------------
Wed Jan 25 21:31:05 CET 2006 - mls@suse.de

- converted neededforbuild to BuildRequires

-------------------------------------------------------------------
Sat Jan 14 20:30:35 CET 2006 - schwab@suse.de

- Don't strip binaries.

-------------------------------------------------------------------
Thu Jan 12 17:49:14 CET 2006 - mmj@suse.de

- Add patches 6.4.001 through 6.4.006
- Compile with -fstack-protector-all

-------------------------------------------------------------------
Wed Jan 11 16:22:47 CET 2006 - mmj@suse.de

- Use a better gvimrc [#141096]

-------------------------------------------------------------------
Mon Dec 19 15:24:18 CET 2005 - ro@suse.de

- remove unpackaged symlinks 

-------------------------------------------------------------------
Mon Dec  5 15:07:01 CET 2005 - mmj@suse.de

- Make sure SELinux is disabled

-------------------------------------------------------------------
Sun Oct 16 20:36:00 CEST 2005 - mmj@suse.de

- Update to vim-6.4 which is a pure bugfix release, no new features
  was added (they all go to vim7)
- Disable selinux patch for now

-------------------------------------------------------------------
Thu Jul 21 16:20:17 CEST 2005 - mmj@suse.de

- Add pathes 6.3.76 through 6.3.84

-------------------------------------------------------------------
Tue Jul 19 18:19:00 CEST 2005 - lnussel@suse.de

- Don't strip binaries during install to get a useful debuginfo
  package

-------------------------------------------------------------------
Thu Jul  7 10:33:14 CEST 2005 - mmj@suse.de

- Fix missing decl on vitmp.c

-------------------------------------------------------------------
Thu Jun  2 12:21:14 CEST 2005 - mmj@suse.de

- Add patches 6.3.59 through 6.3.75

-------------------------------------------------------------------
Tue Jan 25 16:46:46 CET 2005 - mmj@suse.de

- Add patches 6.3.55 through 6.3.58

-------------------------------------------------------------------
Fri Jan 21 15:15:24 CET 2005 - mmj@suse.de

- /bin/sh is bash on SUSE LINUX, so highlight as such [#49872]

-------------------------------------------------------------------
Thu Jan 20 20:12:43 CET 2005 - mmj@suse.de

- Fix insecure tmp file handling [#50025]

-------------------------------------------------------------------
Fri Jan  7 15:02:53 CET 2005 - mmj@suse.de

- Add patches 6.3.47 through 6.3.54

-------------------------------------------------------------------
Mon Dec 13 14:13:04 CET 2004 - mmj@suse.de

- Add patches 6.3.044 to 6.0.46 from upstream [#49092]
- Explain that modelines enabling can be potentially evil

-------------------------------------------------------------------
Tue Dec  7 17:23:09 CET 2004 - mmj@suse.de

- Add patches 6.3.032 to 6.0.43 from upstream

-------------------------------------------------------------------
Wed Nov 24 14:23:51 CET 2004 - ro@suse.de

- use macro for python version 

-------------------------------------------------------------------
Tue Nov 16 10:43:21 CET 2004 - hvogel@suse.de

- add gvim icon 

-------------------------------------------------------------------
Wed Nov 10 11:17:02 CET 2004 - hvogel@suse.de

- fix the 'current' link to point to the right directory

-------------------------------------------------------------------
Fri Oct 22 23:35:36 CEST 2004 - mmj@suse.de

- Make the rpm versioning match what vim does itself
- Add patch 31 from upstream

-------------------------------------------------------------------
Tue Oct 19 10:10:56 CEST 2004 - mmj@suse.de

- locale no should correctly be nb so make it so

-------------------------------------------------------------------
Wed Oct 13 15:58:51 CEST 2004 - mmj@suse.de

- Include bugfixes up to and including patch 30

-------------------------------------------------------------------
Sat Sep  4 22:23:20 CEST 2004 - mmj@suse.de

- Include the latest bugfix patches 16-23

-------------------------------------------------------------------
Tue Aug 24 11:39:21 CEST 2004 - mmj@suse.de

- Also recognize "%t" and "%j" [#43985]

-------------------------------------------------------------------
Tue Aug 24 08:12:16 CEST 2004 - mmj@suse.de

- Make printf format string "%z" be recognized and hilighted [#43985]

-------------------------------------------------------------------
Thu Aug 12 11:16:41 CEST 2004 - mmj@suse.de

- Update bugfixing patches including 12-15

-------------------------------------------------------------------
Sat Jul  3 12:46:09 CEST 2004 - mmj@suse.de

- Update bugfixing patches 001 through 011

-------------------------------------------------------------------
Tue Jun  8 22:37:00 CEST 2004 - mmj@suse.de

- Update to vim-6.3

-------------------------------------------------------------------
Fri May  7 22:15:09 CEST 2004 - mmj@suse.de

- Apply official patches up to including 531

-------------------------------------------------------------------
Mon May  3 09:15:31 CEST 2004 - mmj@suse.de

- Apply official patches up to including 521

-------------------------------------------------------------------
Tue Apr 13 11:52:00 CEST 2004 - mmj@suse.de

- Use extra again
- Apply official patches up to including 6.2.466

-------------------------------------------------------------------
Wed Mar 17 21:31:54 CET 2004 - mmj@suse.de

- Apply patch from Juergen Weigert to make 'ga' work correctly with
  UTF-8

-------------------------------------------------------------------
Wed Feb 25 10:04:17 CET 2004 - kukuk@suse.de

- Fix version detection
- Fix SELinux patch (return code of one function)

-------------------------------------------------------------------
Mon Feb 23 17:33:55 CET 2004 - mmj@suse.de

- Adjust patches to include up to 6.2.263
- Only patch SELinux on versions after 9.0

-------------------------------------------------------------------
Mon Feb  9 10:49:24 CET 2004 - mmj@suse.de

- Add patches we want from 175 to 245

-------------------------------------------------------------------
Wed Jan 28 10:36:40 CET 2004 - kukuk@suse.de

- Add SELinux patch

-------------------------------------------------------------------
Sat Jan 10 12:08:14 CET 2004 - adrian@suse.de

- build as user

-------------------------------------------------------------------
Fri Jan  9 16:29:47 CET 2004 - mmj@suse.de

- compile with "-fno-strict-aliasing"

-------------------------------------------------------------------
Fri Jan  9 13:05:20 CET 2004 - mmj@suse.de

- add patches we want from 99 to 174
- regenerate patches
- add patch for fstab syntax highlighting [#33814]

-------------------------------------------------------------------
Wed Sep 17 16:22:53 CEST 2003 - fehr@suse.de

- add patches patches 91 to 98 from vim homepage

-------------------------------------------------------------------
Fri Sep 12 12:55:31 CEST 2003 - fehr@suse.de

- add patches patches 76 to 89 from vim homepage
  (vim-6.2-altscreen.dif is therefore obsolete)

-------------------------------------------------------------------
Wed Sep 10 13:14:16 CEST 2003 - fehr@suse.de

- add patches patches 72 to 75 from vim homepage

-------------------------------------------------------------------
Wed Sep  3 12:31:21 CEST 2003 - mls@suse.de

- replace vim132 with bash version and delete post scriptlet

-------------------------------------------------------------------
Tue Aug 26 13:13:02 CEST 2003 - fehr@suse.de

- update ycp.vim and changes.vim

-------------------------------------------------------------------
Mon Aug 25 17:43:38 CEST 2003 - mls@suse.de

- fix aternate screen problem (again)

-------------------------------------------------------------------
Fri Aug 22 16:43:02 CEST 2003 - fehr@suse.de

- add patches patches 70 to 71 from vim homepage

-------------------------------------------------------------------
Sat Aug 16 16:10:49 CEST 2003 - adrian@suse.de

- install desktop file for gvim from kappfinder

-------------------------------------------------------------------
Fri Aug 15 11:04:07 CEST 2003 - mfabian@suse.de

- adapt vim-6.2-gvimrc-fontset.dif to the settings needed for
  a gtk2 build. For most languages it is OK to set "guifontset"
  to "monospace". But for Korean "monospace" expands to
  "Baekmuk Gulim" with our current default settings and
  this results in a very wide, broken spacing between the letters.
  As this effect happens with many CJK fonts and the Latin glyphs
  in many CJK fonts are ugly, set a good Latin font as the default
  for CJK. This latin font is automatically combined with the
  appropriate CJK font according to the rules in
  /etc/fonts/fonts.conf. I choose "Luxi\ Mono" because this
  is guaranteed to be installed always.

-------------------------------------------------------------------
Tue Aug 12 22:02:54 CEST 2003 - mmj@suse.de

- change the GUI to be built with gtk2

-------------------------------------------------------------------
Tue Aug 12 17:23:30 CEST 2003 - fehr@suse.de

- add liux relevant patches 15 - 69

-------------------------------------------------------------------
Wed Jul 16 10:34:00 CEST 2003 - fehr@suse.de

- create link eview to gvim 

-------------------------------------------------------------------
Tue Jun 24 17:39:00 CEST 2003 - mmj@suse.de

- Update to 6.2 including:
  · Support for GTK2
  · Support for editing Arabic text
  · ":try" command and exception handling
  · Support for the neXtaw GUI toolkit
  · Cscope support for Win32
  · Support for PostScript printing in various 8-bit encodings
- Add non-Win32 patches from 1 - 14

-------------------------------------------------------------------
Tue May 27 11:00:38 CEST 2003 - fehr@suse.de

- remove unpackaged files from buildroot

-------------------------------------------------------------------
Fri May 23 14:34:37 CEST 2003 - fehr@suse.de

- add vitmp binary and man page to package 

-------------------------------------------------------------------
Wed Apr  2 02:13:26 CEST 2003 - ro@suse.de

- updated python path

-------------------------------------------------------------------
Mon Mar  3 13:11:19 CET 2003 - fehr@suse.de

- add patches 318 to 364 from ftp.vim.org

-------------------------------------------------------------------
Mon Feb  3 10:38:45 CET 2003 - adrian@suse.de

- remove -mminimal-toc from RPM_OPT_FLAGS for ppc 
- add patches 240 to 317 from ftp.vim.org

-------------------------------------------------------------------
Wed Jan  1 16:43:10 CET 2003 - adrian@suse.de

- add a comment in the default vimrc to get the completion 
  behaviour as in bash (often asked).

-------------------------------------------------------------------
Mon Dec 16 14:04:22 CET 2002 - fehr@suse.de

- add "modelines=0" to default vimrc because of security 
  considerations

-------------------------------------------------------------------
Fri Dec 13 15:29:12 CET 2002 - ro@suse.de

- updated neededforbuild 

-------------------------------------------------------------------
Thu Nov  7 13:14:08 CET 2002 - mfabian@suse.de

- add patches 151 to 248 from ftp.vim.org (Bug #12157 is fixed
  by patch 194, made by Michael Schroeder <mls@suse.de>)

-------------------------------------------------------------------
Wed Oct 30 19:36:48 CET 2002 - agruen@suse.de

- Add dependency on acl-devel package so POSIX ACL support
  is enabled.

-------------------------------------------------------------------
Tue Aug 20 02:58:33 CEST 2002 - mmj@suse.de

- Correct PreReq

-------------------------------------------------------------------
Wed Aug  7 16:33:49 CEST 2002 - werner@suse.de

- Fix vimrc for xterm and add some more keys (bug #15002)

-------------------------------------------------------------------
Tue Aug  6 09:39:22 CEST 2002 - fehr@suse.de

- add commands to vimrc to recognize last cursor position in a file
- add patches 033 to 150 from ftp.vim.org

-------------------------------------------------------------------
Fri Aug  2 10:00:43 CEST 2002 - adrian@suse.de

- do not handle vim and kvim together anymore

-------------------------------------------------------------------
Tue Jun 25 09:15:22 CEST 2002 - olh@suse.de

- build with -mminimal-toc on ppc64

-------------------------------------------------------------------
Wed Jun  5 12:37:22 CEST 2002 - ro@suse.de

- specify python config dir (not found on lib64 platforms)

-------------------------------------------------------------------
Thu Apr 25 16:01:45 CEST 2002 - fehr@suse.de

- make vim again read /etc/vimrc or /etc/gvimrc
- add patches 001 to 032 from ftp.vim.org

-------------------------------------------------------------------
Wed Apr 10 11:27:17 CEST 2002 - adrian@suse.de

- update to version 6.1
- remove obsolete patches
- clean xim.diff from patches which gone to the source
- add gui_kde support for kvim

-------------------------------------------------------------------
Tue Apr  2 14:28:12 CEST 2002 - fehr@suse.de

- remove disable_system.patch that prevent print menue entry in 
  gvim from working (#15355)

-------------------------------------------------------------------
Thu Mar 14 12:52:38 CET 2002 - fehr@suse.de

- add patch 6.0.164 to patches
  (After patch 6.0.135 the menu entries for pasting don't work in
   Insert and Visual mode. Add <script> to allow script-local mappings.)

-------------------------------------------------------------------
Sun Mar 10 16:36:46 CET 2002 - mfabian@suse.de

- fix typo in entry for Korean fontset which prevented the
  gulim fonts from being used

-------------------------------------------------------------------
Mon Mar  4 18:08:40 CET 2002 - mfabian@suse.de

- change default fontset entry for Korean to prevent core dump
  in Korean locale. 
  Our previous default selected was 
  guifontset=-*-clean-bold-r-*--16-*-*-*-*-*-*-*,
             -*-gulim-medium-r-*--16-*-*-*-*-*-*-*
  but since XFree86 4.2.0 the 'clean-bold' pattern doesn't
  match any iso8859-1 font anymore. Now it matches only:
  -schumacher-clean-bold-r-normal--16-160-75-75-c-80-iso646.1991-irv
  Because of this 'gvim' can't get any usable font, and
  gui.char_width becomes 0. This leads to a division by 0
  in function gui_resize_shell().

-------------------------------------------------------------------
Sun Mar  3 17:52:13 CET 2002 - mfabian@suse.de

- add xim.diff from "Yasuhiro Matsumoto" <mattn_jp@hotmail.com>
  This patch makes OnTheSpot input style perfectly usable for
  Japanese, without the patch OnTheSpot input style is severely
  broken.

-------------------------------------------------------------------
Thu Feb 28 13:11:21 CET 2002 - kukuk@suse.de

- Add hack to avoid csh dependency
- Make beta-testers happy

-------------------------------------------------------------------
Sat Feb 23 23:00:16 CET 2002 - mfabian@suse.de

- choose a different fontset for locales starting with 'zh'
  (zh_TW, zh_CN, ...) because the new default fontset is not
  suitable for these locales

-------------------------------------------------------------------
Thu Feb 21 15:32:01 CET 2002 - fehr@suse.de

- change default fontset to use "iso8859-*" as encoding part

-------------------------------------------------------------------
Thu Feb  7 17:47:16 CET 2002 - fehr@suse.de

- remove RPM_BUILD_ROOT path in man pages (#13054)

-------------------------------------------------------------------
Tue Feb  5 18:06:07 CET 2002 - schwab@suse.de

- Don't add /usr/local/include and /usr/local/lib to search paths.

-------------------------------------------------------------------
Tue Jan 29 19:48:55 CET 2002 - fehr@suse.de

- add patches 094 to 154 for vim 6.0 from ftp.vim.org
- syntax files changes.vim and ycp.vim are now separate source files
  
-------------------------------------------------------------------
Fri Dec  7 16:17:39 CET 2001 - mfabian@suse.de

- add vim-6.0-euro-menu.dif which removes @euro when looking
  for a menu translation for gvim. Without this, 
  "LC_ALL=de_DE@euro gvim" will show English menus

-------------------------------------------------------------------
Thu Nov 29 18:09:17 CET 2001 - fehr@suse.de

- add patches 074 to 093 for vim 6.0 from ftp.vim.org
- add option nocompatible again to /etc/vimrc (defaults are simply
  more usable this way)

-------------------------------------------------------------------
Thu Nov 29 01:14:20 CET 2001 - mfabian@suse.de

- added NLS support again (vim-6.0-lang.tar.bz2 was not unpacked)
- applied fontset patch to /etc/gvimrc again

-------------------------------------------------------------------
Thu Nov 15 10:44:11 CET 2001  - fehr@suse.de

- changed default vimrc according to suggestions of vim developer

-------------------------------------------------------------------
Mon Nov  5 13:31:36 CET 2001  - fehr@suse.de

- added links vimdiff and gvimdiff
- added egvim link to /usr/X11R6/bin
- prevent use of tempname command in vimtutor
- add patches 001 to 072 for vim 6.0 from ftp.vim.org

-------------------------------------------------------------------
Fri Oct 19 15:09:33 CEST 2001 - mmj@suse.de

- Updated to 6.0
- Merges the gvim.spec and vim.spec into one specfile.
- Added a ppd.vim syntax file from bjacke@suse.de

-------------------------------------------------------------------
Tue Sep 11 13:27:07 CEST 2001 - mfabian@suse.de

- update to Vim 6.0av
  (Bram Moolenaar: "Just bug fixes this time, and
  quite a lot of them ...") For details about the bugs fixed,
  please read /usr/share/doc/packages/vim/ANNOUNCEMENT.vim-6.0av

-------------------------------------------------------------------
Wed Aug 29 14:07:01 CEST 2001 - fehr@suse.de

- add new ycp sytax file from Michal Svec
- add extensions .scr and .yh as ycp extensions

-------------------------------------------------------------------
Tue Aug 28 13:56:51 CEST 2001 - mfabian@suse.de

- update to Vim 6.0at
- removed sf_warnings.dif (included upstream)
- add --with-features=big
- remove --enable-broken-locale
- remove --enable-fontset 
- add BuildRoot
- add %{?suse_update_config:%{suse_update_config -f }}

-------------------------------------------------------------------
Thu Aug 16 11:44:39 CEST 2001 - fehr@suse.de

- update to new version 5.8 with patches 5.8.001 to 008 applied
- add syntax file for .changes files from Michal Svec

-------------------------------------------------------------------
Wed May 16 16:20:32 CEST 2001 - fehr@suse.de

- fix pointer-cast-warnings on 64bit archs

-------------------------------------------------------------------
Mon May  7 18:24:52 CEST 2001 - mfabian@suse.de

- bzip2 source

-------------------------------------------------------------------
Mon Apr  9 12:07:32 MEST 2001 - fehr@suse.de

- change back to old version 5.7 since 6.0aa is not stable enough
  (according to maintainer Bram Moolenaar)
- add patches 001-028 from vim.org to vim 5.7

-------------------------------------------------------------------
Fri Apr  6 11:04:25 CEST 2001 - mfabian@suse.de

- add tarball for nls support: vim-6.0aa-lang.tar.bz2
- use suse_update_config
- remove --enable-broken-locale --enable-fontset 
- add BuildRoot
- bzip2 tarballs

-------------------------------------------------------------------
Thu Apr  5 15:25:02 CEST 2001 - fehr@suse.de

- change to new version 6.0aa

-------------------------------------------------------------------
Mon Mar 26 17:10:00 CEST 2001 - kendy@suse.cz

- Added syntax file for YCP (YaST2 Communication Protocol)

-------------------------------------------------------------------
Mon Jan  8 14:45:54 MET 2001 - fehr@suse.de

- change occurences of $VIM in vimrc example to $VIMRUNTIME

-------------------------------------------------------------------
Tue Nov 21 19:13:28 CET 2000 - werner@suse.de

- Remove swapping of kp-separator/kp-decimal because it's
  done in xkbd map for german keyboards
- Add some newer xterm escape sequences (oldFunctionsKeys)

-------------------------------------------------------------------
Fri Oct  6 18:03:19 CEST 2000 - kukuk@suse.de

- change group tag

-------------------------------------------------------------------
Mon Jul 24 08:59:33 GMT 2000 - fehr@suse.de

- New version 5.7

-------------------------------------------------------------------
Wed Mar  1 19:55:33 CET 2000 - werner@suse.de

- Move vim and the link vi to /bin/ and make symlinks backward
- Include symlinks edit and ex into vim file list
- Include symlinks gex, gvi, gview, rgvim, rgview into gvim file list
- Make symlink current to version directory in /usr/share/vim

-------------------------------------------------------------------
Tue Feb 29 15:41:57 MET 2000 - fehr@suse.de

- removed use of mouse daemon (libgpm)

-------------------------------------------------------------------
Thu Feb 24 12:46:36 MET 2000 - fehr@suse.de

- removed dependency on nawk 

-------------------------------------------------------------------
Tue Jan 25 19:47:28 CET 2000 - werner@suse.de

- New version 5.6
- Do not use strange settings in /etc/vimrc (e.g. edcompatible)
- Make terminal settings in /etc/vimrc depending on terminal type
- Create a ~/.vimrc for /etc/skel/
- /usr/man -> /usr/share/man

-------------------------------------------------------------------
Wed Jan 12 13:37:02 MET 2000  - fehr@suse.de

- fix wrong path in /etc/vimrc

-------------------------------------------------------------------
Fri Nov  5 17:49:28 MET 1999 - kukuk@suse.de

- Use gawk instead of nawk

-------------------------------------------------------------------
Fri Oct 16 11:21:59 CEST 1999 - ml@suse.de

- removed typo from vim-5.4.dif 
-------------------------------------------------------------------
Thu Sep 16 16:21:59 CEST 1999 - ro@suse.de

- added "Provides vi_clone" 

-------------------------------------------------------------------
Mon Sep 13 17:23:57 CEST 1999 - bs@suse.de

- ran old prepare_spec on spec file to switch to new prepare_spec.

-------------------------------------------------------------------
Fri Aug 27 09:03:06 MEST 1999 - fehr@suse.de

- changed to new version 5.4

-------------------------------------------------------------------
Sun Dec 13 14:31:07 MET 1998 - bs@suse.de

- fixed problem with empty man page

-------------------------------------------------------------------
Fri Dec  4 12:09:08 MET 1998 - ro@suse.de

- cleanup and bugfix for suse.vimrc

-------------------------------------------------------------------
Mon Nov 23 14:47:24 MET 1998 - ro@suse.de

- update to 5.3
- merged werners vimrc and florian's hack for linux-m
- install other vimrc_example as %doc

-------------------------------------------------------------------
Fri Oct 17 13:39:41 MEST 1997 - ro@suse.de

- ready for autobuild using 4.6tar and 4.6dif

----------------------------------------------------------------------------
Wed May 28 17:38:44 MET DST 1997 - werner@suse.de

- New /etc/vimrc added

----------------------------------------------------------------------------
Sun Apr 13 23:04:29 MEST 1997 - florian@suse.de


- update to new version 4.6

- mv ctags into a new package ctags.tgz


----------------------------------------------------------------------------
Tue Oct 22 22:14:08 MEST 1996 - florian@suse.de


- Update auf Version 4.5.

- Jetzt ist auch ctags und xxd dabei.


----------------------------------------------------------------------
Sun Aug 25 19:28:50 MET DST 1996 - florian@suse.de

new version 4.2
completely integrated help-system
