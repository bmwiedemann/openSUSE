<revisionlist>
  <revision rev="1" vrev="27">
    <srcmd5>5e7169161e9e713dcf3c97e6c37d33bd</srcmd5>
    <version>7.0</version>
    <time>1166199312</time>
    <user>unknown</user>
  </revision>
  <revision rev="2" vrev="46">
    <srcmd5>3b74d0fc5cebc20bc773401ca94ef60b</srcmd5>
    <version>7.0</version>
    <time>1169512281</time>
    <user>unknown</user>
  </revision>
  <revision rev="3" vrev="47">
    <srcmd5>fa5fb85ac1ebb33a2627705ede0cbbfc</srcmd5>
    <version>7.0</version>
    <time>1169571775</time>
    <user>unknown</user>
  </revision>
  <revision rev="4" vrev="48">
    <srcmd5>63973c804b5aff437717d1b32746d4d9</srcmd5>
    <version>7.0</version>
    <time>1169660873</time>
    <user>unknown</user>
  </revision>
  <revision rev="5" vrev="49">
    <srcmd5>91412b3385c10b574f51176c2d0cc6f5</srcmd5>
    <version>7.0</version>
    <time>1170609832</time>
    <user>unknown</user>
  </revision>
  <revision rev="6" vrev="58">
    <srcmd5>8df90e1ab2bfb61a79ce96c9f180b904</srcmd5>
    <version>7.0</version>
    <time>1175123055</time>
    <user>unknown</user>
  </revision>
  <revision rev="7" vrev="60">
    <srcmd5>0532b8ecd79a0a727c7298f5edb163aa</srcmd5>
    <version>7.0</version>
    <time>1175629884</time>
    <user>unknown</user>
  </revision>
  <revision rev="8" vrev="61">
    <srcmd5>5bad294b28db15f16d446315e8ecb038</srcmd5>
    <version>7.0</version>
    <time>1175812325</time>
    <user>unknown</user>
  </revision>
  <revision rev="9" vrev="64">
    <srcmd5>f2b370a00fde6faa536e652198146c5a</srcmd5>
    <version>7.0</version>
    <time>1177450619</time>
    <user>unknown</user>
  </revision>
  <revision rev="10" vrev="65">
    <srcmd5>54d8ceca75c820ad89439228ddbf750d</srcmd5>
    <version>7.0</version>
    <time>1177459988</time>
    <user>unknown</user>
  </revision>
  <revision rev="11" vrev="70">
    <srcmd5>ceb89ef51d729cd0bdecf4c153f6b852</srcmd5>
    <version>7.0</version>
    <time>1178554611</time>
    <user>unknown</user>
  </revision>
  <revision rev="12" vrev="72">
    <srcmd5>f0933055ce198f2c90e52c766c6ed81a</srcmd5>
    <version>7.0</version>
    <time>1178733930</time>
    <user>unknown</user>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>c83ef7172c7a0d88cc4d168742d93693</srcmd5>
    <version>7.1</version>
    <time>1180998956</time>
    <user>unknown</user>
  </revision>
  <revision rev="14" vrev="7">
    <srcmd5>da89f2711855ad274dff51449d7dcc4c</srcmd5>
    <version>7.1</version>
    <time>1182276541</time>
    <user>unknown</user>
  </revision>
  <revision rev="15" vrev="9">
    <srcmd5>79372fc39427e3756fd8a0b77180830f</srcmd5>
    <version>7.1</version>
    <time>1183655152</time>
    <user>unknown</user>
  </revision>
  <revision rev="16" vrev="11">
    <srcmd5>e8ae5cb8a3c844b388f1b4d21b9b8566</srcmd5>
    <version>7.1</version>
    <time>1184087670</time>
    <user>unknown</user>
  </revision>
  <revision rev="17" vrev="17">
    <srcmd5>08df4369549f6437f1b237b8f32ffa93</srcmd5>
    <version>7.1</version>
    <time>1185495233</time>
    <user>unknown</user>
  </revision>
  <revision rev="18" vrev="30">
    <srcmd5>4f016c428dd7f3fdc63f69c2e8c5c48b</srcmd5>
    <version>7.1</version>
    <time>1187907776</time>
    <user>unknown</user>
  </revision>
  <revision rev="19" vrev="36">
    <srcmd5>3f5da94c5e4c4b08da878182480fc78c</srcmd5>
    <version>7.1</version>
    <time>1188569063</time>
    <user>unknown</user>
  </revision>
  <revision rev="20" vrev="45">
    <srcmd5>0160ec2563df4726e7f40f29bd204c28</srcmd5>
    <version>7.1</version>
    <time>1191537570</time>
    <user>unknown</user>
  </revision>
  <revision rev="21" vrev="79">
    <srcmd5>3e93b937f6cb89698f60f03aed99c0d0</srcmd5>
    <version>7.1</version>
    <time>1201715605</time>
    <user>unknown</user>
  </revision>
  <revision rev="22" vrev="81">
    <srcmd5>3a0465bb6b0270f33ddb5c0af44fbd3c</srcmd5>
    <version>7.1</version>
    <time>1201826048</time>
    <user>unknown</user>
  </revision>
  <revision rev="23" vrev="93">
    <srcmd5>d89e775ed5e381cebc68e15f9473d60e</srcmd5>
    <version>7.1</version>
    <time>1204220124</time>
    <user>unknown</user>
  </revision>
  <revision rev="24" vrev="98">
    <srcmd5>36947d5a711abb418fb59453ded3db41</srcmd5>
    <version>7.1</version>
    <time>1205347172</time>
    <user>unknown</user>
  </revision>
  <revision rev="25" vrev="115">
    <srcmd5>4b2125cd9591148d1f34b816707f89ac</srcmd5>
    <version>7.1</version>
    <time>1209647107</time>
    <user>unknown</user>
  </revision>
  <revision rev="26" vrev="125">
    <srcmd5>65b8115f7df0b071b23e5cbdd85725a2</srcmd5>
    <version>7.1</version>
    <time>1212228876</time>
    <user>unknown</user>
  </revision>
  <revision rev="27" vrev="1">
    <srcmd5>93d1c81cf66a2bcc2ae90a6d2179fe0e</srcmd5>
    <version>7.2</version>
    <time>1221301542</time>
    <user>unknown</user>
  </revision>
  <revision rev="28" vrev="4">
    <srcmd5>1bccb85fa69905b0362e6c9c3a6cd180</srcmd5>
    <version>7.2</version>
    <time>1222434872</time>
    <user>unknown</user>
  </revision>
  <revision rev="29" vrev="5">
    <srcmd5>80b676471981218b9c3a872887bbbe9a</srcmd5>
    <version>7.2</version>
    <time>1223309039</time>
    <user>unknown</user>
  </revision>
  <revision rev="30" vrev="6">
    <srcmd5>83d9374cd36bf36b8021d683a030bb16</srcmd5>
    <version>7.2</version>
    <time>1223735345</time>
    <user>unknown</user>
  </revision>
  <revision rev="31" vrev="7">
    <srcmd5>abaaa56e07d4c2f0cfe988d581a8605a</srcmd5>
    <version>7.2</version>
    <time>1227886381</time>
    <user>unknown</user>
  </revision>
  <revision rev="32" vrev="9">
    <srcmd5>bb2bd23ce108e42447baf3bbc766a6fe</srcmd5>
    <version>7.2</version>
    <time>1235170398</time>
    <user>unknown</user>
  </revision>
  <revision rev="33" vrev="10">
    <srcmd5>e5e2a338d68969a3454ea0e33ad609b9</srcmd5>
    <version>7.2</version>
    <time>1235648819</time>
    <user>unknown</user>
  </revision>
  <revision rev="34" vrev="11">
    <srcmd5>5ed24495b218897872ac9b82d92e760a</srcmd5>
    <version>7.2</version>
    <time>1235659799</time>
    <user>unknown</user>
  </revision>
  <revision rev="35" vrev="12">
    <srcmd5>77eb6c49b1313c52344c198b7f46304f</srcmd5>
    <version>7.2</version>
    <time>1242423398</time>
    <user>unknown</user>
  </revision>
  <revision rev="36" vrev="13">
    <srcmd5>3a992bf5f57c323d451e41f207ff2c25</srcmd5>
    <version>7.2</version>
    <time>1245277804</time>
    <user>unknown</user>
  </revision>
  <revision rev="37" vrev="14">
    <srcmd5>34b3c838e02e7a8bf3d293427831922a</srcmd5>
    <version>7.2</version>
    <time>1254151610</time>
    <user>autobuild</user>
    <comment>Copy from editors/vim based on submit request 21203 from user WernerFink
</comment>
  </revision>
  <revision rev="38" vrev="15">
    <srcmd5>db850b5aa2b4b79887f6ed90331da5ed</srcmd5>
    <version>7.2</version>
    <time>1255447397</time>
    <user>autobuild</user>
    <comment>Copy from editors/vim based on submit request 22324 from user dimstar
</comment>
  </revision>
  <revision rev="39" vrev="17">
    <srcmd5>db850b5aa2b4b79887f6ed90331da5ed</srcmd5>
    <version>7.2</version>
    <time>1255447397</time>
    <user>autobuild</user>
    <comment>Copy from editors/vim based on submit request 22324 from user dimstar
</comment>
  </revision>
  <revision rev="40" vrev="18">
    <srcmd5>19071625e37614498d0790e9b3541c4a</srcmd5>
    <version>7.2</version>
    <time>1257845379</time>
    <user>autobuild</user>
    <comment>Copy from editors/vim based on submit request 24009 from user dimstar
</comment>
  </revision>
  <revision rev="41" vrev="19">
    <srcmd5>0e4af5c4f9f120817b33751025760d0f</srcmd5>
    <version>7.2</version>
    <time>1265913568</time>
    <user>autobuild</user>
    <comment>Copy from editors/vim based on submit request 32186 from user hennevogel
</comment>
  </revision>
  <revision rev="42" vrev="20">
    <srcmd5>5f42ed523b4d206f5494f3d6354f1671</srcmd5>
    <version>7.2</version>
    <time>1268926455</time>
    <user>autobuild</user>
  </revision>
  <revision rev="43" vrev="21">
    <srcmd5>0deffd5e067a4753db1de211cbab7751</srcmd5>
    <version>7.2</version>
    <time>1270058473</time>
    <user>autobuild</user>
    <comment>Copy from editors/vim based on submit request 35903 from user hennevogel
</comment>
    <requestid>35903</requestid>
  </revision>
  <revision rev="44" vrev="22">
    <srcmd5>6e7a9f8d8eda41fe585494dd29e8bc57</srcmd5>
    <version>7.2</version>
    <time>1272373362</time>
    <user>autobuild</user>
    <comment>Copy from editors/vim based on submit request 38927 from user WernerFink
</comment>
    <requestid>38927</requestid>
  </revision>
  <revision rev="45" vrev="24">
    <srcmd5>6e7a9f8d8eda41fe585494dd29e8bc57</srcmd5>
    <version>7.2</version>
    <time>1278667394</time>
    <user>autobuild</user>
    <comment>release number sync</comment>
  </revision>
  <revision rev="46" vrev="25">
    <srcmd5>6e7a9f8d8eda41fe585494dd29e8bc57</srcmd5>
    <version>7.2</version>
    <time>1278678624</time>
    <user>autobuild</user>
    <comment>release number sync</comment>
  </revision>
  <revision rev="47" vrev="26">
    <srcmd5>0c18dab84c6df4cf30580b130b6ec76e</srcmd5>
    <version>7.2</version>
    <time>1283163402</time>
    <user>autobuild</user>
    <comment>Copy from editors/vim based on submit request 46630 from user coolo
</comment>
    <requestid>46630</requestid>
  </revision>
  <revision rev="48" vrev="27">
    <srcmd5>79aa48d2ae79e66ccdd2688a5202394d</srcmd5>
    <version>unknown</version>
    <time>1284124317</time>
    <user>autobuild</user>
    <comment>Copy from editors/vim based on submit request 47581 from user dimstar
</comment>
    <requestid>47581</requestid>
  </revision>
  <revision rev="49" vrev="28">
    <srcmd5>18e4412c09fcbe420581bb8f1cddbc48</srcmd5>
    <version>7.2</version>
    <time>1288974262</time>
    <user>oertel</user>
    <comment>Accepted submit request 52243 from user elvigia
</comment>
    <requestid>52243</requestid>
  </revision>
  <revision rev="50" vrev="29">
    <srcmd5>b20f0433f946800955c9568d797cf6f9</srcmd5>
    <version>7.2</version>
    <time>1288974269</time>
    <user>autobuild</user>
    <comment>Autobuild autoformatter for 52243
</comment>
  </revision>
  <revision rev="51" vrev="30">
    <srcmd5>565b26bfa8e3ee696e1377014754d174</srcmd5>
    <version>7.2</version>
    <time>1290093702</time>
    <user>oertel</user>
    <comment>Accepted submit request 53324 from user elvigia
</comment>
    <requestid>53324</requestid>
  </revision>
  <revision rev="52" vrev="31">
    <srcmd5>88b5b22d835988a08fd8cdd0a489fed8</srcmd5>
    <version>7.2</version>
    <time>1290093707</time>
    <user>autobuild</user>
    <comment>Autobuild autoformatter for 53324
</comment>
  </revision>
  <revision rev="53" vrev="1">
    <srcmd5>62752f04b3fd5825c5fbcb48eca50a4b</srcmd5>
    <version>7.3</version>
    <time>1294677067</time>
    <user>darix</user>
    <comment>Accepted submit request 57728 from user elvigia
</comment>
    <requestid>57728</requestid>
  </revision>
  <revision rev="54" vrev="2">
    <srcmd5>b566b87b7999bac39928916992c7a11e</srcmd5>
    <version>7.3</version>
    <time>1294677081</time>
    <user>darix</user>
    <comment>Autobuild autoformatter for 57728
</comment>
  </revision>
  <revision rev="55" vrev="3">
    <srcmd5>c09584718e90f9fe1fbc1d8d298f9b71</srcmd5>
    <version>7.3</version>
    <time>1296574000</time>
    <user>azouhr</user>
    <comment>Accepted submit request 59565 from user elvigia
</comment>
    <requestid>59565</requestid>
  </revision>
  <revision rev="56" vrev="4">
    <srcmd5>acf11590c49537aa6b51a86f25b2c5f0</srcmd5>
    <version>7.3</version>
    <time>1296574007</time>
    <user>azouhr</user>
    <comment>Autobuild autoformatter for 59565
</comment>
  </revision>
  <revision rev="57" vrev="7">
    <srcmd5>acf11590c49537aa6b51a86f25b2c5f0</srcmd5>
    <version>7.3</version>
    <time>1297941525</time>
    <user>autobuild</user>
    <comment>11.4 source split</comment>
  </revision>
  <revision rev="58" vrev="8">
    <srcmd5>516eb7b2d8771b85568c3b8ab03b5e86</srcmd5>
    <version>7.3</version>
    <time>1306483460</time>
    <user>saschpe</user>
    <comment>- Update to official patchlevel 189
- Add syntax higlighting for *.mine files</comment>
    <requestid>70887</requestid>
  </revision>
  <revision rev="59" vrev="9">
    <srcmd5>a4e4169bd8ebfef9fb5dd4935a18a90f</srcmd5>
    <version>7.3</version>
    <time>1306488620</time>
    <user>autobuild</user>
  </revision>
  <revision rev="60" vrev="10">
    <srcmd5>661465decba7cafd793f5bf661ddd820</srcmd5>
    <version>7.3</version>
    <time>1310393035</time>
    <user>saschpe</user>
    <comment>- Update to official patchlevel 243
  * Fix multiple illegal memory accesses
  * Fix: Using CTRL-R CTRL-W on the command line may insert only 
    part of the word.
  * Fix: Python corrects the cursor column without taking 
    'virtualedit' into account.
  * Fix: Python 3 doesn't compile without +multi_byte
  * Fix: &quot;;&quot; gets stuck on a &quot;t&quot; command, it's not useful.
  * Fix: &quot;:scriptnames&quot; and &quot;:breaklist&quot; show long file names.
  * Fix: &quot;:wundo&quot; and &quot;:rundo&quot; don't unescape their argument
  * Fix: &quot;2gj&quot; does not always move to the correct position.
  * Fix: On a 64 bit system &quot;syn sync fromstart&quot; is very slow.
  * Fix: Can't pass dict to sort function.
  * Fix: Text from the clipboard is sometimes handled as linewise, 
    but not consistently.
  * Fix: Inside an &quot;if&quot; a &quot;:wincmd&quot; causes problems.

- Use /usr/lib/tmpfiles.d instead of /etc/tmpfiles.d.
</comment>
    <requestid>76051</requestid>
  </revision>
  <revision rev="61" vrev="11">
    <srcmd5>a5120ff9f505242e986435f30e3cbf41</srcmd5>
    <version>7.3</version>
    <time>1310393048</time>
    <user>saschpe</user>
    <comment>Autobuild autoformatter for 76051
</comment>
  </revision>
  <revision rev="62" vrev="12">
    <srcmd5>baba88c6f17752edba09147f6eb7b959</srcmd5>
    <version>7.3</version>
    <time>1312462276</time>
    <user>saschpe</user>
    <comment>- Update to official patchlevel 266
  * Fix python 3.2 detection
  * Python: Errors in Unicode characters not handled nicely.
  * &quot;gH&lt;Del&gt;&quot; deletes the current line, except when it's the last
    line.
  * &quot;echo 'abc' &gt; ''&quot; returns 0 or 1, depending on 'ignorecase'.
  * The coladd field is not reset when setting the line number for a
    &quot;:call&quot; command.
  * When editing a file such as &quot;File[2010-08-15].vim&quot; an E16 error is
    given.
  * Equivalence classes only work for latin characters.
  * CursorHold triggers on an incomplete mapping.
  * G++ error message errornously recognized as error.
  * When the current directory name contains wildcard characters, such
    as &quot;foo[with]bar&quot;, the tags file can't be found.
  * When storing a pattern in search history there is no proper check
    for the separator character.
  * In Gvim with iBus typing space in Insert mode doesn't work.</comment>
    <requestid>77998</requestid>
  </revision>
  <revision rev="63" vrev="13">
    <srcmd5>5abedcc8a05113c9dbd400fcfe482bc0</srcmd5>
    <version>7.3</version>
    <time>1312462292</time>
    <user>saschpe</user>
    <comment>Autobuild autoformatter for 77998
</comment>
  </revision>
  <revision rev="64" vrev="14">
    <srcmd5>ae2660ff917cb6d328d31f5b67384214</srcmd5>
    <version>7.3</version>
    <time>1313742384</time>
    <user>saschpe</user>
    <comment>- apparmor.vim update
  - allow pux and PUx rules
  - add some new capabilities
  - fix pattern for variable names (allow numbers, except for first char)
  - apparmor.vim generated from AppArmor trunk aka 2.7 beta

Please forward this SR to Factory. (forwarded request 79276 from cboltz)</comment>
    <requestid>79290</requestid>
  </revision>
  <revision rev="65" vrev="15">
    <srcmd5>c30fa395f06c6af3baa19346fac9893c</srcmd5>
    <version>7.3</version>
    <time>1313742397</time>
    <user>saschpe</user>
    <comment>Autobuild autoformatter for 79290
</comment>
  </revision>
  <revision rev="66" vrev="16">
    <srcmd5>dee05c09fc40b48476c2860e726481f2</srcmd5>
    <version>7.3</version>
    <time>1314789912</time>
    <user>saschpe</user>
    <comment>- Update to official patchlevel 289
  * python3 fixes
  * Fix: Crash when using &quot;zd&quot; on a large number of folds.
  * Fix: Mapping &lt;Char-123&gt; no longer works.
  * Fix: After using &quot;expand('%:8')&quot; the buffer name is changed.
  * Fix: With GTK, when gvim is full-screen and a tab is opened and
    using a specific monitor configuration the window is too big.
  * Fix: Passing the file name to open in VisVim doesn't work.
  * Fix: A BOM in an error file is seen as text.
  * Fix: &quot;:put =list&quot; does not add an empty line for a trailing
    empty item.
  * Fix: 'shellcmdflag' only works with one flag.
  * Fix: Vim freezes when executing an external command with zsh.</comment>
    <requestid>80343</requestid>
  </revision>
  <revision rev="67" vrev="17">
    <srcmd5>2376724f71b7b5f7f3a776f1997e6074</srcmd5>
    <version>7.3</version>
    <time>1314789923</time>
    <user>saschpe</user>
    <comment>Autobuild autoformatter for 80343
</comment>
  </revision>
  <revision rev="68" vrev="18">
    <srcmd5>1bfa77ae8faeb7ddb60e18704d25e088</srcmd5>
    <version>7.3</version>
    <time>1316448427</time>
    <user>lrupp</user>
    <comment>- apparmor.vim update 
  - support &quot;deny $filename x&quot; rules
  - apparmor.vim generated from AppArmor 2.7 beta2 (forwarded request 82521 from cboltz)</comment>
    <requestid>82528</requestid>
  </revision>
  <revision rev="69" vrev="19">
    <srcmd5>510eafe42d8b80eace401a64ef47e854</srcmd5>
    <version>7.3</version>
    <time>1316689349</time>
    <user>saschpe</user>
    <comment>- Update to official patchlevel 289
  Following bugs are fixed:
  * Redobuff doesn't always include changes of the completion leader.
  * &quot;C&quot; on the last line deletes that line if it's blank.
  * Calling debug.debug() in Lua may cause Vim to hang.
  * Crash when 'colorcolumn' is set and closing buffer.
  * Opening a window before forking causes problems for GTK.
  * Complete function isn't called when the leader changed.
  * Writing to 'verbosefile' has problems, e.g. for :highlight.
  * Python 3 doesn't support slice assignment.
  * When closing a window there is a chance that deleting a scrollbar
    triggers a GUI resize, which uses the window while it is not in a
    valid state.
  * Auto-loading a function while editing the command line causes
    scrolling up the display.
  * Python doesn't parse multi-byte argument correctly.
  * Built-in colors are different from rgb.txt.
  * Can't load Perl 5.14 dynamically.
  * When writing to an external command a zombie process may be left
    behind.
  * When filtering text with an external command Vim may not read all
    the output.
  * Crash when using fold markers and selecting a visual block that
    includes a folded line and goes to end of line. (Sam Lidder)
  * Configure doesn't work properly with Python3.
  * When a BufWriteCmd autocommand resets 'modified' this doesn't
    change older buffer states to be marked as 'modified' like
    &quot;:write&quot; does.  (Yukihiro Nakadaira)</comment>
    <requestid>84407</requestid>
  </revision>
  <revision rev="70" vrev="20">
    <srcmd5>635dec5ca4394ba96334ef665f11ee53</srcmd5>
    <version>7.3</version>
    <time>1316695671</time>
    <user>saschpe</user>
    <comment>Fix patchlevel in changelog</comment>
    <requestid>84430</requestid>
  </revision>
  <revision rev="71" vrev="21">
    <srcmd5>4f837d39899484fe86c750740e89368b</srcmd5>
    <version>7.3</version>
    <time>1319026107</time>
    <user>coolo</user>
    <comment>- fix detection of email addresses in .changes files (forwarded request 88555 from dirkmueller)</comment>
    <requestid>88618</requestid>
  </revision>
  <revision rev="72" vrev="23">
    <srcmd5>4f837d39899484fe86c750740e89368b</srcmd5>
    <version>7.3</version>
    <time>1319182551</time>
    <user>adrianSuSE</user>
  </revision>
  <revision rev="73" vrev="24">
    <srcmd5>2ea452a4acc5061bead6c5d7975f8693</srcmd5>
    <version>7.3</version>
    <time>1320679090</time>
    <user>coolo</user>
    <comment>- Move spec skeleton functionality into /etc/vimrc (bnc#720898) 

- vim-enhanced,gvim: Never ever link against static libpython
  this happends because %{_libdir}/python$vesion/config is
  searched first and picks libpython.a instead of .so ...</comment>
    <requestid>90237</requestid>
  </revision>
  <revision rev="74" vrev="25">
    <srcmd5>6e18262716f2c3be1d2cbc70906cd88d</srcmd5>
    <version>7.3</version>
    <time>1322073481</time>
    <user>coolo</user>
    <comment>Fix Factory build (forwarded request 93173 from RedDwarf)</comment>
    <requestid>93188</requestid>
  </revision>
  <revision rev="75" vrev="26">
    <srcmd5>34657325429d2aa305df80ca2db55e3b</srcmd5>
    <version>7.3</version>
    <time>1322259193</time>
    <user>coolo</user>
    <comment>- Create tmpfiles during install
- Fix tmpfiles handling
- Own directory /var/run/vi.recover</comment>
    <requestid>93599</requestid>
  </revision>
  <revision rev="76" vrev="27">
    <srcmd5>35006ff8fa6eaf1b9d62b0f7be3af504</srcmd5>
    <version>7.3</version>
    <time>1322814519</time>
    <user>coolo</user>
    <comment>Use Requires instead of Requires(post). (forwarded request 94256 from a_jaeger)</comment>
    <requestid>94259</requestid>
  </revision>
  <revision rev="77" vrev="28">
    <srcmd5>28e7968830d43871a1c1ed7271f2bd1c</srcmd5>
    <version>7.3</version>
    <time>1323190870</time>
    <user>coolo</user>
    <comment>- vim doesn't support -D_FORTIFY_SOURCE=2 , we must use level 1,
  see http://goo.gl/g9d8F for details.</comment>
    <requestid>95208</requestid>
  </revision>
  <revision rev="78" vrev="29">
    <srcmd5>97db50aa32af1834c3f4b2ad1ec8495b</srcmd5>
    <version>7.3</version>
    <time>1323290467</time>
    <user>coolo</user>
    <comment>- Move require of systemd to base package since the base postinstall
  needs it. (forwarded request 95701 from a_jaeger)</comment>
    <requestid>95706</requestid>
  </revision>
  <revision rev="79" vrev="30">
    <srcmd5>378cb4b26adc09365775daa48576b53c</srcmd5>
    <version>7.3</version>
    <time>1325007573</time>
    <user>coolo</user>
    <comment>- Update to patchlevel 382, fixes the following problems
  * IME characters are inserted twice.
  * C-indenting wrong for a function header.
  * C-indenting wrong for static enum.
  * No support for bitwise AND, OR, XOR and invert.
  * A tags file with an extremely long name may cause 
    an infinite loop.

- add autoconf as buildrequire to avoid implicit dependency

- Update to patchlevel 372, fixes the following problems 
  * Crash when using a large Unicode character in a file that has
    syntax highlighting.
  * :wundo and :rundo use a wrong checksum.
  * When using a command line mapping to &lt;Up&gt; with file name 
    completion to go one directory up, 'wildchar' is inserted.</comment>
    <requestid>98042</requestid>
  </revision>
  <revision rev="80" vrev="31">
    <srcmd5>1a8f9314ab4c51813ff91d6483cac97d</srcmd5>
    <version>7.3</version>
    <time>1332511903</time>
    <user>coolo</user>
    <comment>- remove pointless systemd dependency and run the tmpfiles binary
  only in case it exists (forwarded request 107547 from mvyskocil)</comment>
    <requestid>107548</requestid>
  </revision>
  <revision rev="81" vrev="1">
    <srcmd5>910e053ff55066cdf60fc2a614a30f1e</srcmd5>
    <version>7.3.456</version>
    <time>1332831557</time>
    <user>coolo</user>
    <comment>- Try to fix bnc#753907 

- add patchlevel to package version.  This makes it easier for proper version
  to be determined, and to let other repos properly handle &quot;which version is
  newer than the other&quot; without having to rely on the Release number, which osc
  does not keep track of cross-repos.  Side effect, openSUSE:Tumbleweed can
  properly include vim now.</comment>
    <requestid>111051</requestid>
  </revision>
  <revision rev="82" vrev="2">
    <srcmd5>7631d4e724ecd94a41abeb94a58ea2dc</srcmd5>
    <version>7.3.456</version>
    <time>1336423992</time>
    <user>coolo</user>
    <comment>- Add a vim-python subpackage that only enables Python interpreter support
  (and X11 clibboard, too), for users that don't want the extra dependencies
  of vim-enhanced (basically the perl, ruby and tcl base packages)</comment>
    <requestid>115880</requestid>
  </revision>
  <revision rev="83" vrev="3">
    <srcmd5>5ad474f5fa75265354291414d1af78f1</srcmd5>
    <version>7.3.456</version>
    <time>1338971357</time>
    <user>coolo</user>
    <comment>- specfile hack to fix build with newer perl(?) on Factory, please forward immediately :-) (forwarded request 123575 from seife)</comment>
    <requestid>123599</requestid>
  </revision>
  <revision rev="84" vrev="4">
    <srcmd5>b7d88878270a4b05ad67a89158c0bbec</srcmd5>
    <version>7.3.456</version>
    <time>1340024046</time>
    <user>coolo</user>
    <comment>- update apparmor.vim (taken from AppArmor 2.8)
  * update list of capabilities and network protocols

Please forward the changed apparmor.vim to Factory. (forwarded request 125255 from cboltz)</comment>
    <requestid>125260</requestid>
  </revision>
  <revision rev="85" vrev="6">
    <srcmd5>b7d88878270a4b05ad67a89158c0bbec</srcmd5>
    <version>7.3.456</version>
    <time>1340184313</time>
    <user>adrianSuSE</user>
    <comment>branched from openSUSE:Factory</comment>
  </revision>
  <revision rev="86" vrev="1">
    <srcmd5>344c13feb427bec9dbe4ad7934a6844c</srcmd5>
    <version>7.3.566</version>
    <time>1340733881</time>
    <user>coolo</user>
    <comment>- Update to patchlevel 566, fixes the following problems 
  * Redo after completion does not work correctly when refresh.
  * &quot;:profdel&quot; should not work when the +profile feature is disabled.
  * Crash when an autocommand wipes out a buffer when it is hidden.
  * The cursor is in the wrong line after using &quot;:copen&quot;.
  * 'efm' does not handle Tabs in pointer lines.
  * When spell checking the German sharp s is not seen as a word
    character.
  * When using an InsertCharPre autocommand autoindent fails.
  * Gvim does not work when 'guioptions' includes &quot;f&quot;.
  * Using a count before &quot;v&quot; and &quot;V&quot; does not work.
  * &quot;:diffupdate&quot; doesn't check for files changed elsewhere.
  * Using &quot;z=&quot; on a multi-byte character may cause a crash.
  * 'wildignorecase' only applies to the last part of the path.
  * No completion for :history command.
  * Cannot use CTRL-E and CTRL-Y with &quot;r&quot;.
  * &quot;:vimgrep&quot; fails when 'autochdir' is set.

- license update: SUSE-Vim
  Choose a license from the list at http://www.spdx.org/licenses or from
  the list linked at http://license.opensuse.org</comment>
    <requestid>126120</requestid>
  </revision>
  <revision rev="87" vrev="2">
    <srcmd5>b2bb744eeb12125c8d31bf79b3aae634</srcmd5>
    <version>7.3.566</version>
    <time>1341833767</time>
    <user>coolo</user>
    <comment>- don't package /var/run/vi.recover anymore (bnc#765288) (forwarded request 127288 from lnussel)</comment>
    <requestid>127290</requestid>
  </revision>
  <revision rev="88" vrev="1">
    <srcmd5>653d2200a16ecbc59022d66d80dd5f55</srcmd5>
    <version>7.3.646</version>
    <time>1346529619</time>
    <user>namtrac</user>
    <comment>- Update to patchlevel 646, fixes the following problems 
  * Segfault with specific autocommands.
  * Not all zero-width matches handled correctly for &quot;gn&quot;.
  * Cannot select beyond 222 columns with the mouse in xterm.
  * &quot;|&quot; does not behave correctly when 'virtualedit' is set.
  * There is no way to make 'shiftwidth' follow 'tabstop'.
  * &quot;gn&quot; does not handle zero-width matches correctly.
  * Completion for a user command does not recognize backslash before
    a space.
  * Auto formatting messes up text when 'fo' contains &quot;2&quot;.
  * Cannot operate on the text that a search pattern matches.
  * File names in :checkpath! output are garbled.
  * winrestview() does not always restore the view correctly.
  * CTRL-P completion has a problem with multi-byte characters.
  * inputdialog() doesn't use the cancel argument in the console.
  * &lt;f-args&gt; is not expanded properly with DBCS encoding.
  * Can only move to a tab by absolute number.
  * Crash when $HOME is not set
  * &quot;ygt&quot; tries to yank instead of giving an error.
  * &quot;:vimgrep&quot; does not obey 'wildignore'.</comment>
    <requestid>132287</requestid>
  </revision>
  <revision rev="89" vrev="1">
    <srcmd5>b94bae90972ce11d9e341adf2be03eb8</srcmd5>
    <version>7.3.661</version>
    <time>1347883950</time>
    <user>coolo</user>
    <comment>- Update to patchlevel 661, fixes the following problems
  * &quot;gnd&quot; doesn't work correctly in Visual mode.
  * Crash when using a very long file name. (ZyX)
  * When 'clipboard' is set to &quot;unnamed&quot; small deletes end up in the
  * Completion after &quot;:help \{-&quot; gives an error message and messes up
  * Completion after &quot;:help \{-&quot; gives an error message.
  * Workaround for Python crash isn't perfect.
  * MingW needs build rule for included XPM files.  Object directory
  * When creating a Vim dictionary from Python objects an empty key
  * Internal error in :pyeval.
  * Python bindings silently truncate string values containing NUL.
  * NUL bytes truncate strings when converted from Python.
  * Recent Python changes are not tested.
  * &quot;:help !&quot; jumps to help for &quot;:!&quot;.
  * SEGV in Python code.</comment>
    <requestid>133882</requestid>
  </revision>
  <revision rev="90" vrev="2">
    <srcmd5>0c9d068f73e97790299b78345426e272</srcmd5>
    <version>7.3.661</version>
    <time>1349246843</time>
    <user>coolo</user>
    <comment>- Add Obsoletes/Provides for vim-plugin-matchit package</comment>
    <requestid>136598</requestid>
  </revision>
  <revision rev="91" vrev="1">
    <srcmd5>9dc6b9b146525f7fbd9d9345d0accc07</srcmd5>
    <version>7.3.712</version>
    <time>1351891486</time>
    <user>coolo</user>
    <comment>- Update to patchlevel 712, fixes the following problems
  * Can't build Ruby interface with Ruby 1.9.3.
  * End of color scheme name not clear in E185. (Aaron Lewis)
  * Buffer overflow in unescaping text. (Raymond Ko)
  * MSVC 11 is not supported.
  * Unused variables in Perl interface.
  * Building with Perl loaded dynamically  still uses static library.
  * When building with Cygwin loading Python dynamically fails.
  * Python: memory leaks when there are exceptions.
  * More Python code can be shared between Python 2 and 3.
  * Not possible to lock/unlock lists in Python interface.
  * Using &quot;gN&quot; while 'selection' is &quot;exclusive&quot; misses one character.
  * Using uninitialized memory with very long file name.
  * buf_spname() is used inconsistently.
  * Ruby .so name may not be correct.
  * Ruby detection uses Config, newer Ruby versions use RbConfig.
  * Some files missing in the list of distributed files.
  * List of distributed files picks up backup files.
  * Compiler complains about incompatible types.
  * &quot;:python&quot; may crash when vimbindeval() returns None.
  * &quot;make test&quot; does not delete lua.vim.
  * Using CTRL-\ e mappings is useful also when entering an
  * Test 16 fails when $DISPLAY is not set.
  * Python 3.3 is not supported.
  * MzScheme and Lua may use a NULL string.
  * When the current directory name is exactly the maximum path length
  * State specific to the Python thread is discarded.
  * Can't build GTK version with GTK 2.0.
  * Can't make 'softtabstop' follow 'shiftwidth'.
  * Now that 'shiftwidth' may use the value of 'tabstop' it is not so</comment>
    <requestid>140008</requestid>
  </revision>
  <revision rev="92" vrev="1">
    <srcmd5>c73a4a782e8ee17b0a7dc614d3af28bf</srcmd5>
    <version>7.3.744</version>
    <time>1354531181</time>
    <user>coolo</user>
    <comment>- Updated to revision 744, fixes the following problems
  * printf() can only align to bytes, not characters.
  * Inconsistency: :set can be used in the sandbox, but :setlocal and
  * Crash when calling setloclist() in BufUnload autocmd. (Marcin
  * Error on exit when using Python 3.
  * When changing the font size, only MS-Windows limits the window
  * When re-using the current buffer the buffer-local options stay.
  * Cannot run new version of cproto, it fails on missing include
  * Proto files are outdated.
  * Ruby interface defines local functions globally.
  * Perl flags may contain &quot;-g&quot;, which breaks &quot;make proto&quot;.
  * Building with Ruby and Tcl on MS-Windows 64 bit does not work.
  * :aboveleft and :belowright have no effect on :copen.
  * Typos and duplicate info in README.
  * Building with Ruby fails on some systems.
  * Crash in PHP file when using syntastic.
  * Py3Init_vim() is exported uneccessarily.
  * Compiler warnings for function arguments.
  * Tests fail when including MzScheme.
  * Cannot put help files in a sub-directory.
  * File name completion in input() escapes white space.
  * Unused function argument.
  * Computing number of lines may have an integer overflow.
  * IOC tool complains about undefined behavior for int.
  * Tiny build fails.
  * Leaking memory when :vimgrep restores the directory.
  * Tiny build still fails.
  * 64 bit compiler warning.</comment>
    <requestid>143756</requestid>
  </revision>
  <revision rev="93" vrev="2">
    <srcmd5>910c4a434cd31e9347fe02e5caa89941</srcmd5>
    <version>7.3.744</version>
    <time>1355920715</time>
    <user>coolo</user>
    <comment>- gvim should require vim-data package, bnc#793311</comment>
    <requestid>145737</requestid>
  </revision>
  <revision rev="94" vrev="1">
    <srcmd5>593f8e60a1ba0e1fe7696146a74906a5</srcmd5>
    <version>7.3.762</version>
    <time>1357128110</time>
    <user>namtrac</user>
    <comment>- Updated to revision 762, fixes the following problems
  * Automatically setting 'ttymouse' doesn't work.
  * Memory leaks when using location lists.
  * Cannot properly test conceal mode.
  * Python interface doesn't build without the multi-byte feature.
  * The justify macro does not always work correctly.
  * Test 61 is flaky, it fails once in a while.
  * Test 49 script file doesn't fold properly.
  * When there is a QuitPre autocommand using &quot;:q&quot; twice does not work
  * Autoconf doesn't find Python 3 if it's called &quot;python&quot;.
  * A location list can get a wrong count in :lvimgrep.
  * Issue 96: May access freed memory when a put command triggers
  * Matchit plugin does not handle space in #ifdef.
  * dv_ deletes the white space before the line.
  * In Visual mode a &quot;-p does not work. (Marcin Szamotulski)
  * On some systems the tabline is not redrawn.</comment>
    <requestid>146768</requestid>
  </revision>
  <revision rev="95" vrev="2">
    <srcmd5>bc0b2deca1b0953b07d02d9c3dff2f58</srcmd5>
    <version>7.3.762</version>
    <time>1357295931</time>
    <user>namtrac</user>
    <comment>- update apparmor.vim (taken from AppArmor 2.8)
  * add capability block_suspend (forwarded request 146926 from cboltz)</comment>
    <requestid>146927</requestid>
  </revision>
  <revision rev="96" vrev="4">
    <srcmd5>bc0b2deca1b0953b07d02d9c3dff2f58</srcmd5>
    <version>7.3.762</version>
    <time>1359110545</time>
    <user>adrianSuSE</user>
    <comment>Split 12.3 from Factory</comment>
  </revision>
  <revision rev="97" vrev="1">
    <srcmd5>2d38adb58044a83cabb3d1eb64a9608a</srcmd5>
    <version>7.3.785</version>
    <time>1359439642</time>
    <user>coolo</user>
    <comment>- Updated to revision 785, fixes the following problems
  * Jumping to a mark does not open a fold if it is in the same line.
  * Not all message translation files are installed.
  * Segfault when doing &quot;cclose&quot; on BufUnload in a python function.
  * &quot;:help cpo-*&quot; jumps to the wrong place.
  * settabvar() and setwinvar() may move the cursor.
  * 'matchpairs' does not work with multi-byte characters.
  * Vim.h indentation is inconsistent.
  * Uninitialized variable. (Yasuhiro Matsumoto)
  * Cursor is at the wrong location and below the end of the file
  * Crash when OriginalFirstThunk is zero.
  * Tiny GUI version misses console dialog feature.
  * ml_get error when searching, caused by curwin not matching curbuf.
  * When building with Gnome locale gets reset.
  * Compiler error for adding up two pointers. (Titov Anatoly)
  * Backwards search lands in wrong place when started on a multibyte
  * char2nr() and nr2char() always use 'encoding'.
  * Drawing with 'guifontwide' can be slow.
  * Crash when mark is not set. (Dominique Pelle)
  * Error when 'guifontwide' has a comma.
  * Crash with specific use of search pattern.</comment>
    <requestid>150136</requestid>
  </revision>
  <revision rev="98" vrev="1">
    <srcmd5>f8990eb812c20982ca36fb8b099f84bd</srcmd5>
    <version>7.3.831</version>
    <time>1361821555</time>
    <user>coolo</user>
    <comment>- Updated to revision 831, fixes the following problems
  * Python threads don't run in the background (issue 103).
  * &quot;\k&quot; in regexp does not work in other window.
  * After reloading a buffer the modelines are not processed.
  * MzScheme interface doesn't work propely.
  * &quot;:substitute&quot; works differently without confirmation.
  * New interactive :substutite behavior is not tested.
  * Tiny build fails. (Tony Mechelynck)
  * MzScheme does not build with tiny features.
  * Compiler warning for size_t to int conversion. (Skeept)
  * MzScheme: circular list does not work correctly.
  * The color column is not correct when entering a buffer.
  * The &quot; mark is not adjusted when inserting lines. (Roland Eggner)
  * &quot;:window set nu?&quot; displays the cursor line. (Nazri Ramliy)
  * Compiler warning for tiny build. (Tony Mechelynck)
  * Python threads still do not work properly.
  * The dosinst.c program has a buffer overflow. (Thomas Gwae)
  * 'relativenumber is reset unexpectedly.
  * Useless termresponse parsing for SGR mouse.
  * When 'indentexpr' moves the cursor &quot;curswant&quot; not restored.
  * Can't compute a hash.
  * Test 89 fails with tiny and small features.
  * Compiling without +eval and with Python isn't working.
  * Crash when accessing freed buffer.
  * Can redefine builtin functions.  (ZyX)
  * With Python errors are not always clear.
  * List of features in :version output is hard to read.
  * Python tests fail.
  * Mappings are not aware of wildmenu mode.
  * Clumsy to handle the situation that a variable does not exist.</comment>
    <requestid>156090</requestid>
  </revision>
  <revision rev="99" vrev="2">
    <srcmd5>832fefb8dbb821069730388140d45eda</srcmd5>
    <version>7.3.831</version>
    <time>1361888782</time>
    <user>coolo</user>
    <comment>- Add Categories to the gvim.desktop file, part of bnc#804930</comment>
    <requestid>156405</requestid>
  </revision>
  <revision rev="100" vrev="1">
    <srcmd5>c98901f07c0b9451cafa0797ffd61a9b</srcmd5>
    <version>7.3.854</version>
    <time>1363511299</time>
    <user>coolo</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>159594</requestid>
  </revision>
  <revision rev="101" vrev="1">
    <srcmd5>1f1cccece00a9613e5be5942aa89202d</srcmd5>
    <version>7.3.874</version>
    <time>1364473782</time>
    <user>coolo</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>161476</requestid>
  </revision>
  <revision rev="102" vrev="1">
    <srcmd5>65225226d054ff3daec3398ca7e5d85b</srcmd5>
    <version>7.3.905</version>
    <time>1366480202</time>
    <user>coolo</user>
    <comment>- Updated to revision 905, fixes the following problems
  * Can't build with Ruby 2.0 on a 64 bit system.
  * Test 79 fails on Windows. (Michael Soyka)
  * Merging viminfo history doesn't work well.
  * Still merging problems for viminfo history.
  * Crash when using b:, w: or t: after closing the buffer, window or
    tabpage.
  * Using wrong RUBY_VER causing Ruby build to break.
  * Valgrind error in test 91. (Issue 128)
  * Memory leaks in Lua interface.
  * Configure doesn't always find the shared library.
  * Memory leak reported by valgrind in test 91.
  * #if indents are off.
  * Not obvious that some mouse features are mutual-exclusive.
  * Outdated comment, ugly condition.
  * When deleting last buffer in other tab the tabline is not updated.
  * Crash on exit writing viminfo. (Ron Aaron)
  * Using memory freed by the garbage collector.
  * Crash when writing viminfo. (Ron Aaron) 

- Updated to revision 888, fixes the following problems
  * Double free for list and dict in Lua. (Shougo Matsu)
  * Can't build with multi-byte on Solaris 10.
  * No tests for Visual mode operators, what 7.3.879 fixes.
  * Filename completion with 'fileignorecase' does not work for
    multi-byte characters.

- Updated to revision 884, fixes the following problems
  * Build problem with some combination of features.
  * #if indents are off.</comment>
    <requestid>171102</requestid>
  </revision>
  <revision rev="103" vrev="1">
    <srcmd5>7b8bd0558ffeda4b468d0883e7d590f3</srcmd5>
    <version>7.3.918</version>
    <time>1366955218</time>
    <user>coolo</user>
    <comment>- Updated to revision 918, fixes the following problems
  * The &quot;sleep .2&quot; for running tests does not work on Solaris.
  * Python uses IndexError when a dict key is not found.
  * Possible crash when using a list in Python.
  * Duplicate Python code.
  * Python code in #ifdef branches with only minor differences.
  * Python: Access to Vim variables is not so easy.
  * Typing a &quot;:&quot; command at the hit-enter dialog does not work if the
    &quot;file changed&quot; dialog happens next.
  * Still a crash when writing viminfo.
  * ~/.viminfo is messed up when running tests.
  * When reading a file with encoding conversion fails at the end the
    next encoding in 'fencs' is not used.
  * Using freed memory when pasting with the mouse (Issue 130).
  * When a path ends in a backslash appending a comma has the wrong
    effect.
  * Repeating an Ex command after using a Visual motion does not work.

  * Crash when writing viminfo. (Ron Aaron)</comment>
    <requestid>173343</requestid>
  </revision>
  <revision rev="104" vrev="1">
    <srcmd5>d3c3276754c3d8cd3bd21507ddeaed11</srcmd5>
    <version>7.3.929</version>
    <time>1367905107</time>
    <user>coolo</user>
    <comment>- Updated to revision 929, fixes the following problems
  * An empty nl.po file does not work with an old msgfmt.
  * Compiler warning for size_t to int.
  * Trying to create a fontset handle when 'guifontset' is not set.
  * No test for what 7.3.918 fixes.
  * Check for X11 header files fails on Solaris.
  * Python interface can't easily access options.
  * Typos in source files.
  * Autocommands are triggered by setwinvar() et al. Missing BufEnter
    on :tabclose. Duplicate WinEnter on :tabclose. Wrong order of
    events for :tablose and :tabnew.
  * Missing combining characters when putting text in a register.
  * Can't build with strict C compiler.
  * Compiler warning for unused variable. Not freeing unused string.</comment>
    <requestid>174644</requestid>
  </revision>
  <revision rev="105" vrev="1">
    <srcmd5>4c33f60bfe578d60657a9078a55d6b45</srcmd5>
    <version>7.3.962</version>
    <time>1369642155</time>
    <user>coolo</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>176517</requestid>
  </revision>
  <revision rev="106" vrev="2">
    <srcmd5>bdad7172013ea3e0f5b96900511f16bc</srcmd5>
    <version>7.3.962</version>
    <time>1371544060</time>
    <user>coolo</user>
    <comment>- add explicit buildrequire on krb5-mini to avoid cycles (forwarded request 179318 from coolo)</comment>
    <requestid>179322</requestid>
  </revision>
  <revision rev="107" vrev="1">
    <srcmd5>22ed3b0529a17898aac3af30c6d26c6b</srcmd5>
    <version>7.4</version>
    <time>1376315575</time>
    <user>scarabeus_factory</user>
    <comment>- Update to version 7.4
  * A new, faster regular expression engine.
  * More than a thousand fixes and small improvements.
- Drop vim-7.3-grub.patch, applied upstream
- Refresh the following patches
  * vim-7.4-disable_lang_no.patch
  * vim-7.4-filetype_apparmor.patch
  * vim-7.4-filetype_mine.patch
  * vim-7.4-highlight_fstab.patch</comment>
    <requestid>186700</requestid>
  </revision>
  <revision rev="108" vrev="2">
    <srcmd5>a8622b5d5eced05a890b14a68ebb1462</srcmd5>
    <version>7.4</version>
    <time>1376911868</time>
    <user>scarabeus_factory</user>
    <comment>Note to the reviewer: We have %perl_requires because perl module is
always built-in because vim has direct perl dependencies anyway.

- Overhaul vim.spec
  * Remove (g)vim-{base, enchanced} subpackages
  * Dynamically load Python, Ruby so we can support
    all of them without different subpackages.
  * Python3 support (bnc#817774).
  * LUA support.
  * Disable TCL as it cannot be linked dynamically.</comment>
    <requestid>195480</requestid>
  </revision>
  <revision rev="109" vrev="1">
    <srcmd5>055798854c6fc3adf0618ae2afffbc2e</srcmd5>
    <version>7.4.009</version>
    <time>1377856286</time>
    <user>coolo</user>
    <comment>- Updated to revision 009, fixes the following problems
  * Character classes such as [a-z] to not react to 'ignorecase'.
    Breaks man page highlighting. (Mario Grgic)
  * Pattern with two alternative look-behind matches does not match.
    (Amadeus Demarzi)
  * Memory access error in Ruby syntax highlighting. (Christopher Chow)
  * When closing a window fails &quot;:bwipe&quot; may hang.
  * Using &quot;vaB&quot; while 'virtualedit' is set selects the wrong area.
    (Dimitar Dimitrov)
  * mkdir(&quot;foo/bar/&quot;, &quot;p&quot;) gives an error message. (David Barnett)
  * Creating a preview window on startup leaves the screen layout in a
    messed up state. (Marius Gedminas)
  * New regexp engine can't be interrupted.
  * When a file was not decrypted (yet), writing it may destroy the
    contents. 

- update apparmor.vim (taken from AppArmor 2.8.2)
  * add network vsock</comment>
    <requestid>196363</requestid>
  </revision>
  <revision rev="110" vrev="2">
    <srcmd5>e355b50a7d62844e1ade9bb9c6adb66c</srcmd5>
    <version>7.4.009</version>
    <time>1378549949</time>
    <user>scarabeus_factory</user>
    <comment>-&gt;</comment>
    <requestid>197533</requestid>
  </revision>
  <revision rev="111" vrev="1">
    <srcmd5>d539b6e30720bf1e34109e29d54502c6</srcmd5>
    <version>7.4.027</version>
    <time>1378749136</time>
    <user>coolo</user>
    <comment>-Updated to revision 027, fixes the following problems
  * Crash with invalid argument to mkdir().
  * Cannot find out if &quot;acl&quot; and &quot;xpm&quot; features are supported.
    multi-byte characters.
  * File name buffer too small for utf-8.
  * &quot;:help !!&quot; does not find the &quot;!!&quot; tag in the help file. (Ben
    Fritz)
  * When completing item becomes unselected. (Shougo Matsu)
  * NFA engine matches too much with \@&gt;. (John McGowan)
  * NFA regexp: Using \ze in one branch which doesn't match may cause
    end of another branch to be wrong. (William Fugh)
  * Deadlock while exiting, because of allocating memory.
  * When root edits a file the undo file is owned by root while the
    edited file may be owned by another user, which is not allowed.
    (cac2s)
  * Reading before start of a string.
  * Clang warning for int shift overflow.
  * Another valgrind error when using CTRL-X CTRL-F at the start of
    the line. (Dominique Pelle)</comment>
    <requestid>197999</requestid>
  </revision>
  <revision rev="112" vrev="3">
    <srcmd5>d539b6e30720bf1e34109e29d54502c6</srcmd5>
    <version>7.4.027</version>
    <time>1379664925</time>
    <user>adrianSuSE</user>
    <comment>Split 13.1 from Factory</comment>
  </revision>
  <revision rev="113" vrev="1">
    <srcmd5>52ecf2bc02fea9cc70b1e027f14ddf1d</srcmd5>
    <version>7.4.035</version>
    <time>1379945189</time>
    <user>coolo</user>
    <comment>Please also copy to 13.1

- Updated to revision 035, fixes the following problems
  * Equivalence classes are not working for multi-byte characters.
  * An error in a pattern is reported twice.
  * The -mno-cygwin argument is no longer supported by Cygwin.
  * &quot;:diffoff!&quot; resets options even when 'diff' is not set. (Charles
    Cooper)
  * NFA engine does not match the NUL character. (Jonathon Merz)
  * When the terminal has only 20 lines test 92 and 93 overwrite the
    input file.
  * Using &quot;p&quot; in Visual block mode only changes the first line.</comment>
    <requestid>200168</requestid>
  </revision>
  <revision rev="114" vrev="2">
    <srcmd5>83eeb47a3784530f154f0a9950c42d26</srcmd5>
    <version>7.4.035</version>
    <time>1380218835</time>
    <user>coolo</user>
    <comment>- Remove unused buildrequires on systemd (forwarded request 200252 from Andreas_Schwab)</comment>
    <requestid>200304</requestid>
  </revision>
  <revision rev="115" vrev="1">
    <srcmd5>32833fc444afcfaac9236eb24c132cb8</srcmd5>
    <version>7.4.045</version>
    <time>1380609350</time>
    <user>coolo</user>
    <comment>- Updated to revision 045, fixes the following problems
  * NFA engine does not capture group correctly when using \@&gt;. (ZyX)
  * Using &quot;\ze&quot; in a sub-pattern does not result in the end of the
    match to be set. (Axel Bender)
  * Using &quot;zw&quot; and &quot;zg&quot; when 'spell' is off give a confusing error
    message. (Gary Johnson)
  * Valgrind error on exit when a script-local variable holds a
    reference to the scope of another script.
  * Visual selection does not remain after being copied over. (Axel
    Bender)
  * When using &quot;:setlocal&quot; for 'spell' and 'spellang' then :spelldump
    doesn't work. (Dimitar Dimitrov)
  * substitute() does not work properly when the pattern starts with
    &quot;\ze&quot;.</comment>
    <requestid>201431</requestid>
  </revision>
  <revision rev="116" vrev="1">
    <srcmd5>605839ef079de1bd43375dac029753f9</srcmd5>
    <version>7.4.052</version>
    <time>1382361391</time>
    <user>scarabeus_factory</user>
    <comment>- Updated to revision 052, fixes the following problems
  * Can't use Tcl 8.6.
  * When using input() in a function invoked by a mapping it doesn't
    work.
  * Recent clang version complains about -fno-strength-reduce.
  * In Ex mode, when line numbers are enabled the substitute prompt is
    wrong.
  * &quot;gn&quot; selects too much for the pattern &quot;\d&quot; when there are two
    lines with a single digit. (Ryan Carney)
  * Syntax highlighting a Yaml file causes a crash. (Blake Preston)
  * With 'fo' set to &quot;a2&quot; inserting a space in the first column may
    cause the cursor to jump to the previous line.</comment>
    <requestid>204114</requestid>
  </revision>
  <revision rev="117" vrev="2">
    <srcmd5>667b987f4e52356809f3a830e0576a63</srcmd5>
    <version>7.4.052</version>
    <time>1383210742</time>
    <user>coolo</user>
    <comment>- vim-7.4-python-decl.patch: Use correct return type of
  PyObject_SetAttrString (forwarded request 204979 from Andreas_Schwab)</comment>
    <requestid>205204</requestid>
  </revision>
  <revision rev="118" vrev="1">
    <srcmd5>5be4f6cdf47cb70cb5cadee5ddc636fb</srcmd5>
    <version>7.4.092</version>
    <time>1384519171</time>
    <user>coolo</user>
    <comment>- Updated to revision 092, fixes the following problems
  * Reading past end of the 'stl' string.
  * byteidx() does not work for composing characters.
  * set_last_cursor() may encounter w_buffer being NULL.  (Matt Mkaniaris)
  * Declaration has wrong return type for PyObject_SetAttrString().
  * Crash when using invalid key in Python dictionary.
  * When replacing a character in Visual block mode, entering a CR does not cause a repeated line break.
  * When recording, the character typed at the hit-enter prompt is recorded twice. (Urtica Dioica)
  * After inserting comment leader, CTRL-\ CTRL-O does move the cursor. (Wiktor Ruben)
  * Cannot right shift lines starting with #.
  * Passing limits around too often.
  * Crash when using Insert mode completion.
  * Setting undolevels for one buffer changes undo in another.
  * When undo'ing all changes and creating a new change the undo structure is incorrect. (Christian Brabandt)
  * Locally setting 'undolevels' is not tested.
  * &quot;cgn&quot; does not wrap around the end of the file. (Dimitrov Dimitrov)
  * A script cannot detect whether 'hlsearch' highlighting is actually displayed.
  * Missing documentation for v:hlsearch.
  * Wrong logic when ANALYZE is &quot;yes&quot;.
  * Using &quot;gf&quot; in a changed buffer suggests adding &quot;!&quot;, which is not possible. (Tim Chase)
  * It's hard to avoid adding a used pattern to the search history.
  * Python: interrupt not being properly discarded. (Yggdroot Chen)
  * When inserting text in Visual block mode and moving the cursor the wrong text gets repeated in other lines.
  * Skipping over an expression when not evaluating it does not work properly for dict members.
  * When spell checking is enabled Asian characters are always marked as error.
  * When editing a file in a directory mounted through sshfs Vim doesn't set the security context on a renamed file.
- Drop vim-7.4-python-decl.patch, patch upstream now.</comment>
    <requestid>206859</requestid>
  </revision>
  <revision rev="119" vrev="1">
    <srcmd5>91849b62dab6cf07faaea68518194aa3</srcmd5>
    <version>7.4.103</version>
    <time>1385191126</time>
    <user>coolo</user>
    <comment>- Updated to revision 103, fixes the following problems
  * Unexpected behavior change related to 'virtualedit'. (Ingo Karkat)
  * When using &quot;:'&lt;,'&gt;del&quot; errors may be given for the visual line numbers being out of range.
  * Append in blockwise Visual mode with &quot;$&quot; is wrong.
  * NFA regexp doesn't handle backreference correctly.
  * Using \1 in pattern goes one line too far. (Bohr Shaw, John Little)
  * Crash when interrupting &quot;z=&quot;.</comment>
    <requestid>207933</requestid>
  </revision>
  <revision rev="120" vrev="1">
    <srcmd5>d4c72a703f794990c8bf8dd95f832cb5</srcmd5>
    <version>7.4.131</version>
    <time>1387453952</time>
    <user>coolo</user>
    <comment>- Updated to revision 131, fixes the following problems
  * &quot;:help s/\_&quot; reports an internal error. (John Beckett)
  * Completing a tag pattern may give an error for invalid pattern.
  * Python: When vim.eval() encounters a Vim error, a try/catch in the
    Python code doesn't catch it. (Yggdroot Chen)
  * &quot;zG&quot; and &quot;zW&quot; leave temp files around on MS-Windows.
  * ColorScheme autocommand matches with the current buffer name.
  * &quot;gUgn&quot; cannot be repeeated. (Dimitar Dimitrov)
  * Memory leak in Python OptionsAssItem. (Ken Takata)
  * New GNU make outputs messages about changing directory in another
    format.
  * When using Zsh expanding ~abc doesn't work when the result
    contains a space.
  * When a mapping starts with a space, the typed space does not show
    up for 'showcmd'.
  * It's possible that redrawing the status lines causes
    win_redr_custom() to be called recursively.
  * Can't build with Perl 5.18 on Linux. (Lcd 47)
  * Completion doesn't work for &quot;:py3d&quot; and &quot;:py3f&quot;. (Bohr Shaw)
  * Compiler warnings for &quot;const&quot; and incompatible types.
  * getline(-1) returns zero. (mvxxc)
  * Relative line numbers mix up windows when using folds.
  * Syncbind causes E315 errors in some situations. (Liang Li)</comment>
    <requestid>211203</requestid>
  </revision>
  <revision rev="121" vrev="1">
    <srcmd5>dace5d06547434f0e3882f745de216eb</srcmd5>
    <version>7.4.142</version>
    <time>1389953909</time>
    <user>coolo</user>
    <comment>- Use Unix line endings in vim-7.3-filetype_ftl.patch (bnc#815840)

- Updated to revision 142, fixes the following problems
  * Clang warns for using NUL.
  * Spurious space in MingW Makefile.
  * Directory change messages are not recognized.
  * Crash when using :cd in autocommand. (FranÃ§ois Ingelrest)
  * Crash when wiping out buffer triggers autocommand that wipes out
    only other buffer.
  * Problems when building with Borland: st_mode is signed short;
    can't build with Python; temp files not ignored by Mercurial;
    building with DEBUG doesn't define _DEBUG.

- Fix dynamic loading of Ruby for Ruby 2.1
  Add patch vim-7.4-ruby21.patch</comment>
    <requestid>213879</requestid>
  </revision>
  <revision rev="122" vrev="1">
    <srcmd5>e5c0085f25808e2632abb3fa83f749b6</srcmd5>
    <version>7.4.160</version>
    <time>1390933836</time>
    <user>coolo</user>
    <comment>- Updated to revision 160, fixes the following problems
  * TextChangedI is not triggered.
  * getregtype() does not return zero for unknown register.
  * When starting Vim with &quot;-u NONE&quot; v:oldfiles is NULL.
  * Get E685 error when assigning a function to an autoload variable.
    (Yukihiro Nakadaira)
  * :keeppatterns is not respected for :s.
  * Python: slices with steps are not supported.
  * Python: Cannot iterate over options.
  * Compiler warning for pointer type.
  * Still a problem with auto-loading.
  * &quot;:keeppatterns /pat&quot; does not keep search pattern offset.
  * Error number used twice. (Yukihiro Nakadaira)
  * Pattern containing \zs is not handled correctly by substitute().
  * Completion hangs when scanning the current buffer after doing
    keywords. (Christian Brabandt)</comment>
    <requestid>215355</requestid>
  </revision>
  <revision rev="123" vrev="1">
    <srcmd5>f8b8b0b74b2a60367e4dec203251a4cc</srcmd5>
    <version>7.4.161</version>
    <time>1391666811</time>
    <user>coolo</user>
    <comment>- Updated to revision 161, fixes the following problems
  * Crash in Python exception handling.</comment>
    <requestid>220783</requestid>
  </revision>
  <revision rev="124" vrev="1">
    <srcmd5>537166f9384d0f50e8cb07671161f740</srcmd5>
    <version>7.4.169</version>
    <time>1391948287</time>
    <user>scarabeus_factory</user>
    <comment>- Updated to revision 169, fixes the following problems
  * Running tests in shadow dir doesn't work.
  * By default, after closing a buffer changes can't be undone.
  * Auto-loading a function for code that won't be executed.
  * Fixes are not tested.
  * Can't compile with Ruby 2.1.0.
  * &quot;:sleep&quot; puts cursor in the wrong column. (Liang Li)
- Dropped vim-7.4-ruby21.patch, fixed upstream</comment>
    <requestid>221219</requestid>
  </revision>
  <revision rev="125" vrev="1">
    <srcmd5>e01f705a37e83a636ac2d347200cb2d8</srcmd5>
    <version>7.4.192</version>
    <time>1393394132</time>
    <user>coolo</user>
    <comment>- Updated to revision 192, fixes the following problems
  * Warning for type-punned pointer. (Tony Mechelynck)
  * Older Python versions don't support %ld.
  * When using 'pastetoggle' the status lines are not updated. (Samuel
    Ferencik, Jan Christoph Ebersbach)
  * Building with mzscheme and racket does not work. (David Chimay)
  * match() does not work properly with a {count} argument.
  * Clang gives warnings.
  * Insert in Visual mode sometimes gives incorrect results. (Dominique Pelle)
  * Delete that crosses line break splits multi-byte character.
  * SIZEOF_LONG clashes with similar defines in header files.
  * Compiler warning for unused argument.
  * Compiler warning for using %lld for off_t.
  * Escaping a file name for shell commands can't be done without a function.
  * Memory leak when giving E853.
- Disable test87 until python 3.4 is fixed (http://bugs.python.org/issue20763)

- Updated to revision 178, fixes the following problems
  * Some help tags don't work with &quot;:help&quot;. (Tim Chase)
  * Redo does not set v:count and v:count1.
  * The blowfish code mentions output feedback, but the code is
    actually doing cipher feedback.
  * When using scrollbind the cursor can end up below the last line.
    (mvxxc)
  * Compiler warnings for Python interface. (Tony Mechelynck)
  * When a wide library function fails, falling back to the non-wide
    function may do the wrong thing.
  * Dictionary.update() thows an error when used without arguments.
    Python programmers don't expect that.
  * Compiler warning for unused variable. (Tony Mechelynck)</comment>
    <requestid>223810</requestid>
  </revision>
  <revision rev="126" vrev="2">
    <srcmd5>9aa00ea2e1876df9e49e2fb38d751521</srcmd5>
    <version>7.4.192</version>
    <time>1393681115</time>
    <user>coolo</user>
    <comment></comment>
    <requestid>224004</requestid>
  </revision>
  <revision rev="127" vrev="3">
    <srcmd5>e789577283165283d5425b14d9700157</srcmd5>
    <version>7.4.192</version>
    <time>1394386504</time>
    <user>coolo</user>
    <comment>- Now that python3 is fixed, reenable test87</comment>
    <requestid>224926</requestid>
  </revision>
  <revision rev="128" vrev="1">
    <srcmd5>e1b2811d0f7a1e7e1f11607cf286c467</srcmd5>
    <version>7.4.205</version>
    <time>1394901350</time>
    <user>coolo</user>
    <comment>- Updated to revision 205, fixes the following problems
  * Typos in messages.
  * Python tests fail.
  * Can't build Vim with Perl when -Dusethreads is not specified for
    building Perl, and building Vim with --enable-perlinterp=dynamic.
  * (issue 197) ]P doesn't paste over Visual selection.
  * Too many #ifdefs in the code.
  * 'lispwords' is a global option.
  * Parsing 'errorformat' is not correct.
  * A mapping where the second byte is 0x80 doesn't work.
  * &quot;:mksession&quot; writes command to move to second argument while it
    does not exist.  When it does exist the order might be wrong.</comment>
    <requestid>225798</requestid>
  </revision>
  <revision rev="129" vrev="1">
    <srcmd5>6691d136658adfdd0b094200aacb526c</srcmd5>
    <version>7.4.213</version>
    <time>1395897410</time>
    <user>coolo</user>
    <comment>- Updated to revision 213, fixes the following problems
  * The cursor report sequence is sometimes not recognized and results
    in entering replace mode.
  * Mercurial picks up some files that are not distributed.
  * When repeating a filter command &quot;%&quot; and &quot;#&quot; are expanded.
  * Visual block mode plus virtual edit doesn't work well with tabs.
    (Liang Li)
  * &quot;:lu&quot; is an abbreviation for &quot;:lua&quot;, but it should be &quot;:lunmap&quot;.
    (ZyX)
  * Now that the +visual feature is always enabled the #ifdefs for it
    are not useful.
  * It's not possible to open a new buffer without creating a swap
    file.

- Clean up after the testsuite</comment>
    <requestid>227324</requestid>
  </revision>
  <revision rev="130" vrev="1">
    <srcmd5>94edd8bef6879cd1ea60e9f90f3cab15</srcmd5>
    <version>7.4.253</version>
    <time>1397060245</time>
    <user>coolo</user>
    <comment>- Updated to revision 253, fixes the following problems
  * Crash for &quot;vim -u NONE -N  -c '&amp;&amp;'&quot;.
  * Configure message for detecting smack are out of sequence.
  * When passing input to system() there is no way to keep NUL and
    NL characters separate.
  * Cannot distinguish between NL and NUL in output of system().
  * Some test files missing from distribution.
  * Crash when BufAdd autocommand wipes out the buffer.
  * Critical error in GTK, removing timer twice.
  * Crash when using cpp syntax file with pattern using external
    match. (Havard Garnes)

- Updated to revision 244, fixes the following problems
  * &quot;:tjump&quot; shows &quot;\n&quot; as &quot;\\n&quot;.
  * The string returned by submatch() does not distinguish between a
    NL from a line break and a NL that stands for a NUL character.
  * getreg() does not distinguish between a NL used for a line break
    and a NL used for a NUL character.
  * Cannot use setreg() to add text that includes a NUL.
  * The smack feature causes stray error messages.

- Updated to revision 239, fixes the following problems
  * Compilation problems on HP_nonStop (Tandem).
  * Inconsistency: &quot;:sp foo&quot; does not reload &quot;foo&quot;, unless &quot;foo&quot; is
    the current buffer. (Liang Li)
  * Compiler warnings. (Tony Mechelynck)
  * When src/auto/configure was updated, &quot;make clean&quot; would run
    configure pointlessly.
  * It's not easy to remove duplicates from a list.
  * When 'relativenumber' or 'cursorline' are set the window is</comment>
    <requestid>229371</requestid>
  </revision>
  <revision rev="131" vrev="1">
    <srcmd5>2155f3a3a02f599d0947ca1cf46f064d</srcmd5>
    <version>7.4.283</version>
    <time>1400006757</time>
    <user>coolo</user>
    <comment>- Updated to revision 283, fixes the following problems
  * Smack support detection is incomplete.
  * Configure check for smack doesn't work with all shells. (David
    Larson)
  * Using systemlist() may cause a crash and does not handle NUL
    characters properly.
  * Compiler warning, possibly for mismatch in parameter name.
  * Configure fails if $CC contains options.
  * Warning for misplaced &quot;const&quot;.
  * It is possible to define a function with a colon in the name.  It
    is possible to define a function with a lower case character if a
    &quot;#&quot; appears after the name.
  * When updating the window involves a regexp pattern, an interactive
    substitute to replace a &quot;\n&quot; with a line break fails. (Ingo
    Karkat)
  * Duplicate code in regexec().
  * GCC 4.8 compiler warning for hiding a declaration (Francois Gannaz)
  * Can't define a function starting with &quot;g:&quot;.  Can't assign a
    funcref to a buffer-local variable.
  * Can't call a global function with &quot;g:&quot; in an expression.
  * Test 62 fails.
  * The '[ mark is in the wrong position after &quot;gq&quot;. (Ingo Karkat)
  * Using exists() on a funcref for a script-local function does not
    work.
  * CTRL-U in Insert mode does not work after using a cursor key.
    (Pine Wu)
  * Comparing pointers instead of the string they point to.
  * Using just &quot;$&quot; does not cause an error message.
  * &quot;make autoconf&quot; and &quot;make reconfig&quot; may first run configure and
    then remove the output.</comment>
    <requestid>233593</requestid>
  </revision>
  <revision rev="132" vrev="2">
    <srcmd5>ff7d6f2dd5d6f28751db38265d5ae338</srcmd5>
    <version>7.4.283</version>
    <time>1400356890</time>
    <user>coolo</user>
    <comment>- minor tweaks of spec.skeleton (forwarded request 233804 from sleep_walker)</comment>
    <requestid>233925</requestid>
  </revision>
  <revision rev="133" vrev="1">
    <srcmd5>25d51dfee110a75ab5e1b73b849d5ff3</srcmd5>
    <version>7.4.307</version>
    <time>1401126793</time>
    <user>coolo</user>
    <comment>- Updated to revision 307, fixes the following problems
  * Setting 'langmap' in the modeline can cause trouble.  E.g. mapping
    &quot;:&quot; breaks many commands. (Jens-Wolfhard Schicke-Uffmann)
  * When 'relativenumber' is set and deleting lines or undoing that,
    line numbers are not always updated. (Robert Arkwright)
  * Error messages are inconsistant. (ZyX)
  * When 'spellfile' is set the screen is not redrawn.
  * Pattern with repeated backreference does not match with new regexp
    engine. (Urtica Dioica)
  * A non-greedy match followed by a branch is too greedy. (Ingo
    Karkat)
  * Searching for &quot;a&quot; does not match accented &quot;a&quot; with new regexp
    engine, does match with old engine. (David Bürgin)
    &quot;ca&quot; does not match &quot;ca&quot; with accented &quot;a&quot; with either engine.
  * It is not possible to ignore composing characters at a specific
    point in a pattern.
  * Memory leak from result of get_isolated_shell_name().
  * Can't have a funcref start with &quot;t:&quot;.
  * When running configure twice DYNAMIC_PYTHON_DLL may become empty.
  * Still a scrolling problem when loading a session file.
  * Signs placed with 'foldcolumn' set don't show up after filler
    lines.
  * When using double-width characters the text displayed on the
    command line is sometimes truncated.
  * Cannot always use Python with Vim.
  * Making 'ttymouse' empty after the xterm version was requested
    causes problems. (Elijah Griffin)
  * getchar(0) does not return Esc.
  * Can't build without the +termresponse feature.</comment>
    <requestid>235349</requestid>
  </revision>
  <revision rev="134" vrev="1">
    <srcmd5>56a233294e03f3ac618a35122acd7308</srcmd5>
    <version>7.4.326</version>
    <time>1403176109</time>
    <user>coolo</user>
    <comment>- Updated to revision 326, fixes the following problems
  * When using &quot;:diffsplit&quot; on an empty file the cursor is displayed
    on the command line.
  * When increasing the size of the lower window, the upper window
    jumps back to the top. (Ron Aaron)
  * getpos()/setpos() don't include curswant.
  * Can't use winrestview to only restore part of the view.
  * Cannot figure out what argument list is being used for a window.
  * Changing the return value of getpos() causes an error. (Jie Zhu)
  * Completion messages can get in the way of a plugin.
  * Fixes for computation of topline not tested.
  * Warning from 64-bit compiler.
  * Crash when starting gvim.  Issue 230.
  * Check for whether a highlight group has settings ignores fg and bg
    color settings.
  * Crash when putting zero bytes on the clipboard.
  * Possible crash when an BufLeave autocommand deletes the buffer.
  * Using &quot;msgfmt&quot; is hard coded, cannot use &quot;gmsgfmt&quot;.
  * Substitute() with zero width pattern breaks multi-byte character.
  * In Ex mode, cyrillic characters are not handled. (Stas Malavin)
  * When starting the gui and changing the window size the status line
    may not be drawn correctly.
  * Can't build Tiny version. (Elimar Riesebieter)</comment>
    <requestid>237517</requestid>
  </revision>
  <revision rev="135" vrev="1">
    <srcmd5>df5b6ce25524d83b881cbc823af0c916</srcmd5>
    <version>7.4.373</version>
    <time>1406442346</time>
    <user>coolo</user>
    <comment>- Updated to revision 373, fixes the following problems
  * Crash when using &quot;:botright split&quot; when there isn't much space.
  * Other solution for redrawing after completion.
  * Restoring the window sizes after closing the command line window
    doesn't work properly if there are nested splits.
  * Using freed memory when exiting while compiled with EXITFREE.
  * Linebreak test fails when encoding is not utf-8. (Danek Duvall)
  * When 'linebreak' is set control characters are not correctly
    displayed. (Kimmy Lindvall)
  * When 'winminheight' is zero there might not be one line for the
    current window.
  * Compiler warning for unused argument and unused variable.

- Updated to revision 364, fixes the following problems
  * When 'verbose' is set to display the return value of a function,
    may get E724 repeatedly.
  * Selection of inner block is inconsistent.
  * When moving the cursor and then switching to another window the
    previous window isn't scrolled. (Yukihiro Nakadaira)
  * Using a regexp pattern to highlight a specific position can be
    slow.
  * Relative numbering not updated after a linewise yank.  Issue 235.
  * GTK: When a sign icon doesn't fit exactly there can be ugly gaps.
  * Compiler warning for unused function.
  * Unitialized variables, causing some problems.
  * No digraph for the new rouble sign.
  * Setting 'history' to a big value causes out-of-memory errors.
  * When there is an error preparing to edit the command line, the
    command won't be executed. (Hirohito Higashi)
  * Cannot wrap lines taking indent into account.</comment>
    <requestid>241860</requestid>
  </revision>
  <revision rev="136" vrev="3">
    <srcmd5>df5b6ce25524d83b881cbc823af0c916</srcmd5>
    <version>7.4.373</version>
    <time>1409303607</time>
    <user>adrianSuSE</user>
    <comment>Split 13.2 from Factory</comment>
  </revision>
  <revision rev="137" vrev="1">
    <srcmd5>294d553cd4993960670484e88e5725d4</srcmd5>
    <version>7.4.417.hg.6162</version>
    <time>1409407442</time>
    <user>coolo</user>
    <comment>1</comment>
    <requestid>246800</requestid>
  </revision>
  <revision rev="138" vrev="1">
    <srcmd5>d395bf1e0c9c87168ad6b7211352809d</srcmd5>
    <version>7.4.429.hg.6187</version>
    <time>1410204496</time>
    <user>coolo</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>247818</requestid>
  </revision>
  <revision rev="139" vrev="1">
    <srcmd5>b88b48fe24119e9981caa7af3aeba86e</srcmd5>
    <version>7.4.442.hg.6214</version>
    <time>1410968509</time>
    <user>coolo</user>
    <comment>1</comment>
    <requestid>248988</requestid>
  </revision>
  <revision rev="140" vrev="1">
    <srcmd5>364be3b3949b4faf02102eb816580803</srcmd5>
    <version>7.4.461.hg.6253</version>
    <time>1412142015</time>
    <user>coolo</user>
    <comment>- Updated to revision 461, fixes the following problems
  * When using a Visual selection of multiple words and doing CTRL-W_]
    it jumps to the tag matching the word under the cursor, not the
    selected text.  (Patrick hemmer)
  * Completion for :buf does not use 'wildignorecase'. (Akshay H)
  * 'backupcopy' is global, cannot write only some files in a
    different way.
  * Using getchar() in an expression mapping may result in K_CURSORHOLD, 
    which can't be recognized.
  * Issue 252: Cursor moves in a zero-height window.
  * Can't change the icon after building Vim.
  * Can't build without the quickfix feature. (Erik Falor) 
  * Error reported by ubsan when running test 72.
  * Reversed question mark not recognized as punctuation. (Issue 258)
  * Clipboard may be cleared on startup.
  * In some situations, when setting up an environment to trigger an
    autocommand, the environment is not properly restored.
  * Spell files from Hunspell may generate a lot of errors.
  * Using ETO_IGNORELANGUAGE causes problems.
  * Can't easily close the help window. (Chris Gaal)
  * Not all commands that edit another buffer support the +cmd
    argument.
  * Calling system() with empty input gives an error for writing the
    temp file.

- Add gvim.svg as Source24, taken from gnome-colors-icon-theme.
  Convert the svg to all relevant hicolor sizes, and install them.
- Add rsvg-view BuildRequires: Needed to do the above conversion.
- Call relevant macros in %post/%postun:
  + %icon_theme_cache_post/postun because the package ships themed</comment>
    <requestid>253090</requestid>
  </revision>
  <revision rev="141" vrev="2">
    <srcmd5>5e16254d6cb56670ddc38850088a6405</srcmd5>
    <version>7.4.461.hg.6253</version>
    <time>1414218750</time>
    <user>coolo</user>
    <comment>1</comment>
    <requestid>257728</requestid>
  </revision>
  <revision rev="142" vrev="1">
    <srcmd5>e241728930e47d5432ed3f6ce58d87e2</srcmd5>
    <version>7.4.507.hg.6349</version>
    <time>1415636868</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 507, fixes the following problems
  * Setting the local value of 'backupcopy' empty gives an error.
    (Peter Mattern)
  * Compiler warning.
  * Crash when expanding a very long string.
  * CTRL-W } does not open preview window. (Erik Falor)
  * 'linebreak' does not work well together with Visual mode.
  * Issue 26: CTRL-C does not interrupt after it was mapped and then
    unmapped.
  * The &quot;precedes&quot; entry in 'listchar' will be drawn when 'showbreak
    is set and list is not.
  * Cursor movement is incorrect when there is a number
    column/sign/fold column and 'sbr' is displayed.
  * Can't compile on a system where Xutf8SetWMProperties() is not in
    the X11 library.  Issue 265.
  * When using &quot;:%diffput&quot; and the other file is empty an extra empty
    line remains.
  * Using byte length instead of character length for 'showbreak'.
  * When 'balloonexpr' results in a list, the text has a trailing
    newline. (Lcd)
  * A 0x80 byte is not handled correctly in abbreviations.
  * Abbreviations don't work. (Toothpik)
  * Check for writing to a yank register is wrong.
  * &quot;:sign jump&quot; may use another window even though the file is
    already edited in the current window.
  * test_mapping fails for some people.
  * Cursor movement still wrong when 'lbr' is set and there is a
    number column. (Hirohito Higashi)
  * Cannot specify the buffer to use for &quot;do&quot; and &quot;dp&quot;, making them
    useless for three-way diff.</comment>
    <requestid>260034</requestid>
  </revision>
  <revision rev="143" vrev="1">
    <srcmd5>bfc5ad5dde2dc3b5e42ee0e671578d51</srcmd5>
    <version>7.4.516.hg.6367</version>
    <time>1416824262</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 516, fixes the following problems
  * When generating ja.sjis.po the header is not correctly adjusted.
  * Users are not aware their encryption is weak.
  * &quot;-fwrapv&quot; argument breaks use of cproto.
  * Generating proto for if_ruby.c uses type not defined elsewhere.
  * Crash because reference count is wrong for list returned by
    getreg().
  * Memory access error. (Dominique Pelle)
  * In a help buffer the global 'foldmethod' is used.  (Paul Marshall)
  * Completing a function name containing a # does not work.  Issue
    253.</comment>
    <requestid>262147</requestid>
  </revision>
  <revision rev="144" vrev="1">
    <srcmd5>35298abc177432fba5c4d16f158d7474</srcmd5>
    <version>7.4.537.hg.6413</version>
    <time>1417810057</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 537, fixes the following problems
  * With a wrapping line the cursor may not end up in the right place.
    (Nazri Ramliy)
  * Using status line height in width computations.
  * Crash when using syntax highlighting.
  * Sun PCK locale is not recognzed.
  * When using &quot;vep&quot; a mark is moved to the next line. (Maxi Padulo,
    Issue 283)
  * Specifying wrong buffer size for GetLongPathName().
  * When the X11 server is stopped and restarted, while Vim is kept in
    the background, copy/paste no longer works. (Issue 203)
  * When using &quot;:ownsyntax&quot; spell checking is messed up. (Issue 78)
  * map() leaks memory when there is an error in the expression.
  * matchstr() fails on long text. Daniel Hahler)
  * Still confusing regexp failure and NFA_TOO_EXPENSIVE.
  * Crash when using matchadd() (Yasuhiro Matsumoto)
  * No test for what 7.4.517 fixes.
  * Many commands take a count or range that is not using line
    numbers.
  * Comments about parsing an Ex command are wrong.
  * When using 'incsearch' &quot;2/pattern/e&quot; highlights the first match.
  * &quot;:hardcopy&quot; leaks memory in case of errors.
  * Warnings when compiling if_ruby.c.
  * Can't build with tiny features.
  * Test 63 fails when using a black&amp;white terminal.
  * Value of v:hlsearch reflects an internal variable.</comment>
    <requestid>264037</requestid>
  </revision>
  <revision rev="145" vrev="2">
    <srcmd5>299233b28648ade3ed391d247d70e16b</srcmd5>
    <version>7.4.537.hg.6413</version>
    <time>1418978284</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>265528</requestid>
  </revision>
  <revision rev="146" vrev="1">
    <srcmd5>9f2b34aa56098cea8f4f80ae570904f2</srcmd5>
    <version>7.4.560.hg.6462</version>
    <time>1420531584</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 560, fixes the following problems
  * Tests fail with small features plus Python.
  * Crash when computing buffer count.  Problem with range for user
    commands.  Line range wrong in Visual area.
  * Cannot build with tiny and small features. (Taro Muraoka)
  * Crash when doing a range assign.
  * Using a range for window and buffer commands has a few problems.
    Cannot specify the type of range for a user command.
  * Since patch 7.4.232 &quot;1,3s/\n//&quot; joins two lines instead of three.
    (Eliseo Martínez)  Issue 287
  * Warnings for unused arguments when compiling with a combination of
    features.
  * Highlighting for multi-line matches is not correct.
  * Repeated use of vim_snprintf() with a number.
  * Using &quot;vit&quot; does not select a multi-byte character at the end correctly.
  * Function name not recognized correctly when inside a function.
  * curs_rows() function is always called with the second argument false.
  * &quot;ygn&quot; may yank too much. (Fritzophrenic)  Issue 295.
  * Langmap applies to Insert mode expression mappings.
  * Various small issues.
  * Missing part of patch 7.4.519.
  * test_close_count may fail for some combination of features.
  * Failed commands in Python interface not handled correctly.
  * One more small issue.
  * When the X server restarts Vim may get stuck.
  * Appending a block in the middle of a tab does not work correctly
    when virtualedit is set.
  * Memory leak using :wviminfo. Issue 296.</comment>
    <requestid>267251</requestid>
  </revision>
  <revision rev="147" vrev="1">
    <srcmd5>832c58255fd53546ff6cebc24d842ce8</srcmd5>
    <version>7.4.580.hg.6506</version>
    <time>1421873452</time>
    <user>coolo</user>
    <comment>- Updated to revision 580, fixes the following problems
  * Ex range handling is wrong for buffer-local user commands.
  * Segfault with wide screen and error in 'rulerformat'. (Ingo Karkat)
  * No test for replacing on a tab in Virtual replace mode.
  * FEAT_OSFILETYPE is used even though it's never defined.
  * Ranges for arguments, buffers, tabs, etc. are not checked to be
    valid but limited to the maximum.  This can cause the wrong thing
    to happen.
  * :argdo, :bufdo, :windo and :tabdo don't take a range.
  * Non-ascii vertical separater characters are always redrawn.
  * Giving an error for &quot;:0wincmd w&quot; is a problem for some plugins.
  * Having CTRL-C interrupt or not does not check the mode of the
    mapping. (Ingo Karkat)
  * Building with dynamic library does not work for Ruby 2.2.0
  * Can't build with tiny features. (Ike Devolder)
  * Address type of :wincmd depends on the argument.
  * Mapping CTRL-C in Visual mode doesn't work. (Ingo Karkat)
  * No error for eval('$').
  * Unicode character properties are outdated.
  * Redrawing problem with 'relativenumber' and 'linebreak'.
  * Matching with a virtual column has a lot of overhead on very long
    lines. (Issue 310)
  * Using getcurpos() after &quot;$&quot; in an empty line returns a negative
    number.
  * Wrong cursor positioning when 'linebreak' is set and lines wrap.
  * &quot;:52wincmd v&quot; still gives an invalid range error. (Charles
    Campbell)</comment>
    <requestid>281394</requestid>
  </revision>
  <revision rev="148" vrev="2">
    <srcmd5>cfbfe55522c9fb37edf0de2b0a48a03a</srcmd5>
    <version>7.4.580.hg.6506</version>
    <time>1422658703</time>
    <user>dimstar_suse</user>
    <comment>- Add vim-speedup-gc.patch to improve garbage collection performance.
  Based on https://github.com/neovim/neovim/pull/1761 (boo#899747)

- Modify vim-7.3-filetype_changes.patch to expand tabs when editing
  *.changes files (bnc#900839)

- Update suse.vimrc to stop remembering file positions for git
  commit cases. This fixes bnc#538369 and based on msys commits
  1ef258e and 65ffc90.</comment>
    <requestid>283421</requestid>
  </revision>
  <revision rev="149" vrev="1">
    <srcmd5>269b725d1f45018285213b0b2dd7780f</srcmd5>
    <version>7.4.629.hg.6606</version>
    <time>1423732826</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 629, fixes the following problems
  * For complicated list and dict use the garbage collector can run
    out of stack space.
  * Syntax error.
  * The NFA engine does not implement the 'redrawtime' time limit.
  * Vim hangs when freeing a lot of objects.
  * Wrong &quot;:argdo&quot; range does not cause an error.
  * luaV_setref() is missing a return statement. (Ozaki Kiichi)
  * luaV_setref() not returning the correct value.
  * Compiler warning for unitinialized variable. (Tony Mechelynck)
  * Returning 1 in the wrong function. (Raymond Ko)
  * Compiler warning for unused argument.
  * Crash with pattern: \(\)\{80000}  (Dominique Pelle)
  * May leak memory or crash when vim_realloc() returns NULL.
  * Possible NULL pointer dereference.
  * The last screen cell is not updated.
  * Compiler warning for variable might be clobbered by longjmp.
  * Coverity warning for Out-of-bounds read. 
- Remove vim-speedup-gc.patch, fixed upstream

- Updated to revision 608, fixes the following problems
  * Compiler warnings for unitinialized variables. (John Little)
  * Can't match &quot;%&gt;80v&quot; properly. (Axel Bender)
  * Range for :bdelete does not work. (Ronald Schild)
  * Parallel building of the documentation html files is not reliable. 
  * Conceal does not work properly with 'linebreak'. (cs86661)
  * &quot;:0argedit foo&quot; puts the new argument in the second place instead
    of the first.
  * Using ctrl_x_mode as if it contains flags.
  * test_listlbr_utf8 fails when the conceal feature is not available.</comment>
    <requestid>285613</requestid>
  </revision>
  <revision rev="150" vrev="1">
    <srcmd5>24ea047c1d18b93670f527828b1d8b26</srcmd5>
    <version>7.4.640.hg.6629</version>
    <time>1424622024</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 640, fixes the following problems
  * When using Insert mode completion combined with autocommands the
    redo command may not work.
  * The default conceal character is documented to be a space but it's
    initially a dash. (Christian Brabandt)
  * 7.4.592 breaks the netrw plugin, because the autocommands are
    skipped.
  * Marks are not restored after redo + undo.
  * If no NL or CR is found in the first block of a file then the
    'fileformat' may be set to &quot;mac&quot;. (Issue 77)
  * A search with end offset gets stuck at end of file. (Gary Johnson)
  * Incorrectly read the number of buffer for which an autocommand should be registered. 
  * Can't build with Lua 5.3 on Windows.
  * Combination of linebreak and conceal doesn't work well.
  * After deleting characters in Insert mode such that lines are
    joined undo does not work properly. (issue 324)</comment>
    <requestid>286941</requestid>
  </revision>
  <revision rev="151" vrev="1">
    <srcmd5>02eb035546ebe0146c1fba26625c87ad</srcmd5>
    <version>7.4.658.hg.6667</version>
    <time>1426495017</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 658, fixes the following problems
  * The tabline menu was using &quot;:999tabnew&quot; which is now invalid.
  * When using &quot;gf&quot; escaped spaces are not handled.
  * Stratus VOS doesn't have sync().
  * When splitting the window in a BufAdd autocommand while still in
    the first, empty buffer the window count is wrong.
  * &quot;:bufdo&quot; may start at a deleted buffer.
  * Compiler complains about ignoring return value of fwrite().
    (Michael Jarvis)
  * Configure check may fail because the dl library is not used.
  * Can't match &quot;%&gt;80v&quot; properly for multi-byte characters.
  * Xxd lacks a few features.
  * Insert mode completion with complete() may have CTRL-L work like
    CTRL-P.
  * glob() and globpath() cannot include links to non-existing files.
    (Charles Campbell)
  * Text deleted by &quot;dit&quot; depends on indent of closing tag.
    (Jan Parthey)
  * Missing changes for glob() in one file.
  * Compiler warnings for pointer mismatch.
  * 'formatexpr' is evaluated too often.</comment>
    <requestid>290096</requestid>
  </revision>
  <revision rev="152" vrev="1">
    <srcmd5>d35d43e7001c0cc188571a1adae90f5c</srcmd5>
    <version>7.4.683</version>
    <time>1427736739</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 683, fixes the following problems
  * When using --remote the directory may end up being wrong.
  * CTRL-W in Insert mode does not work well for multi-byte
    characters.
  * MS-Windows: When Vim is minimized the window height is computed
    incorrectly.
  * The search highlighting and match highlighting replaces the
    cursorline highlighting, this doesn't look good.
  * Typo in the vimtutor command.

- Updated to revision 676, fixes the following problems
  * When 'ruler' is set the preferred column is reset. (Issue 339)
  * Using freed memory when g:colors_name is changed in the colors
    script. (oni-link)
  * Using &quot;0 CTRL-D&quot; in Insert mode may have CursorHoldI interfere.
    (Gary Johnson)
  * When 'M' is in the 'cpo' option then selecting a text object in
    parenthesis does not work correctly.
  * When using netbeans a buffer is not found in another tab.
  * When 'compatible' is reset 'numberwidth' is set to 4, but the
    effect doesn't show until a change is made.
  * 'linebreak' does not work properly with multi-byte characters.
  * There is a chance that Vim may lock up.
  * 'colorcolumn' isn't drawn in a closed fold while 'cursorcolumn'
    is. (Carlos Pita)
  * Can't use a glob pattern as a regexp pattern.
  * When netbeans is active the sign column always shows up.
  * Using 'cindent' for Javascript is less than perfect.
  * Warning for shadowing a variable.
  * When completing a shell command, directories in the current</comment>
    <requestid>293224</requestid>
  </revision>
  <revision rev="153" vrev="1">
    <srcmd5>5d3b3e7364b41228c989049f6103259a</srcmd5>
    <version>7.4.694</version>
    <time>1429606181</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 694, fixes the following problems
  * When starting several Vim instances in diff mode, the temp files
    used may not be unique. (Issue 353)
  * When there are illegal utf-8 characters the old regexp engine may
    go past the end of a string.
  * &quot;zr&quot; and &quot;zm&quot; do not take a count.
  * There is no way to use a different in Replace mode for a terminal.
  * When &quot;$&quot; is in 'cpo' the popup menu isn't undrawn correctly.
    (Issue 166)
  * Memory access errors when changing indent in Ex mode. Also missing
    redraw when using CTRL-U. (Knil Ino)
  * Can't build with MzScheme.
  * Session file is not correct when there are multiple tab pages.
  * Running tests changes the .viminfo file.</comment>
    <requestid>295674</requestid>
  </revision>
  <revision rev="154" vrev="1">
    <srcmd5>d9503a36247780c48c44b4f1093e3923</srcmd5>
    <version>7.4.712</version>
    <time>1430891244</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>305297</requestid>
  </revision>
  <revision rev="155" vrev="1">
    <srcmd5>8b10bfa41c76e2f8d0f2340180630692</srcmd5>
    <version>7.4.729</version>
    <time>1432378069</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 729, fixes the following problems
  * Illegal memory access when there are illegal bytes.
  * &quot;:let list += list&quot; can change a locked list.
  * Autocommands triggered by quickfix cannot get the current title value.
  * Overflow when adding MAXCOL to a pointer.
  * When 'list' is set Visual mode does not highlight anything in empty lines. (mgaleski)
  * 0x202f is not recognized as a non-breaking space character.
  * For indenting, finding the C++ baseclass can be slow.
  * &quot;:call setreg('&quot;', [])&quot; reports an internal error.
  * Occasional crash with 'list' set.</comment>
    <requestid>308345</requestid>
  </revision>
  <revision rev="156" vrev="2">
    <srcmd5>8f05fdecd5994d98cc538b5197d9a791</srcmd5>
    <version>7.4.729</version>
    <time>1434133702</time>
    <user>dimstar_suse</user>
    <comment>- Make Perl support dynamic bsc#804070</comment>
    <requestid>311442</requestid>
  </revision>
  <revision rev="157" vrev="1">
    <srcmd5>0837334d4ab480a68a4718a4349a5dce</srcmd5>
    <version>7.4.763</version>
    <time>1435869990</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 763, fixes the following problems
  * Appending in Visual mode with 'linebreak' set does not work
    properly.  Also when 'selection' is &quot;exclusive&quot;. (Ingo Karkat)
  * Using CTRL-A in Visual mode does not work well. (Gary Johnson)
  * It is not easy to count the number of characters.
  * Cannot detect the background color of a terminal.
  * When 'conceallevel' is 1 and quitting the command-line window
    with CTRL-C the first character ':' is erased.
  * Spelling mistakes are not displayed after &quot;:syn spell&quot;.
  * The request-background termcode implementation is incomplete.
  * Comment for may_req_bg_color() is wrong. (Christ van Willegen)

- Updated to revision 752, fixes the following problems
  * When setting the crypt key and using a swap file, text may be
    encrypted twice or unencrypted text remains in the swap file.
  * The tab menu shows &quot;Close tab&quot; even when it doesn't work.
  * The cursor line is not always updated for the &quot;O&quot; command.
  * ml_get error when using &quot;p&quot; in a Visual selection in the last line.
  * Wrong argument for sizeof().
  * In a string &quot;\U&quot; only takes 4 digits, while after CTRL-V U eight
    digits can be used.
  * &quot;:1quit&quot; works like &quot;:.quit&quot;. (Bohr Shaw)
  * When using += with &quot;:set&quot; a trailing comma is not recognized. (Issue 365)
  * Cannot specify a vertical split when loading a buffer for a quickfix command.
  * &quot;p&quot; in Visual mode causes an unexpected line split.
  * No tests for Ruby and Perl.
  * The entries added by matchaddpos() are returned by getmatches() 
    but can't be set with setmatches(). (Lcd)
  * &quot;:[count]tag&quot; is not always working. (cs86661)
  * &quot;:cnext&quot; may jump to the wrong column when setting 'virtualedit=all'</comment>
    <requestid>314136</requestid>
  </revision>
  <revision rev="158" vrev="1">
    <srcmd5>fbd444cf1ed4950f956372b7ca4fcbeb</srcmd5>
    <version>7.4.788</version>
    <time>1437802990</time>
    <user>coolo</user>
    <comment>- Updated to revision 788, fixes the following problems
  * CTRL-A and CTRL-X in Visual mode do not always work well.
  * :diffoff only works properly once.
  * Behavior of :diffoff is not tested.
  * Background color response with transparency is not ignored.
  * Search does not handle multi-byte character at the start position correctly.
  * 'langmap' is used in command-line mode when checking for mappings. Issue 376.
  * When using the CompleteDone autocommand event it's difficult to get to the completed items.
  * It is not possible to avoid using the first item of completion.
  * Equivalence class for 'd' does not work correctly.
  * Coverity warns for uninitialized variable.
  * Using CTRL-A in a line without a number moves the cursor. 
    May cause a crash when at the start of the line. (Urtica Dioica)
  * Compiler complains about uninitialized variable and clobbered variables.
  * line2byte() returns one less when 'bin' and 'noeol' are set.
  * Still a few problems with CTRL-A and CTRL-X in Visual mode.
  * copy_chars() and copy_spaces() are inefficient.
  * Using both &quot;noinsert&quot; and &quot;noselect&quot; in 'completeopt' does not work properly.
  * On some systems automatically adding the missing EOL causes problems.
    Setting 'binary' has too many side effects.
  * It is not possible for a plugin to adjust to a changed setting.
  * snprintf() isn't available everywhere.</comment>
    <requestid>317495</requestid>
  </revision>
  <revision rev="159" vrev="1">
    <srcmd5>2f3eade97f8890d48d1073b88140303a</srcmd5>
    <version>7.4.803</version>
    <time>1439190671</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 803, fixes the following problems
  * Repeating a change in Visual mode does not work as expected. (Urtica Dioica)
  * Accessing memory before an allocated block.
  * Using freed memory when triggering CmdUndefined autocommands.
  * Test for &quot;:diffoff&quot; doesn't catch all potential problems.
  * Using &quot;A&quot; in Visual mode while 'linebreak' is set is not tested.
  * C indent does not support C11 raw strings. (Mark Lodato) 

- Updated to revision 797, fixes the following problems
  * Using freed memory and crash. (Dominique Pellej)
  * Test fails when the autochdir feature is not available.
    Test output contains the test script.
  * The buffer list can be very long.
  * Can only conceal text by defining syntax items.
  * Can't specify when not to ring the bell.
  * The 'fixeol' option is not copied to a new window.
  * Warning from 64 bit compiler.
  * Crash when using more lines for the command line than 'maxcombine'.</comment>
    <requestid>319227</requestid>
  </revision>
  <revision rev="160" vrev="1">
    <srcmd5>c65b57b5e205e2ab11acaf2844414bae</srcmd5>
    <version>7.4.854</version>
    <time>1441295993</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 854, fixes the following problems
  * When '#' is in 'isident' the is# comparator doesn't work.
  * Compiler warning for possible loss of data.
  * &quot;vi)d&quot; may leave a character behind.
  * CTRL-A on hex number in Visual block mode is incorrect.
  * Moving the cursor in Insert mode starts new undo sequence.
  * &lt;Esc&gt; does not show up.
  * Saving and restoring the console buffer does not work properly.
  * &quot;zt&quot; in diff mode does not always work properly. (Gary Johnson)
  * Missing information about runtime files. 

- Updated to revision 843, fixes the following problems
  * Xxd doesn't have a license notice.
  * The ruler shows &quot;Bot&quot; even when there are only filler lines missing. (Gary Johnson)
  * CTRL-A in Visual mode doesn't work properly with &quot;alpha&quot; in 'nrformat'.
  * After CTRL-V CTRL-A mode isn't updated. (Hirohito Higashi)
  * With a sequence of commands using buffers in diff mode E749 is given. (itchyny)
  * Invalid memory access when using &quot;exe 'sc'&quot;.
  * Gcc sanitizer complains about using a NULL pointer to memmove().
  * It is not possible to save and restore character search state.
  * Illegal memory access with &quot;sy match a fold&quot;.
  * Invalid memory access when doing &quot;:call g:&quot;.
  * Invalid memory access when doing &quot;:fun X(&quot;.
  * Invalid memory access in file_pat_to_reg_pat().
  * 'linebreak' breaks c% if the last Visual selection was block. (Chris Morganiser, Issue 389)
  * Invalid memory access in file_pat_to_reg_pat.
  * Cursor moves after CTRL-A on alphabetic character.
  * Invalid memory access for &quot;:syn keyword x a[&quot;.
  * Crash when using &quot;syn keyword x c&quot;. (Dominique Pelle)
  * Crash when clicking in beval balloon. (Travis Lebsock)</comment>
    <requestid>328798</requestid>
  </revision>
  <revision rev="161" vrev="1">
    <srcmd5>c67a4da56bce68e325d5257996b3ce2e</srcmd5>
    <version>7.4.865</version>
    <time>1443067983</time>
    <user>coolo</user>
    <comment>- Updated to revision 865, fixes the following problems
  * GTK: font glitches for combining characters
  * &quot;zt&quot; still doesn't work well with filler lines. (Gary Johnson)
  * Dragging the current tab with the mouse doesn't work properly.
  * It's a bit clumsy to execute a command on a list of matches.
  * Vim doesn't recognize all htmldjango files.
  * Filetype detection is outdated.
  * pango_shape_full() is not always available.
  * Still problems with pango_shape_full() not available.
  * plines_nofill() used without the diff feature.</comment>
    <requestid>330899</requestid>
  </revision>
  <revision rev="162" vrev="1">
    <srcmd5>5e69fca0904e063de21f478d9acc6395</srcmd5>
    <version>7.4.889</version>
    <time>1444833565</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 889, fixes the following problems
  * Crash when changing the 'tags' option from a remote command. (Benjamin Fritz)
  * 'smarttab' is also effective when 'paste' is enabled. (Alexander Monakov)
  * May get into an invalid state when using getchar() in an expression mapping.
  * Vim leaks memory, when 'wildignore' filters out all matches.
  * Compiler warning for unused variable. (Tony Mechelynck)
  * Not obvious how to contribute.
  * &quot;:find&quot; sometimes fails. (Excanoe)
  * Coverity error for clearing only one byte of struct.
  * Can't see line numbers in nested function calls.
  * Test 49 fails.
  * When leaving the command line window with CTRL-C while a completion menu is displayed the menu isn't removed.
  * Block-mode replace works characterwise instead of blockwise after column 147. (Issue #422)
  * When doing an upwards search without wildcards the search fails if the initial directory doesn't exist.
  * Using uninitialized memory for regexp with back reference. (Dominique Pelle)
  * The OptionSet autocommands are not triggered from setwinvar().
  * Triggering OptionSet from setwinvar() isn't tested. 

- Updated apparmor.vim (taken from AppArmor 2.10.0)
  * add support for the &quot;ib&quot; and &quot;mpls&quot; network keywords</comment>
    <requestid>335135</requestid>
  </revision>
  <revision rev="163" vrev="1">
    <srcmd5>24e294d85ac469d493fc4acad0239b14</srcmd5>
    <version>7.4.898</version>
    <time>1445675013</time>
    <user>coolo</user>
    <comment>- Updated to revision 898, fixes the following problems
  * Build failure when using dynamic python but not python3.
  * Indentation of array initializer is wrong.
  * On MS-Windows the iconv DLL may have a different name.
  * C indenting is wrong below a &quot;case (foo):&quot;
  * vimrun.exe is picky about the number of spaces before -s.
  * Custom command line completion does not work for a command containing digits.
  * Editing a URL, which netrw should handle, doesn't work.
  * Freeze and crash when there is a sleep in a remote command. (Karl Yngve Lervåg)
  * The 'fixendofline' option is set on with &quot;:edit&quot;.</comment>
    <requestid>339097</requestid>
  </revision>
  <revision rev="164" vrev="1">
    <srcmd5>ab64b322dc9650da0cc4dc9e8d082921</srcmd5>
    <version>7.4.935</version>
    <time>1449145556</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 935, fixes the following problems
  * Test 94 fails on some systems.
  * test_utf8 has confusing dummy command.
  * Crash when using longest completion match.

- Updated to revision 930, fixes the following problems
  * When a BufLeave autocommand changes folding in a way it syncs undo,
    undo can be corrupted.
  * Python interface can produce error &quot;vim.message' object has no attribute 'isatty'&quot;.
  * Libraries for dynamically loading interfaces can only be defined at compile time.
  * Compiler complains about type punned pointer.
  * t_Ce and t_Cs are documented but not supported. (Hirohito Higashi)
  * Wrong indenting for C++ constructor.
  * No utf-8 support for the hangul input feature.
  * New compiler warning: logical-not-parentheses
  * When removing from 'path' and then adding, a comma may go missing. (Malcolm Rowe)
  * When running out of memory while copying a dict memory may be freed twice. (ZyX)
  * Compiler warning for comparing signed and unsigned.
  * A digit in an option name has problems.
  * The dll options are not in the options window.
  * The rubydll option is not in the options window.
  * Missing proto file update. (Randall W. Morris)
  * Leaking memory with &quot;:helpt {dir-not-exists}&quot;.
  * Prototypes not always generated.
  * User may yank or put using the register being recorded in.
  * Completing the longest match doesn't work properly with multi-byte characters.
  * Ruby crashes when there is a runtime error.
  * A clientserver message interrupts handling keys of a mapping.
  * &quot;gv&quot; after paste selects one character less if 'selection' is &quot;exclusive&quot;.
  * MS-Windows: Most users appear not to like the window border.</comment>
    <requestid>345752</requestid>
  </revision>
  <revision rev="165" vrev="1">
    <srcmd5>847ca02fb091f085b01bb7e0ff47bdc7</srcmd5>
    <version>7.4.1004</version>
    <time>1451895638</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 1004, fixes the following problems
  * searchpos() always starts searching in the first column, 
    which is not what some people expect. (Brett Stahlman)
  * Leaking memory when hash_add() fails. Coverity error 99126.

- Updated to revision 979, fixes the following problems
  * When pasting on the command line line breaks result in literal &lt;CR&gt; characters.
    This makes pasting a long file name difficult.
  * When using :diffsplit the cursor jumps to the first line.
  * Using &quot;:sort&quot; on a very big file sometimes causes text to be corrupted. (John Beckett)
  * test_cdo fails when using another language than English.
  * When changing the crypt key the blocks read from disk are not decrypted.

- Updated to revision 972, fixes the following problems
  * Test 87 doesn't work in a shadow directory.
  * Configure doesn't work with a space in a path.
  * test86 and test87 are flaky in Appveyor.
  * Rare crash in getvcol(). (Timo Mihaljov)
  * The asin() function can't be used.
  * Memory leak when there is an error in setting an option. 

- Updated to revision 963, fixes the following problems
  * Crash when dragging with the mouse.
  * Segfault reading unitialized memory.
  * X11 and GTK have moure mouse buttons than Vim supports.
  * Memory leak when encountering a syntax error.
  * vt52 terminal codes are not correct.
  * There is no way to ignore case only for tag searches.
  * test_tagcase breaks for small builds.
  * Writing tests for Vim script is hard.</comment>
    <requestid>351482</requestid>
  </revision>
  <revision rev="166" vrev="1">
    <srcmd5>0ca16396c237e082edc5aa25f41e0a13</srcmd5>
    <version>7.4.1087</version>
    <time>1452850802</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 1087, fixes the following problems
  * Wrong way to check for unletting internal variables.
  * The Tcl interface can't be loaded dynamically on Unix.
  * Crash when using an invalid command.
  * CTRL-A does not work well in right-left mode.
  * Using &quot;.&quot; to repeat CTRL-A in Visual mode increments the wrong numbers.
  * The CTRL-A and CTRL-X commands do not update the '[ and '] marks.
  * Crash with an extremely long buffer name. 
  * CTRL-A and CTRL-X work badly with blockwise visual selection

- Updated to revision 1066, fixes the following problems
  * Segfault when unletting &quot;count&quot;.
  * Illegal memory access with weird syntax command. (Dominique Pelle)
  * Typos in the :options window.
  * Compiler warning for ignoring return value of fwrite().
  * When a spell file has single letter compounding creating
    suggestions takes an awful long time.

- Updated to revision 1046, fixes the following problems
  * The fix in patch 7.3.192 is not tested.
  * When a symbolic link points to a file in the root directory,
    the swapfile is not correct.
  * Vim overwrites the value of $PYTHONHOME.
  * The local value of 'errorformat' is not used for &quot;:lexpr&quot; and &quot;:cexpr&quot;.
  * The column is not restored properly when the matchparen plugin
    is used in Insert mode and the cursor is after the end of the line.
  * When there is a backslash in an option &quot;:set -=&quot; doesn't work.
  * An Ex range gets adjusted for folded lines even when the range
    is not using line numbers.
  * Using &quot;q!&quot; when there is a modified hidden buffer does not unload</comment>
    <requestid>353003</requestid>
  </revision>
  <revision rev="167" vrev="1">
    <srcmd5>df4f7204ef471fb862398003ea7b61c6</srcmd5>
    <version>7.4.1194</version>
    <time>1454149899</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 1194, fixes the following problems
  * New lines in the viminfo file are dropped.
  * Old style tests for the argument list.
  * Generated function prototypes still have __ARGS().
  * Wrong argument to assert_exception() causes a crash.
  * Illegal memory access when using :copen and :cclose.
  * When running gvim in the foreground some icons are missing.
  * Recognizing &lt;sid&gt; does not work when the language is Turkish.
  * Using searchpair() with a skip expression that uses syntax
    highlighting sometimes doesn't work.
  * Cannot define keyword characters for a syntax file.
  * Can't sort on floating point numbers.
  * Default features are conservative.
  * Conflict for &quot;chartab&quot;.
  * Using the local value of 'errorformat' causes more problems than it solves.
  * 'langmap' applies to the first character typed in Select mode.
  * Langmap test fails with normal build.
  * Autocommands triggered by quickfix cannot always get the current title value.
  * No support for JSON.
  * Build with normal features fails.
  * Coverity warns for NULL pointer and ignoring return value.
  * type() does not work for v:true, v:none, etc.
  * Automatically generated function prototypes use __ARGS.
  * No error for jsondecode('&quot;').
  * &quot;:argadd&quot; without argument is supposed to add the current buffer name to the arglist.
  * Missing error number in MzScheme.
  * Expressions &quot;0 + v:true&quot; and &quot;'' . v:true&quot; cause an error.
  * No tests for &quot;is&quot; and &quot;isnot&quot; with the new variables.
  * This doesn't give the right result: eval(string(v:true)).
  * No test for new behavior of v:true et al.</comment>
    <requestid>356681</requestid>
  </revision>
  <revision rev="168" vrev="1">
    <srcmd5>dedcda772b32a3be614cef0a1b0e7ff8</srcmd5>
    <version>7.4.1421</version>
    <time>1456821193</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 1421, fixes the following problems
  * When calling ch_close() the close callback is invoked,
    even though the docs say it isn't.
  * Using &quot;u_char&quot; intead of &quot;char_u&quot;, which doesn't work everywhere.
  * Tests slowed down because of the &quot;not a terminal&quot; warning.
  * May free a channel when a callback may need to be invoked. 

- Disable sniff support, its unmaintained. 

- Updated to revision 1410, fixes the following problems
  * The close-cb option is not implemented yet.
  * Perl eval doesn't work properly on 64-bit big-endian machine.
  * Having 'autochdir' set during startup and using diff mode doesn't work.
  * GTK 3 is not supported.
  * Completion menu flickers.
  * Leaking memory in cs_print_tags_priv().
  * json_encode() does not handle NaN and inf properly.
  * Leaking memory in cscope interface. 

- Updated to revision 1397, fixes the following problems
  * When the Job exit callback is invoked, the job may be freed too
    soon.
  * Starting a job hangs in the GUI.
  * Can't sort inside a sort function.

- Drop vim-7.1.314-CVE-2009-0316-debian.patch, Python 2.7 has
  the appropriate fix.

- Updated to revision 1385, fixes the following problems
  * Job and channel options parsing is scattered.</comment>
    <requestid>361631</requestid>
  </revision>
  <revision rev="169" vrev="1">
    <srcmd5>27bded4bb28ab9a7f7ffab95036065fc</srcmd5>
    <version>7.4.1525</version>
    <time>1457945826</time>
    <user>dimstar_suse</user>
    <comment>- Switch back to GTK+2 because GTK+3 interface seems to be slower. 

- Updated to revision 1525, fixes the following problems
  * Statusline highlighting is sometimes wrong.
  * &quot;J&quot; fails if there are not enough lines.
  * Channel output to file not implemented yet.
  * Channel test is a bit flaky.
  * Channel with disconnected in/out/err is not supported.
  * Channel test: Waiting for a file to appear doesn't work.
  * Cannot write channel err to a buffer.
  * On a high resolution screen the toolbar icons are too small. 

- Updated to revision 1510, fixes the following problems
  * Crash when starting a job fails.
  * Keeping both a variable for a job and the channel it refers to is a hassle.
  * Channel test fails on AppVeyor. 

- Updated to revision 1506, fixes the following problems
  * No error message when :packadd does not find anything.
  * Garbage collection with an open channel is not tested.
  * Writing last-but-one line of buffer to a channel isn't implemented yet.
  * Crash when using ch_getjob().
  * No test for reading last-but-one line.
  * When channel log is enabled get too many &quot;looking for messages&quot; log entries.
  * Job cannot read from a file. 

- Updated to revision 1498, fixes the following problems
  * &quot;:loadplugin&quot; is not optimal, some people find it confusing.
  * Not using key when result from hangul_string_convert() is NULL.
  * &quot;inline&quot; is not supported by old MSVC.</comment>
    <requestid>369495</requestid>
  </revision>
  <revision rev="170" vrev="1">
    <srcmd5>5ac4e3c91e47a6118d61395251d52910</srcmd5>
    <version>7.4.1558</version>
    <time>1458333425</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 1558, fixes the following problems
  * Using &quot;ever&quot; for packages is confusing.
  * Specifying buffer number for channel not implemented yet.
  * MS-Windows job_start() closes wrong handle.
  * Compiler warning for unitinialized variable.
  * MS-Windows channel leaks file descriptor.
  * Using feedkeys() with an empty string disregards 'x' option.
  * Compiler warning for shadowed variable.
  * The feedkeys test has a one second delay.
  * Cannot re-use a channel for another job.
  * Too many feature flags for pipes, jobs and channels.
  * Selection with the mouse does not work in command line mode.
  * Too much code in eval.c.
  * Channel test is a bit flaky.
  * Missing job_info().
  * job_start() with a list is not tested.
  * Channel log methods are not tested.
  * On Win32 escaping the command does not work properly.
  * GTK3: horizontal cursor movement in Visual selection not good.
  * Sticky type checking is more annoying than useful.
  * Getting a cterm highlight attribute that is not set results in the string &quot;-1&quot;.
  * Two tests fail.
  * Cannot load packages early.
  * Cannot generate help tags in all doc directories.
  * &quot;:colorscheme&quot; does not use 'packpath'.
  * &quot;:runtime&quot; does not use 'packpath'.
  * Completion for :colorscheme does not use 'packpath'.
  * List of test targets incomplete.
  * &quot;make install&quot; changes the help tags file, causing it to differ from the repository.
  * Windows cannot be identified.</comment>
    <requestid>371358</requestid>
  </revision>
  <revision rev="171" vrev="1">
    <srcmd5>5c99d166e55ee88e76d66dc7c52178bf</srcmd5>
    <version>7.4.1635</version>
    <time>1459002073</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 1635, fixes the following problems
  * Quickfix code using memory after being freed.
  * Using channel timeout instead of request timeout.
  * Timers don't work on Unix.
  * Not checking for failed open().
  * Memory leak when out of memory.
  * When starting the GUI fails a swap file is left behind.
  * Timer with an &quot;:echo&quot; command messes up display.
  * Although emoji characters are ambiguous width, best is to treat
    them as full width.
  * Catching exception that won't be thrown.
  * Having type() handle a Funcref that is or isn't a partial differently
    causes problems for existing scripts.
  * Comparing a function that exists on two dicts is not backwards compatible.
  * string() doesn't handle a partial.
  * Contents file is only for Amiga distro.
  * Compiler warnings for non-virtual destructor.
  * The versplit feature makes the code uneccessary complicated.
  * Can't build with small features.
  * Still can't build with small features.
  * Still quickfix test in old style.
  * Build fails with tiny features.
  * Malformed channel request causes a hang.
  * When a JSON message is split it isn't decoded.
  * Starting job with output to buffer changes options in the current buffer.
  * When 'fileformats' is set in the vimrc it applies to new buffers
    but not the initial buffer.
  * Emoji characters are not considered as a kind of word character.
  * Channel test doesn't work with Python 2.6.
  * Channel demo doesn't work with Python 2.6.</comment>
    <requestid>377457</requestid>
  </revision>
  <revision rev="172" vrev="1">
    <srcmd5>e3e3a4e4ff7a89e55a5349cb804816dc</srcmd5>
    <version>7.4.1816</version>
    <time>1462447159</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 1816, fixes the following problems
  * 'guicolors' is a confusing option name.
  * Quickfix doesn't handle long lines well, they are split.
  * GTK3 doesn't handle menu separaters properly.
  * Can't use Vim as MANPAGER.
  * Running tests in shadow dir fails.
  * 'termguicolors' option missing from the options window.
  * Test_out_close_cb sometimes fails.
  * Using wrong feature name to check for 'termguicolors'.
  * Using wrong short option name for 'termguicolors'.
  * Sending DETACH after a channel was closed isn't useful.
  * Netbeans channel gets garbage collected.
  * Memory access error when running test_quickfix.
  * A channel may be garbage collected while it's still being used by a job.
  * Looping over a null list throws an error.
- Refresh vim-7.4-filetype_mine.patch

- Updated to revision 1796, fixes the following problems
  * Cannot use ch_read() in the close callback.
  * Leading white space in a job command matters.
  * Channel could be garbage collected too early.
  * Color name decoding is implemented several times.
  * Some character classes may differ between systems.

- Updated to revision 1786, fixes the following problems
  * When using the term truecolor feature, the t_8f and t_8b termcap
    options are not set by default.
  * Using negative index in strcharpart().
  * Warnings reported by cppcheck.
  * synIDattr() does not respect 'guicolors'.</comment>
    <requestid>393264</requestid>
  </revision>
  <revision rev="173" vrev="1">
    <srcmd5>acedef2f275c883d0d65899f2b02bc8d</srcmd5>
    <version>7.4.1842</version>
    <time>1464689311</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>398167</requestid>
  </revision>
  <revision rev="174" vrev="1">
    <srcmd5>aa4526ecaa7c5b3941b0a6d1fb35d462</srcmd5>
    <version>7.4.1883</version>
    <time>1464964693</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 1883, fixes the following problems
  * Python: encoding error with Python 2.
  * Memory leaks in test49.
  * Invalid memory access when exiting with EXITFREE defined.
  * Memory leak in test_matchstrpos.
  * Setting really_exiting causes memory leaks to be reported.
  * Appending to the quickfix list while the quickfix window is open
    is very slow.
  * When a callback adds a timer the GUI doesn't use it until later.
  * Comparing functions and partials doesn't work well.
  * Typing &quot;k&quot; at the hit-enter prompt has no effect.
  * Whether a job has exited isn't detected until a character is typed.
    After calling exit_cb the cursor is in the wrong place.
  * Channel test is flaky.
  * Appending to a long quickfix list is slow.
  * Check for line break at end of line wrong.
  * Cppcheck found 2 incorrect printf formats.

- Updated to revision 1862, fixes the following problems
  * Using a partial for timer_start() may cause a crash.
  * Compiler warnings with 64 bit compiler.
  * string() with repeated argument does not give a result usable
    by eval(). 

- Updated to revision 1859, fixes the following problems
  * Tests involving Python are flaky.
  * Ubsan detects a multiplication overflow.
  * Getting an item from a NULL dict crashes.
  * Can't build with Strawberry Perl 5.24 (obsoletes perl-5.24.patch)
  * Still trying to read from channel that is going to be closed.</comment>
    <requestid>399956</requestid>
  </revision>
  <revision rev="175" vrev="2">
    <srcmd5>9e5341a00c13556259b06c88e6255095</srcmd5>
    <version>7.4.1883</version>
    <time>1465480475</time>
    <user>dimstar_suse</user>
    <comment>- Link to perl directly instead of dlopen'ing it. 

- vim must require %{?libperl_requires}, if perl is not
  updated with vim in lockstep, the following error
  occurs:
  vim: error while loading shared libraries: libperl.so
  and the program stops working. (boo#982869)</comment>
    <requestid>400020</requestid>
  </revision>
  <revision rev="176" vrev="1">
    <srcmd5>7e96b4819db0b51461da0d65b64ae06c</srcmd5>
    <version>7.4.2045</version>
    <time>1469080473</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 2045, fixes the following problems
  * Looking up a buffer by number is slow if there are many.
  * Netbeans file authentication not tested.
  * GTK: display updating is not done properly and can be slow.
  * setbufvar() causes a screen redraw.
  * filter() and map() either require a string or defining a function.
  * Memory leak when using a function callback. 

-  Updated to revision 2033, fixes the following problems
  * Memory access error when reading viminfo. (Dominique Pelle)
  * &quot;gd&quot; hangs in some situations. (Eric Biggers)
  * Not all quickfix tests are also done  with the location lists.
  * Background is not drawn properly when 'termguicolors' is set.
  * Coverity warns for unreachable code.
  * Win32: Cannot compile with XPM feature using VC2015
  * The Man plugin doesn't work that well.
  * File list does not include new XPM libraries.
  * Viminfo continuation line with wrong length isn't skipped. (Marius Gedminas)
  * Using Ctrl-A with double-byte encoding may result in garbled text.
  * Minor problems with the quickfix code.
  * Quickfix long lines test not executed for buffer.
  * Ruby test is old style.
  * Cscope interface does not support finding assignments.
  * Not all parts of the quickfix code are tested.
  * No test for what 7.4.1948 fixes.
  * Using 32-bit Perl with 64-bit time_t causes memory corruption. (Christian Brabandt)
  * When using CTRL-W f and pressing &quot;q&quot; at the ATTENTION dialog the newly opened window is not closed.
  * Perl interface has obsolete workaround.
  * Perl interface preprocessor statements not nicely indented.
  * Crash when running test_channel.vim on Windows.</comment>
    <requestid>409017</requestid>
  </revision>
  <revision rev="177" vrev="1">
    <srcmd5>488b7a95f20f2b501393d9d7e5893c20</srcmd5>
    <version>8.0.3</version>
    <time>1474115785</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 3, fixes the following problems
  * getwinvar() returns wrong Value of boolean and number options,
    especially non big endian systems. (James McCoy)

- Updated to revision 2, fixes the following problems
  * Intro screen still mentions version7. (Paul)
  * The netrw plugin does not work.

- Update to version 8.0
 * Crash on exit when EXITFREE is defined. (Dominique Pelle)
  * Valgrind reports using uninitialzed memory. (Dominique Pelle)
  * Test 86 and 87 fail with some version of Python.
  * Netbeans test fails when run from unpacked MS-Windows sources.
  * Netbeans test fails in shadow directory.
  * Not enough test coverage for Normal mode commands.
  * The example that explains nested backreferences does not work properly
    with the new regexp engine. (Harm te Hennepe)
  * Regexp fails to match when using &quot;\&gt;\)\?&quot;. (Ramel)
  * Reading past end of line when using previous substitute pattern. 
   (Dominique Pelle)
  * Attempt to read history entry while not initialized.
  * Compiler warnings with Solaris Studio when using GTK3.
  * Memory leak in timer_start().
  * Invalid memory access when formatting. (Dominique Pelle)
  * Checking for last_timer_id to overflow is not reliable. (Ozaki Kiichi)
  * Illegal memory access with &quot;:1@&quot;. (Dominique Pelle)
  * Superfluous function prototypes.
  * Sort test sometimes fails.
  * Needless line break. Confusing directory name.
  * MS-Windows gvim.exe does not have DirectX support.</comment>
    <requestid>427068</requestid>
  </revision>
  <revision rev="178" vrev="1">
    <srcmd5>6e9a04fd55366cdffb590c90352d43b3</srcmd5>
    <version>8.0.45</version>
    <time>1477134152</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 45, fixes the following problems
  * Cannot use overlapping positions with matchaddpos().
  * No completion for &quot;:messages&quot;.
  * Order of matches for 'omnifunc' is messed up. (Danny Su)
  * Detecting that a job has finished may take a while.
  * Get E924 when switching tabs.
  * OPEN_CHR_FILES not defined for FreeBSD using Debian userland files.
  * When Vim 8 reads an old viminfo and exits, the next time marks are not
  read from viminfo. (Ned Batchelder)
  * Whole line highlighting with matchaddpos() does not work.
  * When using Insert mode completion but not actually inserting anything
  an undo item is still created. (Tommy Allen)
  * When using Insert mode completion with 'completeopt' containing &quot;noinsert&quot;
  change is not saved for undo.  (Tommy Allen)
  * When using Insert mode completion with 'completeopt' containing &quot;noinsert&quot;
  with CTRL-N the change is not saved for undo.  (Tommy            Allen)
  * In diff mode the cursor may end up below the last line, resulting in an
  ml_get error.
  * Calling job_stop() right after job_start() does not work. 

- Updated to revision 32, fixes the following problems
  * getwinvar() returns wrong Value of boolean and number options, especially
  non big endian systems. (James McCoy)
  * A string argument for function() that is not a function name results in
  an error message with NULL. (Christian Brabandt)
  * Netbeans test fails with Python 3. (Jonathonf)
  * &quot;:lb&quot; is interpreted as &quot;:lbottom&quot; while the documentation says it means
  &quot;:lbuffer&quot;.
  * Vim 7.4 is still mentioned in a few places.
  * Popup complete test is disabled.</comment>
    <requestid>436059</requestid>
  </revision>
  <revision rev="179" vrev="2">
    <srcmd5>88d934fa595a415f4d1fa7a2468e0f29</srcmd5>
    <version>8.0.45</version>
    <time>1479228808</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>440279</requestid>
  </revision>
  <revision rev="180" vrev="1">
    <srcmd5>cddc8e5e1d7113ec781692135168b0a2</srcmd5>
    <version>8.0.92</version>
    <time>1479837350</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>441302</requestid>
  </revision>
  <revision rev="181" vrev="1">
    <srcmd5>5cd86322ec10cc8cff936633ac2500fc</srcmd5>
    <version>8.0.102</version>
    <time>1480951778</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 101, fixes the following problems
  * When the input or output is not a tty Vim appears to hang.
  * When a channel callback consumes a lot of time Vim becomes
    unresponsive. (skywind)
  * Can't build on MS-Windows.
  * Popup menu always appears above the cursor when it is in the
    lower half of the screen. (Matt Gardner)
  * Options that are a file name may contain non-filename characters.
  * Some options are not strictly checked.
  * (after 8.0.0101) cannot set 'dictionary' to a path

- Updated to revision 95, fixes the following problems
  * Problems with GTK 3.22.2 fixed in 3.22.4.</comment>
    <requestid>443025</requestid>
  </revision>
  <revision rev="182" vrev="1">
    <srcmd5>0ef8bb65d456c5cd71f87500bb1b6da8</srcmd5>
    <version>8.0.130</version>
    <time>1481459061</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 130, fixes the following problems
  * Not enough testing for entering Ex commands.
  * Display problem with 'foldcolumn' and a wide character. (esiegerman)
  * Cancelling completion still inserts text when formatting is done  for
  'textwidth'. (lacygoill)
  * Display test fails on MS-Windows.
  * Parallel make still doesn't work. (Lewis Muir)
  * Configure uses &quot;ushort&quot; while the Vim code doesn't. 

- Updated to revision 124, fixes the following problems
  * May not process channel readahead. (skywind)
  * Value of 'thesaurus' option not checked properly.
  * When using ch_read() with zero timeout, can't tell the difference between
    reading an empty line and nothing available.
  * Cannot use a semicolon in 'backupext'. (Jeff)
  * When reading channel output in a timer, messages may go missing. (Skywind)
  * The channel &quot;drop&quot; option is not tested.
  * Still checking if memcmp() exists while every system should have it now.
  * Drop command doesn't use existing window.
  * The :history command is not tested.
  * Tests 92 and 93 are old style.
  * When reading English help and using CTRl-] the language from 'helplang'
    is used.
  * Parallel make fails. (J. Lewis Muir)
  * No test for using CTRL-R on the command line.
  * Setting 'cursorline' changes the curswant column. (Daniel Hahler)
  * Internal error for assert_inrange(1, 1).</comment>
    <requestid>445244</requestid>
  </revision>
  <revision rev="183" vrev="1">
    <srcmd5>361ed61ce91f06cac108da934d3b883d</srcmd5>
    <version>8.0.147</version>
    <time>1484041118</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 147, fixes the following problems
  * Not enough test coverage for syntax commands.
  * Test fails because of using :finish.
  * &quot;2;'(&quot; causes ml_get errors in an empty buffer.
  * Null pointer access reported by UBsan.
  * An address relative to the current line, &quot;:.,+3y&quot;, does not work
    properly on a closed fold.
  * When using indent folding and changing indent the wrong fold is
    opened.
  * When 'maxfuncdepth' is set above 200 the nesting is limited to 200.
  * Small build fails.
  * Warning for unused argument.
  * Pasting inserted text in Visual mode does not work properly.
  * Nested function test fails on AppVeyor.
  * Normal colors are wrong with 'termguicolors'.
  * Line number of current buffer in getbufinfo() is wrong.
  * When using MSVC the GvimExt directory is cleaned twice.
  * Running tests on MS-Windows is a little bit noisy.
  * When using 'termguicolors' on MS-Windows the RGB definition causes
    the colors to be wrong.
  * searchpair() does not work when 'magic' is off.</comment>
    <requestid>449187</requestid>
  </revision>
  <revision rev="184" vrev="1">
    <srcmd5>4825fc3e28eeb1f12cf5f9729ccdc744</srcmd5>
    <version>8.0.172</version>
    <time>1484474947</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 172, fixes the following problems
  * When a C preprocessor statement has two line continuations the
    following line does not have the right indent. (Ken Takata)
  * &quot;:earlier&quot; and &quot;:later&quot; do not work after startup or reading
    the undo file.
  * When the pattern of :filter does not have a separator then
    completion of the command fails.
  * To pass buffer content to system() and systemlist() one has to
    first create a string or list.
  * Running the channel test creates channellog.
  * system() test fails on MS-Windows.
  * system() test fails on OS/X.
  * When sorting zero elements a NULL pointer is passed to qsort(),
    which ubsan warns for.
  * Several float functions are not covered by tests.
  * No command line completion for &quot;:syntax spell&quot; and &quot;:syntax
    sync&quot;.
  * On MS-Windows some float functions return a different value when
    passed unusual values.  strtod() doesn't work for &quot;inf&quot; and &quot;nan&quot;.
  * Using a NULL pointer when using feedkeys() to trigger drawing
    a tabline.
  * EMSG() is sometimes used for internal errors.
  * Build fails when using small features.
  * Build error on Fedora 23 with small features and gnome2.
  * Ruby 2.4 no longer supports rb_cFixnum.
  * Outdated and misplaced comments.
  * Ubsan warns for integer overflow.
  * JSON with a duplicate key gives an internal error. (Lcd)
  * str2nr() and str2float() do not always work with negative values.
  * Still some float functionality is not covered by tests.</comment>
    <requestid>449833</requestid>
  </revision>
  <revision rev="185" vrev="1">
    <srcmd5>56d60279524fb5172a501735c81017d5</srcmd5>
    <version>8.0.194</version>
    <time>1485250198</time>
    <user>dimstar_suse</user>
    <comment>- Add missing %changelog to spec.skeleton 

- Updated to revision 194, fixes the following problems
  * When compiling with EBCDIC defined the build fails. (Yaroslav Kuzmin)
  * For completion &quot;locale -a&quot; is executed on MS-Windows, even though it
    most likely won't work.
  * Setting language in gvim on MS-Windows does not work when libintl.dll
    is dynamically linked with msvcrt.dll.
  * Using :change in between :function and :endfunction fails.
  * When opening a buffer on a directory and inside a try/catch then the
    BufEnter event is not triggered.
  * test_command_count may fail when a previous test interferes, seen on
    MS-Windows.
  * 'formatprg' is a global option but the value may depend on the type of
     buffer. (Sung Pae)
  * Error E937 is used both for duplicate key in JSON and for trying to
    delete a buffer that is in use.
  * When 'cursorbind' and 'cursorcolumn' are both on, the column highlignt
    in non-current windows is wrong.
  * When 'cursorbind' and 'cursorline' are set, but 'cursorcolumn' is not,
   then the cursor line highlighting is not updated. (Hirohito Higashi)
  * Ubsan warns for using a pointer that is not aligned.
  * When in Ex mode and an error is caught by try-catch, Vim still exits
    with a non-zero exit code.
  * The system() test fails on MS-Windows.
  * The error message from assert_notequal() is confusing.
  * Building with a new Ruby version fails.
  * Using NOT_VALID for redraw_later() to update the cursor line/column
    highlighting is not efficient.
  * There are no tests for the :profile command.</comment>
    <requestid>451337</requestid>
  </revision>
  <revision rev="186" vrev="2">
    <srcmd5>f41cd479203f11535b525a08b2c5bdfa</srcmd5>
    <version>8.0.194</version>
    <time>1485862414</time>
    <user>dimstar_suse</user>
    <comment>- Improve summary bsc#1021040</comment>
    <requestid>452700</requestid>
  </revision>
  <revision rev="187" vrev="1">
    <srcmd5>679d24997b4ca21b10df78baa0ec7121</srcmd5>
    <version>8.0.311</version>
    <time>1486547570</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 311, fixes the following problems
  * Double free on exit when using a closure. (James McCoy)
  * Ex command range with repeated search does not work. (Bruce DeVisser)
  * When the GUI window is resized Vim does not always take over the new
    size. (Luchr)
  * Cannot stop diffing hidden buffers. (Daniel Hahler)
  * No tests for &quot;:set completion&quot; and various errors of the :set command.
  * Cannot set terminal key codes with :let.
  * Bracketed paste does not work in Visual mode.
  * Assign test fails in the GUI.
  * Invalid memory access when option has duplicate flag.
  * mode() not sufficiently tested.
  * Asan detects a memory error when EXITFREE is defined. (Dominique Pelle)
  * When using a symbolic link, the package path will not be inserted at
    the right position in 'runtimepath'. (Dugan Chen, Norio Takagi)
  * Cannot use an empty key in json.
  * Not enough testing for GUI functionality.
  * Linebreak tests are old style. 

- Updated to revision 296, fixes the following problems
  * Jumping to a tag that is a static item in the current file fails. 
    (Kazunobu Kuriyama)
  * The test for :profile is slow and does not work on MS-Windows.
  * On MS-Windows the system() test skips a few parts.
  * Some syntax arguments take effect even after &quot;if 0&quot;. (Taylor Venable)
  * Warning for an unused parameter when the libcall feature is disabled.
    Warning for a function type cast when compiling with -pedantic.
  * Some syntax arguments are not tested.
  * When completing a group name for a highlight or syntax command cleared
    groups are included.</comment>
    <requestid>454918</requestid>
  </revision>
  <revision rev="188" vrev="1">
    <srcmd5>a109e252f89fae928e87fab731fe976d</srcmd5>
    <version>8.0.324</version>
    <time>1487149224</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 324, fixes the following problems
  * When a json message arrives in pieces, the start is dropped and the
    decoding fails.
  * Not enough testing for GUI functionality.
  * getcmdtype(), getcmdpos() and getcmdline() are not tested.
  * &quot;:help :[range]&quot; does not work. (Tony Mechelynck)
  * &quot;:help z?&quot; does not work. (Pavol Juhas)
  * No test for setting 'guifont'.
  * Small mistake in 7x13 font name.
  * Insert mode completion does not respect &quot;start&quot; in 'backspace'.
  * Warning for unused variable with small build.
  * When using the tiny version trying to load the matchit plugin gives an
    error. On MS-Windows some default mappings fail.
  * Possible overflow with spell file where the tree length is corrupted.
    CVE-2017-5953 bsc#1024724
  * When running the command line tests there is a one second wait.
  * Illegal memory access with &quot;1;y&quot;.</comment>
    <requestid>456010</requestid>
  </revision>
  <revision rev="189" vrev="2">
    <srcmd5>1ab3cd6844f3f0e153f868f4eb757306</srcmd5>
    <version>8.0.324</version>
    <time>1487461538</time>
    <user>dimstar_suse</user>
    <comment>- Add test87-python36.patch to update test results for Python 3.6</comment>
    <requestid>458498</requestid>
  </revision>
  <revision rev="190" vrev="1">
    <srcmd5>8d0a0436c0d28abce0871058b43088bf</srcmd5>
    <version>8.0.566</version>
    <time>1493103466</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 566, fixes the following problems
  * :windo allows for ! but it's not supported.
  * Undefined behavior when using backslash after empty line.
  * Not enough test coverage for syntax commands.
  * Crash when getting the window position in tmux.
  * Cannot detect Bazel BUILD files on some systems.
  * Using freed memory in :caddbuf after clearing quickfix list.
  * Setting nocompatible for the tiny version moves the cursor.
- Refresh and re-add vim-8.0-ttytype-test.patch
 

- Updated to revision 559, fixes the following problems
  * Test_edit causes older xfce4-terminal to close. (Dominique Pelle)
  * Cppcheck warnings.
  * Edit test may fail on some systems.
  * Swap file exists briefly when opening the command window.
  * Extra line break in verbosefile when using &quot;:echomsg&quot;. (Ingo Karkat)
  * Saving the redo buffer only works one time, resulting in the &quot;.&quot; command
    not working well for a function call inside another function call.
  * No test for the 8g8 command.
  * Some etags format tags file use 0x01, breaking the parsing.
  * The typeahead buffer is reallocated too often.
  * Toupper and tolower don't work properly for Turkish when 'casemap'
    is empty. (Bjorn Linse)
  * Toupper/tolower test with Turkish locale fails on Mac.
  * Toupper and tolower don't work properly for Turkish when 'casemap'
    contains &quot;keepascii&quot;. (Bjorn Linse)
  * Toupper/tolower test fails on OSX without Darwin.
  * Getting the window position fails if both the GUI and term code is
    built in.</comment>
    <requestid>489069</requestid>
  </revision>
  <revision rev="191" vrev="2">
    <srcmd5>e0a8e5bac75c86fabd90448180c85053</srcmd5>
    <version>8.0.566</version>
    <time>1493880776</time>
    <user>dimstar_suse</user>
    <comment>- Extend vimrc with mappings for  8-bit controls key escape sequences

- Conflict with old vim versions to fix the upgrade from 12.3
  boo#1036583</comment>
    <requestid>491803</requestid>
  </revision>
  <revision rev="192" vrev="1">
    <srcmd5>919ac5c3a662b508b4282da2fbff9453</srcmd5>
    <version>8.0.627</version>
    <time>1497687570</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 627, fixes the following problems
  * Call for requesting color and ambiwidth is too early. (Hirohito Higashi)
  * &quot;1gd&quot; may hang.
  * Bracketed paste is still enabled when executing a shell command.
  (Michael Smith)
  * Can't run make with several jobs, creating directories has a race
  condition.
  * The cursor line number becomes negative when using :z^ in an empty
  buffer. (neovim #6557)
  * Building the command table requires Perl.
  * Running parallel make after distclean fails. (Manuel Ortega)
  * Get only one quickfix list after :caddbuf.
  * Using freed memory when resetting 'indentexpr' while evaluating
  it. (Dominique Pelle)
  * Can't build when configure choses &quot;install-sh&quot;. (Daniel Hahler)
  * Warning for uninitialized variable. (John Marriott)
  * :simalt on MS-Windows does not work properly.
  * Duplicate test case for quickfix.
  * Cannot set the valid flag with setqflist().
  * Moving folded text is sometimes not correct.
  * Illegal memory access with z= command. (Dominique Pelle)
  * Fold test hangs on MS-Windows.
  * Memory leak when executing quickfix tests.
  * Test_options fails when run in the GUI.
  * No test for mapping timing out.
  * Configure check for return value of tgetent is skipped.
  * job_stop() often assumes the channel will be closed, while the job
    may not actually be stopped. (Martin Gammelsæter)
  * :simalt still does not work.
  * Cannot add a context to locations.</comment>
    <requestid>501354</requestid>
  </revision>
  <revision rev="193" vrev="2">
    <srcmd5>ca720205541ee57793873935f63290d9</srcmd5>
    <version>8.0.627</version>
    <time>1498045902</time>
    <user>dimstar_suse</user>
    <comment>- Bump priorities so we can upgrade from 12.3</comment>
    <requestid>504632</requestid>
  </revision>
  <revision rev="194" vrev="3">
    <srcmd5>107ce3fca2cee1c3836a8ce0bbf39757</srcmd5>
    <version>8.0.627</version>
    <time>1508323797</time>
    <user>dimstar_suse</user>
    <comment>- Add disable-unreliable-tests.patch to disable unreliable tests
  bsc#1054723</comment>
    <requestid>533609</requestid>
  </revision>
  <revision rev="195" vrev="4">
    <srcmd5>69df3fa7905298d8c30f10b0c276935b</srcmd5>
    <version>8.0.627</version>
    <time>1511273880</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>542599</requestid>
  </revision>
  <revision rev="196" vrev="1">
    <srcmd5>c7af1f64edc0bea87b3dfaefebca6639</srcmd5>
    <version>8.0.1358</version>
    <time>1512292245</time>
    <user>dimstar_suse</user>
    <comment>- Update to revision 1358
  * Too many changes to list
- Fixes CVE-2017-1000382 bsc#1065958
- Refresh patches:
  * disable-unreliable-tests.patch
  * vim-7.3-filetype_spec.patch
  * vim-7.4-disable_lang_no.patch
  * vim-7.4-highlight_fstab.patch
  * vim-8.0-ttytype-test.patch</comment>
    <requestid>546472</requestid>
  </revision>
  <revision rev="197" vrev="1">
    <srcmd5>73f44a59a0a4e04db5571966c96a9d06</srcmd5>
    <version>8.0.1365</version>
    <time>1512766009</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 1365, fixes the following problems
  * Libvterm ANSI colors can not always be recognized from the RGB
    values. The default color is wrong when t_RB is empty.
  * The Terminal highlighting doesn't work in a terminal.
  * Some users don't want to diff with hidden buffers.
  * Terminal window colors wrong when using Terminal highlighting.
  * Recovering does not work when swap file ends in .stz.
  * There is no easy way to get the window position.
  * When one channel test fails others fail as well.</comment>
    <requestid>548041</requestid>
  </revision>
  <revision rev="198" vrev="1">
    <srcmd5>b1df3fb56f7505728ae65456b54ee24d</srcmd5>
    <version>8.0.1390</version>
    <time>1513676892</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 1390, fixes the following problems
  * Balloon shows when cursor is in WinBar.
  * terminal test hangs, executing abcde. (Stucki)
  * Cannot drag status line or vertical separator of new terminal
    window. (UncleBill)
  * MS-Windows: drawing underline, curl and strike-throw is slow, mFallbackDC
    not properly updated.
  * Channel test for callback is flaky.
  * Shift-Insert doesn't always work in MS-Windows console.
  * Profile log may be truncated halfway a character.
  * No error when settting 'renderoptions' to an invalid value before starting
    the GUI.
  * CTRL-A does not work with an empty line. (Alex)
  * Window size wrong after maximizing with WinBar. (Lifepillar)
  * Cursor in terminal not always updated.
  * Cannot call a dict function in autoloaded dict.
  * Autoload script sources itself when defining function.
  * Configure check for selinux does not check for header file.
  * When recovering a file with &quot;vim -r swapfile&quot; the hit-enter prompt is
    at the top of the window.
  * ch_readraw() waits for NL if channel mode is NL.
  * Get &quot;no write since last change&quot; message if a terminal is open.
  * Local additions in help skips some files. (joshklod)
  * Not enough quickfix help; confusing winid.
  * Python 3.5 is getting old.
  * Cannot select modified buffers with getbufinfo().
  * Wordcount test is old style.
  * Char not overwritten with ambiguous width char, if the ambiguous char
    is single width but we reserve double-width space.
  * getqflist() items are missing if not set, that makes it more difficult</comment>
    <requestid>557360</requestid>
  </revision>
  <revision rev="199" vrev="1">
    <srcmd5>178e046ffdbf2363aa089adf7ef6809c</srcmd5>
    <version>8.0.1417</version>
    <time>1514569601</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 1417, fixes the following problems
  * Encoding empty string to JSON sometimes gives &quot;null&quot;.
  * Build fails with --with-features=huge --disable-channel.
  * Too much highlighting with 'hlsearch' and 'incsearch' set.
  * Cannot intercept a yank command.
  * It is not easy to see if a colorscheme is well written.
  * Memory leak when CTRL-G in search command line fails.
  * Pattern with \&amp; following nothing gives an error.
  * :packadd does not load packages from the &quot;start&quot; directory.
  * Warnings and errors when building tiny version. (Tony Mechelynck)
  * Color scheme check script shows up as color scheme.
  * Cannot build with GTK but without XIM. (Guido)
  * Crash with nasty autocommand. (gy741, Dominique Pelle)
  * Using freed buffer in grep command. (gy741, Dominique Pelle)
  * Invalid memory access on exit when autocommands wipe out a buffer.
  * Duplicated code for getting a typed character. CursorHold is called too
    often in the GUI. (lilydjwg)
  * Difficult to track changes to a quickfix list.
  * GUI: CursorHold may trigger before 'updatetime' when using timers.
  * Crash in setqflist().
  * Buffer overflow in :tags command.
  * Hang when using count() with an empty string.
  * Reading invalid memory with CTRL-W :.
  * Using free memory using setloclist(). (Dominique Pelle)
  * Accessing freed memory in :cbuffer.
  * Accessing freed memory in :lfile.
  * Warning for unused function without timers feature.
  * Crash when searching for a sentence.
  * Test doesn't search for a sentence. Still fails when searching for start
    of sentence. (Dominique Pelle)</comment>
    <requestid>558787</requestid>
  </revision>
  <revision rev="200" vrev="1">
    <srcmd5>99afa16898edb8fc9f2751e48ba8ca99</srcmd5>
    <version>8.0.1428</version>
    <time>1516091541</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>562876</requestid>
  </revision>
  <revision rev="201" vrev="2">
    <srcmd5>bcb46856db0aba97a021a2564d3b3902</srcmd5>
    <version>8.0.1428</version>
    <time>1516358987</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>566638</requestid>
  </revision>
  <revision rev="202" vrev="3">
    <srcmd5>94272f8d11a2e6423adc2c1ed2d90552</srcmd5>
    <version>8.0.1428</version>
    <time>1516880161</time>
    <user>dimstar_suse</user>
    <comment>- Make vim require vim-data bsc#1077352 bsc#1075541 bsc#1074790</comment>
    <requestid>568886</requestid>
  </revision>
  <revision rev="203" vrev="1">
    <srcmd5>b4d9fa06ac964c4e9f75641654140f14</srcmd5>
    <version>8.0.1442</version>
    <time>1517668883</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 1442, fixes the following problems
  * Crash when calling term_start() with empty argument.
  * Crash when term_start() fails.
  * MS-Windows: vimtutor fails if %TMP% has special chars.
  * After &quot;:copen&quot; can't get the window-ID of the quickfix
    window. (FalacerSelene)
  * Illegal memory access after undo. (Dominique Pelle)
  * GTK: :promtfind does not put focus on text input. (Adam Novak)
  * Memory leak in test_arabic.
  * Not enough information about what Python version may work.
  * Pkg-config doesn't work with cross compiling.
  * Filetype detection test not updated for change.
  * If cscope fails a search Vim may hang.
  * Terminal window: some vterm responses are delayed.
  * Using &quot;:undo 0&quot; leaves undo in wrong state.
  * Using pointer before it is set.</comment>
    <requestid>571350</requestid>
  </revision>
  <revision rev="204" vrev="2">
    <srcmd5>44a2d1722e4d1382412504cc821e0c34</srcmd5>
    <version>8.0.1442</version>
    <time>1518950224</time>
    <user>dimstar_suse</user>
    <comment>- Split vim-data into vim-data-common package for low-disk usage
  scenarios bsc#1078722 bsc#1078554 bsc#1075541
- Make set mouse= default in suse.vimrc bsc#1079185 bsc#1078564
  bsc#1067890 bsc#1064068 bsc#1062691</comment>
    <requestid>576933</requestid>
  </revision>
  <revision rev="205" vrev="1">
    <srcmd5>03a53153271aa28c19c29e7c4394deb2</srcmd5>
    <version>8.0.1525</version>
    <time>1519557555</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 1525, fixes the following problems
  * Compiler complains about uninitialized variable. (Tony Mechelynck)
  * Missing -D_FILE_OFFSET_BITS=64 may cause problems if a library is compiled
    with it.
  * Cannot act on edits in the command line.
  * Acessing freed memory after window command in auto command. (gy741)
  * Still too many old style tests.
  * Segmentation fault when Ruby throws an exception inside :rubyfile command.
  * Slow redrawing with DirectX.
  * Endless loop when gui_mch_stop_blink() is called while blink_state is
    BLINK_OFF. (zdohnal)
  * It is difficult to set the python home directory properly for Python
    2.7 and 3.5 since both use $PYTHONHOME.
  * Terminal test fails on some systems. (jonathonf)
  * Terminal test fails on some slow terminals.
  * When in silent mode too much output is buffered.
  * If $SHELL contains a space then the default value of 'shell' is
    incorrect. (Matthew Horan)
  * Timer test on travis Mac is still flaky.
  * Clojure now supports a shebang line.
  * Filetype detection test does not check all scripts.
  * Cannot handle change of directory.
  * Missing file in patch.
  * Missing another file in patch.
  * Missing yet another file in patch.
  * Test fails without 'autochdir' option.
  * Completing directory after :find does not add slash.
  * Python2 and python3 detection not tested. (Matej Cepl)
  * Older GTK versions don't have gtk_entry_get_text_length().
  * Libvterm doesn't handle illegal byte sequence correctly.</comment>
    <requestid>578332</requestid>
  </revision>
  <revision rev="206" vrev="1">
    <srcmd5>3f03f4ec68bb5cd2074c54f00094e94a</srcmd5>
    <version>8.0.1568</version>
    <time>1520329486</time>
    <user>dimstar_suse</user>
    <comment>- Updated to revision 1568, fixes the following problems
  * No test using a screen dump yet.
  * Screen dump test fails on MS-Windows.
  * Dead code found.
  * Assert_equalfile() does not close file descriptors. (Coverity)
  * Dump test fails when using a shadow directory.
  * Cannot use 24 bit colors in MS-Windows console.
  * Compiler warnings without termguicolors feature.
  * Libterm doesn't support requesting fg and bg color.
  * C syntax test fails when using gvim
  * C syntax test still fails when using gvim.
  * Quotestar test is flaky when using the GUI.
  * Xxd does not skip NUL lines when using ebcdic.
  * Popupmenu is too far left when completion is long. (Linwei)
  * No test for the popup menu positioning.
  * Popup menu positioning fails with longer string.
  * synpat_T is taking too much memory.
  * Terminal screen dump does not include cursor position.
  * With 'termguicolors' Normal color doesn't work correctly.
  * When using 'termguicolors' SpellBad doesn't show.
  * Screen dumps not included in distribution.
  * Using feedkeys() in a terminal window may trigger mappings. 
    (Charles Sheridan)
  * Undo in the options window makes it empty.
  * Screen dump test script not included in distribution.
  * Various small problems in test files.
  * Various small problems in source files.
  * On Mac 'maxmemtot' is set to a weird value.
  * May leak file descriptors when executing job.
  * Cannot see what digraph is used to insert a character.</comment>
    <requestid>582603</requestid>
  </revision>
  <revision rev="207" vrev="2">
    <srcmd5>6adcc69b208095e2f15fc9256c137e10</srcmd5>
    <version>8.0.1568</version>
    <time>1520852933</time>
    <user>dimstar_suse</user>
    <comment>- Switch to make -j1 clean to see if it fixes random build failures
  on Leap/SLE 15.</comment>
    <requestid>584392</requestid>
  </revision>
  <revision rev="208" vrev="3">
    <srcmd5>3708abe9e3d1301a37f9aee3dbd9418a</srcmd5>
    <version>8.0.1568</version>
    <time>1522316885</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>590762</requestid>
  </revision>
  <revision rev="209" vrev="4">
    <srcmd5>2e0b7ea7ddfd976989c616af32084ec2</srcmd5>
    <version>8.0.1568</version>
    <time>1523029414</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>593550</requestid>
  </revision>
  <revision rev="210" vrev="1">
    <srcmd5>bc4a674950161e6ec39c70c8454a6266</srcmd5>
    <version>8.1.0020</version>
    <time>1527276908</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>611546</requestid>
  </revision>
  <revision rev="211" vrev="1">
    <srcmd5>14af48363e15d2bfa936c1f60cebfa46</srcmd5>
    <version>8.1.0042</version>
    <time>1529066167</time>
    <user>maxlin_factory</user>
    <comment>- update to 8.1 revision 0042
- modernize spec.skeleton
 * if omni completion opens a window Insert mode is stopped
 * Attribute &quot;width&quot; missing from python window attribute list
 * Cannot easily delete lines in another buffer
 * Cannot easily append lines to another buffer
 * Not restoring Insert mode if leaving a prompt buffer by using a
     mouse click
 * Not easy to switch between prompt buffer and other windows
- update to 8.1 revision 0034 
 * cursor not restored with &quot;:edit #&quot;
 * keys to stop Vim in terminal are wrong
 * BS in prompt buffer starts new line
 * terminal test aucmd_on_close if flaky
 * stoping Vim running in a terminal may not work
 * difficult to make a plugin that feeds a line to a job
 * gcc 8.1 warns for use of strncpy()
 * repeating put from expression register fails
</comment>
    <requestid>616254</requestid>
  </revision>
  <revision rev="212" vrev="1">
    <srcmd5>0f76e9ff2e6b77ec131e8ca3fd654255</srcmd5>
    <version>8.1.0115</version>
    <time>1530740944</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>619109</requestid>
  </revision>
  <revision rev="213" vrev="1">
    <srcmd5>3a98131d92bf34f2b792fca18733a132</srcmd5>
    <version>8.1.0179</version>
    <time>1531813183</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>622530</requestid>
  </revision>
  <revision rev="214" vrev="1">
    <srcmd5>1af3d25b39deb6b2d8f71d6cbbe29e75</srcmd5>
    <version>8.1.0200</version>
    <time>1532361511</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>624441</requestid>
  </revision>
  <revision rev="215" vrev="1">
    <srcmd5>70b0f79e4e789f6434e05aaaf60a0c0c</srcmd5>
    <version>8.1.0229</version>
    <time>1533214580</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>626508</requestid>
  </revision>
  <revision rev="216" vrev="1">
    <srcmd5>c6924664e98a9148ee406b55e8d5a5bf</srcmd5>
    <version>8.1.0235</version>
    <time>1533631773</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>627251</requestid>
  </revision>
  <revision rev="217" vrev="1">
    <srcmd5>1259b5ce007bff169c5d4e746d65299e</srcmd5>
    <version>8.1.0258</version>
    <time>1534543025</time>
    <user>dimstar_suse</user>
    <comment>- update to 8.1.0258
 * Using setline() in TextChangedI splits undo.
 * Saving and restoring window title does not always work.
 * using full path is not supported for 'backupdir'
 * GTK: when screen DPI changes Vim does not handle it.
 * duplicated quickfix code.
 * Python: error message for failing import is incorrect.
 * Build failure without the +eval feature.
 * calling setline() in TextChangedI autocmd breaks undo
 * no redraw when using a STOP signal on Vim and then CONT
 * Using :term ++close ++hidden closes a window
 * Insert mode completion may use an invalid buffer pointer.
 * Effect of &quot;:tabmove N&quot; is not clear.
 * g:actual_curbuf set in wrong scope. 
 * Now Ruby build fails on other systems.
 * 'buftype' is cleared when using &quot;:term ++hidden cat&quot;
 * Ruby build fails when ruby_intern is missing (forwarded request 628368 from mimi_vx)</comment>
    <requestid>628369</requestid>
  </revision>
  <revision rev="218" vrev="1">
    <srcmd5>51769c5f32710430bf4b4ca5a45f021c</srcmd5>
    <version>8.1.0318</version>
    <time>1536678515</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>631042</requestid>
  </revision>
  <revision rev="219" vrev="1">
    <srcmd5>5b3a078e846f3a9bb77af4bffc7bf395</srcmd5>
    <version>8.1.0401</version>
    <time>1537436298</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>636164</requestid>
  </revision>
  <revision rev="220" vrev="1">
    <srcmd5>19054501c7a3bfb03c834777d362ed69</srcmd5>
    <version>8.1.0436</version>
    <time>1538502025</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>638680</requestid>
  </revision>
  <revision rev="221" vrev="1">
    <srcmd5>d4b8e9162f15d16b93dab4857b196cc8</srcmd5>
    <version>8.1.0451</version>
    <time>1539251220</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>640239</requestid>
  </revision>
  <revision rev="222" vrev="1">
    <srcmd5>0890bfa95822d4d44b84ac89398c163a</srcmd5>
    <version>8.1.0479</version>
    <time>1540319580</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>642213</requestid>
  </revision>
  <revision rev="223" vrev="1">
    <srcmd5>74158c5c6f020f8f8907f0907b8fc908</srcmd5>
    <version>8.1.0503</version>
    <time>1542012495</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>646073</requestid>
  </revision>
  <revision rev="224" vrev="1">
    <srcmd5>d89ff8c5b34ff89d1c5a719d8442769a</srcmd5>
    <version>8.1.0527</version>
    <time>1543223810</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>649207</requestid>
  </revision>
  <revision rev="225" vrev="1">
    <srcmd5>c125cabc04dca3299c09409c92507b7a</srcmd5>
    <version>8.1.0565</version>
    <time>1544539430</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>655605</requestid>
  </revision>
  <revision rev="226" vrev="1">
    <srcmd5>30519ee292951f2b87bdc7bbcf6c3b39</srcmd5>
    <version>8.1.0687</version>
    <time>1547211622</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.1.0687 , fixes the following problems
  + refreshed disable-unreliable-tests.patch
  * Asan complains about reading before allocated block.
  * SGR not enabled for mintty because $TERM is &quot;xterm&quot;.
  * Error for NUL byte in ScreenLines goes unnoticed.
  * Error message for NUL byte in ScreenLines breaks Travis CI.
  * Execute() always resets display column to zero. (Sha Liu)
  * 'commentstring' not used when adding fold marker. (Maxim Kim)
  * Non-silent execute() resets display column to zero.
  * Stopping a job does not work properly on OpenBSD.
  * Cannot redefine user command without ! in same script
  * 'commentstring' not used when adding fold marker in C.
  * Termdebug: clearing multi-breakpoint does not work.
  * Indent script tests pick up installed scripts.
  * Tabpage right-click menu never shows &quot;Close tab&quot;.
  * Cannot disable arabic, rightleft and farsi in configure.
  * Cannot attach properties to text.
  * Invalid memory access when using text properties.
  * Double free without the text properties feature.
  * Text properties are not enabled.
  * Using illogical name for get_dict_number()/get_dict_string().
  * With search CTRL-L does not pick up composing characters.
  * Undo test may fail on MS-Windows.
  * :digraph output is not easy to read.
  * GvimExt: realloc() failing is not handled properly.
  * Cannot define a sign with space in the text.
  * Compilation error in gvimext.cpp.
  * When a job ends the closed channels are not handled.
  * Channel sort test is flaky.
  * The libvterm tests are not run as part of Vim tests. (forwarded request 662793 from mimi_vx)</comment>
    <requestid>662794</requestid>
  </revision>
  <revision rev="227" vrev="1">
    <srcmd5>a0c99c2c3e5eb9b7ed39bd5ef1db75e7</srcmd5>
    <version>8.1.0877</version>
    <time>1549623764</time>
    <user>coolo</user>
    <comment></comment>
    <requestid>672564</requestid>
  </revision>
  <revision rev="228" vrev="1">
    <srcmd5>1481a5efec8bcca0c96fc8aab3db7525</srcmd5>
    <version>8.1.0892</version>
    <time>1551468514</time>
    <user>coolo</user>
    <comment></comment>
    <requestid>679173</requestid>
  </revision>
  <revision rev="229" vrev="1">
    <srcmd5>234eae5e353d0b3f47a0413ccedc9dcc</srcmd5>
    <version>8.1.1005</version>
    <time>1552571766</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>684249</requestid>
  </revision>
  <revision rev="230" vrev="2">
    <srcmd5>9a97176984bbf226e88dafcc1d982d87</srcmd5>
    <version>8.1.1005</version>
    <time>1552901668</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>685301</requestid>
  </revision>
  <revision rev="231" vrev="1">
    <srcmd5>d3b54d81390dd8694f98ffa3f3190d22</srcmd5>
    <version>8.1.1066</version>
    <time>1554189496</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.1.1066, fixes the following problems
  * Test fails because t_F2 is not set.
  * Repeated code in quickfix support.
  * Using closure may consume a lot of memory.
  * Lua interface leaks memory.
  * Indent from autoindent not removed from blank line. (Daniel Hahler)
  * Memory leak with E461.
  * Quickfix buffer shows up in list, can't get buffer number.
  * Off-by-one error in filetype detection.
  * Window cleared when entering Terminal-Normal twice. (Epheien)
  * Lua: may garbage collect function reference in use.
  * Compiler warning for Python3 interface.
  * pyeval() and py3eval() leak memory.
  * May use NULL pointer when out of memory. (Coverity)
  * May use NULL pointer when indexing a blob. (Coverity)
  * Stray log calls in terminal code. (Christian Brabandt)
  * Checking NULL pointer after addition. (Coverity)
  * Unused condition. (Coverity)
  * Memory usage test sometimes fails.
  * DirectWrite doesn't take 'linespace' into account.
  * Quickfix function arguments are inconsistent.
  * Memory usage test may still fail.
  * Warnings from clang static analyzer. (Yegappan Lakshmanan)
  * Memory usage test may still fail on some systems. (Elimar Riesebieter)
  * Too many #ifdefs.
  * prop_remove() second argument is not optional.
  * Quickfix function arguments are inconsistent.
  * Memory usage test may still fail on some systems.
  * Arabic support excludes Farsi.
  * FEAT_TAG_ANYWHITE is not enabled in any build. (forwarded request 689784 from mimi_vx)</comment>
    <requestid>689785</requestid>
  </revision>
  <revision rev="232" vrev="1">
    <srcmd5>22ce8e57ac51de70d25b2631cc829ca2</srcmd5>
    <version>8.1.1137</version>
    <time>1554930643</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>692271</requestid>
  </revision>
  <revision rev="233" vrev="1">
    <srcmd5>dcd6b8cb0759e24f59414d9e7c825e41</srcmd5>
    <version>8.1.1198</version>
    <time>1556311299</time>
    <user>maxlin_factory</user>
    <comment>- Updated to version 8.1.1198, fixes the following problems
  * Xterm mouse wheel escape sequence is not tested.
  * Plugins don't get notified when the popup menu changes.
  * No test for what is fixed in patch 8.1.0716.
  * Not easy to find out what neighbors a window has.
  * Terminal winpos test fails with very large terminal. (Dominique Pelle)
  * No test for dragging the window separators with the mouse.
  * May pass weird strings to file name expansion.
  * Too strict checking of the 'spellfile' option.
  * Compiler warning for unused function. (Tony Mechelynck)
  * Desktop file translations are requiring manual updates.
  * CTRL-L with 'incsearch' does not pick up char under cursor. (Smylers)
  * Building desktop files fails with older msgfmt.
  * Generating desktop files not tested on Travis.
  * Build fails when using shadow directory.
  * Msgfmt complains about missing LINGUAS file. (Tony Mechelynck)
  * Getting a newer msgfmt on Travis is too complicated.
  * Termcodes tests can be improved.
  * Unicode emoji and other image characters not recognized.
  * Unicode tables are out of date.
  * Json encoded string is sometimes missing the final NUL.
  * Termcodes test would fail in a very big terminal.
  * Unreachable code.
  * Incorrect coverage information; typo in color name.
  * Codecov does not report all the coverage information.
  * Gettitle test is failing when server name differs. (Kenta Sato)
  * No test for mouse clicks in the terminal tabpage line.
  * Gettitle test can still fail when another Vim is running.
  * No test for closing tab by click in tabline.
  * Not all screen update code of the terminal window is executed in tests. (forwarded request 697092 from mimi_vx)</comment>
    <requestid>697093</requestid>
  </revision>
  <revision rev="234" vrev="1">
    <srcmd5>98949f27e4a81d01556ea56b2bf0fcc1</srcmd5>
    <version>8.1.1282</version>
    <time>1557263489</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.1.1282, fixes the following problems
- refresh disable-unreliable-tests.patch
  * Bracketed paste may remain active after Vim exists, because the terminal
  emulater restores the setting.
  * No test for :abclear.
  * Old style comments in debugger source.
  * Output of :command is hard to read.
  * Always get regexp debugging logs when building with -DDEBUG.
  * Some autocmd tests are old style.
  * Output of :command with address completion is not nice.
  * A BufReadPre autocommand may cause the cursor to move.
  * User command parsing and listing not properly tested.
  * Some compilers give warning messages.
  * Links to repository use wrong file name.
  * Clever compiler warns for buffer being too small.
  * Support for user commands is spread out. No good reason to make user
  commands optional.
  * Not all user command code is tested.
  * Signal PWR is not tested.
  * &quot;make clean&quot; in top dir does not cleanup indent test output.
  * Old style tests.
  * &quot;make clean&quot; does not remove generated src/po files.
  * Mouse middle click is not tested.
  * MS-Windows: no space reserved for font quality name.
  * Cannot set a directory for a tab page.
  * Not checking for NULL return from alloc().
  * Build fails on MS-Windows.
  * Filtering does not work when listing marks.
  * Middle mouse click test fails without a clipboard.
  * {not in Vi} remarks get in the way of useful help text.</comment>
    <requestid>700981</requestid>
  </revision>
  <revision rev="235" vrev="1">
    <srcmd5>0622d6ce10a03b2b434c80a3fe5a4c67</srcmd5>
    <version>8.1.1330</version>
    <time>1558129107</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.1.1330, fixes the following problems
- refreshed disable-unreliable-tests.patch
  * Running make in src/po leaves LINGUAS file behind. (Ken Takata)
  * Delaying half a second after the top-bot message.
  * Detecting *.tmpl as htmlcheetah is outdated.
  * Test17 is old style.
  * Running tests leaves XTest_tabpage_cmdheight file behind.
  * Cannot build with +eval but without +mouse.
  * Search stats don't show for mapped command.
  * May not have enough space to add &quot;W&quot; to search stats.
  * .hgignore and .gitignore are either distributed or in git, not both.
  * Not easy to change directory and restore.
  * Invalid command line arguments not tested.
  * When vimrun.exe does not exist external command may fail.
  * Crash when using invalid command line argument.
  * Invalid argument test fails without GTK.
  * Invalid argument test fails without X clipboard.
  * &quot;extends&quot; from 'listchars' is used when 'list' is off. (Hiroyuki Yoshinaga)
  * In a terminal 'ballooneval' does not work right away.
  * When compiled with VIMDLL some messages are not shown.
  * v:beval_text is not tested in Visual mode.
  * Not possible to hide a balloon.
  * There is no easy way to manipulate environment variables.
  * Borland support is outdated and doesn't work.
  * Cannot reconnect to the X server after it restarted.
  * The Normal highlight is not defined when compiled with GUI.
  * Test for Normal highlight fails on MS-Windows GUI.
  * Named function arguments are never optional.
  * Aborting an autocmd with an exception is not tested.
  * Coverity warning for using uninitialized variable.</comment>
    <requestid>702864</requestid>
  </revision>
  <revision rev="236" vrev="1">
    <srcmd5>53218854764233e3a9bccc4220021dca</srcmd5>
    <version>8.1.1467</version>
    <time>1559902644</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.1.1467, fixes the following problems
  * Test 29 is old style.
  * Cannot flush change listeners without also redrawing.  The line numbers
    in the list of changes may become invalid.
  * Text properties don't always move after changes.
  * When buffer is hidden &quot;F&quot; in 'shortmess' is not used.
  * Listener callback is called after inserting text.
  * Some eval functionality is not covered by tests.
  * Get empty text prop when splitting line just after text prop.
  * Hang when concealing the '&gt;' shown for a wide char that doesn't fit in
    the last cell.
  * Installer needs to product name et al.
  * Attributes from 'cursorline' overwrite textprop.
  * Text properties are lost when joining lines.
  * Using freed memory when joining line with text property.
  * Text properties not adjusted for Visual block mode delete.
  * Coverity complains about possibly using a NULL pointer and copying a
    string into a fixed size buffer.
  * Stuck in sandbox with &quot;:s/../\=Function/gn&quot;.
  * Error for Python exception does not show useful info.
  * Fractional scroll position not restored after closing window.
  * Running tests may cause the window to move.
  * If writing runs into a conversion error the backup file is deleted.
  * &quot;W&quot; for wrapping not shown when more than 99 matches.
  * Text property wrong after :substitute.
  * Undofile() reports wrong name. (Francisco Giordano)
  * Undo test fails on Mac.
  * Getting a list of text lines is clumsy.
  * Obvious mistakes are accepted as valid expressions.
  * Some text in heredoc assignment ends the text. (Ozaki Kiichi)</comment>
    <requestid>708048</requestid>
  </revision>
  <revision rev="237" vrev="1">
    <srcmd5>691dfd7f2cb5d4be071fec5fb0de4eb5</srcmd5>
    <version>8.1.1561</version>
    <time>1561195426</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.1.1561, fixes the following problems
- refreshed patches:
    disable-unreliable-tests.patch
    vim-7.4-highlight_fstab.patch
  * Cscope test fails.
  * The generated desktop files may be invalid.
  * No test for checking the cursor style response.
  * New Unicode character U32FF missing from double-width table.
  * 'background' not correctly set for 2-digit rgb termresponse.
  * Add_termcap_entry() is not tested.
  * New resolve() implementation causes problem for plugins.
  * 'ttybuiltin' is not tested.
  * Search string not displayed when 'rightleft' is set.
  * No statistics displayed after running tests.
  * Test summary fails in the tiny version.
  * Still an error when running tests with the tiny version.
  * Change included for debugging only.
  * Length for two-digit rgb termresponse is off by one.
  * No test for wincol() depending on the 'number' option.
  * Skipped tests are not properly listed.
  * Some tests are slow.
  * Double free when garbage_collect() is used in autocommand.
  * A listener change is merged even when it adds a line. (Paul Jolly)
  * Older msgfmt cannot generate proper .desktop file.
  * Summary of tests has incorrect failed count.
  * Sign order wrong when priority was changed.
  * When a single test fails the exit code is not set. (Daniel Hahler)
  * When skipping over code after an exception was thrown expression evaluation
  is aborted after a function call. (Ingo Karkat)
  * Redrawing with popups is slow and causes flicker.</comment>
    <requestid>710357</requestid>
  </revision>
  <revision rev="238" vrev="1">
    <srcmd5>1abac2d6b1ad3dc35c3cf8d6833167dd</srcmd5>
    <version>8.1.1600</version>
    <time>1561731112</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.1.1600, fixes the following problems
  * Popup_setoptions() is not implemented yet.
  * Popup window not always redrawn after popup_setoptions().
  * Crash when using closures.
  * Sign column takes up space.  (Adam Stankiewicz)
  * Error message when terminal closes while it is not in the current tab.
  * Localtime_r() does not respond to $TZ changes.
  * Cannot build with signs but without diff feature.
  * Icon signs not displayed properly in the number column.
  * textprop highlight starts too early if just after a tab.
  * Compiler warnings with tiny build. (Tony Mechelynck)
  * Textprop test fails if screenhots do not work.
  * Tabpage option not yet implemented for popup window.
  * Compiler warning for unused argument.
  * Command line redrawn for +arabic without Arabic characters. (Dominique
  Pelle)
  * Dict and list could be GC'ed while displaying error in a timer. (Yasuhiro
  Matsumoto)
  * Cannot make part of a popup transparent.
  * Shared functions for testing are disorganised.
  * Cannot build with +textprop but without +timers.
  * Set_ref_in_list() only sets ref in items.
  * The evalfunc.c file is getting too big.
  * :let-heredoc does not trim enough.
  * Error number used in two places.
  * Redraw problem when sign icons in the number column.
  * In :let-heredoc line continuation is recognized.
  * Popup window does not indicate scroll position.
  * Popup window test fails.
  * On error garbage collection may free memory in use.</comment>
    <requestid>712166</requestid>
  </revision>
  <revision rev="239" vrev="1">
    <srcmd5>f01a488cc82144740083bca2b06b696b</srcmd5>
    <version>8.1.1694</version>
    <time>1563366198</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.1.1694, fixes the following problems
  * Cannot specify highlighting for popup window scrollbar.
  * Missing changes to popup window test file.
  * Popup window cannot overflow on the left or right.
  * Crash when using unknown highlighting in text property.
  * Popup window scroll test is flaky.
  * Vim may delay processing messages on a json channel. (Pontus Leitzler)
  * On a narrow screen &quot;:hi&quot; output is confusing.
  * Popup window scrollbar does not respond to click.
  * The evalfunc.c file is too big.
  * The user cannot easily close a popup window.
  * There is no way to add or load a buffer without side effects.
  * Bufadd() reuses existing buffer without a name.
  * Cannot show an existing buffer in a popup window.
  * Popup window test fails with Athena and Motif.
  * 'numberwidth' can only go up to 10.
  * Crash when passing buffer number to popup_create(). (Yasuhiro Matsumoto)
  * No test for popup window with mask and position fixed.
  * Amiga-like systems quickly run out of stack.
  * Tests are not run with GUI on Travis.
  * No test for popup window with border and mask.
  * Amiga: time.h included twice.
  * Wrong width if displaying a lot of lines in a popup window.
  * Display wrong with signs in narrow number column.
  * When testing in the GUI may try to run gvim in a terminal.
  * Script line numbers are not exactly right.
  * No test for closing a popup window with a modified buffer.
  * Header file contains mixed comment style.
  * Popup window functions not in list of functions.
  * Terminal function help is in the wrong file.</comment>
    <requestid>715469</requestid>
  </revision>
  <revision rev="240" vrev="1">
    <srcmd5>209ed74e9a6a0fc70ddc910b8999d1ee</srcmd5>
    <version>8.1.1741</version>
    <time>1564302099</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>718297</requestid>
  </revision>
  <revision rev="241" vrev="2">
    <srcmd5>fa654ed4ad8f5ff51d342b601cac1123</srcmd5>
    <version>8.1.1741</version>
    <time>1567423126</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>726617</requestid>
  </revision>
  <revision rev="242" vrev="1">
    <srcmd5>3dacaa0ce2c1463d0ea1d142d1d434be</srcmd5>
    <version>8.1.2052</version>
    <time>1569367341</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.1.2052, fixes the following problems
- refreshed patches:
   disable-unreliable-tests.patch
   vim-8.0-ttytype-test.patch
  * Cleared/added match highlighting not updated in other window. (Andi
  Massimino)
  * Still some match functions in evalfunc.c.
  * 'hlsearch' and match highlighting in the wrong place.
  * Build error without the conceal feature.
  * Compiler warning for unused argument.
  * &quot;:dl&quot; is seen as &quot;:dlist&quot; instead of &quot;:delete&quot;.
  * Compiler warning for unused variables. (Tony Mechelynck)
  * :args output is not aligned.
  * Coverity warns for using negative index.
  * Depending on the terminal width :version may miss a line break.
  * When redrawing popups plines_win() may be called often.
  * Resizing hashtable is inefficient.
  * Use of popup window mask is inefficient.
  * Build failure.
  * Leaking memory when using a popup window mask.
  * Autocommand that splits window messes up window layout.
  * Text added with appendbufline() to another buffer isn't displayed.
  * Count of g$ not used correctly when text is not wrapped.
  * No mode char for terminal mapping from maparg().
  * Extra line break for wrapping output of :args.
  * Filetype &quot;vuejs&quot; causes problems for some users.
  * Some filetype rules are in the wrong place.
  * Evalfunc.c is still too big.
  * &quot;:browse oldfiles&quot; is not tested.
  * get(func, dict, def) does not work properly.</comment>
    <requestid>731703</requestid>
  </revision>
  <revision rev="243" vrev="1">
    <srcmd5>bb7daac4d8d3432a302ae04679e12e7f</srcmd5>
    <version>8.1.2148</version>
    <time>1571751563</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.1.2148, fixes the following problems
  * Using &quot;x&quot; before a closed fold may delete that fold.
  * SafeStateAgain not triggered if callback uses feedkeys().
  * Compiler test for Perl may fail.
  * Not easy to jump to function line from profile.
  * &quot;make test&quot; for indent files doesn't cause make to fail.
  * The screen.c file is much too big.
  * Function for ex command is named inconsistently.
  * Fix for &quot;x&quot; deleting a fold has side effects.
  * &quot;precedes&quot; in 'listchars' not used properly.
  * The mouse code is spread out.
  * Some tests fail when +balloon_eval_term is missing but _balloon_eval is
  present. (Dominique Pelle)
  * No tests for state().
  * No tests for SafeState and SafeStateAgain.
  * Test for SafeState and SafeStateAgain may fail.
  * Test for SafeStateAgain may still fail.
  * Mouse code is spread out.
  * When 'wincolor' is set text property changes highlighting. (Andy Stewart)
  * &quot;gk&quot; moves to start of line instead of upwards.
  * When editing a buffer 'colorcolumn' may not work.
  * Test for SafeState autocommand is a bit flaky.
  * Get many log messages when waiting for a typed character.
  * Crash when trying to put a terminal buffer in a popup window.
  * The ops.c file is too big.
  * Build error with +textprop but without +terminal. (Tony Mechelynck)
  * Popup window test fails without +terminal.
  * The terminal API is limited and can't be disabled.
  * The spell.c file is too big.
  * Some files have a weird name to fit in 8.3 characters.</comment>
    <requestid>740984</requestid>
  </revision>
  <revision rev="244" vrev="2">
    <srcmd5>b77dd40e8d4de361293b06ae7514dee0</srcmd5>
    <version>8.1.2148</version>
    <time>1572021578</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>742143</requestid>
  </revision>
  <revision rev="245" vrev="1">
    <srcmd5>c65dca44ee1ca2e6912222d9e06eec23</srcmd5>
    <version>8.1.2233</version>
    <time>1572774826</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.1.2233, fixes the following problems
- dropped python38-config.patch (upstream merged)
- refreshed  disable-unreliable-tests.patch and vim-8.0.1568-defaults.patch
  * No test for right click extending Visual area.
  * Crash when running out of memory very early.
  * No test for 'ttymouse' set from xterm version response.
  * State test is a bit flaky.
  * Combining text property and syntax highlight is wrong. (Nick Jensen)
  * Quickfix window height wrong when there is a tabline. (Daniel Hahler)
  * In a terminal window 'cursorlineopt' does not work properly.
  * First character after Tab is not highlighted.
  * Libvterm source files missing from distribution.
  * Terminal attributes missing in Terminal-normal mode.
  * Some mappings are listed twice.
  * Cannot build with +syntax but without +terminal.
  * Mapping test fails.
  * Popup resize test is flaky. (Christian Brabandt)
  * Cannot build with +spell but without +syntax.
  * Stuck when using &quot;j&quot; in a popupwin with popup_filter_menu if a line wraps.
  * Rubyeval() not tested as a method.
  * Mapping test fails on MS-Windows.
  * Heredoc assignment not skipped in if block.
  * Terminal flags are never reset.
  * Cannot build without the +termresponse feature.
  * Mouse support not always available.
  * Spell highlight is wrong at start of the line.
  * Searchit() has too many arguments.
  * Screen not recognized as supporting &quot;sgr&quot; mouse codes.
  * Meson files are not recognized.
  * Syntax attributes not combined with Visual highlighting. (Arseny Nasokin)</comment>
    <requestid>743826</requestid>
  </revision>
  <revision rev="246" vrev="1">
    <srcmd5>29372f26bef429e5c0aa7bbeccdc36e6</srcmd5>
    <version>8.1.2383</version>
    <time>1575728100</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.1.2383, fixes the following problems
 + refreshed patches: vim-7.3-help_tags.patch
                      vim-7.3-name_vimrc.patch
                      vim-8.1.0297-dump3.patch
  * Cannot get the Vim command line arguments.
  * get_short_pathname() fails depending on encoding.
  * &quot;C&quot; with 'virtualedit' set does not include multi-byte char.
  * Ml_get error if pattern matches beyond last line.
  * Mode() result after usign &quot;r&quot; depends on whether CURSOR_SHAPE is
  defined. (Christian Brabandt)
  * Error in docs tags goes unnoticed.
  * Popup window width changes when scrolling.
  * Match highlight does not combine with 'wincolor'.
  * Creating docs tags uses user preferences. (Tony Mechelynck)
  * 'wrapscan' is not used for &quot;gn&quot;.
  * Third character of 'listchars' tab shows in wrong place when 'breakindent'
  is set.
  * Some tests are still in old style.
  * &quot;make vimtags&quot; does not work in runtime/doc.
  * CTRL-W dot does not work in a terminal when modifyOtherKeys is enabled.
  * &quot;make vimtags&quot; does not print any message.
  * CTRL-U and CTRL-D don't work in popup window.
  * &quot;:term command&quot; may not work without a shell.
  * Compiler warning for int size.
  * Using &quot;which&quot; to check for an executable is not reliable.
  * May get hit-enter prompt after entering a number. (Malcolm Rowe)
  * Running tests may leave XfakeHOME behind.
  * With modifyOtherKeys set 'noesckeys' doesn't work. (James McCoy)
  * Unpack assignment in function not recognized.
  * 'noesckeys' test fails in GUI.</comment>
    <requestid>753275</requestid>
  </revision>
  <revision rev="247" vrev="1">
    <srcmd5>e6f5ede993606f9d4d37b001440b2096</srcmd5>
    <version>8.2.0000</version>
    <time>1576505938</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 8.2.0000
 * make depend&quot; does not work correctly for libvterm.
 * Crash when calling popup_close() in win_execute()
 * With a long file name the hit-enter prompt appears.
 * bufnr('$') is wrong after recycling popup buffer.
 * loading menus sets v:errmsg.
 * popup menu flickers if an info popup is used.
 * Crash when evaluating expression with error.
 * Function argument copied unnecessarily.
 * syntax menu and build instructions outdated.
 * matchadd_conceal test fails under valgrind.
 * :cexpr does not handle | in expression.
 * Use // comments where appropriate.
 * 'wincolor' is not used for 'listchars'.
 * Opening cmdline window with feedkeys() does not work.</comment>
    <requestid>756787</requestid>
  </revision>
  <revision rev="248" vrev="1">
    <srcmd5>8fc05e0b33e70b42d5dc27ac8a8b4b33</srcmd5>
    <version>8.2.0063</version>
    <time>1577972430</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.0063, fixes the following problems
  * #endif comments do not reflect corresponding #ifdef.
  * &quot;dj&quot; only deletes first line of closed fold.
  * Build file dependencies are incomplete.
  * Get E685 and E931 if buffer reload is interrupted.
  * Duplication in version info.
  * Test using long file name may fail. (Vladimir Lomov)
  * Popup menu positioned wrong with folding in two tabs.
  * Test72 is old style.
  * Test64 is old style.
  * Screen updating wrong when opening preview window.
  * Some undo functionality is not tested.
  * Not using a typedef for condstack.
  * Test69 and test95 are old style.
  * Not all modeline variants are tested.
  * Test name used twice, option not restored properly.
  * :join does not add white space where it should. (Zdenek Dohnal)
  * Cannot get number of lines of another buffer.
  * Mouse clicks in the command line not tested.
  * Click in popup window doesn't close it in the GUI. (Sergey Vlasov)
  * Command line editing not sufficiently tested.
  * Filetype Rego not recognized.
  * Repeated word in comment.
  * Still some /* */ comments.
  * Searchpairpos() is not tested.
  * &quot;gF&quot; does not work on output of &quot;verbose command&quot;.
  * Crash when make_extmatch() runs out of memory.
  * Missing check for out of memory.
  * Saving and restoring called_emsg is clumsy.
  * Not enough test coverage for match functions.</comment>
    <requestid>760080</requestid>
  </revision>
  <revision rev="249" vrev="1">
    <srcmd5>dc16839303b458abf78fb7b4689dcc30</srcmd5>
    <version>8.2.0119</version>
    <time>1579346179</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.0119, fixes the following problems
  * Printf formats are not exactly right.
  * Hgignore is out of sync from gitignore.
  * When sign text is changed a manual redraw is needed. (Pontus Lietzler)
  * Corrupted text properties when expanding spaces.
  * prop_find() is not implemented.
  * VAR_SPECIAL is also used for booleans.
  * Illegal memory access when using 'cindent'.
  * &quot;make cmdidxs&quot; fails.
  * Info about sourced scripts is scattered.
  * Byte2line() does not work correctly with text properties. (Billie Cleek)
  * BufEnter autocmd not triggered on &quot;:tab drop&quot;. (Andy Stewart)
  * Crash when using gettabwinvar() with invalid arguments. (Yilin Yang)
  * Crash when cycling to buffers involving popup window .
  * Message test fails on some platforms. (Elimar Riesebieter)
  * Wrong size argument to vim_snprintf(). (Dominique Pelle)
  * Diffmode completion doesn't use per-window setting.
  * Some corners of vim_snprintf() are not tested.
  * ERROR_UNKNOWN clashes on some systems.
  * Crash when using Python 3 with &quot;utf32&quot; encoding. (Dominique Pelle)
  * ETYPE_ is used for two different enums.
  * Crash when using Python 3 with &quot;debug&quot; encoding. (Dominique Pelle)
  * Initializing globals with COMMA is clumsy.
  * Python 3 unicode test sometimes fails.
  * Python 3 unicode test still sometimes fails.
  * settagstack() cannot truncate at current index.
  * Expanding &lt;sfile&gt; works differently the second time.
  * Python 3 unicode test still fails on MS-Windows.
  * Globals using INIT4() are not in the tags file.
  * When reusing a buffer listeners are not cleared. (Axel Forsman)</comment>
    <requestid>764661</requestid>
  </revision>
  <revision rev="250" vrev="1">
    <srcmd5>f662af95d3dd468ce9c74acbbad123ba</srcmd5>
    <version>8.2.0200</version>
    <time>1580990823</time>
    <user>dimstar_suse</user>
    <comment>- Refreshed disable-unreliable-tests.patch and vim-7.3-help_tags.patch
- Updated to version 8.2.0200, fixes the following problems
  * Message test fails on some platforms. (Elimar Riesebieter)
  * virtcol() does not check arguments to be valid, which may lead to a crash.
  * filter() and map() on blob don't work.
  * complete_info() does not work when CompleteDone is triggered.
  * Compiler warnings for variable types.
  * :mode no longer works for any system.
  * Textprop test fails.
  * Some buffer commands work in a popup window.
  * Cannot list options one per line.
  * Python3 ranges are not tested.
  * Command line is not cleared when switching tabs and the command line
  height differs.
  * Script may be re-used when deleting and creating a new one.
  * Invalid memory access with search command.
  * Some map functionality not covered by tests.
  * Bracketed paste can still cause invalid memory access. (Dominique Pelle)
  * Stray ch_logfile() call.
  * Crash when using win_execute() from a new tab.
  * Memory leak when starting a job fails.
  * No swift filetype detection.
  * Possible to enter popup window with CTRL-W p. (John Devin)
  * Coverity warning for possible use of NULL pointer.
  * Some mapping code is not fully tested.
  * Using #error for compilation errors should be OK now.
  * Wrong indent when 'showbreak' and 'breakindent' are set and 'briopt'
  includes &quot;sbr&quot;.
  * Block Visual mode operators not correct when 'linebreak' set.
  * Mapping related function in wrong source file.</comment>
    <requestid>769482</requestid>
  </revision>
  <revision rev="251" vrev="1">
    <srcmd5>6ea5dfbb2376371bfe0a1e4740cf2539</srcmd5>
    <version>8.2.0257</version>
    <time>1582112407</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.0257, fixes the following problems
  * Vim9 script commands not sufficiently tested.
  * Cannot assign to an imported variable.
  * When 'lazyredraw' is set the window title may not be updated.
  * :helptags and some other functionality not tested.
  * Crash when using winnr('j') in a popup window.
  * Error code E899 used twice.
  * Calling Vim9 function using default argument fails.
  * Crash when missing member type on list argument.
  * Fnamemodify() does not apply &quot;:~&quot; when followed by &quot;:.&quot;.
  * Function a bit far away from where it's used.
  * Coverity complains about uninitialized field.
  * Test for ANSI colors fails without an &quot;ls&quot; command.
  * Missing search/substitute pattern hardly tested.
  * Configure does not recognize gcc 10.0 and later.
  * A popup window with a terminal can be made hidden.
  * Wrong file name shortening. (Ingo Karkat)
  * Several Vim9 instructions are not tested.
  * Terminal test fails on Mac.
  * Several Vim9 instructions are not tested.
  * Terminal test still fails on Mac.
  * Terminal test did pass on Mac.
  * No test for Vim9 += and ..=.
  * Vim9: optional function arguments don't work yet.
  * Some instructions not yet tested.
  * compiling :elseif not tested yet.
  * compiling lambda not tested yet.
  * Compiling for loop not tested.
  * Compiling a few instructions not tested.
  * Configure does not recognize gcc version on BSD.</comment>
    <requestid>774387</requestid>
  </revision>
  <revision rev="252" vrev="1">
    <srcmd5>80a268cb2dc12c00afb7adcb2b3d2f32</srcmd5>
    <version>8.2.0314</version>
    <time>1582726460</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.0314, fixes the following problems
- refreshed vim-7.3-filetype_spec.patch 
  * Cannot recognize a terminal in a popup window.
  * ModifyOtherKeys cannot be temporarily disabled.
  * Terminal in popup test sometimes fails.
  * Several lines of code are duplicated.
  * Some code not covered by tests.
  * Fileformat test fails on MS-Windows.
  * A few new Vim9 messages are not localized.
  * Fileformat test still fails on MS-Windows.
  * &quot;eval&quot; after &quot;if 0&quot; doesn't check for following command.
  * Terminal in popup test sometimes fails on Mac.
  * No check for a following command when calling a function fails.
  * Trycatch test fails.
  * Vim9: operator after list index does not work. (Yasuhiro Matsumoto)
  * Some code not covered by tests.
  * The &quot;num64&quot; feature is available everywhere and building without it
  causes problems.
  * &quot;:helptags ALL&quot; gives error for directories without write
  permission. (Matěj Cepl)
  * Hang with combination of feedkeys(), Ex mode and :global. (Yegappan
  Lakshmanan)
  * Some Ex code not covered by tests.
  * Vim9: not allowing space before &quot;)&quot; in function call is too
  restrictive. (Ben Jackson)
  * Vim9: not all instructions covered by tests.
  * Channel test is flaky on Mac.
  * Vim9: no test for deleted :def function.
  * Vim9: throw in :def function not caught higher up.
  * Two placed signs in the same line are not combined.  E.g. in the terminal</comment>
    <requestid>779065</requestid>
  </revision>
  <revision rev="253" vrev="1">
    <srcmd5>5f74892f33104394bdc095590276b7fb</srcmd5>
    <version>8.2.0348</version>
    <time>1583526232</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.0348, fixes the following problems
  * Short name not set for terminal buffer.
  * Build failure on HP-UX system.
  * ex_getln.c code has insufficient test coverage.
  * MSVC: _CRT_SECURE_NO_DEPRECATE not defined on DEBUG build.
  * Vim9: types not sufficiently tested.
  * File missing in distribution, comments outdated.
  * No Haiku support.
  * Vim9: &quot;:execute&quot; does not work yet.
  * Vim9: error checks not tested.
  * Vim9: calling a function that is defined later is slow.
  * Text property not updated correctly when inserting/deleting.
  * Ex_getln.c code not covered by tests.
  * Compiler warning for using uninitialized variable. (Yegappan Lakshmanan)
  * Crash when opening and closing two popup terminal windows.
  * No redraw when leaving terminal-normal mode in a terminal popup window.
  * Popup filter converts 0x80 bytes.
  * Build error with popup window but without terminal.
  * Internal error when using test_void() and test_unknown(). (Dominique Pelle)
  * Some code in ex_getln.c not covered by tests.
  * Terminal in popup test is flaky.
  * Abort called when using test_void(). (Dominique Pelle)
  * No completion for :disassemble.
  * Vim9: insufficient test coverage for compiling.
  * Build fails on a few systems.
  * Build failure without the channel feature.
  * Vim9: function return type may depend on arguments.
  * Vim9: function and partial types not tested.
  * Using &quot;:for&quot; in Vim9 script gives an error.
  * Some code in ex_getln.c not covered by tests.</comment>
    <requestid>781204</requestid>
  </revision>
  <revision rev="254" vrev="2">
    <srcmd5>032e58a85d105aa571c7b3320eb703f3</srcmd5>
    <version>8.2.0348</version>
    <time>1584643492</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>785458</requestid>
  </revision>
  <revision rev="255" vrev="3">
    <srcmd5>5e6fa348f42845f98ad999f5143c58d1</srcmd5>
    <version>8.2.0348</version>
    <time>1585668782</time>
    <user>dimstar_suse</user>
    <comment>- Disable more tests failing randomly on OBS:
    * test_arglist
    * test_command_count
    * test_diffmode
    * test_mksession
    * test_startup
    * test_window_cmd

- Add no-common.patch to make longVersion extern in all cases,
  fixes build with gcc10 bsc#1160418</comment>
    <requestid>790192</requestid>
  </revision>
  <revision rev="256" vrev="1">
    <srcmd5>14f6d0e7942d4ba24da912c4c136b854</srcmd5>
    <version>8.2.0530</version>
    <time>1586973954</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.0530, fixes the following problems
  * Vim9: not all code tested.
  * Vim9: constant expression not well tested.
  * Vim9: expression tests don't use recognized constants.
  * Terminal in popup test is still a bit flaky.
  * Vim9: while loop not tested.
  * Python 3.9 does not define _Py_DEC_REFTOTAL. (Zdenek Dohnal)
  * Vim9: str_val is confusing, it's a number
  * Cannot delete a text property matching both id and type. (Axel Forsman)
  * Insufficient testing for indent.c.
  * popup_atcursor() may hang. (Yasuhiro Matsumoto)
  * Yaml files are only recognized by the file extension.
  * Internal error when using &quot;0&quot; for a callback.
  * Some Normal mode commands not tested.
  * Printf test failing on Haiku.
  * Tag kind can't be a multi-byte character. (Marcin Szamotulski)
  * Hardcopy command not tested enough.
  * Can use :pedit in a popup window.
  * Vim9: import that redefines local variable does not fail.
  * Various Normal mode commands not fully tested.
  * The typebuf_was_filled flag is sometimes not reset, which may cause a hang.
  * Crash with combination of terminal popup and autocmd.
  * Prop_find() may not find text property at start of the line.
  * Type of term_sendkeys() is unknown.
  * Using wrong printf directive for jump location.
  * Coverity warning for not using return value.
  * Nasty callback test fails on some systems.
  * No CI test for a big-endian system.
  * prop_find() does not find all props.
  * Gcc warns for ambiguous else.</comment>
    <requestid>792680</requestid>
  </revision>
  <revision rev="257" vrev="2">
    <srcmd5>0c25c3ddc8d3723fe4587a3333f6428f</srcmd5>
    <version>8.2.0530</version>
    <time>1588105767</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>797633</requestid>
  </revision>
  <revision rev="258" vrev="1">
    <srcmd5>dba33a01b7427df8d23aad185ee90f83</srcmd5>
    <version>8.2.0701</version>
    <time>1588971745</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>800616</requestid>
  </revision>
  <revision rev="259" vrev="2">
    <srcmd5>f8788c7b9cb015b6cef608ad3f4a3aae</srcmd5>
    <version>8.2.0701</version>
    <time>1589660638</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>805628</requestid>
  </revision>
  <revision rev="260" vrev="3">
    <srcmd5>daba2c7d2dac54fc02c403e3fdc854e5</srcmd5>
    <version>8.2.0701</version>
    <time>1591285802</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>808015</requestid>
  </revision>
  <revision rev="261" vrev="4">
    <srcmd5>45d3618f5b02d02ebb9f3413e825a777</srcmd5>
    <version>8.2.0701</version>
    <time>1591862301</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>811885</requestid>
  </revision>
  <revision rev="262" vrev="5">
    <srcmd5>5735169b975bcd52cf9f8fa012f7500d</srcmd5>
    <version>8.2.0701</version>
    <time>1593096382</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>816526</requestid>
  </revision>
  <revision rev="263" vrev="6">
    <srcmd5>7b65789f07dfb6dddbe555e231193f69</srcmd5>
    <version>8.2.0701</version>
    <time>1593726953</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>818077</requestid>
  </revision>
  <revision rev="264" vrev="1">
    <srcmd5>2fce747d40ec78f7f68cc1bb422c68d3</srcmd5>
    <version>8.2.1154</version>
    <time>1594804318</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.1154, fixes the following problems
  * Vim9 test fails without job feature.
  * Running channel tests may leave running process behind.
  * Vim9: closure cannot store value in outer context.
  * Vim9: memory leak in disassemble test.
  * Indent tests don't run on CI for FreeBSD.
  * Vim9: using assert_fails() causes function to finish.
  * Vim9 function test fails.
  * Vim9: constant expressions are not simplified.
  * Netbeans test sometimes fails.
  * With a long running Vim the temp directory might be cleared on some
  systems.
  * Various code not fully tested.
  * The pam_environment file is not recognized.
  * Vim9: handling constant expression does not scale.
  * Vim9: leaking memory.
  * Vim9: another memory leak.
  * Vim9: postponed constant expressions does not scale.
  * Gcc warning for returning pointer to local variable. (John Marriott)
  * Vim9: more expressions can be evaluated at compile time
  * Occasional exit when encountering an X error. (Manfred Lotz)
  * Vim9: leaking memory when skipping.
  * Vim9: not handling constant expression for elseif.
  * Vim9: nested constant expression not evaluated compile time.
  * Vim9: appending to buffer/window/tab variable not tested
  * Vim9: cannot call a function declared later in Vim9 script.
  * Vim9: leaking memory when calling not compiled :def function.
  * Messages about a deadly signal are not left aligned.
  * Vim9: When reloading a script variables are not cleared.
  * Vim9: Assignment to dict member does not work.</comment>
    <requestid>819524</requestid>
  </revision>
  <revision rev="265" vrev="1">
    <srcmd5>e2855736172bf0bc648ff474c244f297</srcmd5>
    <version>8.2.1253</version>
    <time>1595577094</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.1253, fixes the following problems
  * Vim9: crash when using imported function.
  * Vim9: cannot handle line break inside lambda.
  * Vim9: No error for invalid command in compiled function.
  * Vim9: dict.name is not recognized as an expression.
  * Vim9: no error for missing space after a comma.
  * Vim9: memory leak in allocated types.
  * Vim9: using freed memory.
  * Text cleared by checking terminal properties not redrawn. (Alexey Radkov)
  * Insufficient testing for the Tcl interface.
  * Once mouse move events are enabled getchar() returns them.
  * Vim9: builtin function method call only supports first argument.
  * Wrong method argument for appendbufline().
  * Write NUL past allocated space using corrupted spell file. (Markus Vervier)
  * Cursor off by one with block paste while 'virtualedit' is &quot;all&quot;.
  * Possible crash when out of memory.
  * Error messages when doing &quot;make clean&quot; in the runtime/doc or src/tee
  directories.
  * Tee doesn't build on some systems.
  * No test for the &quot;recording @x&quot; message.
  * Vim9: Cannot split a line before &quot;.member&quot;.
  * Vim9: not enough type checking in Vim9 script.
  * Terminal2 test sometimes hangs in the GUI.
  * Vim9: filter function recognized as command modifier, leading to a crash.
  * Test_termwinscroll() sometimes hangs in the GUI.
  * Build failure in small version.
  * Json code not fully tested.
  * Vim9: no check for whitespace after comma in lambda.
  * assert_fails() checks the last error message.
  * Some tests fail.</comment>
    <requestid>821868</requestid>
  </revision>
  <revision rev="266" vrev="1">
    <srcmd5>a42d902afcfe7194b7e3f91a0650bc1b</srcmd5>
    <version>8.2.1412</version>
    <time>1597222604</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.1412, fixes the following problems
- refreshed vim-7.4-highlight_fstab.patch
  * CTRL-K in Insert mode gets &lt;CursorHold&gt; inserted. (Roland Puntaier)
  * MS-Windows: regexp test may fail if 'iskeyword' set wrongly.
  * Cannot use a lambda with quickfix functions.
  * Vim9: type wrong after getting dict item in lambda.
  * Vim9: list unpack doesn't work at the script level.
  * CursorHold does not work well.a (Shane-XB-Qian)
  * Empty group in 'tabline' may cause using an invalid pointer.
  * There is no good test for CursorHold.
  * Vim9: common type of function not tested.
  * src/ex_cmds.c file is too big.
  * Vim9: comperators use 'ignorecase' in Vim9 script.
  * Terminal getwinpos() test is a bit flaky.
  * Crash with EXITFREE when split() fails.
  * Makefile preferences were accidentally included.
  * Vim9: no error for using double quote comment after :func or :def.
  * Language and locale code spread out.
  * Vim9: not skipping over function type declaration with only a return type.
  * Vim9: Error for Funcref function argument type.
  * Vim9: type not checked if declaration also assigns value.
  * Vim9: no error for missing white space in assignment at script level.
  * Vim9: compiler warning for buffer size.
  * Tests on Travis do not run with EXITFREE.
  * Vim9: line break after &quot;-&gt;&quot; only allowed in :def function.
  * Some tests on Travis have EXITFREE duplicated.
  * Ex command error cannot contain an argument.
  * The &quot;trailing characters&quot; error can be hard to understand.
  * Vim9: crash when using CheckScriptFailure() in
  Test_vim9script_call_fail_decl().</comment>
    <requestid>825297</requestid>
  </revision>
  <revision rev="267" vrev="1">
    <srcmd5>38510eda8f342a7b75c66550a533416b</srcmd5>
    <version>8.2.1551</version>
    <time>1600346359</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>834596</requestid>
  </revision>
  <revision rev="268" vrev="1">
    <srcmd5>2b91a1969d858731454c2f1b735f0a4b</srcmd5>
    <version>8.2.1719</version>
    <time>1600956746</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.1719, fixes the following problems
  * Vim9: error for argument type does not mention the number.
  * Warnings from asan with clang-11. (James McCoy)
  * Crash in edit test.
  * Crash in normal test.
  * Not all tests are executed on Github Actions.
  * Cursorline highlighting always overrules sign highlighting.
  * Crash in :vimgrep when started as &quot;vim -n&quot;. (Raul Segura)
  * Signs test fails.
  * s390x tests work again.
  * Using NULL pointers in some code. (James McCoy)
  * Using NULL pointers in fold code.
  * Vim9: error when using &quot;%&quot; where a buffer is expected.
  * Vim9: error when using '%&quot; with setbufvar() or getbufvar().
  * A few remaining errors from ubsan.
  * Spellfile test sometimes fails.
  * Not all Bazel files are recognized.
  * No example to use ubsan with clang.
  * prop_find() skips properties in the same line if &quot;skipstart&quot; is used.
  * Vim9: fixes for functions not tested; failure in getchangelist().
  * Configure check for dirfd() does not work on HPUX. (Michael Osipov)
  * Vim9: count() third argument cannot be &quot;true&quot;.
  * Vim9: expand() does not take &quot;true&quot; as argument.
  * Vim9: getreg() does not take &quot;true&quot; as argument.
  * Vim9: glob() doesnot take &quot;true&quot; as argument.
  * Vim9: globpath() doesnot take &quot;true&quot; as argument.
  * Vim9: index() does not take &quot;true&quot; as argument.
  * Vim9: hasmapto(), mapcheck() and maparg() do not take &quot;true&quot; as argument.
  * Vim9: popup_clear() does not take &quot;true&quot; as argument.
  * Reports from asan are not optimal.</comment>
    <requestid>835761</requestid>
  </revision>
  <revision rev="269" vrev="1">
    <srcmd5>362361dfa4e0c5b64c3e56de82d41d96</srcmd5>
    <version>8.2.1775</version>
    <time>1601744065</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.1775, fixes the following problems
- refreshed vim-7.3-sh_is_bash.patch
  * Vim9: no error if comma is missing in between arguments.
  * Vim9: memory leak with heredoc that isn't executed. (Dominique Pellé)
  * Vim9: cannot assign a lambda to a variable of type function.
  * Vim9: Variable argument name cannot start with underscore.
  * Vim9: assignment tests spread out.
  * Not all Pascal files are recognized.
  * Fuzzy matching only works on strings.
  * A popup created with &quot;cursorline&quot; will ignore &quot;firstline&quot;.
  * Compiler warning for using uninitialized variable. (John Marriott)
  * Endless loop when &quot;:normal&quot; feeds popup window filter.
  * Vim9: cannot use member of unknown type.
  * Vim9: cannot use += to append to empty NULL list.
  * Stuck when win_execute() for a popup causes an error.
  * Vim9: memory leaks when using nested function.
  * Vim9: cannot use a funcref for a closure twice.
  * Failure to compile a pattern not tested much.
  * Cursor line highlight in popup window is not always updated.
  * Mac: str2float() recognizes comma instead of decimal point.
  * Vim9: crash when compiling a manually defined function. (Antony Scriven)
  * Test fails without the terminal feature.
  * pathshorten() only supports using one character.
  * Test still fails without the terminal feature.
  * Cannot build without the eval feature.
  * Vim9: using &quot;:const!&quot; is weird.
  * Tiny version doesn't build.
  * Vim9: Cannot use &quot;fina&quot; for &quot;finally&quot;. (Naruhiko Nishino)
  * Result of expand() unexpectedly depends on 'completeslash'.
  * Closing split window in other tab may cause a crash.</comment>
    <requestid>838734</requestid>
  </revision>
  <revision rev="270" vrev="2">
    <srcmd5>cad87d0f5fc857d8d943db7d9f481ed0</srcmd5>
    <version>8.2.1775</version>
    <time>1602440112</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>840392</requestid>
  </revision>
  <revision rev="271" vrev="1">
    <srcmd5>8e90b54a9fea793d235a921629b50baa</srcmd5>
    <version>8.2.1840</version>
    <time>1602762300</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.1840, fixes the following problems
- refreshed vim-7.3-filetype_changes.patch and vim-8.0.1568-defaults.patch
  * Filetype.vim may be loaded twice.
  * Vim9: some assignment tests in the wrong file.
  * Vim9: returning from a partial call clears outer context, causing a crash.
  * Some debian changelog files are not recognized.
  * Statusline not updated when splitting windows.
  * Writing to prompt buffer interferes with insert mode.
  * Vim9: cannot pass boolean to mapset().
  * Try-catch test fails.
  * commits are not scanned for security problems
  * Compiler warning for strcp() out of bounds. (Christian Brabandt)
  * Various Normal mode commands not fully tested.
  * Crash with 'incsearch' and very long line.
  * Vim9: still allows :let for declarations.
  * Vim9: crash with invalid list constant. (Dhiraj Mishra)
  * Vim9: debugger test fails.
  * Configure does not recognize Racket 6.1+.
  * Not consistently giving the &quot;is a directory&quot; warning.
  * No falsy Coalescing operator.
  * Vim9: operators &amp;&amp; and || have a confusing result.
  * Vim9: invalid memory access with weird function name. (Dhiraj Mishra)
  * Vim9: some parts of the code not tested.
  * Vim9: trinary operator condition is too permissive.
  * Some Normal mode commands not fully tested.
  * Vim9: memory leak if &quot;if&quot; condition is invalid.
  * Undo file not found when using &quot;:args&quot; or &quot;:next&quot;.
  * Vim9: crash with unterminated dict. (Dhiraj Mishra)
  * A few failures are not tested.
  * resolve('/') returns an empty string.</comment>
    <requestid>841406</requestid>
  </revision>
  <revision rev="272" vrev="1">
    <srcmd5>48a68221a06a1a189d996da078846fc0</srcmd5>
    <version>8.2.1900</version>
    <time>1603959689</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.1900, fixes the following problems
  * Vim9: error message is not clear about compilation error.
  * Vim9: test for compilation error fails in normal build.
  * Crash when USE_FNAME_CASE is defined and using :browse.
  * Netbeans: with huge buffer number memory allocation may fail.
  * Using &quot;q&quot; at the more prompt doesn't stop a long message.
  * Vim9: function defined in a block can't use variables defined in that
  block.
  * Vim9: variables declared in a local block are not found in when a function
  is compiled.
  * Vim9: using negative value for unsigned type.
  * Crash when passing a NULL string or list to popup_settext().
  * Vim9: garbage collection frees block-local variables.
  * &quot;vat&quot; does not select tags correctly over line break.
  * Vim9: &quot;!&quot; followed by space incorrectly used.
  * map() returing zero for NULL list is unexpected.
  * &quot;to_f&quot; is recognized at &quot;topleft&quot; modifier.
  * Vim9: crash when throwing exception for NULL string. (Dhiraj Mishra)
  * Vim9: get error message when nothing is wrong.
  * &quot;2resize&quot; uses size of current window. (Daniel Steinberg)
  * Vim9: using job_status() on an unused var gives an error.
  * Vim9: filter functions return number instead of bool.
  * Vim9: crash in unpack assignment.
  * Vim9: memory leak when throwing empty string.
  * Vim9: no specific error when parsing lambda fails.
  * vim9: memory leak when compiling lambda fails.
  * Json code not sufficiently tested.
  * Vim9: no error for wrong list type.
  * Vim9: add() does not check type of argument.
  * Vim9: add() does not check type of argument.</comment>
    <requestid>843885</requestid>
  </revision>
  <revision rev="273" vrev="1">
    <srcmd5>00d1df71d8f88bb1957aca4885a42f04</srcmd5>
    <version>8.2.1955</version>
    <time>1604609683</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.1955, fixes the following problems
  * Vim9: command modifiers do not work.
  * Variable completion does not work in command line window.
  * Default option values are changed when using :badd for an existing buffer.
  * Buffer test fails with normal features.
  * Still using default option values after using &quot;:badd +1&quot;.
  * The wininfo list may contain stale entries.
  * Warning for signed/unsigned.
  * Complete_info().selected may be wrong.
  * Lua is initialized even when not used.
  * Number of status line items is limited to 80.
  * Reading past the end of the command line.
  * Tiny build fails.
  * With Python 3.9 some tests fail.
  * GTK GUI: rounding for the cell height is too strict.
  * Vim9: cannot put line break in expression for '=' register.
  * Vim9: error for wrong number of arguments is not useful.
  * Vim9: function call is aborted even when &quot;silent!&quot; is used.
  * No test for improved Man command.
  * Vim9: E1100 mentions :let.
  * Assert_fails() setting emsg_silent changes normal execution.
  * Listlbr test fails when run after another test.
  * Fuzzy matching does not recognize path separators.
  * Win32: scrolling doesn't work properly when part of window is off-screen.
  * Vim9: &quot;filter&quot; command modifier doesn't work.
  * Vim9: crash when indexing dict with NULL key.
  * List/dict test fails.
  * Cannot use a space in 'spellfile'. (Filipe Brandenburger)
  * Vim9: get unknown error with an error in a timer function.
  * Vim9: &quot;silent!&quot; not effective when list index is wrong.</comment>
    <requestid>846211</requestid>
  </revision>
  <revision rev="274" vrev="1">
    <srcmd5>16a4e1a4ccdfe136ff51148905bf78b1</srcmd5>
    <version>8.2.1975</version>
    <time>1605450290</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>848140</requestid>
  </revision>
  <revision rev="275" vrev="1">
    <srcmd5>a6489e6db4b943550d42232fa8bbf075</srcmd5>
    <version>8.2.2039</version>
    <time>1606649071</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.2039, fixes the following problems
  * Cannot backspace in prompt buffer after using cursor-left. (Maxim Kim)
  * Vim9: error for using a string in a condition is confusing.
  * Making a mapping work in all modes is complicated.
  * &quot;term_opencmd&quot; option of term_start() is truncated. (Sergey Vlasov)
  * Vim9: some tests are not done at the script level.
  * MinGW: parallel compilation might fail.
  * Quickfix window not updated when adding invalid entries.
  * ml_get error when using &lt;Cmd&gt; to open a terminal.
  * Cannot use :vimgrep in omni completion, causing C completion to fail.
  * Crash when closing terminal popup with &lt;Cmd&gt; mapping.
  * Expression test is flaky on Appveyor.
  * Still in Insert mode when opening terminal popup with a &lt;Cmd&gt; mapping
  in Insert mode.
  * Info popup triggers WinEnter and WinLeave autocommands.
  * Cursor position wrong in terminal popup with finished job.
  * Coverity warns for not using the ga_grow() return value.
  * Build fails with small features.
  * Occasional failure of the netbeans test.
  * The popup menu can cause too much redrawing.
  * Vim9: invalid error for argument of extend().
  * Window changes when using bufload() while in a terminal popup.
  * Terminal Cmd test sometimes fails to close popup.
  * Terminal popup test sometimes fails.
  * Vim9: dict.key assignment not implemented yet.
  * Vim9: :def function does not apply 'maxfuncdepth'.
  * Vim9: lambda argument shadowed by function name.
  * Build error with +conceal but without +popupwin.
  * Compiler warning for uninitialized variable.
  * Redoing a mapping with &lt;Cmd&gt; doesn't work properly.</comment>
    <requestid>850677</requestid>
  </revision>
  <revision rev="276" vrev="1">
    <srcmd5>d772ee0951fda31e096afe6bfab44afd</srcmd5>
    <version>8.2.2105</version>
    <time>1607548266</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.2105, fixes the following problems
  * Viminfo is not written when creating a new file.
  * Terminal buffer disappears even when 'bufhidden' is &quot;hide&quot;. (Sergey Vlasov)
  * Haskell filetype not optimally recognized.
  * Build failure with +profile but without +reltime.
  * GTK3: white border around text stands out.
  * Highlighting a character too much with incsearch.
  * Some test failures don't give a clear error.
  * Amiga: FEAT_ARP defined when it should not.
  * Amiga: obsolete code.
  * Amiga: obsolete function.
  * Search test contains unneeded sleeps.
  * Vim9: crash when aborting a user function call.
  * Vim9: &quot;edit +4 fname&quot; gives an error. (Naruhiko Nishino)
  * Vim9: lamba doesn't accept argument types.
  * Configure fails when building with the &quot;implicit-function-declaration&quot;
  error enabled, specifically on Mac.
  * Getting the selection may trigger TextYankPost autocmd.
  * Using mkview/loadview changes the jumplist.
  * Check for features implemented with &quot;if&quot;.
  * Vim9: E1030 error when using empty string for term_sendkeys().
  * &lt;Cmd&gt; does not handle CTRL-V.
  * Vim9: only one level of indexing supported.
  * terminal: cursor is on while redrawing, causing flicker.
  * Using map() and filter() on a range() is inefficient.
  * Vim9: assignment with += doesn't work.
  * Cursor position in popup terminal is wrong.
  * Transparent syntax item uses start/end of containing region.
  * The quickfix window is not updated after setqflist().
  * Can't get the exit value in VimLeave or VimLeavePre autocommands.</comment>
    <requestid>853509</requestid>
  </revision>
  <revision rev="277" vrev="1">
    <srcmd5>e4513c1f42bf9f3677ab26c18cd21b13</srcmd5>
    <version>8.2.2129</version>
    <time>1608031648</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>855481</requestid>
  </revision>
  <revision rev="278" vrev="1">
    <srcmd5>56d8fbba697b02c55688a11d80f070b8</srcmd5>
    <version>8.2.2327</version>
    <time>1610736301</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.2327, fixes the following problems
  * Insert mode completion messages end up in message history.
  * Vim9: crash when lambda uses same var as assignment.
  * Padding not drawn properly for popup window with title.
  * Vim9: checking for a non-empty string is too strict.
  * Vim9: get E1099 when autocmd triggered in builtin function.
  * Vim9: #{ still seen as start of dict in some places.
  * Vim9: Using uninitialized variable.
  * Vim9: :echo and :execute give error for empty argument.
  * Vim9: &quot;exit_cb&quot; causes Vim to exit.
  * Vim9: unreachable code in assignment.
  * Build failure with tiny features.
  * A user command with try/catch may not catch an expression error.
  * Memory leak when heredoc is not terminated.
  * Vim9: dead code in compiling :unlet.
  * Vim9: some corner cases not tested.
  * Vim9: concatenating lists does not adjust type of result.
  * Vim9: automatic conversion of number to string for dict key.
  * Quickfix window title not updated in all tab pages.
  * Vim9: crash when user command doesn't match.
  * Popupwin test for latin1 sometimes fails.
  * Github actions CI isn't used for all available platforms.
  * $dir not expanded when configure checks for moonjit.
  * screenpos() does not include the WinBar offset.
  * Popupwin test for latin1 still fails sometimes.
  * Popupwin test for terminal buffer fails sometimes.
  * Warning from Github actions for code analysis.
  * Github actions run on pusing a tag.
  * Vim9: can delete a Vim9 script variable from a function.
  * CI on cirrus times out, coveralls doesn't always run.</comment>
    <requestid>862401</requestid>
  </revision>
  <revision rev="279" vrev="1">
    <srcmd5>584726f55521d3600815d74b2cb4e3e8</srcmd5>
    <version>8.2.2411</version>
    <time>1612466495</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>867702</requestid>
  </revision>
  <revision rev="280" vrev="2">
    <srcmd5>5c0d638356709257b12c06873a0bb802</srcmd5>
    <version>8.2.2411</version>
    <time>1614001165</time>
    <user>RBrownSUSE</user>
    <comment></comment>
    <requestid>873628</requestid>
  </revision>
  <revision rev="281" vrev="1">
    <srcmd5>64d0e2ad6f5ee5a13b480648eeca59ba</srcmd5>
    <version>8.2.2564</version>
    <time>1615362404</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.2564, fixes the following problems
  * Not all fields in &quot;cstack&quot; are initialized which might cause a crash.
  * Crash when using :all while using a cmdline window. (Zdenek Dohnal)
  * Using freed memory when closing the cmdline window.
  * No way to check for the cmdwin feature, cmdline_hist is now always enabled.
  * May get stuck in command line window state.
  * Condition stack values may be used when not set.
  * Color not changed if ModeMsg highlight is set in InsertEnter autocmd
  event. (Paul Swanson)
  * Autocmd test was failing on MS-Windows with GUI.
  * Too many problems with using all autocommand events.
  * Double free when using autocommand with &quot;argdel&quot;. (Houyunsong)
  * Crash when deleting with line number out of range. (Houyunsong)
  * Missing error message.
  * Some tests are known to cause an error with ASAN.
  * Cursor on invalid line with range and :substitute.
  * Allowing 'completefunc' to switch windows causes trouble.
  * Can still switch windows for 'completefunc'.
  * FocusGained does not work when 'ttymouse' is empty.
  * :goto does not work correctly with text properties. (Sam McCall)
  * :vimgrep expands wildcards twice.
  * Warning for -fno-strength-reduce with Clang 11.
  * Libvterm tests are executed even when libtool doesn't work.
  * Opening cmdline window gives error in BufLeave autocommand.
  * Vim9: no error when compiling str2nr() with a number.
  * setline() gives an error for some types.
  * Vim9 script test is a bit flaky.
  * Deprecation warnings with default configuration.
  * Out of bounds compiler warning.</comment>
    <requestid>876604</requestid>
  </revision>
  <revision rev="282" vrev="1">
    <srcmd5>d1b34fe623bc501b4e85e4045db4d1fc</srcmd5>
    <version>8.2.2607</version>
    <time>1615905778</time>
    <user>RBrownSUSE</user>
    <comment>- Updated to version 8.2.2607, fixes the following problems
  * Focus events end Insert mode if 'esckeys' is not set.
  * Vim9: &quot;..=&quot; not always recognized.
  * Vim9: Function name is not recognized.
  * Vim9: no error if variable is defined for existing function.
  * Second time a preview popup is opened highlight is not set. (Gabriel
  Dupras)
  * 'fillchars' &quot;stl&quot; and &quot;stlnc&quot; items must be single byte.
  * Tests fail when run as root.
  * Test may leave file behind.
  * Vim9: crash when getting the types for a legacy function.
  * Vim9: using invalid pointer for error message.
  * Vim9: crash when calling partial with wrong function.
  * Vim9: a function name with &quot;-&gt;&quot; in the next line doesn't work.
  * Vim9: defining a :func function checks for white space after a comma in
  the arguments.
  * Compiler warning for type conversion.
  * Lua cannot handle a passed in lambda.
  * Vim9: crash in garbagecollect after for loop.
  * Vim9: checking vararg type is wrong when function is auto-loaded.
  * Vim9: sourcing Vim9 script triggers a redraw.
  * Vim9: screendump test fails on MS-Windows.
  * Vim9: cannot compare result of getenv() with null.
  * Vim9: type error for assigning the result of list concatenation to a list.
  * Vim9: illegal memory access.
  * Process id may be invalid.
  * Recover test fails on FreeBSD.
  * Build failure with tiny features.
  * Recover test hangs in the GUI.
  * Vim9: default argument value may cause internal error.</comment>
    <requestid>879130</requestid>
  </revision>
  <revision rev="283" vrev="1">
    <srcmd5>3bce9da15fdc30ce061800c9597095bf</srcmd5>
    <version>8.2.2725</version>
    <time>1617908505</time>
    <user>RBrownSUSE</user>
    <comment>- Updated to version 8.2.2725, fixes the following problems
  * strcharpart() cannot include composing characters.
  * Character input not fully tested.
  * Test disabled on MS-Windows even though it should work.
  * Mouse click test fails when using remote connection.
  * Conditions for startup tests are not exactly right.
  * col('.') may get outdated column value.
  * New test throws exception.
  * Vim9: function is deleted while executing.
  * Test is sourcing the wrong file.
  * Vim9: if 'cpo' is changed in Vim9 script it may be restored.
  * Vim9: script variable in a block scope not found by a nested function.
  * Vim9: cannot use a normal list name to store function refs.
  * Vim9: no test for return type of lambda.
  * Vim9: Using #{ for a dictionary gives strange errors.
  * typval2type() cannot handle recursive structures.
  * GTK: error when starting up and -geometry is given. (Dominique Pellé)
  * Some tests fail when run as root.
  * Atom files not recognized.
  * Rss files not recognized.
  * GTK3: error when starting up and -geometry is given. (Dominique Pellé)
  * No need to check for BSD after checking for not root.
  * Vim9: #{ can still be used at the script level.
  * Vim9: error for #{{ is not desired.
  * Hard to see where a test gets stuck.
  * Commands from winrestcmd() do not always work properly. (Leonid
  V. Fedorenchik)
  * Not all command line arguments are tested.
  * Multi-byte 'fillchars' for folding do not show properly.
  * 'tagfunc' does not indicate using a pattern.</comment>
    <requestid>883190</requestid>
  </revision>
  <revision rev="284" vrev="1">
    <srcmd5>c7e9ea6ddfe545ba10e2b468b5425a04</srcmd5>
    <version>8.2.2800</version>
    <time>1619652982</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.2800, fixes the following problems
  * Vim9: message about compiling is wrong when using try/catch.
  * Confusing error message with white space before comma in the arguments
  of a function declaration.
  * Function test fails.
  * Special key names don't work if 'isident' is cleared.
  * Vim9: wrong error message for referring to legacy script variable.
  * Coverity complains about not restoring character.
  * Prompt for s///c in Ex mode can be wrong.
  * Detecting Lua version is not reliable.
  * Vim9: cannot use legacy script-local var from :def function.
  * Vim9: function reference found with prefix, not without.
  * Vim9: for loop over string is a bit slow.
  * Status line not updated when local 'statusline' option set.
  * Extending a list with itself can give wrong result.
  * Vim9: a lambda accepts too many arguments at the script level.
  * Vim9: lambda with varargs doesn't work.
  * Vim9: Partial call does not check right arguments.
  * Vim9: when compiling a function fails it is cleared.
  * Vim9: function state stuck when compiling with &quot;:silent!&quot;.
  * Vim9: no way to explicitly ignore an argument.
  * Vim9: missing part of the argument change.
  * Check for duplicate arguments does not work.
  * Vim9: not always an error for too many function arguments.
  * Vim9: memory leak when calling :def function fails.
  * Vim9: test for error can be a bit flaky.
  * Vim9: error for using underscore in nested function.
  * Coverity warns for using NULL pointer.
  * Vim9: cannot ignore an item in assignment unpack.
  * :sleep! does not always hide the cursor.</comment>
    <requestid>888016</requestid>
  </revision>
  <revision rev="285" vrev="1">
    <srcmd5>63dc7a278cf76a7a8a16979b580ec10e</srcmd5>
    <version>8.2.2850</version>
    <time>1621355192</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.2850, fixes the following problems
  * After a timer displays text a hit-enter prompt is given.
  * Free Pascal makefile not recognized.
  * Vim9: illegal memory access.
  * Flicker when the popup menu has an info popup.
  * Setting buffer local mapping with mapset() changes global mapping.
  * Vim9: cannot use legacy syntax in Vim9 script.
  * Vim9: using &quot;++nr&quot; as a command might not work.
  * Build fails with tiny features.
  * Vim9: increment and decrement not sufficiently tested.
  * Vim9: :def function compilation fails when using :legacy.
  * Vim9: crash when calling a function in a substitute expression.
  * Vim9: error for missing white space doesn't say where it is missing
  * Vim9: still crash when using substitute expression.
  * Cannot grep using fuzzy matching.
  * Vim9: unused variable. (John Marriott)
  * Status line flickers when redrawing popup menu info.
  * Vim9: comment below expression in lambda causes problems.
  * Vim9: script sourcing continues after an error.
  * No jump added to jumplist when opening terminal in current window.
  * Finishing an abbreviation with a multi-byte char may not work.
  * Session file may divide by zero.
  * Code in checkreadonly() not fully tested.
  * Compiler warnings for int to size_t conversion. (Randall W. Morris)
  * Test file was not deleted.
  * Coverity complains about not checking the rename() return value.
  * Some comments are not correct or clear.
  * Terminal colors are not updated when 'background' is set.
  * Vim9: expandcmd() not tested.
  * Operator cancelled by moving mouse when using popup. (Sergey Vlasov)</comment>
    <requestid>893060</requestid>
  </revision>
  <revision rev="286" vrev="1">
    <srcmd5>71429678a6269467f071760fbabfc64e</srcmd5>
    <version>8.2.2918</version>
    <time>1622928657</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.2918, fixes the following problems
  * Using &lt;Cmd&gt; mapping on the command line triggers CmdlineChanged. (Naohiro
  Ono)
  * Configure can add --as-needed a second time.
  * Window is not updated after using &lt;Cmd&gt; mapping.
  * Custom statusline cannot contain % items.
  * White space after &quot;-&gt;&quot; does not give E274.
  * Get readonly error for device that can't be written to.
  * Vim9: exception in ISN_INSTR caught at wrong level.
  * Test fails because of changed error message.
  * Tcl test fails because of changed error message.
  * Adding a text property causes the whole window to be redawn.
  * Vim9: &quot;legacy return&quot; is not recognized as a return statement.
  * Removing a text property causes the whole window to be redawn.
  * Removing a text property does not redraw optimally.
  * Vim9: crash when using inline function.
  * Skipping over function body fails.
  * Vim9: memory leak when using inline function.
  * Build failure.
  * Vim9: When executing a compiled expression the trylevel at start is
  changed but not restored. (closes #8214)
  * Using unified diff is not tested.
  * CmdlineChange event triggered twice for CTRL-R.
  * Unnessary VIM_ISDIGIT() calls, badly indented code.
  * Python tests fail without the channel feature.
  * Not enough tests for writing buffers.
  * Cancelling inputlist() after a digit does not return zero.
  * Configure cannot detect Python 3.10.
  * Insufficient tests for popup menu rightleft.
  * Vim9: for loop list unpack only allows for one &quot;_&quot;.</comment>
    <requestid>896658</requestid>
  </revision>
  <revision rev="287" vrev="1">
    <srcmd5>509b9803142be0ac5658166c8228e3df</srcmd5>
    <version>8.2.3075</version>
    <time>1625225197</time>
    <user>dimstar_suse</user>
    <comment>- disabled test_recover because is broken on 32bit archs
  --&gt; disable-unreliable-tests.patch

- Updated to version 8.2.3075, fixes the following problems
  * Vim: when debugging only the first line of a command using line
  continuation is displayed.
  * Coverity warns for freeing static string.
  * Vim9: Assigning to @# requires a string. (Naohiro Ono)
  * Confusing error when expression is followed by comma.
  * Vim9: debugger shows too many lines.
  * Formatting using quickfixtextfunc is lost when updating location lists
  for different buffers.  (Yorick Peterse)
  * Location list only has the start position.
  * Unreachable code.
  * Spaces allowed between option name and &quot;!&quot;, &quot;?&quot;, etc.
  * Available encryption methods are not strong enough.
  * Vim9: arguments for execute() not checked at compile time.
  * execute() function test fails.
  * Not enough tests for quickfix end_col and end_lnum.
  * Vim9: cannot set breakpoint in compiled function.
  * Vim9: breakpoint in compiled function not always checked.
  * GUI mouse events not tested.
  * Vim9: crash when using operator and list unpack assignment. (Naohiro Ono)
  * Coverity reports a memory leak.
  * No error if a function name starts with an underscore. (Naohiro Ono)
  * Build problems with MSVC, other crypt issues with libsodium.
  * No error when using alpha delimiter with :global.
  * Installing packages on github CI sometimes fails.
  * Vim9: crash when calling :def function with partial and return type is
  not set.</comment>
    <requestid>903208</requestid>
  </revision>
  <revision rev="288" vrev="1">
    <srcmd5>6e42dcfe8a2fe8ccdb83ea8e17db0e3c</srcmd5>
    <version>8.2.3204</version>
    <time>1627587052</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.3204, fixes the following problems
- enable test_recover on x86_64/i586/ppc64* - disable-unreliable-tests.patch
- disable faulty tests on arm and s390x arch - disable-unreliable-tests-arch.patch
  * Xxd always reports an old version string. (Åsmund Ervik)
  * Vim9: using try in catch block causes a hang.
  * Vim9: an error in a catch block is not reported.
  * Vim9: profile test fails.
  * Powershell core not supported by default.
  * Recover test fails on 32bit systems. (Ondřej Súkup)
  * Cannot catch errors in a channel command.
  * A channel command &quot;echoerr&quot; does not show anything.
  * Crash when passing null string to charclass().
  * Vim9: builtin function argument types are not checked at compile time.
  * JSONC files are not recognized.
  * Vim9: breakpoint on &quot;for&quot; does not work.
  * Gemtext files are not recognized.
  * With 'virtualedit' set to &quot;block&quot; Visual highlight is wrong after using
  &quot;$&quot;.  (Marco Trosi)
  * Garbage collection has useless code.
  * With concealing enabled and indirectly closing a fold the cursor may be
  somewhere in a folded line.
  * Vim9: default argument expression cannot use previous argument
  * Vim9: builtin function test fails without the +channel feature.
  * tablabel_tooltip test fails with Athena. (Dominique Pellé)
  * Test_popup_atcursor_pos() fails without the conceal feature.
  * With 'virtualedit' set to &quot;block&quot; block selection is wrong after using
  &quot;$&quot;.  (Marco Trosi)
  * Temp files remain after running tests.
  * Crash when using &quot;quit&quot; at recovery prompt and autocommands are triggered.
  * Popup window test is flaky on MS-Windows with GUI.</comment>
    <requestid>908011</requestid>
  </revision>
  <revision rev="289" vrev="1">
    <srcmd5>afee57a84f6a312d3ffc6d38c9e1e2de</srcmd5>
    <version>8.2.3318</version>
    <time>1629101319</time>
    <user>RBrownSUSE</user>
    <comment></comment>
    <requestid>912027</requestid>
  </revision>
  <revision rev="290" vrev="1">
    <srcmd5>4cb675a61cddc101fe0aa5e057c8801d</srcmd5>
    <version>8.2.3360</version>
    <time>1629917760</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.3360, fixes the following problems
  * Vim9: cannot ignore quotes in number at the command line.
  * Coverity action on github does not work.
  * Some local functions are not static.
  * Some code is not tested.
  * Vim9: checking type of dict does not check member type.
  * Help tag for exists_compiled() is wrong. (Maxim Kim)
  * Vim9: Cannot use :silent with :endwhile.
  * Digraph test fails when LC_ALL is set to &quot;C&quot;.
  * Vim9: no error passing an empty list of the wrong type.
  * No check for sysconf() failing.
  * Coverity error for not checking return value.
  * v_lock not set when getting value of environment variable.
  * Coverity reports using uninitialized field.
  * Coverity warns for using value without boundary check.
  * Vim9: cannot assign to range in list.
  * Vim9: not enough tests run with Vim9.
  * Vim9: not enough tests run with Vim9.
  * Vim9: not enough tests run with Vim9.
  * Behavior of negative index in list change changed. (Naruhiko Nishino)
  * Completing &quot;call g:&quot; returns entries with just &quot;g:&quot;. (Naohiro Ono)
  * Vim9: no type check when assigning a list range. (Naohiro Ono)
  * Vim9: cannot lock a member in a local dict.
  * Accessing uninitialized pointer.
  * Vim9: function call aborted despite try/catch. (Naohiro Ono)
  * Test for :let errors fails.
  * Vim9: autoload test fails.
  * Vimscript test fails.
  * Some code not covered by tests.
  * Vim9: no error for using &quot;.&quot; for concatenation after &quot;:vim9cmd&quot;. (Naohiro</comment>
    <requestid>913480</requestid>
  </revision>
  <revision rev="291" vrev="1">
    <srcmd5>eca95dd2d3c3d3a87cc7bf1b8a89c8ae</srcmd5>
    <version>8.2.3408</version>
    <time>1632173545</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>920261</requestid>
  </revision>
  <revision rev="292" vrev="1">
    <srcmd5>ed9786b8381bc586ed4049861f1e50cd</srcmd5>
    <version>8.2.3582</version>
    <time>1636498428</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.3582, fixes the following problems
  * Overflow check fails with 32 ints.
  * Manipulating highlighting is complicated.
  * CI sometimes fails for MinGW.
  * gj does not move properly with a wide character.
  * Reading character past end of line.
  * Reading uninitialized memory when giving spell suggestions.
- add obsolete/conflict with nginx vim plugin 

- Updated to version 8.2.3577, fixes the following problems
  * Test_very_large_count fails on 32bit systems.
  * Some unicode control characters are considered printable.
  * Memory leak when closing window and using &quot;multispace&quot; in 'listchars'.
  * Cannot decide whether to skip test that fails with 64 bit ints. (closes
  #9072)
  * Divide by zero.
  * Overflow check still fails when sizeof(int) == sizeof(long).
  * Some functions are not documented for use with a method.
  * Overflow check fails with 32 ints.

- Current vim seems to have timing problems with its parser to
  distinguish between &lt;ESC&gt; and &lt;ESC&gt;[~3 at least in urxvt 

- fix boo#1192225 

- Updated to version 8.2.3570, fixes the following problems
  * CTRL-I in Insert mode is not tested
  * Ctrl-hat test fails with Athena and Motif. (Elimar Riesebieter)
  * Error for :let when vimrc is Vim 9 script.
  * Test_very_large_count fails on 32bit systems.</comment>
    <requestid>929735</requestid>
  </revision>
  <revision rev="293" vrev="1">
    <srcmd5>dc755466fb6dcece86742816a00a916f</srcmd5>
    <version>8.2.3587</version>
    <time>1636986372</time>
    <user>dimstar_suse</user>
    <comment>- fixes boo#1192631
-  Updated to version 8.2.3587, fixes the following problems
  * Reading uninitialized memory when giving spell suggestions.
  * The &quot;gd&quot; and &quot;gD&quot; commands do not update search stats. (Gary Johnson)
  * &quot;verbose set efm&quot; reports the location of the :compiler command. (Gary
  Johnson)
  * Crash when passing float to &quot;term_rows&quot; in the options argument of
  term_start(). (Virginia Senioria)
  * Command completion test fails.
  * Compiler test fails with backslash file separator.</comment>
    <requestid>931243</requestid>
  </revision>
  <revision rev="294" vrev="1">
    <srcmd5>03bae09feb4547fd63b36aec1d9f2911</srcmd5>
    <version>8.2.3640</version>
    <time>1637794449</time>
    <user>dimstar_suse</user>
    <comment>- fix boo#1192871
- Updated to version 8.2.3640, fixes the following problems
  * Arglist test does not clear the argument list consistently.
  * &quot;:verbose pwd&quot; does not mention 'autochdir' was applied.
  * getcwd() is unclear about how 'autochdir' is used.
  * Cannot use a lambda for 'operatorfunc'.
  * Memory leak reported in libtlib.
  * Build failure.
  * &quot;verbose pwd&quot; shows confusing info when :lcd does not change directory.
  * &quot;$*&quot; is expanded to &quot;nonomatch&quot;.
  * When renaming a terminal buffer the status text is not updated.
  * Illegal memory access when C-indenting.
  * &quot;au!&quot; and &quot;au! event&quot; cannot be followed by another command as documented.
  * difficult to know where the text starts in a window. (Sergey Vlasov)
  * Looking up terminal colors is a bit slow.
  * Command completion in cmdline window uses global user commands, not
  local commands for the window where it was opened from.
  * Printf() with %S does not handle multi-byte correctly.
  * &quot;syntax enable&quot; does not work properly in Vim9 context.
  * GTK3: undercurl does not get removed properly.
  * Vim9: line number of lambda is off by one.
  * Error for already defined function uses wrong line number.
  * GTK: composing underline does not show.
  * Coverity warns for unreachable code.
  * Typos in test files.
  * getcompletion() always passes zero as position to custom completion
  function.
  * Line commented out accidentally.
  * Freeze when calling term_wait() in a close callback.</comment>
    <requestid>932951</requestid>
  </revision>
  <revision rev="295" vrev="1">
    <srcmd5>5ec2300b2255f46ae08dd48c1240f09f</srcmd5>
    <version>8.2.3863</version>
    <time>1640200671</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.3863, fixes the following problems
  * Freeze when calling term_wait() in a close callback.
  * Xxd code has duplicate expressions.
  * List of distributed files is outdated.
  * Header for source file is outdated.
  * Count for 'operatorfunc' in Visual mode is not redone.
  * Vim9: The &quot;no effect&quot; error is not given for all registers.
  * Using &lt;sfile&gt; in a function gives an unexpected result.
  * GTK: when using ligatures the cursor is drawn wrong.
  * &quot;verbose pwd&quot; is incorrect after dropping files on Vim.
  * Vim9: error for variable declared in while loop.
  * Vim9: for loop variable can be a list member.
  * Vim9: no error for :lock or :unlock with unknown variable.
  * Can only get text properties one line at a time.
  * Terminal ANSI colors may be wrong.
  * GTK: a touch-drag does not update the selection.
  * Compiler warning for using size_t for int.
  * Vim9: no error for an evironment variable by itself.
  * Vim9: debug text misses one line of return statement.
  * Duplicate code in xxd.
  * Integer overflow with large line number.
  * Overflow check uses wrong number.
  * Test for put with large count fails.
  * Illegal memory access if malloc() fails.
  * Using %S in printf() does not work correctly.
  * Cannot adjust sign highlighting for 'cursorline'.
  * Cannot use a lambda for 'tagfunc'.
  * Libvterm is outdated.
  * Building libvterm fails with MSVC.
  * Messages may be corrupted.</comment>
    <requestid>941861</requestid>
  </revision>
  <revision rev="296" vrev="1">
    <srcmd5>b85b804dc54f0a278162e0979a622ee6</srcmd5>
    <version>8.2.3995</version>
    <time>1641386381</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.3995, fixes the following problems
- fixed boo#1194219
  * Various build flags accidentally enabled.
  * Cannot disable requesting key codes from xterm.
  * Vim9: compiler complains about using &quot;try&quot; as a struct member.
  * Vim9: type checking global variables is inconsistent.
  * Implementation of some list functions too complicated.
  * Vim9: function test fails.
  * Vim9: type checking for &quot;any&quot; is inconsistent.
  context menu. (Gabriel Dupras)
  * List.c contains code for dict and blob.
  * Vim9: finddir() and uniq() return types can be more specific.
  * go.mod files are not recognized.
  * Cannot highlight the number column for a sign.
  * gcc complains about buffer overrun.
  * 'cindent' does not recognize inline namespace.
  * Function does not abort after a type error in compare
  * Vim9: debugger tries to read more lines than there are.
  * getreg() and getregtype() contain dead code.
  * Solution filter files are not recognized.
  * More duplicated code in f_getreginfo().
  * Crash when switching to other regexp engine fails.
  * Crash when clearing the argument list while using it.
  * Arglist test fails.
  * Can define autocmd for every event by using &quot;au!&quot;.
  * E1135 is used for two different errors.
  * The argument list may contain duplicates.
  * Duplicate code for translating script-local function name.
  * Vim9: type check for using v: variables is basic.
  * When modifyOtherKeys is used CTRL-C is not recognized.</comment>
    <requestid>943787</requestid>
  </revision>
  <revision rev="297" vrev="1">
    <srcmd5>f7f2eaef68d16c699f986aeee2865539</srcmd5>
    <version>8.2.4063</version>
    <time>1642029729</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.4063, fixes the following problems
- fixes boo#1194559 CVE-2022-0156
  * Not all sshconfig files are detected as such.
  * Vim9: type checking for list and dict lacks information about declared
  type.
  * Vim9: not enough testing for extend() and map().
  * Asan error for adding zero to NULL.
  * Redundant check for NUL byte.
  * Coverity warns for checking for NULL pointer after using it.
  * Insert complete code uses global variables.
  * First char typed in Select mode can be wrong.
  * Error messages are spread out.
  * Old compiler complains about struct init with variable.
  * Error messages are spread out.
  * Vim9: crash when declaring variable on the command line.
  * Session does not restore help buffer properly when &quot;options' is missing
  from 'sessionoptions'.
  * Error messages are spread out.
  * Reading one byte beyond the end of the line.
  * Error messages are spread out.
  * Test fails because of changed error number.
  * Error messages are spread out.
  * Build failure without the spell feature.
  * Git and gitcommit file types not properly recognized.
  * Build failure with tiny features. (Tony Mechelynck)
  * Vim9: incorrect error for argument that is shadowing var.
  * Gcc warns for misleading indent in Athena menu code.
  * ml_get error when win_execute redraws with Visual selection.
  * Vim9: import mechanism is too complicated.
  * Debugger test fails.</comment>
    <requestid>945641</requestid>
  </revision>
  <revision rev="298" vrev="2">
    <srcmd5>52de502028f347b01258e5c6be362323</srcmd5>
    <version>8.2.4063</version>
    <time>1642279510</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>946430</requestid>
  </revision>
  <revision rev="299" vrev="1">
    <srcmd5>63700b0553a627235bb35ac5baf744bb</srcmd5>
    <version>8.2.4186</version>
    <time>1643228793</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>948350</requestid>
  </revision>
  <revision rev="300" vrev="1">
    <srcmd5>dc812892e8bb900adbc651d1f235e01d</srcmd5>
    <version>8.2.4286</version>
    <time>1644099779</time>
    <user>dimstar_suse</user>
    <comment>- fixes boo#1195509 CVE-2022-0443
- Updated to version 8.2.4286, fixes the following problems
  * Compiler warning for uninitialized variable.
  * Unused entry in keymap enum.
  * CI log output is long.
  * Coverity warns for using a NULL pointer.
  * Generating nv_cmdidxs.h requires building Vim twice.
  * Vim9 expr test fails without the channel feature. (Dominique Pellé)
  * The EBCDIC support is outdated.
  * Basic and form filetype detection is incomplete.
  * Cannot use an autoload function from a package under start.
  * Separate test function for the GUI scrollbar.
  * Vim9: an import does not shadow a command modifier.
  * Build with Athena GUI fails. (Elimar Riesebieter)
  * Vim9: cannot change item type with map() after range().
  * list-dict test crashes.
  * Using freed memory with :lopen and :bwipe.
  * Restricted mode requires the -Z command line option.
  * Using a variable for the return value is not needed.
  * Old mac resources files are no longer used.
  * Vim9: type of item in for loop not checked properly.
  * Vim9: strict type checking after copy() and deepcopy().

- fixes boo#1195499 CVE-2022-0417
- fixes boo#1195336 CVE-2022-0393
- Updated to version 8.2.4266, fixes the following problems
  * Cannot use an import in 'patchexpr'.
  * Gnuplot file not recognized.
  * Not all gitconfig files are recognized.
  * All conceal tests are skipped without the screendumps feature.</comment>
    <requestid>951182</requestid>
  </revision>
  <revision rev="301" vrev="1">
    <srcmd5>40dfec3403809ab307d016a70c4ef94f</srcmd5>
    <version>8.2.4375</version>
    <time>1644965821</time>
    <user>dimstar_suse</user>
    <comment>-  Updated to version 8.2.4375, fixes the following problems
  * Vim9: strict type checking after copy() and deepcopy().
  * Cannot assign empty list with any list type to variable with specific
  list type.
  * Preprocessor indents are inconsistent.
  * Warnings reported by MSVC.
  * Error number used twice.
  * Test fails.
  * Vim9: when copying a list it gets type list&lt;any&gt; even when the original
  list did not have a type.
  * Vim9: concatenating two lists may result in wrong type.
  * Vim9: not all code covered by tests.
  * Vim9: not all code covered by tests.
  * Divide by zero with huge tabstop value.
  * SafeState autocommand interferes with debugging.
  * Cannot build tiny version. (Tony Mechelynck)
  * Vim9: type error for copy of dict.
  * Vim9: return type of getline() is too strict.
  * A few messages should not be translated.
  * Vim9: slice() makes a copy but doesn't change the type.
  * Tex filetype detection fails.
  * No test for fixed perl filetype check.
  * A few more messages should not be translated.
  * Vim9: cannot list autoload function.
  * Vim9: crash when using a partial in the wrong context.
  * Vim9: constant list and dict get a declaration type other than &quot;any&quot;.
  * Vim9: changing script variable type not caught at compile time.
  * No error for using :vim9script in a :def function.
  * Vim9: cannot change type of list after making a slice.
  * Test fails where lines are skipped.</comment>
    <requestid>954204</requestid>
  </revision>
  <revision rev="302" vrev="2">
    <srcmd5>13525c26c6795a58af4aaa002b4682a7</srcmd5>
    <version>8.2.4375</version>
    <time>1645561064</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>956335</requestid>
  </revision>
  <revision rev="303" vrev="1">
    <srcmd5>9e1192d68d65933518e43034f517a84c</srcmd5>
    <version>8.2.4456</version>
    <time>1645723110</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.4456, fixes the following problems
- boo#1196361 - CVE-2022-0696
- boo#1196358 - CVE-2022-0714
  * ctx_imports is not used.
  * Not enough tests for command line completion.
  * CI steps for Windows are a bit unorganized.
  * Incsearch highlight broken when calling searchcount() in 'tabLine'
  function. (Mirko Palmer)
  * An empty change is reported to a listener.
  * Small differences between Chinese translation files.
  * Translation file listed twice.
  * A custom 'tabline' may cause Esc to work like Enter on the command line
  when the popup menu is displayed.
  * Vim9: unused code lines.
  * Vim9: error message not tested, some code not tested.
  * Cannot build tiny version.
  * Still cannot build tiny version.
  * Command line completion doesn't always work properly.
  * Dead code in op_insert().
  * screenpos() does not handle a position in a closed fold.
  * Vim9: list from declaration with inferred type does not set the type on
  the value.
  * Command line executed when typing Esc in the GUI.
  * MS-Windows with VIMDLL: Escaping CSI is wrong.
  * Possible number overflow with nested folds.
  * UTF8 select mode test fails on MS-Windows.
  * Some code lines not covered by tests.
  * Python3 test fails.
  * Crash when using many composing characters in error message.
  * Some command completion functions are too long.</comment>
    <requestid>957122</requestid>
  </revision>
  <revision rev="304" vrev="1">
    <srcmd5>80d0a82fe059f97a88737a88d98f1198</srcmd5>
    <version>8.2.4542</version>
    <time>1647101674</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.4542, fixes the following problems
  * Terminal test may fail on some machines.
  * The GPM library can only be linked statically.
  * Vim9: compiling filter() call fails with funcref that has unknown
  arguments.
  * Vim9: compiling sort() call fails with a funcref that has unknown
  arguments.
  * Vim9: wrong error for defining dict function.
  * Not enough testing for quickfix code.
  * Completion only uses strict matching.
  * Dtrace files are recognized as filetype D.
  * Fuzzy completion does not order matches properly.
  &quot;create-directories&quot; as the final argument.
  * Running filetype test leaves file behind.
  * Coverity warns for uninitialized struct member.
  * Coverity warns for uninitialized variable.
  * Coverity warns for use of a freed function name.
  * Coverity warnds for not checking return value of ftell().
  * Memory allocation failures not tested in quickfix code.
  * Fuzzy cmdline completion does not work for lower case.
  * Operator name spelled wrong.
  * Crash when using fuzzy completion.
  * No fuzzy completieon for maps and abbreviations.
  * Suspending with CTRL-Z does not work on Android.
  * Cmdline popup menu not removed when 'lazyredraw' is set.
  * No fuzzy cmdline completion for user defined completion.
  * Command completion makes two rounds to collect matches.
  * Vim9: some error messages are not tested.
  * Compiler warning for uninitialized variable.
  * Vim9: cannot compare with v:null.</comment>
    <requestid>961038</requestid>
  </revision>
  <revision rev="305" vrev="1">
    <srcmd5>716533828e5ac20e743d3a2639872f77</srcmd5>
    <version>8.2.4602</version>
    <time>1648062937</time>
    <user>dimstar_suse</user>
    <comment>-  Updated to version 8.2.4602, fixes the following problems
  * Vim9: &quot;break&quot; inside try/catch not handled correctly.
  * Coverity warning for refactored tag search code.
  * Coverity warnings for not using returned value.
  * Duplicate #undef.
  * The neXTaw GUI is old and does not work well.
  * Script-local function is deleted when used in a funcref.
  * Cannot build with Motif and editres. (Tony Mechelynck)
  * When mapping &lt;Esc&gt; terminal codes are not recognized.
  * In a :def function &quot;put = expr&quot; does not work.
  * Linear tag search is a bit slow.
  * Vim9: using null values not sufficiently tested.
  * getmousepos() returns the wrong column. (Ernie Rael)
  * Test fails without the +job or +channel feature. (Dominique Pellé)
  * Confusing comment about 'cursorlineopt'.
  * getmousepos() returns the screen column. (Ernie Rael)
  * Suspending with CTRL-Z does not work on DragonFlyBSD.
  * Build failure with some combination of features. (John Marriott)
  * Linear tag search is not optimal.
  * &quot;z=&quot; in Visual mode may go beyond the end of the line.
  * Running test leaves file behind.  (Dominique Pellé)
  * No command line completion for :breakadd and :breakdel.
  * Check for existing buffer in session file does not work for files in
  the home directory.
  * Bracketed paste doesn't work well in Visual linewise mode.
  * getmousepos() does not compute the column below the last line.
  * Coverity warning for not using a return value.
  * No command line completion for :profile and :profdel.
  * Not all gdb files are recognized.
  * Vim9: return type &quot;any&quot; is sometimes changed to first returned type.</comment>
    <requestid>963690</requestid>
  </revision>
  <revision rev="306" vrev="1">
    <srcmd5>cee815065d71964ad33209a6c9fd1ac4</srcmd5>
    <version>8.2.4745</version>
    <time>1650060843</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.4745, fixes the following problems
  * Vim9: not enough test coverage for executing :def function.
  * Sourcing buffer lines is too complicated.
  * Error for redefining a script item may be confusing.
  * Error for arguments of remote_expr() even when the +clientserver feature
  is not included.
  * Test fails because of changed error message.
  * Sourcing buffer lines may lead to errors for conflicts.
  * getcompletion() does not work properly when 'wildoptions contains &quot;fuzzy&quot;.
  * :unhide does not check for failing to close a window.
  * Some conditions are always true.
  * Typos in tests; one lua line not covered by test.
  * Vim9: cannot use a recursive call in a nested function. (Sergey Vlasov)
  * Return type of swapfile_unchanged() is wrong.
  * Redrawing too much when 'cursorline' is set and jumping around.
  * Mapping with escaped bar does not work in :def function. (Sergey Vlasov)
  * Vim9: Declarations in a {} block of a user command do not use Vim9 rules
  if defined in a legacy script. (Yegappan Lakshmanan)
  * No completion for :scriptnames.
  * Command line completion does not recognize single letter commands.
  * Mapping is cancelled when mouse moves and popup is visible.
  * Two letter substitute commands don't work. (Yegappan Lakshmanan)
  * Crash when using the tabline right-click menu.
  * Vim9: Crash with :execute and :finish. (Sergey Vlasov)
  * Coverity warns for using uninitialized field.
  * Old Coverity warning for resource leak.
  * Old Coverity warning for resource leak.
  * Visual area not fully updated when removing sign in Visual mode while
  scrolling.
  * flatten() does not use maxdepth correctly.</comment>
    <requestid>969893</requestid>
  </revision>
  <revision rev="307" vrev="2">
    <srcmd5>ecf85a7c3ab917fb74940fa65dabc86f</srcmd5>
    <version>8.2.4745</version>
    <time>1650657187</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>971085</requestid>
  </revision>
  <revision rev="308" vrev="1">
    <srcmd5>a700060ed367d8fc397759e9ca1d620d</srcmd5>
    <version>8.2.4877</version>
    <time>1652039552</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.4877, fixes the following problems
- fixes CVE-2022-1381 ( boo#1198596 )
  * Using wrong flag for using bell in the terminal.
  * Supercollider filetype not recognized.
  * No filetype override for .sys files.
  * Cannot use an imported function in a mapping.
  * &lt;script&gt; is not expanded in autocmd context.
  * Small pieces of dead code.
  * Mapping &lt;SID&gt;name.Func does not work for script in autoload directory.
  * Wrong 'statusline' value can cause illegal memory access.
  * Error from setting an option is silently ignored.
  * Still using cached values after unsetting some known environment variables.
  * Cannot use &lt;SID&gt;FuncRef in completion spec.
  * Build error without the +eval feature.
  * List of libraries to suppress lsan errors is outdated.
  * When using an LSP channel want to get the message ID.
  * CurSearch highlight does not work for multi-line match.
  * Using matchfuzzy() on a long list can take a while.
  * Documentation for using LSP messages is incomplete.
  * Using freed memory when using synstack() and synID() in WinEnter.
  * Using invalid pointer with &quot;V:&quot; in Ex mode.
  * CI uses an older gcc version.
  * Function matchfuzzy() sorts too many items.
  * KRL files using &quot;deffct&quot; not recognized.
  * Openscad files are not recognized.
  * CI: codecov upload sometimes does not work.
  * Build warning with UCRT.
  * Cannot easily mix expression and heredoc.
  * Coverity warns for not checking return value.
  * Old Coverity warning for not checking ftell() return value.</comment>
    <requestid>975380</requestid>
  </revision>
  <revision rev="309" vrev="1">
    <srcmd5>bb1255796b371cc4f7a1d808732f26b1</srcmd5>
    <version>8.2.5038</version>
    <time>1653907325</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.5038, fixes the following problems
  * Valgrind warning for using uninitialized variable.
  * Screendump test may fail when using valgrind.
  * Vim9: misplaced elseif causes invalid memory access.
  * &quot;P&quot; in Visual mode still changes some registers.
  * Cannot make 'breakindent' use a specific column.
  * String interpolation only works in heredoc.
  * Test fails without the job/channel feature. (Dominique Pellé)
  * Test fails with the job/channel feature.
  * Vim9: redir in skipped block seen as assignment.
  * Channel log does not show invoking a timer callback.
  * Line number of lambda ignores line continuation.
  * Inconsistent capitalization in error messages.
  * Vim help presentation could be better.
  * Test failures because of changed error messages.
  * Distributed import files are not installed.
  * Buffer overflow with invalid command with composing chars.
  * Expression in command block does not look after NL when command is typed.
  * Comment inside an expression in lambda ignores the rest of the expression.
  * Coverity complains about pointer usage.
  * With latin1 encoding CTRL-W might go before the start of the command line.
  * Vim9 expression test fails without the job feature.
  * NULL pointer access when using invalid pattern.
  * Mouse wheel scrolling is inconsistent.
  * Cannot get the current cmdline completion type and position.
  * codecov includes MS-Windows install files.
  * codecov includes MS-Windows install header file.
  * Some users do not want a line comment always inserted.
  * No text formatting for // comment after a statement.
  * MODE_ enum entries names are too generic.</comment>
    <requestid>979693</requestid>
  </revision>
  <revision rev="310" vrev="1">
    <srcmd5>fcb9d1a01a71684e281f092aba5733c1</srcmd5>
    <version>8.2.5083</version>
    <time>1655493625</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.5083, fixes the following problems
  * A finished terminal in a popup window does not show a scrollbar.
  * Confusing error if first argument of popup_create() is wrong.
  * Scrollbar thumb in scrolled popup not visible.
  * Cannot close a terminal popup with &quot;NONE&quot; job.
  * Scrollbar thumb in tall scrolled popup not visible.
  * Can open a cmdline window from a substitute expression.
  * Command line test fails.
  * Can escape a terminal popup window when the job is finished.
  * vim_regsub() can overwrite the destination.
  * CurSearch highlight is often wrong.
  * When using XIM the gui test may fail.
  * Insufficient tests for autocommands.
  * Using freed memory when searching for pattern in path.
  * Check for autocmd_add() event argument is confusing.
  * CI checkout step title is a bit cryptic.
  * Cannot have a comment halfway an expression in an autocmd command block.
  * No good filetype for conf files similar to dosini.
  * Statusline is not updated when terminal title changes.
  * The channel log only contains some of the raw terminal output.
  * Using gettimeofday() for timeout is very inefficient.
  * input() does not handle composing characters properly.
  * Autoconf 2.71 produces many obsolete warnings.
  * Running configure fails.
  * C89 requires signal handlers to return void.
  * Coverity warns for dead code.
  * Error for a command may go over the end of IObuff.
  * No test for what 8.1.0052 fixes.
  * Wrong return type for main() in tee.c.
  * Can specify multispace listchars only for whole line.</comment>
    <requestid>982459</requestid>
  </revision>
  <revision rev="311" vrev="1">
    <srcmd5>df4d964904dc2aa9c4e3141ff27299ba</srcmd5>
    <version>8.2.5136</version>
    <time>1655824512</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.5136, fixes the following problems
  * Autocmd test still fails on MS-Windows.
  * When the GUI shows a dialog tests get stuck.
  * Gcc gives warning for signed/unsigned difference.
  * CI runs on Windows 2019.
  * Cannot build with clang on MS-Windows.
  * Value of cmod_verbose is a bit complicated to use.
  * Some functions return a different value on failure.
  * Terminal test fails with some shell commands.
  * Using &quot;'&lt;,'&gt;&quot; in Ex mode may compare unrelated pointers.
  * Error message for unknown command may mention the command twice. (Malcolm
  Rowe)
  * Terminal test still fails with some shell commands.
  * Using uninitialized memory when using 'listchars'.
  * Spelldump test sometimes hangs.
  * Some terminal tests are not retried.
  * Memory usage tests are not retried.
  * MS-Windows with MinGW: $CC may be &quot;cc&quot; instead of &quot;gcc&quot;.
  * Interrupt not caught in test.
  * Build fails with small features.
  * Default cmdwin mappings are re-mappable.
  * Some callers of rettv_list_alloc() check for not OK. (Christ van Willegen)
  * Retab test disabled because it hangs on MS-Windows.
  * Mode not updated after CTRL-O CTRL-C in Insert mode.
  * Icon filetype not recognized from the first line.
  * No test for --gui-dialog-file.
  * Timer becomes invalid after fork/exec, :gui gives errors. (Gabriel Dupras)
  * Time limit on searchpair() does not work properly.
  * Search timeout is overrun with some patterns.
  * &quot;limit&quot; option of matchfuzzy() not always respected.</comment>
    <requestid>983876</requestid>
  </revision>
  <revision rev="312" vrev="1">
    <srcmd5>c0e524ff51dfb77d17e8ab634b3645a7</srcmd5>
    <version>8.2.5154</version>
    <time>1656145428</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 8.2.5154, fixes the following problems
- fixed boo#1200184
  * Debugger test fails when run with valgrind.
  * Cannot build without the +channel feature. (Dominique Pellé)
  * Various small issues.
  * TIME_WITH_SYS_TIME is no longer supported by autoconf.
  * Seachpair timeout test is flaky.
  * Using &quot;volatile int&quot; in a signal handler might be wrong.
  * Startup test fails if there is a status bar at the top of the
  screen. (Ernie Rael)
  * Some tests fail when using valgrind. Spurious leak reports.
  * With 'lazyredraw' set completion menu may be displayed wrong.
  * Exit test causes spurious valgrind reports.
  * Memory leak when substitute expression nests.
  * Flaky test always fails on retry.
  * Invalid memory access when using an expression on the command line.
  * Cannot build without the +eval feature. (Tony Mechelynck)
  * Read past the end of the first line with &quot;:0;'{&quot;.
  * Reading beyond the end of the line with lisp indenting.
  * search() gets stuck with &quot;c&quot; and skip evaluates to true.
  * &quot;make uninstall&quot; does not remove colors/lists.
  * Still mentioning version8, some cosmetic issues.</comment>
    <requestid>984835</requestid>
  </revision>
  <revision rev="313" vrev="1">
    <srcmd5>480732a784087ad7752d0cc0dafb209e</srcmd5>
    <version>9.0.0000</version>
    <time>1656587869</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.0000, fixes the following problems
  * Reading beyond the end of the line with lisp indenting.
  * search() gets stuck with &quot;c&quot; and skip evaluates to true.
  * &quot;make uninstall&quot; does not remove colors/lists.
  * Still mentioning version8, some cosmetic issues.
  * In diff mode windows may get out of sync. (Gary Johnson)
  * TSTP and INT signal tests are not run with valgrind.
  * Fix for CTRL-key combinations causes more problems than it solves.
  * Accessing invalid memory after changing terminal size.
  * Might still access invalid memory.
  * Reading before the start of the line with BS in Replace mode.
  * Crash when deleting buffers in diff mode.
  * Invalid memory access after diff buffer manipulations.
  * Import test fails because 'diffexpr' isn't reset.
  * Test for DiffUpdated fails.
  * get(Fn, 'name') on funcref returns special byte code.
  * Cannot build with Python 3.11.
  * Nested :source may use NULL pointer.
  * Dependencies and proto files are outdated.
  * &quot;make menu&quot; still uses legacy script.</comment>
    <requestid>985660</requestid>
  </revision>
  <revision rev="314" vrev="1">
    <srcmd5>c7ad2fd1931331617e5e5f4caebf4858</srcmd5>
    <version>9.0.0032</version>
    <time>1657016845</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.0032, fixes the following problems
- fix CVE-2022-2285 - boo#1201134 
- fix CVE-2022-2257 - boo#1201154
  * Map functionality outside of map.c.
  * Functions are global while they could be local.
  * Plural messages not translated properly.
  * Hare files are not recognized.
  * Not all Visual Basic files are recognized.
  * No support for double, dotted and dashed underlines.
  * Cannot specify the variable name for &quot;xxd -i&quot;.
  * Going past the end of a menu item with only modifier.
  * Returning 0 for has('patch-9.0.0') is inconsistent.
  * Reading beyond the end of the line with put command.
  * Signature files not detected properly.
  * Reproducing memory access errors can be difficult.
  * Missing part of the test override change.
  * With EXITFREE defined terminal menus are not cleared.
  * Comparing line pointer for 'breakindent' is not reliable.
  * Accessing memory beyond the end of the line.
  * Going over the end of the typahead.
  * Timers test not run where possible.
  * With some completion reading past end of string.
  * Invalid memory access when adding word with a control character to the
  internal spell word list.
  * Spell test fails.
  * On Solaris timer_create() exists but does not work.
  * May access part of typeahead buf that isn't filled.
  * Accessing beyond allocated memory when using the cmdline window in Ex mode.
  * Accessing freed memory with diff put.
  * The command line test is getting quite big.</comment>
    <requestid>986612</requestid>
  </revision>
  <revision rev="315" vrev="1">
    <srcmd5>f95eec8b3d99292c2f471c2c99472cd4</srcmd5>
    <version>9.0.0073</version>
    <time>1659106038</time>
    <user>RBrownFactory</user>
    <comment>- Updated to version 9.0.0073, fixes the following problems
- fix CVE-2022-2522 - boo#1201863
  * In the quickfix window 'cursorline' overrules QuickFixLine highlighting.
  * On a Belgian keyboard CTRL-[ does not work.
  * Spell tests do not always clear the word list.
  * Spell dump may go beyond end of an array.
  * 'fillchars' cannot have window-local values.
  * 'listchars' test fails.
  * Not all systems have GDK_KEY_dead_circumflex. (Hisashi T Fujinaka)
  * Use of set_chars_option() is confusing.
  * A couple of filetype patterns do not have &quot;*&quot; before &quot;/etc&quot;.
  * Missing change for filetype detection.
  * Insufficient testing for bracket commands.
  * Typos in comments, wrapping lines.
  * Reading past end of completion with a long line and 'infercase' set.
  * Reading past end of completion with duplicate match.
  * Using freed memory with recursive substitute.
  * Cursor in wrong column with mouse click after concealed text.
  * Csv and tsv files are not recognized.
  * Split else-if is confusing.
  * Using CTRL-C wih :append may hang Vim.
  * &quot;zG&quot; may throw an error if invalid character follows.
  * E1281 not tested with the old regexp engine.
  * Compiler warning for size_t to int conversion.
  * Bitbake files are not detected.
  * Wrong line number reported when :cexpr fails in :def function.
  * has('patch-xxx') returns true.
  * Test file has wrong name.
  * Accessing uninitialized memory when completing long line.
  * ml_get error with nested autocommand.</comment>
    <requestid>991225</requestid>
  </revision>
  <revision rev="316" vrev="1">
    <srcmd5>0735fd464edc9a0dfaa455e2bfebf18e</srcmd5>
    <version>9.0.0135</version>
    <time>1659612179</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.0135, fixes the following problems
  * Coverity warns for double free.
  * Some compilers warn for using an uninitialized variable. (Tony Mechelynck)
  * No test for what patch 8.1.1424 fixes.
  * When switching window in autocmd the restored cursor position may be wrong.
  * Star register is changed when deleting and both &quot;unnamed&quot; and &quot;unnamedplus&quot;
  are in 'clipboard'.
  * Error in autoload script not reported for 'foldexpr'.
  * Compiler warning for size_t to int conversion.
  * Command line completion of user command may have duplicates. (Dani
  Dickstein)
  * Cannot interrupt global command from command line.
  * ModeChanged event not triggered when leaving the cmdline window.
  * Using &quot;terraform&quot; filetype for .tfvars file is bad.
  * &quot;:write&quot; fails after &quot;:file name&quot; and then &quot;:edit&quot;.
  * Tabline is not redrawn when entering command line.
  * MS-Windows: CTRL-[ on Belgian keyboard does not work like Esc.
  * Pattern for detecting bitbake files is not sufficient.
  * Fuzzy argument completion doesn't work for shell commands.
  * No error when assigning bool to a string option with setwinvar().
  * Duplicate error number.
  * Plugins cannot change v:completed_item.
  * Sway config files are recognized as i3config.
  * Cursor restored unexpected with nested autocommand.
  * Conditions are always true.
  * Flag &quot;new_value_alloced&quot; is always true.
  * Long quickfix line is truncated for :clist.
  * missing include file in timer_create configure check.
  * Scrollback can be wrong after redrawing the command line.
  * Get hit-enter prompt for system() when '!' is in 'guioptions'.</comment>
    <requestid>992576</requestid>
  </revision>
  <revision rev="317" vrev="1">
    <srcmd5>1b00366e47949fe210a50c1812090c40</srcmd5>
    <version>9.0.0181</version>
    <time>1660235482</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.0181, fixes the following problems
  * Comment about tabpage line above the wrong code.
  * After CTRL-Left-mouse click a mouse scroll also has CTRL.
  * Debugger test may fail when $CWD is very long.
  * Not enough characters accepted for 'spellfile'.
  * Truncating virtual text after a line not implemented. Cursor positioning
  wrong with Newline in the text.
  * execute() does not use the &quot;legacy&quot; command modifier.
  * &quot;delmenu&quot; does not remove autocmmands. Running menu test function
  alone fails.
  * Crash when adding and removing virtual text. (Ben Jackson)
  * Cursor positioned after virtual text in empty line.
  * Text property cannot override 'cursorline' highlight.
  * Substitute that joins lines drops text properties.
  * Missing part of change for &quot;override&quot; flag.
  * Cursor positioned wrong after two text properties with virtual text and
  &quot;below&quot; alignment. (Tim Pope)
  * A &quot;below&quot; aligned text property gets 'showbreak' displayed.
  * Test for fuzzy completion fails sometimes.
  * Error for using #{ in an expression is a bit confusing.
  * A &quot;below&quot; aligned text property does not work with 'nowrap'.
  * Warning for unused argument in small build.
  * No fold and sign column for virtual text with &quot;below&quot; align and 'nowrap'.
  * Text properties wrong after splitting a line.
  * Text properties with &quot;right&quot; and &quot;after&quot; alignment displayed wrong with
  'nowrap'.
  * Giving E1170 only in an expression is confusing.
  * 'showbreak' displayed below truncated &quot;after&quot; text prop.
  * With 'nowrap' &quot;below&quot; property not displayed correctly.
  * Cannot build with small features.</comment>
    <requestid>994291</requestid>
  </revision>
  <revision rev="318" vrev="1">
    <srcmd5>f53f868385f9a3a4b3f1e0dfbf07e938</srcmd5>
    <version>9.0.0203</version>
    <time>1660586193</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.0203, fixes the following problems
  * Textprop test with line2byte() fails on MS-Windows.
  * Quarto files are not recognized.
  * Extra space after virtual text when 'linebreak' is set.
  * Virtual text prop highlight continues after truncation.
  * Virtual text does not show if tehre is a text prop at same position. (Ben
  Jackson)
  * Virtual text without highlighting does not show. (Ben Jackson)
  * Command line height changes when maximizing window height.
  * Strange effects when using virtual text with &quot;text_align&quot; and non-zero
  column. (Martin Tournoij)
  * Invalid memory access for text prop without highlight.
  * The way 'cmdheight' can be made zero is inconsistent.
  * Messages test fails; window size incorrect when 'cmdheight' is made
  smaller.
  * Possible invalid memory access when 'cmdheight' is zero. (Martin Tournoij)
  * Search and match highlgith interfere with virtual text highlight. (Ben
  Jackson)
  * Cursor displayed in wrong position after removing text prop. (Ben Jackson)
  * Metafun files are not recogized.
  * Finding value in list may require a for loop.
  * Astro files are not detected.
  * ml_get error when switching buffer in Visual mode.
  * Cursor position wrong with two right-aligned virtual texts.
  * cursor in a wrong positoin if 'wrap' is off and using two right aligned
  text props in one line.
  * CursorLine highlight overrules virtual text highlight.
  * Code and help for indexof() is not ideal.
  * Confusing variable name.</comment>
    <requestid>995026</requestid>
  </revision>
  <revision rev="319" vrev="1">
    <srcmd5>70a1494179bb4ddcca414595a96adcde</srcmd5>
    <version>9.0.0224</version>
    <time>1660924395</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.0224, fixes the following problems
- fix boo#1202515 - CVE-2022-2845
  * indexof() may leak memory.
  * Cursor in wrong position when inserting after virtual text. (Ben Jackson)
  * Redraw flags are not named specifically.
  * Stacktrace not shown when debugging.
  * The override flag has no effect for virtual text. (Ben Jackson)
  * Build error with small features.
  * 'list' mode does not work properly with virtual text.
  * Invalid memory access when compiling :lockvar.
  * Invalid memory access when compiling :unlet.
  * Using freed memory with error in assert argument.
  * Splitting a line may duplicate virtual text. (Ben Jackson)
  * Not passing APC_INDENT flag.
  * Undo earlier test sometimes fails on MS-Windows.
  * 'shellslash' works differently when sourcing a script again.
  * Reading before the start of the line.
  * Cannot make a funcref with &quot;s:func&quot; in a def function in legacy script.
  * Invalid memory access with for loop over NULL string.
  * Accessing freed memory if compiling nested function fails.
  * No good reason why text objects are only in larger builds.
  * Typo in diffmode test.</comment>
    <requestid>997693</requestid>
  </revision>
  <revision rev="320" vrev="1">
    <srcmd5>129ddcbd49c681aedfde1e855438ffcb</srcmd5>
    <version>9.0.0313</version>
    <time>1661863719</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.0313, fixes the following problems
  * Using NULL pointer when skipping compiled code.
  * Using freed memory with multiple line breaks in expression.
  * job_start() test may fail under valgrind.
  * Cannot read error message when abort() is called.
  * Crash when pattern looks below the last line.
  * Vim9: error message for missing type is not clear.
  * No error for comma missing in list in :def function.
  * Expanding &quot;**&quot; may loop forever with directory links.
  * Test with BufNewFile autocmd is flaky.
  * Removing multiple text properties takes many calls.
  * Cannot make difference between the end of :normal and a character  in
  its argument.
  * 'autoshelldir' does not work with chunked respose.
  * Popup menu not removed when 'wildmenu' reset while it is visible.
  * Mac: cannot build if dispatch.h is not available.
  * Shift-Tab shows matches on cmdline when 'wildmenu' is off.
  * Build failure without the +wildmenu feature.
  * Crash when using &quot;:mkspell&quot; with an empty .dic file.
  * &quot;make install&quot; does not install shared syntax file. (James McCoy)
  * &quot;make install&quot; still fails. (Wilhelm Payne)
  * Text properties &quot;below&quot; sort differently on MS-Windows.
  * Cannot easily get the list of sourced scripts.
  * Mechanism to prevent recursive screen updating is incomplete.
  * Using freed memory when 'tagfunc' deletes the buffer.
  * Cannot add padding to virtual text without highlight.
  * Duplicate code in finding a script in the execution stack.
  * No test for what 9.0.0234 fixes.
  * Slightly inconsistent error messages.
  * Test output shows up in git.</comment>
    <requestid>1000020</requestid>
  </revision>
  <revision rev="321" vrev="1">
    <srcmd5>2ea69e6fd807e3254fc2185ddbb27a53</srcmd5>
    <version>9.0.0381</version>
    <time>1662462047</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.0381, fixes the following problems
  * Using common name in tests leads to flaky tests.
  * VDM files are not recognized.
  * Shell command is displayed in message window.
  * Screen flickers when 'cmdheight' is zero.
  * When updating the whole screen a popup may not be redrawn.
  * Clearing screen causes flicker.
  * Godot shader files are not recognized.
  * Command line type of CmdlineChange differs from getcmdtype().
  * Cannot use the message popup window directly.
  * Crash when no errors and 'quickfixtextfunc' is set.
  * Using common name in tests leads to flaky tests.
  * Some changes for cmdheight=0 are not needed.
  * items() does not work on a list. (Sergey Vlasov)
  * OLD_DIGRAPHS is unused.
  * &quot;:highlight&quot; hangs when 'cmdheight' is zero.
  * Method tests fail.
  * Cannot use items() on a string.
  * Overwrite check may block BufWriteCmd.
  * Method test fails.
  * Test does not properly clean up.
  * Checks for Dictionary argument often give a vague error message.
  * Tests are flaky because of using a common file name.
  * Flicker when resetting cmdline_row after updating the screen.
  * Return value of list_append_list() not always checked.
  * No check if the return value of XChangeGC() is NULL.
  * The 'cmdheight' zero support causes too much trouble.
  * mapset() does not restore &lt;Nop&gt; mapping properly.
  * &quot;:wincmd =&quot; equalizes in two directions.
  * ColorScheme autocommand triggered when colorscheme is not found. (Romain</comment>
    <requestid>1001211</requestid>
  </revision>
  <revision rev="322" vrev="1">
    <srcmd5>953056af29e3a8bf6e2fe3c6fb11985f</srcmd5>
    <version>9.0.0453</version>
    <time>1663155872</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.0453, fixes the following problems
- boo#1203194 - CVE-2022-3134
- boo#1203110 - CVE-2022-3099
  * Writefile test leaves files behind.
  * Freeing the wrong string on failure.
  * Coverity complains about unused value.
  * Covertity still complains about using return value of getc().
  * GUI: when CTRL-D is mapped in Insert mode it gets inserted. (Yasuhiro
  Matsumoto)
  * Some code blocks are nested too deep.
  * repeating a &lt;ScriptCmd&gt; mapping does not use the right script context.
  * The do_arg_all() function is too long.
  * Crash when 'tagfunc' closes the window.
  * Cannot use a partial with :defer.
  * Using separate delete() call instead of writefile() 'D' flag.
  * Inverted condition is a bit confusing.
  * Signals test often fails on FreeBSD.
  * Cygwin: multibyte characters may be broken in terminal window.
  * Clang warnings for function prototypes.
  * :findrepl does not escape '&amp;' and '~' properly.
  * :defer not tested with exceptions and &quot;:qa!&quot;.
  * Members of funccall_T are inconsistently named.
  * Using :defer in expression funcref not tested.
  * GUI test sometimes hangs on CI.
  * CI uses older clang version.
  * Javascript module files are not recoginzed.
  * 'equalalways' may be off when 'laststatus' is zero.
  * Crash when passing invalid arguments to assert_fails().
  * Arguments in a partial not used by a :def function.
  * Deferred functions not invoked when partial func exits.</comment>
    <requestid>1003244</requestid>
  </revision>
  <revision rev="323" vrev="2">
    <srcmd5>4473cf2794a606b39e2614e4a18d2ff2</srcmd5>
    <version>9.0.0453</version>
    <time>1663275479</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1003566</requestid>
  </revision>
  <revision rev="324" vrev="1">
    <srcmd5>e33032b54723a1d9e25d8ba4b8c4a2af</srcmd5>
    <version>9.0.0500</version>
    <time>1663694590</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.0500, fixes the following problems
- boo#1203508 - CVE-2022-3234
- boo#1203509 - CVE-2022-3235
  * On an AZERTY keyboard digit keys get the shift modifier.
  * Incorrect color for modeless selection with GTK.
  * A few problems with 'splitscroll'.
  * Function called at debug prompt is also debugged.
  * Substitute prompt does not highlight an empty match.
  * Splitting a line with a text prop &quot;above&quot; moves it to a new line below.
  * Vim9: block in for loop doesn't behave like a code block.
  * Loop variable can't be found.
  * 'scroll' is not always updated.
  * ASAN warning for integer overflow.
  * Command line test leaves directory behind.
  * With virtual text &quot;above&quot; indenting doesn't work well.
  * Cursor moves when cmdwin is closed when 'splitscroll' is off.
  * Virtual text wrong after adding line break after line.
  * Build failure.
  * Exectution stack underflow without the +eval feature. (Dominique Pellé)
  * Cursor moves if cmdwin is closed when 'splitscroll' is off.
  * In a :def function all closures in a loop get the same variables.
  * No test for what patch 9.0.0469 fixes.
  * Virtual text &quot;below&quot; doesn't show in list mode.
  * fullcommand() only works for the current script version.
  * fullcommand() test failure.
  * Not using deferred delete in tests.
  * Varargs does not work for replacement function of substitute().
  * Missing dependency may cause crashes on incomplete build.
  * Test for 'splitscroll' takes too much time.
  * Valva Date Format files are not recognized.</comment>
    <requestid>1004616</requestid>
  </revision>
  <revision rev="325" vrev="1">
    <srcmd5>6f65d2888799c7ba3924fa5b2aa73b6c</srcmd5>
    <version>9.0.0626</version>
    <time>1664638968</time>
    <user>RBrownFactory</user>
    <comment>- Updated to version 9.0.0626, fixes the following problems
- fix boo#1203924 - CVE-2022-3352
  * Error for modifying a const is not detected at compile time.
  * Leaking argument type array.
  * Too many delete() calls in tests.
  * When quitting the cmdline window with CTRL-C it remains visible.
  * Warning for using uninitialized value in mouse test.
  * A closure in a nested loop in a :def function does not work.
  * Build failure.
  * Various problems with 'nosplitscroll'.
  * Line number argument for :badd does not work.
  * Command line cleared when using :redrawstatus in CmdlineChanged
  autocommand event.
  * When the channel test fails there is no clue why.
  * Confusing error for &quot;saveas&quot; command with &quot;nofile&quot; buffer.
  * Chatito files are not recognized.
  * Unnecessary scrolling for message of only one line.
  * Cannot redraw the status lines when editing a command.
  * May not be able to use a pattern ad the debug prompt.
  * Terminal test sometimes hangs.
  * Virtual text highlight starts too early when 'number' is set.
  * Virtual text &quot;above&quot; highlights gap after it.
  * When at the command line :redrawstatus does not work well.
  * Virtual text highlight starts too early with 'nowrap' and 'number' set.
  * The win_line() function is much too long.
  * Declaring a loop variable at the start of a block is clumsy.
  * Compiler warns for unused argument in small version.
  * Build fails on Appveyor.
  * more compiler warnings for arguments in small version
  * Manually deleting temp test files.</comment>
    <requestid>1007186</requestid>
  </revision>
  <revision rev="326" vrev="1">
    <srcmd5>fa4add15f621167f82c25869932c07be</srcmd5>
    <version>9.0.0709</version>
    <time>1665591770</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.0709, fixes the following problems
  * Too many delete() calls in tests.
  * &quot;const&quot; and &quot;final&quot; both make the type a constant. (Daniel Steinberg)
  * Coverity warns for not checking return value.
  * Get an error for using const only when executing.
  * In Vim9 script a numbered function cannot be called.
  * Too many delete() calls in tests.
  * Calling a function from an &quot;expr&quot; option has too much overhead.
  * FEAT_TITLE was removed but is still used.
  * Evaluating &quot;expr&quot; options has more overhead than needed.
  * Build error and compiler warnings.
  * Underline color does not work in terminals that don't send a termresponse.
  * Syntax of commands in Vim9 script depends on +eval feature.
  * Popup menu highlight wrong on top of preview popup. (Yegappan Lakshmanan)
  * Checking for popup in screen_char() is too late, the attribute has
  already been changed.
  * Cannot scroll by screen line if a line wraps.
  * Missing part of the new option code.
  * Breakindent test fails.
  * Smoothscroll test fails.
  * 'smoothscroll' is not copied to a new window on :split.
  * CTRL-Y does not stop at line 1. (John Marriott)
  * with 'smoothscroll' set CTRL-E does not work properly when 'foldmethod'
  is set to &quot;indent&quot;. (Yee Cheng Chin)
  * The 'splitscroll' option is not a good name.
  * When using powershell input redirection does not work.
  * No indication when the first line is broken for 'smoothscroll'.
  * Some tests are failing.
  * Build fails without the +conceal feature.
  * 'smoothscroll' not tested with 'number' and &quot;n&quot; in 'cpo'.</comment>
    <requestid>1009199</requestid>
  </revision>
  <revision rev="327" vrev="1">
    <srcmd5>321fc7d34ebf27536cfed4a75494e3b0</srcmd5>
    <version>9.0.0814</version>
    <time>1666689501</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.0814, fixes the following problems
 * Kitty terminal is not recognized.
 * GUI mouse scrollwheel mappings don't work.
 * Error if :echowin is preceded by a command modifier
 * readblob() returns empty when trying to read too much
 * Test for job writing to buffer fails
 * sonnet filetype detection has a typo
 * With 'smoothscroll' typing &quot;0&quot; may not go to the first column
 * 'langmap' works differently when there are modifiers
 * Filetype autocmd may cause freed memory access
 * Crash when trying to divice the largest negative number by -1
 * readblob() cannot read from character device.
 * The modifyOtherKeys flag is set when it should not.
 * In compiled function -&gt;() on next line not recognized
 * Clang format configuration files are not recognized.
 * Order of assert function arguments is reverted.
 * readblob() always reads the whole file.
 * At the hit-Enter prompt the End and Home keys may not work.
 * Dummy buffer ends up in a window
 * User command does not get number from :tab modifier
 * Memory leak with empty shell command
 * &quot;:!&quot; doesn't do anything but does update the previous command.
 * OpenVPN files are not recognized.
 * 'scroll' value computed in unexpected location
 * The libvterm code is outdated.
 * Quickfix commands may keep memory allocated.
 * With a Visual block a put command column may go negative.
 * Indent and option tests fail.
 * Cannot use 'indentexpr' for Lisp indenting.
 * Display test for 'listchars' &quot;precedes&quot; fails</comment>
    <requestid>1030701</requestid>
  </revision>
  <revision rev="328" vrev="1">
    <srcmd5>e9fcc8a6ed9bcf7821196dc6e885c3ea</srcmd5>
    <version>9.0.0924</version>
    <time>1669288938</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.0924, fixes the following problems
  * Aws config files are not recognized.
  * &quot;:!&quot; does not switch to the alternate screen.
  * CTRL-Z at end of file is always dropped.
  * Build error.
  * &quot;!ls&quot; does not work.
  * Still a build error, tests are failing.
  * Memory leak with empty shell command.
  * Crash when using win_move_statusline() in another tab page.
  * Crash when dragging the statusline with a mapping.
  * Mouse drag test fails.
  * Crash when using win_move_separator() in other tab page.
  * If 'endofline' is set the CTRL-Z may be written in the wrong place.
  * The &lt;Home&gt; key in tmux doesn't work when 'term' is set to
  &quot;xterm&quot;. (Dominique Pellé)
  * Various typos.
  * Wrong counts in macro comment.
  * Compiler warning for redefining HAVE_DUP.
  * Deprecation warning causes build failure.
  * Warning for missing return type.
  * The window title is not redrawn when 'endoffile' changes.
  * Wrong error when using extend() with funcref.
  * append() reports failure when not appending anything.
  * Compiler warnings for unused variables.
  * Test may fail depending on sequence of events.
  * Cannot change a slice of a const list. (Takumi KAGIYAMA)
  * deletebufline() does not always return 1 on failure.
  * Unicode range for Apple SF symbols is outdated.
  * VHS tape files are not recognized.
  * Handling 'statusline' errors is spread out.</comment>
    <requestid>1037540</requestid>
  </revision>
  <revision rev="329" vrev="1">
    <srcmd5>d3c6c861b305d83caeff274d944a7279</srcmd5>
    <version>9.0.0978</version>
    <time>1669983125</time>
    <user>dimstar_suse</user>
    <comment>-Updated to version 9.0.0978, fixes the following problems
  * The first termcap entry of a builtin termcap is not used.
  * Two conditions are always false.
  * Coverity warns for not using return value of dict_add().
  * Coverity warns for using a NULL pointer.
  * Using Ruby LDFLAGS may cause build problems.
  * Build failure with tiny version. (Tony Mechelynck)
  * Cannot debug the Kitty keyboard protocol with TermDebug.
  * Oblivion files are not recognized.
  * Kitty shows &quot;already at oldest change&quot; on startup.
  * Various code formatting issues.
  * When using dash it may not be recognize as filetype &quot;sh&quot;.
  * Wrong type for &quot;isunnamed&quot; returned by getreginfo().
  * Forked repositories send out useless email.
  * Still using simplified mappings when using the kitty keyboard protocol.
  * Crash when typing a letter in a terminal window. (Shane-XB-Qian)
  * CI failures in sound dummy.
  * Workflow Description Language files are not recognized.
  * Pretending to go out of Insert mode when Esc is received has side effects.
  * 'cursorline' causes virtual text highlight to continue.
  * Failures in the cursorline test.
  * CI: Error in Coverity flow is not reported.
  * Invalid memory access in substitute with function that goes to another
  file.
  * 'ttyfast' is set for arbitrary terminals.
  * Crash when unletting a variable while listing variables.
  * The pattern &quot;\_s\zs&quot; matches at EOL.
  * Trying every character position for a match is inefficient.
  * Eclipse preference files are not recognized.
  * Part of making search more efficient is missing.</comment>
    <requestid>1039295</requestid>
  </revision>
  <revision rev="330" vrev="1">
    <srcmd5>b291063b4b9d3936fcfafcb180dfeb16</srcmd5>
    <version>9.0.1040</version>
    <time>1670703462</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.1040, fixes the following problems
  * Build errors without the +channel feature. (John Marriott)
  * ch_log() text can be hard to find in the log file.
  * The keyboard state response may end up in a shell command.
  * Build error in tiny version.
  * 'cursorline' not drawn before virtual text below.
  * Stray characters displayed when starting the GUI.
  * GUI: remote_foreground() does not always work. (Ron Aaron)
  * When using kitty keyboard protocol function keys may not work. (Kovid
  Goyal)
  * Build failure with tiny version.
  * File missing from list of distributed files.
  * Using feedkeys() does not show up in a channel log.
  * Popupwin test is more flaky on MacOS.
  * Callback name argument is changed by setqflist().
  * Crash when reading help index with various options set. (Marius Gedminas)
  * Vim9 script: get E1096 when comment follows return.
  * Display errors when adding or removing text property type.
  * Tests for empty prop type name fail.
  * Padding before virtual text below is highlighted when 'number' and
  'nowrap' are set.
  * If 'keyprotocol' is empty &quot;xterm&quot; still uses modifyOtherKeys.
  * Coverity warns for dead code.
  * &quot;gk&quot; may reset skipcol when not needed.
  * Memory may leak.
  * With 'smoothscroll' skipcol may be reset unnecessarily.
  * Classes are not documented or implemented yet.
  * Command list test fails.
  * Tiny build fails.
  * Suspend test sometimes fails on MacOS.</comment>
    <requestid>1041886</requestid>
  </revision>
  <revision rev="331" vrev="1">
    <srcmd5>b7d8d5da22c851626fda2ab25932d3e6</srcmd5>
    <version>9.0.1075</version>
    <time>1671563988</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.1075, fixes the following problems
  * refreshed vim-7.4-highlight_fstab.patch
  * Test for &lt;Cmd&gt; mapping with CmdlineChanged fails.
  * Cannot define a method in a class.
  * ASAN gives false alarm about array access.
  * Macro has confusing name and is duplicated.
  * Setting window height using Python may cause errors.
  * In a class object members cannot be initialized.
  * Class method disassemble test fails on MS-Windows.
  * Matchparen is slow.
  * With &quot;screenline&quot; in 'culopt' cursorline highlight is wrong.
  * Crash when opening a very small terminal window.
  * Using freed memory when assigning to variable twice.
  * After a failed CTRL-W ] next command splits window.
  * Using freed memory on exit when EXITFREE is defined.
  * Default constructor arguments are not optional.
  * Object member can't get type from initializer.
  * Coverity warns for using uninitialized memory.
  * Leaking memory when disassembling an object method.
  * Conflict between supercollider and scala filetype detection.
  * String value of class and object do not have useful information.
  * Build failure with some compilers that can't handle a declaration directly
  after a &quot;case&quot; statement.
  * Cannot display 'showcmd' somewhere else.
  * Some test function names do not match what they are doing.
  * When using Kitty a shell command may mess up the key protocol state.
  * Code for making 'shortmess' temporarily empty is repeated.
  * A shell command switching screens may still have a problem with the
  kitty keyboard protocol.
  * Test function name is wrong.</comment>
    <requestid>1043738</requestid>
  </revision>
  <revision rev="332" vrev="1">
    <srcmd5>0e17135379350508abb96e0fa6ba25f0</srcmd5>
    <version>9.0.1107</version>
    <time>1672394896</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.1107, fixes the following problems
  * build fails if the compiler doesn't allow for a declaration right after
  &quot;case&quot;.
  * ASAN complains about NULL argument.
  * Can add text property with negative ID before virtual text property.
  * With the +vartabs feature indent folding may use wrong 'tabstop'.
  * Leaking memory when defining a user command fails.
  * The &quot;kitty&quot; terminfo entry is not widespread, resulting in the kitty
  terminal not working properly.
  * Using &quot;-&gt;&quot; with split lines does not always work.
  * Some jsonc files are not recognized.
  * Empty and comment lines in a class cause an error.
  * Code handling low level MS-Windows events cannot be tested.
  * Compiler warns for uninitialized variable.
  * Display wrong in Windows terminal after exiting Vim.
  * Autocommand test sometimes fails.
  * Clang warns for unused variable.
  * unnessary assignment
  * FHIR Shorthand files are not recognized.
  * Assignment to non-existing member causes a crash. (Yegappan Lakshmanan)
  * Search error message doesn't show used pattern.
  * Using freed memory of object member. (Yegappan Lakshmanan)
  * Compiler warning when HAS_MESSAGE_WINDOW is not defined.
  * Using freed memory when declaration fails. (Yegappan Lakshmanan)
  * Reallocating hashtab when the size didn't change.
  * Tests are failing.
  * Code uses too much indent.
  * Trying to resize a hashtab may cause a problem.</comment>
    <requestid>1045717</requestid>
  </revision>
  <revision rev="333" vrev="2">
    <srcmd5>960618795e8a40c1b32b9b68bdb7dba2</srcmd5>
    <version>9.0.1107</version>
    <time>1672927212</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1055871</requestid>
  </revision>
  <revision rev="334" vrev="1">
    <srcmd5>6ee245b26ab85e8f5856576285f7fe2e</srcmd5>
    <version>9.0.1188</version>
    <time>1673724677</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.1188, fixes the following problems
- refreshed vim-7.4-highlight_fstab.patch
  * Float constant not recognized as float.
  * Type error when using &quot;any&quot; type and adding a number to a float.
  * Leaking allocated type.
  * Termcap entries for RGB colors are not set automatically.
  * test_mswin_event() can hang.
  * Users cannot easily try out a PR.
  * CI does not use the latest Python version.
  * Code is indented more than needed.
  * Compiler may complain about an unused function.
  * Terminfo entries for bracketed paste are not used.
  * Sporadic test failures when using a terminal window.
  * Type of arguments not checked when calling a partial.
  * Tex filetype detection not sufficiently tested.
  * Cursor positioning and display problems with 'smoothscroll' and using
  &quot;zt&quot;, &quot;zb&quot; or &quot;zz&quot;.
  * Class member access is not fully tested yet.
  * Class function not implemented yet.
  * Virtual text at a column position is truncated at the window
  edge. (Yegappan Lakshmanan)
  * Memory leak when using class functions.
  * Bracketed paste can be enabled when pasted text is not recognized.
  * No error if function argument shadows class member.
  * Build failure.
  * Sporadic Test_range() failure.
  * Unexpected output when autoloading a script for an interactive operation.
  * Build failure without the +eval feature.
  * Code is indented more than needed.
  * Error message names do not match the items.</comment>
    <requestid>1058175</requestid>
  </revision>
  <revision rev="335" vrev="1">
    <srcmd5>560d1fa2102e3b3fb9082971c89fd5a7</srcmd5>
    <version>9.0.1234</version>
    <time>1674585736</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.1234, fixes the following problems
  * Return value of type() for class and object unclear.
  * Invalid memory access with folding and using &quot;L&quot;.
  * Some Bazel files are not recognized.
  * No error when class function argument shadows a member.
  * Cannot map &lt;Esc&gt; when using the Kitty key protocol.
  * Compiler warning for comparing pointer with int.
  * Restoring KeyTyped when building statusline not tested.
  * Code is indented more than necessary.
  * Dump file missing from patch.
  * Abstract class not supported yet.
  * Crash when using kitty and using a mapping with &lt;Esc&gt;.
  * AppVeyor builds with an old Python version.
  * Assignment with operator doesn't work in object method.
  * Crash when iterating over list of objects.
  * Return type of values() is always list&lt;any&gt;.
  * Expression compiled the wrong way after using an object.
  * Crash when handling class that extends another class with more than one
  object members.
  * Testing with Python on AppVeyor does not work properly.
  * Error when object type is expected but getting &quot;any&quot;.
  * Code is indented more than necessary.
  * Getting interface member does not always work.
  * Compiler complains about declaration after label.
  * Storing value in interface member does not always work.
  * Cannot read back what setcellwidths() has done.
  * Adding a line below the last one does not expand fold.
  * File left behind after running tests.
  * Using isalpha() adds dependency on current locale.
  * Coverity warns for ignoring return value.</comment>
    <requestid>1060392</requestid>
  </revision>
  <revision rev="336" vrev="2">
    <srcmd5>835d561b3c054356c8118f2ab8081bd7</srcmd5>
    <version>9.0.1234</version>
    <time>1674810923</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1061139</requestid>
  </revision>
  <revision rev="337" vrev="1">
    <srcmd5>87a66c13fced749ab0c60b3d04374015</srcmd5>
    <version>9.0.1270</version>
    <time>1675357651</time>
    <user>dimstar_suse</user>
    <comment>- Updated to version 9.0.1270, fixes the following problems
  * The code style has to be checked manually.
  * MS-Windows console: not flushing termguicolors.
  * Code in same_leader() can be simplified.
  * Code is indented more than necessary.
  * :runtime completion can be further improved.
  * Cannot have a line break before an object member access.
  * Cannot access a private object member in a lambda defined inside the class.
  * Coverity warns for not checking function return value.
  * Code for :runtime completion is not consistent.
  * :setglobal cannot use script-local function for &quot;expr&quot; option.
  * Cursor briefly displayed in a wrong position when pressing Esc in Insert
  mode after autoindent was used.
  * Code is indented more than necessary.
  * Code is indented more than necessary.
  * Divide by zero with 'smoothscroll' set and a narrow window.
  * Cannot export an interface. (Ernie Rael)
  * Cannot export an abstract class. (Ernie Rael)
  * Cannot use an object method with :defer. (Ernie Rael)
  * Checking returned value of ga_grow() is inconsistent.
  * MS-Windows: scrollback cropped off on Vim exit.
  * Calling a method on an interface does not work.
  * Changing 'virtualedit' does not have immediate effect.
  * NetworkManager connection files are not recognized.
  * Code style is not check in test scripts.
  * Code style test fails.
  * Diffmode test fails.
  * Coverity warns for possible NULL pointer usage.
  * Elsa files are not recognized.
  * The did_set_string_option function is too long.</comment>
    <requestid>1062434</requestid>
  </revision>
</revisionlist>
