-------------------------------------------------------------------
Tue Feb 18 16:05:46 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Update to release 1.2.133:
  * Clarify language describing the <<commandbuffers-lifecycle, command
    buffer lifecycle>>
  * Add anchor handles to chapters and VUID statements in the HTML outputs.
  * Update declaration of flink:vkCmdDrawIndexedIndirectCountAMD to alias
    the core function rather than the KHR extension function.
  * Remove redundant NOTE discussing
    ename:VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT after the description
    of slink:VkCommandBufferInheritanceInfo.txt.
  * Reserved vendor ID for Codeplay.
  * Restrict flag bits to bit positions 0..30. Add language to the
    <<fundamentals-validusage-flags, Valid Usage for Flags>> section
    expressing the restriction; to the registry documentation where the
    `bitpos` attribute is defined; and finally, add a test to the generator
    scripts that warns of bits 31 and higher being used.
  * Clarify dynamic indexing of sampler objects in the
    <<interfaces-resources-descset, Descriptor Set Interface>> section, to
    be controlled by the same feature as sampled images.
  * Make the effect of query reset commands requiring multiple passes to
    complete explicit, by disallowing resets of the same query from the same
    primary command buffer in the description of flink:vkCmdResetQueryPool
    and the valid usage statements for ftext:vkCmdBeginQuery* .
  * Update interaction between elink:VkFormatFeatureFlagBits affecting
    slink:VkSamplerYcbcrConversionCreateInfo::pname:forceExplicitReconstruction.
  * Generate implicit pname:sType-unique valid usage statements from
    `validitygenerator.py` even for pname:pNext chains with only a single
    valid structure type, to enable validation layers work.
  * Clean up wording of some flink:vkBindImageMemory valid usage statements .
  * Mark the `VK_EXT_shader_subgroup_vote` and
    `VK_EXT_shader_subgroup_ballot` as deprecated in `vk.xml` .
  * Tighten slink:VkSamplerYcbcrConversionCreateInfo::pname:chromaFilter
    valid usage restriction to be ename:VK_FILTER_NEAREST instead of
    ename:VK_FILTER_LINAER, now that other filters exist .
  * Add valid usage statements to slink:VkCommandPoolCreateInfo and
    slink:VkDeviceQueueCreateInfo requiring that the corresponding
    ename:VK_COMMAND_POOL_CREATE_PROTECTED_BIT and
    ename:VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT not be set if the protected
    memory feature is not enabled. Previously this restriction was described
    for the elink:VkCommandPoolCreateFlagBits and
    elink:VkDeviceQueueCreateFlagBits types containing those flags, but not
    in valid usage statements.
  * Fix conditional markup in the <<shaders-scope-device>> and
    <<shaders-scope-queue-family>> sections to apply to Vulkan 1.2, as well
    as `VK_KHR_vulkan_memory_model`.
  * Add performance queries to the list in the introduction of the
    <<supported query types, queries>> chapter.
  * New Extension: `<<VK_KHR_shader_non_semantic_info>>`

-------------------------------------------------------------------
Mon Feb  3 12:43:19 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Update to release 1.2.132
  * Move and reword a NOTE in the <<extendingvulkan-extensions,
    Extensions>> section.
  * Change redundant description of application error when using
    flink:vkMapMemory into a non-normative NOTE.
  * Remove redundant valid usage statement for flink:vkCmdExecuteCommands.
  * Remove redundant command buffer
    ename:VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT language in
    flink:vkCmdExecuteCommands valid usage statements.
  * Add flink:vkBeginCommandBuffer valid usage statement to prevent
    using a primary command buffer with both the
    ename:VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT and
    ename:VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT flags.
  * Add slink:VkRenderPassBeginInfo valid usage statements for
    pname:renderArea.
  * Add missing valid usage statements for flink:vkCmdBeginRenderPass
    when `VK_KHR_separate_depth_stencil_layouts` is enabled.
  * Clarify the definition of "`transfer commands`" for
    <<synchronization-pipeline-stages-transfer,
    ename:VK_PIPELINE_STAGE_TRANSFER_BIT>>.
  * Clarify VK_ATTACHMENT_STORE_OP_DONT_CARE and reorder render pass chapter.
  * Clarify that <<pipelines-dynamic-state, Dynamic State>> can be set
    before pipeline bind, and update valid usage statements accordingly.
  * Clarify the behavior of floating-point divide by zero in the
    <<spirvenv-precision-operation, Precision and Operation of SPIR-V
    Instructions>> section.
  * Add a valid usage statement to flink:vkCmdResetQueryPool which allows
    not calling flink:vkCmdEndQuery if a prior flink:vmCmdResetQuery
    command was called.
  * Refactor specification of shader scopes into the new <<shaders-scope,
    Scope>> section, and modify other references to this language
    accordingly. Also describe quad invocation groups properly, with
    derivative and quad group operations referencing the description, and
    call out helper invocations as being able to become spontaneously
    inactive. Simplify parts of the texturing chapter accordingly.
  * Stop claiming that semaphore signals are ordered between different queue
    commands in the <<synchronization-signal-operation-order>> section.
  * Move a valid usage statement from slink:VkBindImagePlaneMemoryInfo to
    flink:vkBindImageMemory2, where it can be determined.

-------------------------------------------------------------------
Sun Jan 19 12:00:20 UTC 2020 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.131
  * Expand the extendingvulkan-extensions-extensiondependencies,
    Extension Dependencies section
  * Change the etext:VK_QUERY_SCOPE_* tokens in the
    VkPerformanceCounterScopeKHR to aliases of new
    VK_PERFORMANCE_COUNTER_SCOPE_* tokens, following the naming
    conventions for enumerants.
  * Move "NV" extension pipe stages in
    elink:VkShaderStageFlagBits so they are not included in
    enmae:VK_SHADER_STAGE_ALL_GRAPHICS.

-------------------------------------------------------------------
Thu Dec 12 19:04:14 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.1.130
  * Mark VkPipelineExecutableInternalRepresentationKHR as
    `returnedonly`.
  * Add VK_NV_glsl_shader deprecation note.
  * New extension VK_EXT_tooling_info.
- Update to release 1.1.129
  * Rename "pixel shaders" to "fragment shaders".
  * New extension VK_KHR_buffer_device_address.
- Update to release 1.1.128
  * Change VK_PIPELINE_CREATE_DISPATCH_BASE to an alias of new
    token VK_PIPELINE_CREATE_DISPATCH_BASE_BIT.
  * New extension VK_KHR_performance_query.

-------------------------------------------------------------------
Thu Nov  7 07:14:59 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.1.127
  * VK_KHR_separate_depth_stencil_layouts allows for image memory
    barriers for depth/stencil images to have just one of the
    depth or stencil bits set instead of both.

-------------------------------------------------------------------
Sat Oct 26 11:39:31 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.1.126
  * Allow slink:VkRenderPassFragmentDensityMapCreateInfoEXT to
    extend.
  * Update the elink:VkAccessFlagBits etext:VK_ACCESS_MEMORY_*
    flags definition to make clear that
    ename:VK_ACCESS_MEMORY_READ_BIT and
    ename:VK_ACCESS_MEMORY_WRITE_BIT are meant to be equivalent
    to setting all applicable etext:READ and etext:WRITE access
    flags, and update the
    <<synchronization-access-types-supported, supported access
    types>> table accordingly.
  * Clarify the memory mapping NOTE about invalidation described
    for flink:vkInvalidateMappedMemoryRanges.
  * Fix label for flink:vkCmdWaitEvents VUID 02803.

-------------------------------------------------------------------
Sun Sep 22 21:47:34 UTC 2019 - Aaron Stern <ukbeast89@protonmail.com>

- Update to 1.1.123
  * Add missing aspect mask descriptions to
    elink:VkImageAspectFlagBits.
  * Modify validity generator script to not check validity of
    ignored values.
  * Fix footnote markup in the <<vkGetDeviceProcAddr behavior>>
    table.
  * Require that <<interfaces-builtin-variables-sgs,
    code:SubgroupSize>> be a power of two.
  * Clarify that shaderFloat64 and shaderInt64 enable all storage
    classes, while shaderFloat16, shaderInt8, and shaderInt16
    only enable non-interface storage classes. in the
    <<features-shaderFloat64>>, <<features-shaderInt64>>, and
    <<features-shaderInt16>> descriptions and for
    slink:VkPhysicalDeviceShaderFloat16Int8FeaturesKHR.
  * Fix broken asciidoctor conditional logic in the
    <<spirvenv-module-validation, Validation Rules within a
    Module>> section, and add style guide language to help avoid
    this problem in the future.
  * Modify VUID assignment script to use the first API include in
    a block as part of the VUID name rather than the last one, so
    the VUID is based on the promoted API name.
  * Cleanup string descriptions to consistently refer to
    "null-terminated UTF-8" strings.
  * Clarify the purpose of the
    slink:VkPhysicalDeviceLimits::ptext:maxDescriptorSet* limits.
  * Fix the slink:VkPhysicalDeviceRayTracingPropertiesNV limits
    for pname:maxGeometryCount, pname:maxInstanceCount, and
    pname:maxTriangleCount in the <<limits-required, Required
    Limits>>.
  * Update SPIR-V image op sign-matching rules in the
    <<spirvenv-module-validation, Validation Rules within a
    Module>> section, the <<formats-numericformat>> table, and
    the <<interfaces-resources-descset, Descriptor Set
    Interface>> section.
  * New extensions VK_KHR_shader_subgroup_extended_types,
    VK_GOOGLE_user_type.

-------------------------------------------------------------------
Sun Aug 18 23:54:31 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Update to 1.1.120
  * Add missing flags VUs in VkCommandBufferInheritanceInfo
- Package the spec_tools Python modules, needed for
  newer vulkan-validationlayers.

-------------------------------------------------------------------
Fri Jul  5 10:48:45 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Initial package (version 1.1.113) for build.opensuse.org
