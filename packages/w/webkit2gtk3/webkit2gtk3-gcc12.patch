From 0a17a235d9f56d9107a3e87a42bdcff4c43806a7 Mon Sep 17 00:00:00 2001
From: Mike Gorse <mgorse@suse.com>
Date: Wed, 30 Mar 2022 13:07:47 -0500
Subject: [PATCH] Add default constructors needed to build with gcc 12

---
 Source/JavaScriptCore/ChangeLog                   | 11 +++++++++++
 Source/JavaScriptCore/runtime/SamplingProfiler.h  | 15 +++++++++++----
 Source/WebCore/ChangeLog                          | 10 ++++++++++
 .../platform/graphics/ColorInterpolationMethod.h  | 10 +++++++++-
 4 files changed, 41 insertions(+), 5 deletions(-)

diff --git a/Source/JavaScriptCore/runtime/SamplingProfiler.h b/Source/JavaScriptCore/runtime/SamplingProfiler.h
index 64415967ab7f..87ecbb4e7bd0 100644
--- a/Source/JavaScriptCore/runtime/SamplingProfiler.h
+++ b/Source/JavaScriptCore/runtime/SamplingProfiler.h
@@ -106,6 +106,13 @@ public:
         BytecodeIndex wasmOffset;
 
         struct CodeLocation {
+            CodeLocation()
+            : lineNumber { std::numeric_limits<unsigned>::max() },
+              columnNumber { std::numeric_limits<unsigned>::max() },
+              jitType { JITType::None },
+              isRegExp { false }
+            { }
+
             bool hasCodeBlockHash() const
             {
                 return codeBlockHash.isSet();
@@ -123,12 +130,12 @@ public:
             }
 
             // These attempt to be expression-level line and column number.
-            unsigned lineNumber { std::numeric_limits<unsigned>::max() };
-            unsigned columnNumber { std::numeric_limits<unsigned>::max() };
+            unsigned lineNumber;
+            unsigned columnNumber;
             BytecodeIndex bytecodeIndex;
             CodeBlockHash codeBlockHash;
-            JITType jitType { JITType::None };
-            bool isRegExp { false };
+            JITType jitType;
+            bool isRegExp;
         };
 
         CodeLocation semanticLocation;
diff --git a/Source/WebCore/platform/graphics/ColorInterpolationMethod.h b/Source/WebCore/platform/graphics/ColorInterpolationMethod.h
index ee6cba0d1d3a..990251d82a23 100644
--- a/Source/WebCore/platform/graphics/ColorInterpolationMethod.h
+++ b/Source/WebCore/platform/graphics/ColorInterpolationMethod.h
@@ -57,9 +57,17 @@ enum class ColorInterpolationColorSpace : uint8_t {
     
 struct ColorInterpolationMethod {
     struct HSL {
+        HSL()
+        : hueInterpolationMethod { HueInterpolationMethod::Shorter}
+        { }
+
+        HSL(HueInterpolationMethod method)
+        : hueInterpolationMethod(method)
+        { }
+
         static constexpr auto interpolationColorSpace = ColorInterpolationColorSpace::HSL;
         using ColorType = WebCore::HSLA<float>;
-        HueInterpolationMethod hueInterpolationMethod = HueInterpolationMethod::Shorter;
+        HueInterpolationMethod hueInterpolationMethod;
     };
     struct HWB {
         static constexpr auto interpolationColorSpace = ColorInterpolationColorSpace::HWB;
-- 
2.35.1

