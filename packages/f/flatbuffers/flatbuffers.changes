-------------------------------------------------------------------
Wed Oct 11 10:30:43 UTC 2023 - ecsos <ecsos@opensuse.org>

- Update to 23.5.26
  - TS/JS: Upgrade package.json dependencies by @bjornharrtell in #7933
  - fix out-of-source builds with cmake by @dbaileychess in #7946
  - removed extern code generation declarations preferring direct includes by @dbaileychess in #7948
  - fixed bfbs gen to pass extra options by @dbaileychess in #7949
  - Fix //tests/ts:bazel_repository_test by @philsc in #7952
  - Change SizedPrefixed verifier to be <= provided size by @dbaileychess in #7957
  - fix(TS): fixed incorrect function name when importing unionTo functions by @sssooonnnggg in #7958
  - remove flatbuffers tests from android by @dbaileychess in #7959
  - feat(C++): Support underlying_type for union by @sssooonnnggg in #7954
  - feat: Support union underlying type for TS/JS by @sssooonnnggg in #7961
  - README.md: SemVer case typo by @crisman in #7962
  - chore: fixed broken script: RustTest.bat by @sssooonnnggg in #7963
  - Switch to using alias instead of a typedef for FlatBufferBuilder by @dbaileychess in #7966
  - fix(rust): fixed rust namer isses, resolve #7865 and ##7782 by @sssooonnnggg in #7964
  - Fix python tests by @yan12125 in #7960
  - switch back to having T explicitly defined in CreateVector by @dbaileychess in #7967
  - don't emit flatbuffers include in bfbs generated output by @dbaileychess in #7968
  - Update java pom.xml file to allow java 8 compatibility by @swimar in #7894
  - FlatBuffers Version 23.5.26 by @dbaileychess in #7976
- Changes from 23.5.9
  - FlatBuffers 64 for C++ by @dbaileychess in #7935
  - FlatBuffers Version 23.5.9 by @dbaileychess in #7945
- Changes from 23.5.8
  - Update filename to README.md and improve formatting by @SmashedFrenzy16 in #7855
  - Fix help output for --java-checkerframework by @musicinmybrain in #7854
  - ToCamelCase() when kLowerCamel now converts first char to lower. by @paulovap in #7838
  - Adding comment for code clarification by @SmashedFrenzy16 in #7856
  - made changes to the rust docs so they would compile. by @jeffsmith82 in #7871
  - fix using null string in vector by @phenixxy in #7872
  - Use Bool for flatbuffers 'bool' instead of Byte in swift by @blindspotbounty in #7876
  - Update go documentation link to point to root module by @le-michael in #7879
  - README.md: PyPI case typo by @crisman in #7880
  - [CS] Verifier by @tira-misu in #7850
  - [TS/JS] Use minvalue from enum if not found by @bjornharrtell in #7888
  - Add a FileWriter interface by @Kn99HN in #7821
  - [TS/JS] Upgrade dependencies by @bjornharrtell in #7889
  - Fix go_sample.sh by @jdemeyer in #7903
  - Go: add test for FinishWithFileIdentifier by @jdemeyer in #7905
  - Optionally generate type prefixes and suffixes for python code by @maxburke in #7857
  - Support file_identifier in Go by @jdemeyer in #7904
  - Go: make generated code more compliant to "go fmt" by @jdemeyer in #7907
  - TS/JS: Use TypeError instead of Error when appropriate by @jmillan in #7910
  - Allow to use functions from BuildFlatBuffers.cmake from a flatbuffe… by @KerstinKeller in #7912
  - Make JSON supporting advanced union features by @admo in #7869
  - drop glibc from runtime dependencies by @faucct in #7906
  - Replace deprecated command with environment file by @jongwooo in #7921
  - Optionally generate Python type annotations by @maxburke in #7858
  - additional check for absl::string_view availability by @ocpalo in #7897
  - Only generate @kotlin.ExperimentalUnsigned annotation on create*Vector methods having an unsigned array type parameter. by @aaronriekenberg in #7881
  - Migrate from rules_nodejs to rules_js/rules_ts by @philsc in #7923
  - Revert "Migrate from rules_nodejs to rules_js/rules_ts" by @dbaileychess in #7927
  - inject no long for FBS generation to remove logs in flattests by @dbaileychess in #7926
  - fixed some windows warnings by @dbaileychess in #7929
  - Migrate from rules_nodejs to rules_js/rules_ts (take 2) by @philsc in #7928
  - Add binary schema reflection by @dbaileychess in #7932
  - Rework cmake flatc codegeneration by @dbaileychess in #7938
  - Add #!/usr/bin/bash to release.sh by @rishabhdeepsingh in #7942
  - FlatBuffers Version 23.5.8 by @rishabhdeepsingh in #7943

-------------------------------------------------------------------
Thu May  4 14:26:21 UTC 2023 - Dominique Leuenberger <dimstar@opensuse.org>

- Add _multibuild to define 2nd spec file as additional flavor.
  Eliminates the need for source package links in OBS.

-------------------------------------------------------------------
Mon Mar 27 19:52:42 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 23.3.3:
  * Major release! Just kidding, we are continuing the versioning
    scheme of using a date to signify releases. This results in the
    first release of the new year to
    bump the tradition major version field.
  * Refactoring of flatc generators to use an interface (#7797).
  * Removed legacy cmake support and set min to 3.8 (#7801).
  * Reworked entry points for Typescript/Javascript and compatibility
    for single file build (#7510)
  * Removed go.mod files after some versioning issues were being
    report (#7780).
  * Go minimum version is now 1.19 (#7720) with the addition of Go
    modules.
  * Added CI support for Big Endian regression testing (#7707).
  * Fixed getFullyQualifiedName in typescript to return name
    delimited by '.' instead of '_' (#7730).
  * Fixed the versioning scheme to not include leading zeros which
    are not consistently handled by every package manager. Only the
    last release (12.12.06)
    should have suffered from this.
  * 20 Major releases in a row? Nope, we switched to a new versioning
    scheme that is based on date.
  * Python supports fixed size arrays now (#7529).
  * Behavior change in how C++ object API uses UnPackTo. The original
    intent of this was to reduce allocations by reusing an existing
    object to pack data into.
    At some point, this logic started to merge the states of the two
    objects instead of clearing the state of the packee. This change
    goes back to the original intention, the packed object is cleared
    when getting data packed into it (#7527).
  * Fixed a bug in C++ alignment that was using sizeof() instead of
    the intended AlignOf() for structs (#7520).

-------------------------------------------------------------------
Thu May 12 12:02:53 UTC 2022 - Ferdinand Thiessen <rpm@fthiessen.de>

- Update to version 2.0.6
  * Make idl_parser deterministic
  * Various bug fixes
    https://github.com/google/flatbuffers/compare/v2.0.5...v2.0.6
- Update to version 2.0.5
  * Implement Serialize for flexbuffer::Reader
  * Deprecate EnumVal.object
  * FixedTypedVector: add const to ElementType() and size()

-------------------------------------------------------------------
Wed May 12 03:08:28 UTC 2021 - Ferdinand Thiessen <rpm@fthiessen.de>

- Update to version 2.0.0
  * Support for optional scalars in most languages.
  * Rust Verifier, Object API and FlexBuffers support,
    and many API improvements.
  * Overhaul of TypeScript support.
  * gRPC for many languages brought up to date.
  * C++ compile time field reflection.
  * JS FlexBuffers support.
  * Kotlin FlexBuffers and platform support.
  * Swift Object API and many Swift performance improvements.
  * Lua supports LuaJIT and many more fixes.
  * Many other fixes and smaller improvements
- Drop upstream fixed 5938.patch and 6020.patch

-------------------------------------------------------------------
Thu Feb  4 10:38:57 UTC 2021 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Fix build on Tumbleweed:
  - Backport patches:
    * 5938.patch
    * 6020.patch
  - Disable LTO

-------------------------------------------------------------------
Thu Apr 30 07:30:35 UTC 2020 - Michal Vyskocil <mvyskocil@opensuse.org>

- Update to 1.12.0
  - An official Swift port! (including gRPC support).
  - A Kotlin port!
  - Object API and native JSON support for C#.
  - Object API and gRPC support for Python.
  - Object API for Go.
  - FlexBuffers for Java.
  - Many other fixes and smaller improvements, 247 commits since 1.11.0
- Packaging: Use tarball from GitHub release page
  https://github.com/google/flatbuffers/releases

-------------------------------------------------------------------
Fri Feb 14 12:01:50 UTC 2020 - Dominique Leuenberger <dimstar@opensuse.org>

- Fix build: RPM 4.15 got a bit stricter and fails on
  find-provides script errors. Earlier RPM versions ignored it. In
  this specic case it turns out that the .cmake file installed is
  invalid, as it contained set(PACKAGE_VERSION "..") (so RPM is
  right to abort). Turns out that upstream simply did not really
  cater for the fact that this could be installed from tarball and
  not from a git checkout: they use 'git describe' to inject a
  version into the .cmake file. Fix this by replacing the
  placeholders using sed, injecting the rpm %version there.

-------------------------------------------------------------------
Tue Dec  3 14:49:14 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Use %cmake_build to build the cmake stuff

-------------------------------------------------------------------
Tue Oct  8 15:35:58 UTC 2019 - ecsos@opensuse.org

- Update to 1.11.0
  - More accurate C++ float handling, NaN handling, limit checking.
  - Java optimization: faster object accessors, faster UTF8 
    conversion.
  - A lot of Rust port improvements.
  - Vector of union JSON parsing.
  - Parser can now work from binary schemas.
  - Python: numpy vector support.
  - Packaging: Snap & RPM support.
  - Many improvements to our CI, added Bazel CI, dockerized 
    language tests.
  - Many other fixes and smaller improvements, 169 commits since 
    1.10.0

-------------------------------------------------------------------
Fri Mar 22 09:00:49 UTC 2019 - olaf@aepfle.de

- Update to 20190321T162332.a746143 to fix bigendian build
- dropped remove-date-from-flatc-version.patch

-------------------------------------------------------------------
Sat Mar 16 18:25:43 UTC 2019 - Torsten Duwe <duwe@suse.com>

- lift x86-only limitation

-------------------------------------------------------------------
Wed Jan 30 18:39:41 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to 1.10.0
  * Rust support
  * Dart support
  * Lua support
  * Lobster support
  * C++
    + Improved / more correct verifier
    + compare operator in generated code
    + new/improved move operators for many data types
    + string_view support.
  * Java & C# support vectors of unions.
  * Many other fixes and smaller improvements
- Package shared library in accordance with shared library
  packaging policy.
- Remove upstream-included 0001-remove-unnecessary-const-qualifier.patch
- Rebase remove-date-from-flatc-version.patch

-------------------------------------------------------------------
Thu Jun 28 02:00:55 UTC 2018 - kamikazow@opensuse.org

- Remove make-use-of-GNUInstallDirs.patch – has been upstreamed
- Add 0001-remove-unnecessary-const-qualifier.patch
  * Post-1.9.0 upstream patch to fix a compilation error.
- Update to 1.9.0
  * Vtable trimming in all language implementations: can reduce binary size 10-20%!
  * Mini-reflection tables (in C++) for debug-print, etc.
  * Improved .proto conversion.
  * Vectors of unions now also supported in JS/TS/PHP/C.
  * Improved namespace handling.
  * Boolean types in FlexBuffers.
  * Python Numpy vector support.
  * Nested FlatBuffer JSON parsing.
  * C++98 (stlport) support for core FlatBuffers and FlexBuffers.
  * JSON Schema output support.
  * Further optimized C++ memory usage for FlatBufferBuilder: from 3 to 1 dynamic allocations (!)
  * GRPC support in Java & Maven.
  * Build files for Bazel and Conan.
  * Prefixed size support for Java/C#/Python.
  * Typescript docs.

-------------------------------------------------------------------
Thu Jul  6 00:51:57 UTC 2017 - jengelh@inai.de

- Trim irrelevant words from descriptions.
- Stop the abuse of ls output for programmatic input.
  (useless use of cat)

-------------------------------------------------------------------
Wed Jun 21 16:26:30 UTC 2017 - sebix+novell.com@sebix.at

- add remove-date-from-flatc-version.patch -- ensure reproducible builds
- update to 1.7.1
 * Calling CreateVector in C++ on a vector of Offset types with an explicit template parameter (of that Offset type) of could cause the wrong specialization to be selected in 1.7.0. This should affect very few people, but safer to use 1.7.1 just in-case. flatc from 1.7.0 is compatible with 1.7.1.
- update to 1.7.0
 * Typescript support!
 * Improved GRPC API with proper zero-copy path. BREAKS API
 * Fixed many issues with ReleaseBufferPointer functionality BREAKS API
 * FlexBuffers: nested in FlatBuffer accessors, (nested) parsing from JSON, JSON output.
 * Vectors of unions and unions of structs/strings (C++ only so far).
 * Several speed optimizations for larger data types in C++ FlatBufferBuilder.
 * Schema registry functionality.
 * Improvements to the object API.
 * Improved docs: C# API, vector of structs.
 * Many other fixes and improvements, 116 commits since 1.6.0

-----------------------------------------------------------------
Sat Jun 17 :02:48 UTC 2017 - sebix+novell.com@sebix.at

- update to 1.6.0
- upstrm changelog for 1.6.0:
  * First ever version of FlexBuffers!
  * npm package support.
* Vectors of unions now supported (C++ only so far).
  * Improvementto the object API.
  * Some speed optimizations.
  * Many other fixes and impvements, 48 commits since 1.5.0
upstream changelog for 1.5.0:
  *RPC support for Go.
  * C# accessors now bad on structs (generates less garbage).
  * Improved object API (e.g. choice of pointer types, external references).
  * Flatc can test for conformity against older schema.
  * In-place binary search lookups for C# and Java.
  * Documentation improvements.
  * Many other fixes and improvements, 133 commits since 1.4.0
- upstream changelog for 1.4.0:
  * Support for GRPC!
  * C++ now has an object API: read & write to generated C++ objects.
  * Mutation support in Go & JS.
  * Many improvements in name space handling and general code generation.
  * Libfuzzer based tests.
  * Documentation for C in the main project.
  * Many other fixes and improvements, 300 commits since 1.3

-------------------------------------------------------------------
Fri Mar 11 04:34:14 UTC 2016 - avvissu@yandex.ru

- Update to 1.3.0:
  * support for PHP
  * much improved documentation: a tutorial shared by all languages
  * API improvements for Python, C#, and others
  * C++ code can now be built with GCC as low as 4.4, and doesn't rely on 
    exceptions anymore
  * JSON parser can now skip unknown fields
  * benchmark code available in benchmark branch
  * many other fixes and improvements
- Add general functions to automatically generated by the 
  FlatBuffers compiler (use BuildFlatBuffers.cmake)

-------------------------------------------------------------------
Fri Nov 20 20:34:34 UTC 2015 - hrvoje.senjan@gmail.com

- Update to 1.2.0
* Support for JavaScript and Python!
* A much improved C# and Go API and implementation.
* Simple mutable FlatBuffers functionality (C++/Java/C#).
* New reflection functionality: binary schemas, and more dynamic
  read/mutate (C++, relflection.h).
* Much improved .proto parsing.
- Added make-use-of-GNUInstallDirs.patch: honour flags passed by
  %cmake macro

-------------------------------------------------------------------
Sat May 16 07:51:12 UTC 2015 - hrvoje.senjan@gmail.com

- Install FindFlatBuffers.cmake
- Mark the package as %ix86 x86_64 exclusive
- BuildRequire cmake >= 2.8.11.2, it's the lowest version we know
  that has cmake.macros

-------------------------------------------------------------------
Sat Apr  4 20:15:09 UTC 2015 - hrvoje.senjan@gmail.com

- Update to 1.1.0:
* An extensive overhaul to the Java API.
* Out-of-the-box support for C# and Go.
* An optional verifier to make FlatBuffers practical in
  untrusted scenarios.
* .proto parsing for easier migration from Protocol Buffers.
* Optional manual assignment of field IDs.
* Dictionary functionality through binary search on a key field.
* Bug fixes and other improvements thanks to 200+ commits
  from 28 contributors.

-------------------------------------------------------------------
Tue Mar 31 11:15:19 UTC 2015 - hrvoje.senjan@gmail.com

- Activate initial flatbuffers package

