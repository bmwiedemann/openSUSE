-------------------------------------------------------------------
Thu May 12 12:02:53 UTC 2022 - Ferdinand Thiessen <rpm@fthiessen.de>

- Update to version 2.0.6
  * Make idl_parser deterministic
  * Various bug fixes
    https://github.com/google/flatbuffers/compare/v2.0.5...v2.0.6
- Update to version 2.0.5
  * Implement Serialize for flexbuffer::Reader
  * Deprecate EnumVal.object
  * FixedTypedVector: add const to ElementType() and size()

-------------------------------------------------------------------
Wed May 12 03:08:28 UTC 2021 - Ferdinand Thiessen <rpm@fthiessen.de>

- Update to version 2.0.0
  * Support for optional scalars in most languages.
  * Rust Verifier, Object API and FlexBuffers support,
    and many API improvements.
  * Overhaul of TypeScript support.
  * gRPC for many languages brought up to date.
  * C++ compile time field reflection.
  * JS FlexBuffers support.
  * Kotlin FlexBuffers and platform support.
  * Swift Object API and many Swift performance improvements.
  * Lua supports LuaJIT and many more fixes.
  * Many other fixes and smaller improvements
- Drop upstream fixed 5938.patch and 6020.patch

-------------------------------------------------------------------
Thu Feb  4 10:38:57 UTC 2021 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Fix build on Tumbleweed:
  - Backport patches:
    * 5938.patch
    * 6020.patch
  - Disable LTO

-------------------------------------------------------------------
Thu Apr 30 07:30:35 UTC 2020 - Michal Vyskocil <mvyskocil@opensuse.org>

- Update to 1.12.0
  - An official Swift port! (including gRPC support).
  - A Kotlin port!
  - Object API and native JSON support for C#.
  - Object API and gRPC support for Python.
  - Object API for Go.
  - FlexBuffers for Java.
  - Many other fixes and smaller improvements, 247 commits since 1.11.0
- Packaging: Use tarball from GitHub release page
  https://github.com/google/flatbuffers/releases

-------------------------------------------------------------------
Fri Feb 14 12:01:50 UTC 2020 - Dominique Leuenberger <dimstar@opensuse.org>

- Fix build: RPM 4.15 got a bit stricter and fails on
  find-provides script errors. Earlier RPM versions ignored it. In
  this specic case it turns out that the .cmake file installed is
  invalid, as it contained set(PACKAGE_VERSION "..") (so RPM is
  right to abort). Turns out that upstream simply did not really
  cater for the fact that this could be installed from tarball and
  not from a git checkout: they use 'git describe' to inject a
  version into the .cmake file. Fix this by replacing the
  placeholders using sed, injecting the rpm %version there.

-------------------------------------------------------------------
Tue Dec  3 14:49:14 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Use %cmake_build to build the cmake stuff

-------------------------------------------------------------------
Tue Oct  8 15:35:58 UTC 2019 - ecsos@opensuse.org

- Update to 1.11.0
  - More accurate C++ float handling, NaN handling, limit checking.
  - Java optimization: faster object accessors, faster UTF8 
    conversion.
  - A lot of Rust port improvements.
  - Vector of union JSON parsing.
  - Parser can now work from binary schemas.
  - Python: numpy vector support.
  - Packaging: Snap & RPM support.
  - Many improvements to our CI, added Bazel CI, dockerized 
    language tests.
  - Many other fixes and smaller improvements, 169 commits since 
    1.10.0

-------------------------------------------------------------------
Fri Mar 22 09:00:49 UTC 2019 - olaf@aepfle.de

- Update to 20190321T162332.a746143 to fix bigendian build
- dropped remove-date-from-flatc-version.patch

-------------------------------------------------------------------
Sat Mar 16 18:25:43 UTC 2019 - Torsten Duwe <duwe@suse.com>

- lift x86-only limitation

-------------------------------------------------------------------
Wed Jan 30 18:39:41 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to 1.10.0
  * Rust support
  * Dart support
  * Lua support
  * Lobster support
  * C++
    + Improved / more correct verifier
    + compare operator in generated code
    + new/improved move operators for many data types
    + string_view support.
  * Java & C# support vectors of unions.
  * Many other fixes and smaller improvements
- Package shared library in accordance with shared library
  packaging policy.
- Remove upstream-included 0001-remove-unnecessary-const-qualifier.patch
- Rebase remove-date-from-flatc-version.patch

-------------------------------------------------------------------
Thu Jun 28 02:00:55 UTC 2018 - kamikazow@opensuse.org

- Remove make-use-of-GNUInstallDirs.patch – has been upstreamed
- Add 0001-remove-unnecessary-const-qualifier.patch
  * Post-1.9.0 upstream patch to fix a compilation error.
- Update to 1.9.0
  * Vtable trimming in all language implementations: can reduce binary size 10-20%!
  * Mini-reflection tables (in C++) for debug-print, etc.
  * Improved .proto conversion.
  * Vectors of unions now also supported in JS/TS/PHP/C.
  * Improved namespace handling.
  * Boolean types in FlexBuffers.
  * Python Numpy vector support.
  * Nested FlatBuffer JSON parsing.
  * C++98 (stlport) support for core FlatBuffers and FlexBuffers.
  * JSON Schema output support.
  * Further optimized C++ memory usage for FlatBufferBuilder: from 3 to 1 dynamic allocations (!)
  * GRPC support in Java & Maven.
  * Build files for Bazel and Conan.
  * Prefixed size support for Java/C#/Python.
  * Typescript docs.

-------------------------------------------------------------------
Thu Jul  6 00:51:57 UTC 2017 - jengelh@inai.de

- Trim irrelevant words from descriptions.
- Stop the abuse of ls output for programmatic input.
  (useless use of cat)

-------------------------------------------------------------------
Wed Jun 21 16:26:30 UTC 2017 - sebix+novell.com@sebix.at

- add remove-date-from-flatc-version.patch -- ensure reproducible builds
- update to 1.7.1
 * Calling CreateVector in C++ on a vector of Offset types with an explicit template parameter (of that Offset type) of could cause the wrong specialization to be selected in 1.7.0. This should affect very few people, but safer to use 1.7.1 just in-case. flatc from 1.7.0 is compatible with 1.7.1.
- update to 1.7.0
 * Typescript support!
 * Improved GRPC API with proper zero-copy path. BREAKS API
 * Fixed many issues with ReleaseBufferPointer functionality BREAKS API
 * FlexBuffers: nested in FlatBuffer accessors, (nested) parsing from JSON, JSON output.
 * Vectors of unions and unions of structs/strings (C++ only so far).
 * Several speed optimizations for larger data types in C++ FlatBufferBuilder.
 * Schema registry functionality.
 * Improvements to the object API.
 * Improved docs: C# API, vector of structs.
 * Many other fixes and improvements, 116 commits since 1.6.0

-----------------------------------------------------------------
Sat Jun 17 :02:48 UTC 2017 - sebix+novell.com@sebix.at

- update to 1.6.0
- upstrm changelog for 1.6.0:
  * First ever version of FlexBuffers!
  * npm package support.
* Vectors of unions now supported (C++ only so far).
  * Improvementto the object API.
  * Some speed optimizations.
  * Many other fixes and impvements, 48 commits since 1.5.0
upstream changelog for 1.5.0:
  *RPC support for Go.
  * C# accessors now bad on structs (generates less garbage).
  * Improved object API (e.g. choice of pointer types, external references).
  * Flatc can test for conformity against older schema.
  * In-place binary search lookups for C# and Java.
  * Documentation improvements.
  * Many other fixes and improvements, 133 commits since 1.4.0
- upstream changelog for 1.4.0:
  * Support for GRPC!
  * C++ now has an object API: read & write to generated C++ objects.
  * Mutation support in Go & JS.
  * Many improvements in name space handling and general code generation.
  * Libfuzzer based tests.
  * Documentation for C in the main project.
  * Many other fixes and improvements, 300 commits since 1.3

-------------------------------------------------------------------
Fri Mar 11 04:34:14 UTC 2016 - avvissu@yandex.ru

- Update to 1.3.0:
  * support for PHP
  * much improved documentation: a tutorial shared by all languages
  * API improvements for Python, C#, and others
  * C++ code can now be built with GCC as low as 4.4, and doesn't rely on 
    exceptions anymore
  * JSON parser can now skip unknown fields
  * benchmark code available in benchmark branch
  * many other fixes and improvements
- Add general functions to automatically generated by the 
  FlatBuffers compiler (use BuildFlatBuffers.cmake)

-------------------------------------------------------------------
Fri Nov 20 20:34:34 UTC 2015 - hrvoje.senjan@gmail.com

- Update to 1.2.0
* Support for JavaScript and Python!
* A much improved C# and Go API and implementation.
* Simple mutable FlatBuffers functionality (C++/Java/C#).
* New reflection functionality: binary schemas, and more dynamic
  read/mutate (C++, relflection.h).
* Much improved .proto parsing.
- Added make-use-of-GNUInstallDirs.patch: honour flags passed by
  %cmake macro

-------------------------------------------------------------------
Sat May 16 07:51:12 UTC 2015 - hrvoje.senjan@gmail.com

- Install FindFlatBuffers.cmake
- Mark the package as %ix86 x86_64 exclusive
- BuildRequire cmake >= 2.8.11.2, it's the lowest version we know
  that has cmake.macros

-------------------------------------------------------------------
Sat Apr  4 20:15:09 UTC 2015 - hrvoje.senjan@gmail.com

- Update to 1.1.0:
* An extensive overhaul to the Java API.
* Out-of-the-box support for C# and Go.
* An optional verifier to make FlatBuffers practical in
  untrusted scenarios.
* .proto parsing for easier migration from Protocol Buffers.
* Optional manual assignment of field IDs.
* Dictionary functionality through binary search on a key field.
* Bug fixes and other improvements thanks to 200+ commits
  from 28 contributors.

-------------------------------------------------------------------
Tue Mar 31 11:15:19 UTC 2015 - hrvoje.senjan@gmail.com

- Activate initial flatbuffers package

