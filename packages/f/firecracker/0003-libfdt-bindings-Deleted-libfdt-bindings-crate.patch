From 0fe12ba435858cb1f8ca83d45768afa865a0896d Mon Sep 17 00:00:00 2001
From: AlexandruCihodaru <cihodar@amazon.com>
Date: Thu, 2 Sep 2021 23:43:41 +0300
Subject: [PATCH 3/3] [libfdt-bindings]: Deleted libfdt-bindings crate

Signed-off-by: AlexandruCihodaru <cihodar@amazon.com>
---
 Cargo.lock                     |  8 ------
 src/arch/Cargo.toml            |  2 --
 src/libfdt-bindings/Cargo.toml |  9 -------
 src/libfdt-bindings/build.rs   | 47 ----------------------------------
 src/libfdt-bindings/src/lib.rs | 26 -------------------
 5 files changed, 92 deletions(-)
 delete mode 100644 src/libfdt-bindings/Cargo.toml
 delete mode 100644 src/libfdt-bindings/build.rs
 delete mode 100644 src/libfdt-bindings/src/lib.rs

diff --git a/Cargo.lock b/Cargo.lock
index 3c64fc7c..ebba6e90 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -34,7 +34,6 @@ dependencies = [
  "kvm-bindings",
  "kvm-ioctls",
  "libc",
- "libfdt-bindings",
  "logger",
  "utils",
  "versionize",
@@ -446,13 +445,6 @@ version = "0.2.81"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "1482821306169ec4d07f6aca392a4681f66c75c9918aa49641a2595db64053cb"
 
-[[package]]
-name = "libfdt-bindings"
-version = "0.1.0"
-dependencies = [
- "libc",
-]
-
 [[package]]
 name = "log"
 version = "0.4.11"
diff --git a/src/arch/Cargo.toml b/src/arch/Cargo.toml
index 9e92d975..d08c616b 100644
--- a/src/arch/Cargo.toml
+++ b/src/arch/Cargo.toml
@@ -19,5 +19,3 @@ utils = { path = "../utils" }
 
 [dev-dependencies]
 device_tree = ">=1.1.0"
-[target.'cfg(target_arch="aarch64")'.dependencies]
-libfdt-bindings = { path = "../libfdt-bindings" }
\ No newline at end of file
diff --git a/src/libfdt-bindings/Cargo.toml b/src/libfdt-bindings/Cargo.toml
deleted file mode 100644
index 6c4a3569..00000000
--- a/src/libfdt-bindings/Cargo.toml
+++ /dev/null
@@ -1,9 +0,0 @@
-[package]
-name = "libfdt-bindings"
-version = "0.1.0"
-authors = ["Amazon Firecracker team <firecracker-devel@amazon.com>"]
-edition = "2018"
-build = "build.rs"
-
-[target.'cfg(target_arch="aarch64")'.dependencies]
-libc = ">=0.2.39"
diff --git a/src/libfdt-bindings/build.rs b/src/libfdt-bindings/build.rs
deleted file mode 100644
index 03e2be90..00000000
--- a/src/libfdt-bindings/build.rs
+++ /dev/null
@@ -1,47 +0,0 @@
-// Copyright 2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.
-// SPDX-License-Identifier: Apache-2.0
-
-use std::process::Command;
-
-/// Get the ld linker search paths
-///
-/// Cargo overwrites LD_LIBRARY_PATH with rust specific paths. But we need the default system
-/// paths in order to find libfdt. So we query `ld` in order to get them.
-fn get_ld_search_dirs() -> Vec<String> {
-    // We need to extract from `ld --verbose` all the search paths.
-    // For example `ld --verbose | grep SEARCH_DIR | tr -s ' ;' '\n'` returns the following:
-    // ```
-    // SEARCH_DIR("=/usr/local/lib/aarch64-linux-gnu")
-    // SEARCH_DIR("=/lib/aarch64-linux-gnu")
-    // SEARCH_DIR("=/usr/lib/aarch64-linux-gnu")
-    // SEARCH_DIR("=/usr/local/lib")
-    // SEARCH_DIR("=/lib")
-    // SEARCH_DIR("=/usr/lib")
-    // SEARCH_DIR("=/usr/aarch64-linux-gnu/lib")
-    // ```
-    let cmd = r#"
-        ld --verbose | grep -oP '(?<=SEARCH_DIR\(\"=)[^"]+(?=\"\);)'
-    "#;
-
-    Command::new("sh")
-        .arg("-c")
-        .arg(cmd)
-        .output()
-        .ok()
-        .and_then(|output| {
-            if output.status.success() {
-                return Some(output.stdout);
-            }
-            None
-        })
-        .and_then(|stdout_bytes| String::from_utf8(stdout_bytes).ok())
-        .map_or(vec![], |stdout| {
-            stdout.lines().map(|item| item.to_string()).collect()
-        })
-}
-
-fn main() {
-    for ld_search_dir in get_ld_search_dirs() {
-        println!("cargo:rustc-link-search=native={}", ld_search_dir);
-    }
-}
diff --git a/src/libfdt-bindings/src/lib.rs b/src/libfdt-bindings/src/lib.rs
deleted file mode 100644
index 07f11aaa..00000000
--- a/src/libfdt-bindings/src/lib.rs
+++ /dev/null
@@ -1,26 +0,0 @@
-// Copyright 2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.
-// SPDX-License-Identifier: Apache-2.0
-
-#[cfg(target_arch = "aarch64")]
-use libc::{c_char, c_int, c_void};
-
-// This links to libfdt which handles the creation of the binary blob
-// flattened device tree (fdt) that is passed to the kernel and indicates
-// the hardware configuration of the machine.
-#[cfg(target_arch = "aarch64")]
-#[link(name = "fdt", kind = "static")]
-extern "C" {
-    pub fn fdt_create(buf: *mut c_void, bufsize: c_int) -> c_int;
-    pub fn fdt_finish_reservemap(fdt: *mut c_void) -> c_int;
-    pub fn fdt_begin_node(fdt: *mut c_void, name: *const c_char) -> c_int;
-    pub fn fdt_property(
-        fdt: *mut c_void,
-        name: *const c_char,
-        val: *const c_void,
-        len: c_int,
-    ) -> c_int;
-    pub fn fdt_end_node(fdt: *mut c_void) -> c_int;
-    pub fn fdt_open_into(fdt: *const c_void, buf: *mut c_void, bufsize: c_int) -> c_int;
-    pub fn fdt_finish(fdt: *const c_void) -> c_int;
-    pub fn fdt_pack(fdt: *mut c_void) -> c_int;
-}
-- 
2.33.0

