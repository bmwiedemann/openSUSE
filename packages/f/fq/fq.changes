-------------------------------------------------------------------
Sat Sep 21 17:32:57 UTC 2024 - Martin Hauke <mardnh@gmx.de>

- Update to version 0.13.0
  Changes
  * New format decoders midi, negentropy, tap and txz
  * Add byte_array bits format.
  Format changes
  * matroska Updated to latest specification.
  * midi MIDI decoder added.
  * negentropy Negentropy message decoder.
  * tap and txz TAP and TXZ tape format for ZX Spectrum computers.
- Update to version 0.12.0
  Changes
  * Update readline package to fix issue with left/right word jump
    in REPL.
  * Update of version of golang and other dependencies.
  Format changes
  * jpeg
    + Decode DHT paramaters.
    + Fix EOI description.
- Update to version 0.11.0
  Changes
  * Add string_truncate option to configure how to truncate long
    strings when displaying a decode value tree. dd, dv etc set
    truncate length to zero to not truncate.
  * gojq updates from upstream:
    + Implement ltrim, rtrim, and trim functions.
    + Fix object construction with duplicate keys
      ({x:0,y:1} | {a:.x,a:.y}).
    + Fix halt and halt_error functions to stop the command
      execution immediately.
    + Fix variable scope of binding syntax
      ("a" as $v | def f: $v; "b" as $v | f).
    + Fix ltrimstr and rtrimstr functions to emit error on
      non-string input.
    + Fix nearbyint and rint functions to round ties to even.
    + Improve parser to allow reduce, foreach, if, try-catch
      syntax as object values.
    + Remove pow10 in favor of exp10, define scalbn and scalbln
      by ldexp.
  * Fix issue using decode value with ltrimstr/rtrimstr.
  Format changes
  * fit
    + Skip array fields on pre read messages.
    + Fixed subfield referencing fields below self in message.
  * jp2c New JPEG 2000 codestream decoder.
  * icc_profile Strip whitespace in header and tag strings.
  * mp4
    + Add jp2c, jp2h, ihdr jP JPEG 2000 related boxes support.
    + Add thmb box support.
    + Turns out for qt brand hdlr component name might be zero
      bytes.
  * nes New iNES/NES 2.0 ROM decoder.
- Update to version 0.10.0
  Changes
  * Switch readline module from own fork to
    https://github.com/ergochat/readline
  * Updated gojq fork. Notable changes from upstream below.
    + Fix pre-defined variables to be available in initial modules.
    + Fix object construction with duplicate keys.
  Format changes
  * aac_frame Decode instance tag and common window flag.
  * fit Add support for Garmin Flexible and Interoperable Data
    Transfer decoder.
  * hevc_sps Fix some incorrect profile_tier_level decoding.
  * html Fix issue parsing elements including SOLIDUS "/".
  * mpeg_es Support ES_ID_Inc and decode descriptors for IOD tags.
  * leveldb_descriptor, leveldb_log, leveldb_table Add support for
    LevelDB.
  * pcapng Decode all section headers instead of just the first.
  * png Fix incorrect decoding of type flags.
  * hevc_sps Fix incorrect decoding of profile_tier_level.
  * tls Fix field name typos.
  * mp4
    + Don't try decode samples for a track that has an external
      reference.
    + Use box structure instead of track id to keep track for
      sample table data.
    + ctts box v0 sample offset seems to be signed in practice but
      not in spec.
  *  webp Decode width, height and flags for lossless WebP.

-------------------------------------------------------------------
Sat Nov 25 17:45:41 UTC 2023 - Jeff Kowalczyk <jkowalczyk@suse.com>

- Update to version 0.9.0:
  * fq: Release 0.9.0
  * mod: Update golang.org/x/exp and github.com/gomarkdown/markdown
  * webp,avi,wav,aiff: Trim RIFF id string
  * Update gomod-gopacket to 1.2.0 from 1.1.1
  * doc: Remove spurious backtick
  * Update gomod-golang-x-net to 0.18.0 from 0.17.0
  * Update gomod-golang-x-crypto to 0.15.0 from 0.14.0
  * Update github-go-version to 1.21.4 from 1.21.3
  * Update docker-golang to 1.21.4 from 1.21.3
  * gojq: Update rebased fq fork
  * Update gomod-golang/text to 0.14.0 from 0.13.0
  * Update github-golangci-lint to 1.55.2 from 1.55.1
  * Update make-golangci-lint to 1.55.2 from 1.55.1
  * exif,tiff: Handle broken last next ifd offset by treating it as end marker
  * webp: Refactor to use riff code and decode VP8X, EXIF, ICCP and XMP chunks
  * interp: Fix infinite recursion when casting synthetic raw value into a jq value
  * protobuf: No need for synthetic for string and bytes value
  * Update github-golangci-lint to 1.55.1 from 1.55.0
  * Update make-golangci-lint to 1.55.1 from 1.55.0
  * macho: Move timestamp string to description
  * macho: Respect endian when decoding flags
  * gzip: Correctly handle multiple members
  * zip: Fix incorrect time/date, add extended timestamp and refactor
  * Update github-golangci-lint to 1.55.0 from 1.54.2
  * Update make-golangci-lint to 1.55.0 from 1.54.2
  * avi: Add extended chunks support and option
  * interp: Change bit ranges to use exclusive end
  * interp: Better from_jq error handling
  * matroska: Decode ebml date type
  * Update github-go-version to 1.21.3 from 1.21.2
  * Update gomod-golang-x-net to 0.17.0 from 0.16.0
  * Update docker-golang to 1.21.3 from 1.21.2
  * avi: Add unused field for extra indx chunk space
  * interp: Improve colors when using light background
  * avi: Increase sample size heuristics to 32bit stereo
  * avi: Add stream type constants
  * avi: Only use sample size heuristics if there is no format
  * decode,interp: Make synthetic values more visible and not act as decode values
  * avi: Handle stream sample size
  * avi: Add type, handler, format_tag and compreession per stream
  * Update github-go-version to 1.21.2 from 1.21.1
  * Update gomod-golang-x-net to 0.16.0 from 0.15.0
  * Update docker-golang to 1.21.2 from 1.21.1
  * avi: More correct strf chunk extra data
  * Update gomod-golang-x-crypto to 0.14.0 from 0.13.0

-------------------------------------------------------------------
Wed Sep 27 16:26:15 UTC 2023 - Jeff Kowalczyk <jkowalczyk@suse.com>

- Update to version 0.8.0:
  * fq: Release 0.8.0
  * opentimestamps: one last make doc.
  * opentimestamps: add help text.
  * opentimestamps: account for unknown attestation types.
  * opentimestamps: abstract away file digest sizes and support sha1, ripemd160 and keccac256.
  * opentimestamps: address comments and improve things.
  * opentimestamps: satisfy linter.
  * opentimestamps: add tests.
  * opentimestamps: add parser.
  * mod: Update golang.org/x/exp and github.com/gomarkdown/markdown
  * interp: split: Correctly split binary
  * moc3: update tests
  * moc3: Fix field order in blend_shape_keyform_bindings structure, version detection in count_info
  * mp3_frame_xing: Detect lame ext more similar to ffmpeg and mediainfo
  * Update github-go-version to 1.21.1 from 1.21.0
  * Update docker-golang to 1.21.1 from 1.21.0
  * Update gomod-golang-x-net to 0.15.0 from 0.14.0
  * Update gomod-golang-x-crypto to 0.13.0 from 0.12.0
  * id3v2: Handle W000-WZZZ,W00-WZZ URL frames
  * decode,interp: Don't shadow _key and error on missing _key
  * Update gomod-golang/text to 0.13.0 from 0.12.0
  * mp4: Decode emsg box
  * mp4: Decode cslg box
  * mp4,mpeg_es: Decode iods box and MP4_IOD_Tag OD
  * doc: Move up and update differences jq section a bit
  * golangci: Fix gosec aliasing warnings
  * html: Add forgotten re test
  * Update github-golangci-lint to 1.54.2 from 1.54.1
  * Update make-golangci-lint to 1.54.2 from 1.54.1
  * doc,moc3,caff: Add author and regenerate docs
  * moc3: update test data
  * moc3: count_info: extra space is reserved, not normal alignment/padding
  * moc3: eliminate gaps and properly handle padding, fix version 5 format decoding
  * caff: run go fmt
  * caff: eliminate gaps and specify unused fields
  * caff: run go fmt
  * moc3: add test data for new version 5
  * caff: obfuscation key is a signed integer, add test data
  * moc3: add support for version 5
  * moc3: consistency - scales array contains value elements, not scale elements
  * moc3: nicer tree structure, use more meaningful names for array elements
  * caff: update doc/formats.md
  * caff: include uncompressed bits for proper decompressed entries that can't be decoded as a format
  * moc3, caff: update tests and README
  * caff: minor formatting changes
  * moc3: update certain array element names, explicitly mark unused or reserved space
  * protobuf_widevine: Make protection_scheme constants less magic
  * moc3: remove dead code
  * moc3: initial implementation
  * caff: remove dead code
  * caff: initial implementation
  * Update github-golangci-lint to 1.54.1 from 1.54.0
  * Update make-golangci-lint to 1.54.1 from 1.54.0
  * Update github-go-version to 1.21.0 from 1.20.7
  * Update github-golangci-lint to 1.54.0 from 1.53.3
  * Update make-golangci-lint to 1.54.0 from 1.53.3
  * Update docker-golang to 1.21.0 from 1.20.7
  * gomod: Update x/exp and gomarkdown
  * matroska: Update spec and regenerate
  * cli: Rename --null/nul-output to --raw-output0
  * gojq: Update fq fork
  * Update gomod-golang-x-net to 0.14.0 from 0.13.0
  * Update gomod-golang-x-crypto to 0.12.0 from 0.11.0
  * Update gomod-golang/text to 0.12.0 from 0.11.0
  * elf: Fix broken static and segfault tests
  * Update github-go-version to 1.20.7 from 1.20.6
  * Update gomod-golang-x-net to 0.13.0 from 0.12.0
  * Update docker-golang to 1.20.7 from 1.20.6
  * dev,jq: Reformat jq code to look more the same
  * mp4: Nicer major brand and handle some qt brand short strings better
  * dev: Move examples and snippets to wiki
  * luajit: file null terminator: raw bits, validate
  * docker: Change to bookworm
  * Update github-go-version to 1.20.6 from 1.20.5
  * Update docker-golang to 1.20.6 from 1.20.5

-------------------------------------------------------------------
Fri Jul  7 09:35:44 UTC 2023 - Jeff Kowalczyk <jkowalczyk@suse.com>

- Update to version 0.7.0:
  * fq: Release 0.7.0
  * Update gomod-gopacket to 1.1.1 from 1.1.0
  * Update gomod-golang-x-net to 0.12.0 from 0.11.0
  * Update gomod-golang-x-crypto to 0.11.0 from 0.10.0
  * Update gomod-BurntSushi/toml to 1.3.2 from 1.2.1
  * Update gomod-golang/text to 0.11.0 from 0.10.0
  * wav: Decode bext chunk
  * luajit: make doc
  * luajit: typo
  * luajit: remove unused variable
  * luajit: fix regression: (u64 vs i64)
  * luajit: tests: rename lua source file
  * luajit: explain LuaJITDecodeKNum, fix negative in bug
  * luajit: improve debuginfo decoding
  * luajit: tests: improve coverage
  * luajit: standardize field names (key/value/type ect.)
  * luajit: fallbackUintMapSymStr
  * luajit: remove unecessary dependency
  * sgpd box entries parsing
  * luajit: add to probe group
  * luajit: clarify description
  * luajit: *.fqtest: add comments for generating .luac from source
  * luajit: split in smaller decode functions
  * luajit: add luajit.md
  * luajit: opcodes: implement scalar.UintMapper
  * luajit: use UTF8 strings
  * luajit: check binary.Read() error
  * luajit: magic number: raw bits, check with assert
  * luajit: lowercase flags
  * go fmt
  * luajit: initial support
  * Update github-golangci-lint to 1.53.3 from 1.53.2
  * Update make-golangci-lint to 1.53.3 from 1.53.2
  * interp: Add to binary fast path for arrays with only 0-255 numbers and strings
  * Update gomod-golang/text to 0.10.0 from 0.9.0
  * Update gomod-golang-x-net to 0.11.0 from 0.10.0
  * Update gomod-golang-x-crypto to 0.10.0 from 0.9.0
  * Update github-go-version to 1.20.5 from 1.20.4
  * Update docker-golang to 1.20.5 from 1.20.4
  * Update README.md
  * Improved README.md
  * Update github-golangci-lint to 1.53.2 from 1.53.1
  * Update make-golangci-lint to 1.53.2 from 1.53.1
  * doc: Fix broken link in README
  * Update github-golangci-lint to 1.53.1 from 1.52.2
  * Update make-golangci-lint to 1.53.1 from 1.52.2
  * gojq: Update rebased fq fork
  * interp: Make binary also respect bits_format
  * mp4: udta: Improve length/lang box probe and support empty value

-------------------------------------------------------------------
Tue May 16 14:00:47 UTC 2023 - Jeff Kowalczyk <jkowalczyk@suse.com>

- Update to version 0.6.0:
  * fq: Release 0.6.0
  * mp4: Use correct epoch for quicktime timestamps
  * fix non-ascii characters handling in to_hex and to_base64 functions
  * interp: Add hex bits format
  * bitcoin: fix witness item structs
  * doc: fix typos
  * interp: trim: Add multi-line support
  * html: Add to probe group
  * bits,bytes: Behave as binary instead of raw decode value
  * interp: Don't output raw binary if display is called explicitly
  * Update gomod-golang-x-net to 0.10.0 from 0.9.0
  * Update gomod-golang-x-crypto to 0.9.0 from 0.8.0
  * doc: Hopefully fix svg fixed font issue
  * help,markdown: Rewrote and made text rendering nicer
  * postgres: doc
  * postgres: use bit stream instead of masks to get flags
  * postgres: btree refactored by Mattias Wadman
  * postgres: fix line endings in error messages, simplify code, add comments
  * postgres: refactoring
  * postgres: update doc
  * Update github-go-version to 1.20.4 from 1.20.3
  * Update docker-golang to 1.20.4 from 1.20.3
  * postgres: refactoring
  * postgres: fix lint
  * interp,decode: Support decode group argument
  * postgres: fix compilation, fix tests
  * id3v2: Decode CTOC flags
  * id3v2: Add WXXX (desc/url) frame support
  * bson: fix doc formatting and add author info
  * dev,doc Clarify some dev docs and rename launch.json to be a template
  * pcap: Add forgotten help test
  * formats: Clenaup naming a bit
  * mp4: Better description for QuickTime terminator atom
  * bson: add BSON test file generator module and correct BSON format docs
  * bson: support all non-deprecated types and fix int/uint bugs
  * interp: Add skip_gaps option for tovalue/-V
  * interp: Make tovalue output behave as jq value
  * decode,interp: Refactor format groups into a proper struct
  * matroska: file_data: Fallback to raw if probe fails
  * gzip.go: fix typo in variablename: delfate
  * postgres: version 15 support
  * mp4: ctts,infe,iinf,trun: More ISOMFF version handling
  * doc: Add some more examples
  * postgres: fix error in tests
  * postgres: add page arg in pg_btree, change args names in pg_heap
  * postgres: fail on error in pg_heap
  * postgres: lint fixes
  * postgres: remove pg_wal. Failed to implement.
  * postgres: wal support multiple xlog_body for wal record
  * postgres: fix pg_wal when XLogRecord size is more than page size
  * postgres: refactor ItemIdData
  * postgres: remove lsn parameter in pg_wal
  * postgres: remove unused code
  * postgres: refactoring
  * psotgres: refactoring
  * postgres: remove arg in pg_btree
  * postgres: add btree index tests
  * postgres: add tests data
  * postgres: add test files
  * postgres: refactoring, tests
  * postgres: wal refactoring
  * postgres: pgpro wal refactoring
  * postgres: pgpro wal implementation
  * postgres: add wal tests
  * postgres: refactoring
  * postgres: wal refactoring
  * postgres: refactoring
  * postgres: wal implementation
  * postgres: wal refactoing
  * postgres: wal refactoing
  * postgres: wal impl
  * postgres: wal const
  * postgres: add pg_wal for pgproee11 as copy of postgres14
  * postgres: allow all flovours to decode btree index
  * postgres: add additional checks in pg_heap
  * postgres: remove SeekAbs(0) where it's not used.
  * postgres: how_to.md
  * postgres: add btree, pg_control to how_to.md
  * postgres: add how_to.md - how to generate test files for postgres
  * postgres: lint, doc
  * postgres: refactoring
  * postgres: refactoring
  * postgres: add argument to calc page's check sum correctly
  * postgres: make page size const
  * postgres: page sum impl
  * postgres: regenerate docs
  * postgres: refactoring
  * postgres: postgres 10 support
  * postgres: pg_heap fix page_begin, page_end
  * postgres: pg_control change default flavour to empty string - it uses versions prober. Fix root name in pg_heap.
  * postgres: generate docs by embedded md
  * postgres: add postgres.md to format
  * postgres: refactoring
  * postgres: move postgres.md to formats.md, add btree tests
  * postgres: refactoring
  * postgres: pg_heap refactoring
  * postgresql: general logic for pg_heap, pg_btree
  * postgres: pg_heap reafactoring
  * postgres: change AssertPosBytes to AssertPos (bits)
  * postgres: pg_control refactoring
  * postgres: pg_heap refactoring
  * postgres: btree handle full file
  * postgres: btree add free space
  * postgres: btree impl
  * postgres: btree impl
  * postgres: pg_btree add opaque flags
  * postgres: pg_btree begin impl
  * postgres: refactoring
  * postgres: add state to wal struct
  * postgres: try to implement pg_wal
  * postgres: pgwal checks
  * postgres: add wal checks
  * postgres: wal decoding implement
  * postgres: exclude wal tests for now
  * postgres: first correct read of WAL file
  * postgres: try to implement wal
  * postgres: add test data with specific values
  * postgres: fix linter
  * postgres: refactoring
  * postgres: refactoring - remove GetHeapD
  * postgres: remove duplicate tests
  * postgres: move SeekAbs(0) to Probe
  * postgres: better versions probing in pg_control, fix holes, better tests
  * postgres: change tuple struct in heap
  * postgres: fill gap alignment in heap tuple
  * postgres: fix some unknown, chanche tests tovalue -> dv
  * postgres: add tests
  * postgres: add postgres format docs, refactoing postgres flavours
  * postgres: made root an array
  * allow to change FillGaps in decoder
  * add postgres tests for mem, cpu profiling
  * add pgpro11 for postgres
  * add pgpro12 postgres
  * add pgpro13 heap
  * add pgpro13 to postgres
  * PostgreSQL: pgheap impl for pgproee10
  * PostgreSQL: pg_control impl for pgproee 10
  * PostgreSQL: pg_control, pgheap impl for pgproee13
  * PostgreSQL: add heap for pgpro14
  * PostgreSQL: add pg_control to pgpro14
  * PostgreSQl: heap impl for version 13
  * PostgreSQl: pg_control impl for version 13
  * PostgreSQL: ref
  * PostgreSQL: fix
  * PostgreSQL: heap impl for pgproee 12
  * PostgreSQL: add pg_control for pgproee 12
  * PostgreSQL: heap impl for version 11
  * ref
  * PostgreSQL: pg_control for ver 12
  * PostgreSQl: fix offset
  * PostgreSQL: pgproee11 pg_control impl
  * PostgreSQL: pgproee11 heap impl
  * PostgreSQL: fixes
  * PostgreSQL: implement pgproee 14
  * PostgreSQL: accept only normal item pointers
  * PostgreSQL: lp_flags format
  * Add heap infomask flags parser to PostgreSQL
  * PostgrreSQl heap decode refactoring
  * PostgreSQL: heap tuples implementation
  * PostgreSQL heap page parser implememtation.
  * Try to implement pgwal - fail.
  * mappers for postgres
  * pgpro version mapper
  * unix time mapper for postgres
  * lsn mapper
  * add icu version mapper
  * WalLevel for postgres
  * show mock_authentication_nonce as hex
  * DBState enum for postgres
  * Add pgproee14 flavour to postgres
  * Add flavour arg to postgres parser
  * pg_control implementation
  * Add postgres pg_control parser
  * [WIP] initial attempt to add postgres

-------------------------------------------------------------------
Thu Apr 13 15:39:42 UTC 2023 - Jeff Kowalczyk <jkowalczyk@suse.com>

- Update to version 0.5.0:
  * fq: Release 0.5.0
  * matroska: Update ebml specification
  * interp: Add --value-output/-V option to do tovalue before output
  * interp: Allow and convert JQValues:s (ex decode value) in function arg objects
  * wav: Cleanup avi leftovers
  * msgpack: Add str, array and object type tests
  * msgpack: fixstr length field is 5 bits
  * Update gomod-golang-x-net to 0.9.0 from 0.8.0
  * Update gomod-golang-x-crypto to 0.8.0 from 0.7.0
  * Update gomod-golang/text to 0.9.0 from 0.8.0
  * Update github-go-version to 1.20.3 from 1.20.2
  * Update docker-golang to 1.20.3 from 1.20.2
  * decode,fuzz,dev: Move recoverable error check to recoverfn.Run
  * decode: Cleanup old unused help system code
  * Update gomod-gopacket to 1.1.0 from 1.0.0
  * Update github-golangci-lint to 1.52.2 from 1.52.1
  * Update make-golangci-lint to 1.52.2 from 1.52.1
  * Update github-golangci-lint to 1.52.1 from 1.52.0
  * Update make-golangci-lint to 1.52.1 from 1.52.0
  * golangci-lint: Disable revive unused-parameter and update for new default config
  * Update github-golangci-lint to 1.52.0 from 1.51.2
  * Update make-golangci-lint to 1.52.0 from 1.51.2
  * Update gomod-creasty-defaults to 1.7.0 from 1.6.0
  * interp: Make completion work again
  * interp: Fix input completion regression in sub-REPLs
  * decode: Add float 80 reader
  * aiff: Add basic decoder
  * fix typo
  * readline: remove direct access to (*Instance).Config

-------------------------------------------------------------------
Wed Mar  8 16:41:02 UTC 2023 - Jeff Kowalczyk <jkowalczyk@suse.com>

- Update to version 0.4.0:
  * fq: Release 0.4.0
  * Update github-go-version to 1.20.2 from 1.20.1
  * Update docker-golang to 1.20.2 from 1.20.1
  * gojq: Update fq fork
  * readline: Update fq fork
  * id3v2: Decode subframes for CTOC and add struct for headers
  * Update gomod-golang-x-net to 0.8.0 from 0.7.0
  * Update gomod-golang-x-crypto to 0.7.0 from 0.6.0
  * tls: Add TLS 1.0, 1.1, 1.2 decode and decryption
  * Update gomod-golang/text to 0.8.0 from 0.7.0
  * help: Show default option value as JSON
  * help,markdown: Fix double line breaks when converting to text
  * pcap,pcapng,ipv4,ipv6: Support raw link type (ipv4 or ipv6)
  * doc: Run make doc
  * interp: Exit with error if -o name=@path fails to be read, also document
  * zip: Correctly peek for zip64 EOCD
  * zip: Correctly look for and decode both zip32/64 EOCD record
  * toml,xml: Fail fast on invalid content
  * Update github-golangci-lint to 1.51.2 from 1.51.1
  * Update make-golangci-lint to 1.51.2 from 1.51.1
  * pcap: Add ipv4 fragments tcp test
  * ipv4_packet,ipv6_packet,sll_packet,sll2_packet: Support ipv4/ipv6 link frames and pass correct in arg
  * decode: Support multiple format args and some rename and refactor
  * Update github-go-version to 1.20.1 from 1.20.0, 1.20.0, 1.20.0
  * Update gomod-golang-x-net to 0.7.0 from 0.6.0
  * Update docker-golang to 1.20.1 from 1.20.0
  * doc,fq: Improve cli help and some cleanup
  * matroska: Add unknown size test and add description to ebml header
  * matroska: Update spec and make refs in descriptions look nicer
  * matroska: Assume master with unknown size has ended if a valid parent is found
  * Update gomod-golang/text to 0.7.0 from 0.6.0
  * Update gomod-golang-x-net to 0.6.0 from 0.5.0
  * Update gomod-golang-x-crypto to 0.6.0 from 0.5.0
  * matroska: Handle unknown size for non-master types a bit better
  * matroska: Add decode_samples option
  * interp,json: Move error handling to colorjson
  * colorjson: Handle encoding error value
  * colorjson: Refactor to option struct
  * doc: Add FOSDEM 2023 talk
  * Update github-golangci-lint to 1.51.1 from 1.51.0
  * Update make-golangci-lint to 1.51.1 from 1.51.0

-------------------------------------------------------------------
Thu Feb  2 10:32:47 UTC 2023 - Jeff Kowalczyk <jkowalczyk@suse.com>

- Update to version 0.3.0:
  * fq: Release 0.3.0
  * github-action: Use quotes becase yaml (1.20 -> 1.2)
  * Update github-go-version to 1.20.0 from 1.19.5, 1.19.5, 1.19.5
  * Update github-golangci-lint to 1.51.0 from 1.50.1
  * Update make-golangci-lint to 1.51.0 from 1.50.1
  * Update docker-golang to 1.20.0 from 1.19.5
  * gomod: Update non-bump tracked mods and add bump config
  * gojq: Update rebased fq fork
  * tcp_segment: Decode standard options and rename maxseg to mss
  * readline: Update fq fork to fix draw issue when using del key
  * tcp: Ignore TCP option check for now as it seems unreliable in dumps
  * mp4: udta: Handle box with value rest of box
  * mp3: Add max_unknown option to fail decode if too much unknown bits
  * flac_picture,mpeg: Fix trailing ")" typo in map sym and description
  * mp4: Decode qt minor verison as YYYY.MM description
  * mp4: Decode udta metadata boxes without meta box
  * mp4: Decode tkhd flags
  * Update github-go-version to 1.19.5 from 1.19.4, 1.19.4, 1.19.4
  * Update docker-golang to 1.19.5 from 1.19.4
  * mp4: sgpd,sbgp: Change grouping_type to a string
  * Update gomod-golang/text to 0.6.0 from 0.5.0
  * interp: Wrap Binary in decodeValue to fix prompt issue with bits/bytes format
  * doc: Add _parent for decode values and clenaup doc a bit
  * goreleaser: Use name_template instead of deprecated archive replacements

-------------------------------------------------------------------
Fri Dec 23 13:25:56 UTC 2022 - Jeff Kowalczyk <jkowalczyk@suse.com>

- Update to version 0.2.0:
  * fq: Release 0.2.0
  * interp: Don't auto convert to binary for string functions, is just confusing
  * mod: Update modules not tracked with bump
  * gojq: Update rebased fq fork
  * interp: Rename to/from<format> functions to to_/from_<format>
  * bplist: Harmonize ns_keyed_archive jq style a bit
  * doc: remake
  * bplist: doc: update docs to reflect changes to ns_keyed_archiver
  * bplist: updates from_ns_keyed_archiver to do automatic torepr based on format detection
  * bplist: minor fix to from_ns_keyed_archiver
  * bplist: update docs with from_ns_keyed_archiver reference, add error case to function
  * decode: Make FieldFormat usage more consistent
  * Add related file format projects to README
  * bplist: added overload for from_ns_keyed_archiver jq func
  * decode: rename parameter for consistency
  * decode: change PosLoopDetector to use generics
  * decode: moves PosLoopDetector into its own package
  * decode: updates all.go with correct macho path
  * decode: moves macho decoder to apple package
  * decode: remove dead code from ns_keyed_archiver
  * decode: add ns_keyed_archiver, restructure apple decoder into apple package
  * mp4,doc: Add JSON box tree example and reorder a bit
  * mp3_frame_tags: Covert to decode group and split to mp3_frame_{xing,vbri} decoders
  * mp4: Add pdin box support
  * decode: More type safe API and split scalar into multiple types
  * mp3_tags,mp3: Add VBRI header support and rename tags to tag as there is only one
  * mp4: Add namespace to mdta ilst boxes
  * decode: unexport methods
  * decode: implements lost and found for unreferenced objects
  * decode: fixes endian of unicode strings
  * interp,display: Add workaround for go 1.18 when escaping 0x7f
  * decode: removed unnecessary struct
  * mp4: Fix typo in sample flags sample_is_depended_on description
  * mp4: Add sym and description for traf sample flags
  * decode: fix type on defer function call, test: add loop.fqtest
  * mp4: Decode hint and hnti child boxes
  * mp4,decode: Properly decode ilst items (both mdta and mdir)
  * test: applebookmark: adds problematic test case
  * decode: apple_bookmark: simplifies flag decoding
  * decode: minor change to method receiver name
  * decode: revert decode.D back, place posLoopDetector in apple_bookmark
  * Update github-go-version to 1.19.4 from 1.19.3, 1.19.3, 1.19.3
  * Update docker-golang to 1.19.4 from 1.19.3
  * gojq: Update rebased fq fork
  * test: fixed doc test
  * pkg/decode/D: Adds PushAndPop, Push, Pop methods. doc: adds help_applebookmark.fqtestdecode: converts applebookmark to use new d.PushAndPop method
  * doc: remake
  * decode: remove unused field from decoder, unused parens from torepr
  * dev,test: Use jqtest code from jqjq for jq tests
  * text,test: Unbeak base64 tests
  * mp4: sidx version 1 segment_duration is s64
  * doc: Add some padding margin to formats table to make it less likely to cause git conflicts
  * Update gomod-golang/text to 0.5.0 from 0.4.0
  * tzif: add help_tzif.fqtest
  * tzif: moved document to tzif.md
  * tzif: use scalar.Fn() to define a mapper ad hoc
  * tzif: use PeekFindByte() to find end of the string
  * support tzif (time zone information format)
  * dev,doc,make: Cleanup makefile and have proper targets for *.md and *.svg
  * doc: remake
  * decode: improve stack push/pop
  * doc: fixes snippet for recursive bookmark searching
  * doc,dev: Add more usage and dev tips
  * created stack type
  * updates bplist fq tests
  * updated docs
  * moved a flag bit fields into correct positions
  * fixes unknown bit ranges
  * added checks to prevent infinite looping and recursion
  * migrates tests to per-sample files
  * adds flag parsing to applebookmark
  * removed commented out line
  * updates fqtest for torepr in apple_bookmarkdata
  * fixed one more snake_case letter
  * fixes broken test and removes long link from markdown body
  * added some sfl2 test files to bplist package
  * fixes tests and adds torepr test
  * missed a letter on last commit - converting to snake_case
  * refactors some decoder logic in apple_bookmark for better querying
  * tweaks apple_bookmark markdown documentation
  * fixes spacing in jq files
  * removes unused function
  * fixes broken uid parsing in plist decoder
  * removes underscore from apple_bookmark package name
  * changes decoder package name from bookmark to apple_bookmark
  * removed unnecessary conversions
  * converts to snake_case and refactors decode helper
  * fixes broken test for all.fqtest
  * removed unused function
  * remade documentation
  * updated documentation
  * updated doc with apple reference
  * regenerated docs, added tests, fixed torepr
  * forgot to add bookmark.jq in last commit
  * decoding well but torepr needs work
  * apple bookmarkdata decoder initial commit
  * decode,interp: Rename unknown gap fields from "unknown#" to "gap#"
  * interp: Change default bits_format=string
  * interp,help: Properly count line length when breaking on whole words
  * interp: mimic jq: if expr arg is given read stdin even if tty
  * interp: Fix panic when trigger before any context has been pushed
  * mp4: Add png mapping

-------------------------------------------------------------------
Thu Nov 24 15:26:04 UTC 2022 - Jeff Kowalczyk <jkowalczyk@suse.com>

- Update to version 0.1.0:
  * fq: Release 0.1.0
  * mp4: Decode more sample flags
  * matroska: Fix path tests and make _tree_path more robust
  * raw,bits,bytes: Replace raw format with bits and bytes format that decode to a binary
  * wav,avi,avc_au: Add avi decoder and refactor wav decoder
  * mod: Update ones without bump config
  * gojq: Update rebased fq fork
  * Improve README.md a bit, one more demo and move up usage
  * mp3_frame_tags: Refactor and rename xing format to mp3_frame_tags
  * mp3_frame: Fix issue calc frame size for some configs
  * Update github-go-version to 1.19.3 from 1.19.2, 1.19.2, 1.19.2
  * Update docker-golang to 1.19.3 from 1.19.2
  * cli: Better decode error help
  * gomod: Update modules that lack bump config
  * gojq: Update rebased fq fork
  * doc: Add link to nttw6 presentation video and slides
  * Update github-golangci-lint to 1.50.1 from 1.50.0
  * Update gomod-BurntSushi/toml to 1.2.1 from 1.2.0
  * Update make-golangci-lint to 1.50.1 from 1.50.0
  * id3v2: In the wild COMM and TXXX frame might not have a null terminator
  * decode,elf,fuzz: TryBytesRange error on negative size
  * Update gomod-golang/text to 0.4.0 from 0.3.8
  * flac,fuzz: Fatal error on negative partition sample count
  * doc: Add gomarkdown to license/dependencies
  * Update gomod-golang/text to 0.3.8 from 0.3.7
  * yaml,fuzz: gojq.Normalize value to fix type panic
  * flac_frame: Properly decode zero escape sample size
  * fuzz: gotip not needed anymore
  * decode,fuzz: Signed integer (S) read require at least one bit
  * markdown,fuzz: Update gomarkdown
  * fuzz: make fuzz GROUP=mp4 to fuzz one group
  * makes dictionary key type checking more sensible
  * doc,rtmp,pcap,markdown: Add more examples
  * matroska: Update spec and regenerate
  * fixes signed integer parsing
  * renames test data file
  * changes Errorf to Fatalf on infinite loops
  * adds check for recursion in decodeReference, adds test to verify fix
  * gofmt
  * drop indented else block per lint
  * fixes reference calculation to use reference size from trailer
  * fixes bad path in test output
  * adds test to verify fix
  * removes unnecessary cast
  * adds necessary cast
  * fixes calculation of floating point lengths
  * Update github-go-version to 1.19.2 from 1.19.1, 1.19.1, 1.19.1
  * Update docker-golang to 1.19.2 from 1.19.1

-------------------------------------------------------------------
Thu Nov 24 15:20:12 UTC 2022 - jkowalczyk@suse.com

- Packaging improvements:
  * _service change disabled to manual per osc deprecation warning:
    WARNING: Command 'disabledrun/dr' is obsolete, please convert
    your _service to use 'manual' and then 'manualrun/mr' instead.

-------------------------------------------------------------------
Thu Oct 20 23:39:03 UTC 2022 - jkowalczyk@suse.com

- Update to version 0.0.10:
  * bplist: Make torepr convert to values
  * Update github-golangci-lint to 1.50.0 from 1.49.0
  * Update make-golangci-lint to 1.50.0 from 1.49.0
  * decode,tar: Add scalar description and Try* helpers
  * bplist: Fix unknown field for singletons and add torepr tests
  * mp4: Fix data_format typo
  * interp: Fix interrupt panic for cli eval
  * gojq: Update fq fork
  * deps: Manual update ones not using bump
  * gojq: Update rebased fq fork
  * readline: Update rebased fq fork
  * doc: Fix some incorrect example prompts
  * wav: Decode smpl chunk
  * interp: Make to{actual,sym} behave similar to tovalue
  * ranges,decode: Correctly skip empty ranges when adding unknown fields
  * updates tests post integer-bug fix
  * Fixes bug in integer parsing
  * Fixes and embeds documentation
  * updates torepr for data type
  * updates fqtest
  * adds function for decoding fixed sized arrays
  * fixes from PR comments
  * removed unused return type
  * removed unneccessary type conversions
  * Documentation cleanup
  * Size check on nBits to save memory
  * Added documentation and tests, fixed bad date parsing
  * Code fixes from PR, still need to add tests and testdata
  * Adds support for Apple Binary Plist, version 00
  * doc,help: Nicer format help and move help tests into each format
  * doc,html,xml: Add more documentation and examples
  * ar: Integer strings might be empty
  * csv: Add tsv and header example
  * wasm: Add some documentation
  * mp4: More codec names (from mp4ra.org)
  * doc: Fix format sections a bit
  * help,doc: Use markdown for format documentation again
  * markdown: Add decoder
  * elf: Basic program header notes decoding
  * test: Skip go test with -race by default
  * Update github-go-version from 1.19.0, 1.19.0, 1.19.0 to 1.19.1
  * Update docker-golang from 1.19.0 to 1.19.1
  * elf: Treat missing string tables as empty to be more robust
  * html: Handle html with leading doctype etc
  * decode: Remove RangeSorted flag as we can decide on array/struct instead
  * interp,decode: For struct use map to lookup field
  * perfomance: increase performance by map usage
  * generics: Use more from x/exp
  * range,decode: Use own range sort impl to speed up a bit
  * sortex: Package with type safe sort helpers
  * matroska: Add proper lacing support
  * bitcoin_blkdat,bitcoin_block: Make sure there is a header if blkdat

-------------------------------------------------------------------
Thu Oct 20 23:37:27 UTC 2022 - jkowalczyk@suse.com

- Update to version 0.0.9:
  * xml: Switch from "-" to "@" as attribute prefix and make it an option
  * ci: Skip -race for windows and macos
  * xml: Even more namespace fixes
  * columnwriter,dump: Add Column interface and refactor into BarColumn and MultiLineColumn
  * interp,dump: Correctly flush columns if data will be shown
  * prores_frame: Add basic container and frame header decoder
  * Update github-golangci-lint from 1.48.0 to 1.49.0
  * Update make-golangci-lint from 1.48.0 to 1.49.0
  * fqtest: Run tests in parallell
  * script: Use strings.Builder to collect output
  * wasm: add `-timeout 20m` for go test to workaround ci test fail
  * wasm: add wasm to probe list
  * wasm: run `golangci-lint run --fix`
  * wasm: fix comment format
  * wasm: update tests
  * wasm: add comment to clarify lazy initialization
  * wasm: define and use constants for some insturctions
  * gojq: Update fq fork
  * add ULEB and SLEB to known words for spell check
  * wasm: make the godoc formatter happy
  * wasm: use FieldULEB128() / FieldSLEB128() defined in the upstream
  * dev,fuzz: Add some useful retrigger snippets
  * wasm: fix lint issues
  * wasm: avoid race condition
  * xml: Keep track of default namespace and skip it element names
  * decode: Add LEB128 readers
  * wasm: use WRITE_ACTUAL=1 to generate .fqtest files
  * wasm: remove unused function
  * wasm: tidy up
  * wasm: further simplification
  * wasm: use s.ActualU() instead of s.Actual.(uint64)
  * wasm: `make doc`
  * wasm: to be able to probe
  * gopacket: Switch/update to new fork, remove SLL2 hack
  * wasm: remove nolint:unparam which is no longer needed
  * wasm: use map, not switch
  * wasm: use underscores for symbol values
  * wasm: use scalar.UToSymStr for simplicity
  * wasm: fix lint issues
  * xml: Correctly sort if one #seq is found and allow negative seq numbers
  * wasm: initial version
  * Add 32 bps FLAC to test
  * Add sample size entry to list for 32bps flac streams
  * pcap: Add ns support and add header field
  * flac: Make gen script generate correct fqtest files
  * flac_frame: Cleanup some dev lefterovers and todos
  * Fix decoding of FLAC raw entropy partition
  * interp: Add --unicode-output/-U to force use of unicode
  * mp3_frame: Add LSF support and fix incorrect main data handling
  * gojq: Update fq fork, fix scope argcount issue
  * jsonl: Add decoder, also tojsonl encoder
  * yaml: Error on trailing yaml/json
  * tar: Some number fields can be empty
  * gojq: Update fq fork, new scope function, rawstring, stricter integers
  * *extra: Rename <pkg>extra to just <pkg>ex and refactor to use generics
  * matroska: Strip newlines in description
  * xml: Allow trailing <?procinstr?>
  * dns: Rename isTCP to hasLengthHeader
  * dns: Don't use dns (udp) format for tcp also
  * interp,dump: Show address bar for root, nested roots and on format change
  * decode: Refactor to use scalar type assert helper
  * zip: Correctly limit max EOCD find
  * macho: Decode cmd symtab symbols
  * test: Update tests, go 1.19 uses \xff instead of \u00ff
  * Update github-go-version from 1.18.5, 1.18.5, 1.18.5 to 1.19.0
  * lint: Fix ioutil deprecation, reformat for new doc standard
  * Update github-golangci-lint from 1.47.3 to 1.48.0
  * Update make-golangci-lint from 1.47.3 to 1.48.0
  * zip: Skip header assert as there are zip files with other things appended
  * decode,scalar: Map empty string also else sym might ends up nil
  * xml,html: Always include attrs and children in array mode
  * Update docker-golang from 1.18.5 to 1.19.0
  * Update github-go-version from 1.18.4, 1.18.4, 1.18.4 to 1.18.5
  * Update docker-golang from 1.18.4 to 1.18.5
  * macho: Split into macho/macho_fat, fix offset issue and add string decoding
  * lint,decode,fuzz:: Fix nilerr warnings, one real one should be ignored for now
  * Update github-golangci-lint from 1.47.2 to 1.47.3
  * Update make-golangci-lint from 1.47.2 to 1.47.3
  * decode: Simplify compound range sort behaviour
  * doc,interp: Update and add more examples
  * interp,doc: Add -R raw string slurp hint to -s help
  * doc: Update README demo a bit with new features
  * elf: Remove redundant program_header struct
  * interp: Use RegisterFS instead of format files
  * xml,csv,interp: Handle JQValue when string normalizing
  * gojq: Preserve keys order for to_entries when used with JQValue

-------------------------------------------------------------------
Thu Oct 20 23:36:57 UTC 2022 - jkowalczyk@suse.com

- Update to version 0.0.8:
  * asn1_ber,goreleaser: Convert CRLF to LF in asn1 xml tests, hopefully fixes goreleaer workspace dirty error
  * doc: Improve and cleanup text formats
  * doc: Update and shorten README.md a bit
  * avro_ocf: Fix panic on missing meta schema
  * format,intepr: Refactor json, yaml, etc into formats also move out related functions
  * hevc_vps,fuzz: Error on too many vps layers
  * elf,fuzz: Error on too large string table
  * asn1: Add regression test for range decode fix ##330
  * decode: Range decode with new decoder to preserve bit reader
  * mp4: Don't range sort samples, keep sample table order
  * doc: Clarify decode, slurp and spew args
  * Update github-golangci-lint from 1.47.1 to 1.47.2
  * Update make-golangci-lint from 1.47.1 to 1.47.2
  * Update gomod-BurntSushi/toml from 1.1.0 to 1.2.0
  * fuzz: Replace built tag with FUZZTEST env and use new interp api
  * dev: Cleanup some code to fix a bunch of new linter warnings
  * Update github-golangci-lint from 1.47.0 to 1.47.1
  * dev: Cleanup linters and fix some unused args
  * Update make-golangci-lint from 1.47.0 to 1.47.1
  * Update make-golangci-lint from 1.46.2 to 1.47.0
  * Update github-golangci-lint from 1.46.2 to 1.47.0
  * interp: Cleanup and clarify some format naming
  * gojqextra: Simplify function type helpers
  * interp,format: Refactor registry usage and use function helpers
  * Update github-go-version from 1.18.3, 1.18.3, 1.18.3 to 1.18.4
  * Update docker-golang from 1.18.3 to 1.18.4
  * mapstruct: Handle nested values when converting to camel case
  * doc: Use singular jq value to refer to jq value
  * mp4: Don't  decode encrypted samples
  * fairplay: Add basic SPC decoder and PSSH system id
  * interp: Rename --decode-file to --argdecode to be more consistent
  * readline: Rebase on top of tpodowd's update PR
  * bitcoin: Add blkdat, block, transcation and script decoder
  * gojq: Rebase fq fork
  * mod: Update golang.org/x/{crypto,net}
  * readline: Rebase on top of tpodowd's redraw/completion fixes PR
  * elf: Use correct offset to dynamic linking string table
  * doc: Typos and add note about Try* functions
  * decode: Cleanup Try<f>/<f> pairs
  * Update usage.md
  * doc: Add more related tools
  * interp: Add group/0
  * interp: Extract to/from map/struct to own package
  * gojqextra: Cleanup gojq type cast code
  * interp: Make empty _finally fin error on error
  * doc: Correct bencode spec URL
  * mp4: Properly use trun data offset
  * dump: Skip JQValueEx if there are not options
  * matroska: Update ebml_matroska.xml and allow unknown ids
  * mp4,senc: Refactor current track/moof tracking and add senc box support
  * Update github-go-version from 1.18.2, 1.18.2, 1.18.2 to 1.18.3
  * Update docker-golang from 1.18.2 to 1.18.3
  * gojq: Update rebased fq fork
  * interp: Cast jq value to go value properly for encoding functions
  * interp: Improve type normalization and use it for toyaml and totoml
  * interp: Add to/from<encoding> for some common serialzations, encodings and hashes
  * mp4,bitio: Fix broken pssh decoding and add proper reader cloning to bitio
  * zip: s/Decompress/Uncompress/
  * zip: Add uncompress=false test and some docs
  * interp: help: Fix incorrect options example
  * zip: Add zip64 support and uncompress option
  * doc: go 1.18 and improve intro text a bit
  * gojq: Update rebased fq fork
  * gojq: Rebase fq fork
  * fqtest: Cleanup path usage
  * interp: Add internal _is_<type> helpers
  * fq: Use go 1.18
  * mp3: Use d.FieldValueU and some cleanup
  * interp: Refactor dump and revert #259 for now
  * readline: Update fq fork
  * mp4: Skip fields for pcm samples for now
  * interp: Fix crash when including relatve path when no search paths are set
  * Update github-golangci-lint from 1.46.1 to 1.46.2
  * Update make-golangci-lint from 1.46.1 to 1.46.2
  * Update github-golangci-lint from 1.46.0 to 1.46.1
  * Update make-golangci-lint from 1.46.0 to 1.46.1
  * Update github-go-version from 1.18.1, 1.18.1, 1.18.1 to 1.18.2
  * Update docker-golang from 1.18.1 to 1.18.2
  * interp: dump: Fix column truncate issue with unicode bars
  * interp: dump: Show address bar for nested roots
  * mp4: mvhd,tkhd,mdhd,mehd: Add version 1 support
  * Update github-golangci-lint from 1.45.2 to 1.46.0
  * Update make-golangci-lint from 1.45.2 to 1.46.0
  * icc_profile: Correctly clamp align padding on EOF
  * mp4: Add track id field and add track for tfhd with unseen track_id
  * scalar,mp4,gzip,tar: Add timestamp to description
  * scalar: Add *Fn type to map value and clearer naming
  * tcp: Split into client/server structs and add skipped_bytes and has_start/end per direction
  * wav,bencode,mpeg_ps_packet,id3v1: Random fixes
  * mp4: iinf: Only assume sub boxes for version 0
  * avc_pps: Correct check if there is more rbsp data
  * gojq: Fix JQValue index and destructuring issue and rebase fq fork
  * decode: Make compound range sort optional
  * decode: Keep decode tree on RangeFn error
  * readme: add MacPorts install details

-------------------------------------------------------------------
Wed Jun 29 23:01:01 UTC 2022 - Jeff Kowalczyk <jkowalczyk@suse.com>

- Initial package version 0.0.7:
  * decode,interp: Support for format specific options
  * macho: Add section and encryption_info raw data fields
  * Update gomod-mapstructure from 1.4.3 to 1.5.0
  * interp: dump: Show field name for compound values in arrays
  * interp: Don't truncate last display column
  * interp: Simpler and more efficient hexdump
  * interp: Proper display column truncate
  * Update github-go-version from 1.18.0, 1.18.0, 1.18.0 to 1.18.1
  * Update docker-golang from 1.18.0 to 1.18.1
  * decode,format: Add d.FieldFormatOrRaw(Len)
  * macho: Cleanup syms and remove redundant fat_arch struct
  * mpeg_pes: Support mpeg1 and some cleanup
  * tcp,udp: Refactor and make port matching better
  * interp: Paths with a array as root was missing start dot
  * mp4: Add more HEIF boxes
  * matroska: More sym cleanup
  * id3v2: Add 2.0 PIC support
  * formats: Sym and field name cleanup to be more jq friendly
  * amf0: Decode strings in more detail
  * rtmp,amf0: Improve decoders, aac asc, chunk stream interrupt, fix amf0 ecma arrays
  * ipv6,icmpv6: Add decoder
  * rtmp,amf0: Add decoders
  * interp: Remove opts refactor leftover
  * hevc_vpc,hevc_sps: Use same nameing for profile as in spec
  * hevc: Add hevc_vps, hevc_sps and hevc_pps decoders
  * Update github-golangci-lint from 1.45.0 to 1.45.2
  * Update make-golangci-lint from 1.45.0 to 1.45.2
  * mp4: Add more HEIF boxes
  * Update github-go-version from 1.17.7, 1.17.7, 1.17.7 to 1.18.0
  * Update github-golangci-lint from 1.44.2 to 1.45.0
  * Update make-golangci-lint from 1.44.2 to 1.45.0
  * avc_sps: Add chroma format name mapping
  * interp: Remove to*range pad argument and fix stdout padding issue
  * Update docker-golang from 1.17.8 to 1.18.0
  * interp,cli: Handle ctrl-c properly
  * github: Update action versions
