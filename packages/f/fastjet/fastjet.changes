-------------------------------------------------------------------
Sat Jan  6 12:40:42 UTC 2024 - Stefan Br√ºns <stefan.bruens@rwth-aachen.de>

- update to 3.4.2
  * Bug fixes:
    + small fix in ClosestPair2D class for compatibility with c++20
    + SISCone updated to 3.0.6, which eliminates default
      -ffast-math compile-time argument, which could cause
      interference with other code. 
- update to 3.4.1
  * New features:
    + JetDefinition has a new clustering strategy, N2PlainEEAccurate
    + two new functions to make it possible for plugin algorithms
      to modify user info:
      - PseudoJet::set_user_info_shared_ptr(...)
      - ClusterSequence::plugin_non_const_jet(...)
  * Bug fixes:
    + Resolved MAJOR BUG that arose with full thread-safety enabled
    + eliminated NaN from square-root of negative mean areas in
      background estimation (now returns zero) 
  + Other changes:
    + auto_ptr interface is now disabled by default

-------------------------------------------------------------------
Fri Jan  7 10:07:40 UTC 2022 - Atri Bhattacharya <badshah400@gmail.com>

- Remove rpath references from fastjet-configs script.

-------------------------------------------------------------------
Fri Aug 27 14:39:34 UTC 2021 - Dirk Stoecker <opensuse@dstoecker.de>

- update to 3.4.0
- New features:
 * addition of support for thread safety. It requires a compiler
  * supporting the C++11 standard (or later) and must be explicitly
    enabled at configure time. There are two options
   - the --enable-limited-thread-safety configure option is generally
     sufficient if each thread is processing entirely distinct events.
     It should have essentially no speed overhead.
   - the --enable-thread-safety configure option is required if you
     want to be able to read/copy/process a common set of PseudoJets
     across multiple threads. Depending on the system, our tests have
     shown speed penalties of up to 10-15%. For further details, see
     section 10 of the manual 
  * The jet area infrastructure has new calls to facilitate
    reproducible multi-threaded running: AreaDefinition::with_fixed_seed(seed)
    and GhostedAreaSpec::get_last_seed(seed). See section 10.3.1 of the manual.
  * The background estimators have a new interface to facilitate
    reproducible multi-threaded running: BackgroundEstimatorBase::estimate(...)
    returns a BackgroundEstimate object, which contains rho, sigma, etc. For
    details on using it, see sections 8 and 10.3.2 of the manual. The
    Subtractor class has been updated to use this. 
 * Improvements to existing features:
  * the Python interface now has improved exceptions (a fastjet Error
    is translated into a FastJetError python exception) and can be
    more easily be used with projects using FastJet that want to
    define their own python wrappers. Thanks to Patrick Komiske
    for the suggestions.
  * PxConePlugin now has an optional mode argument for e+e- running
    (mode=1) instead of pp running (mode=2). Thanks to Stefan Kluth
     for the suggestion. 
 * Bug fixes:
  * the Fortran interface to e+e- interface now returns jets ordered
    in decreasing energy rather than decreasing transverse momentum. 
 * Changes compared to the fastjet-3.4.0-beta.1 release:
  * added set_default_stream_and_mutex to Error and LimitedWarnings
    to help guard against garbled output.
- Build with enable-cgal-header-only for openSUSE > Leap 15.2
  (where cgal version is >= 5).

-------------------------------------------------------------------
Mon Dec 21 20:04:22 UTC 2020 - Atri Bhattacharya <badshah400@gmail.com>

- Update to version 3.3.4:
  * clarifications in documentation for handling of CGAL v5.
  * resolved run-time crash with certain strict g++ options and
    compilation issue with oracle c++.
  * included SISCone v3.0.5 (fixes signed-unsigned mismatch, no
    impact on results).
- Summary of changes from v3.3.2 -> v3.3.3:
  * improved treatment of CGAL in the build system.
  * fixed an overflow issue in the JadePlugin.
- Enable cgal linking; BuildRequires and Requires for -devel pkg:
  cgal-devel.
- Run spec-cleaner for minor cleanups.

-------------------------------------------------------------------
Fri Nov  8 01:44:46 UTC 2019 - Atri Bhattacharya <badshah400@gmail.com>

- Update to version 3.3.2:
  * Improved the shared-library behaviour by setting the proper
    inter-dependences
  * Included SISCone v3.0.4 with a similar fix
- Changes from version 3.3.1:
  * Main FastJet license clarified as being GPL v2 or later
  * Added theta() and cos_theta() members to PseudoJet
  * Added a --with-cgal-boostdir=... configure option to handle
    cases where CGAL uses a non-standard Boost installation path
  * Fixed compilation bug in the SISCone interface
- Use fdupes to link duplicated files.
- Update License to GPL-2.0-or-later.

-------------------------------------------------------------------
Wed Aug  2 07:59:38 UTC 2017 - badshah400@gmail.com

- Update to version 3.3.0:
  * This release adds a first version of a Python interface to
    FastJet 
- Enable python bindings:
  * Split out a python-fastjet subpackage.
  * Add python BuildRequires
  * Pass --enable-pyext to configure
  * Package python examples.

-------------------------------------------------------------------
Sat Nov 12 08:30:50 UTC 2016 - badshah400@gmail.com

- Update to version 3.2.1:
  * Added a missing assignment operator for ClusterSequence.
  * Eliminated a warning about unused variables when assertions
    are disabled.
  * Included SISCone-3.0.3 which now installs config.h to improve
    build stability.
- Changes from version 3.2.0:
  * Exposed the N2Plain and N2Tiled strategies for 3rd-party
    clustering algorithms under the form of two new classes
    (NNFJN2Plain and NNFJN2Tiled), similar to NNH.
  * Included version 3.0.2 SISCone with minor bug fixes.
  * Made template implementation of
    PseudoJet::obj_sorted_by_values() public.
  * Added a --guess-prefix option to fastjet-config (guesses
    prefix from location of fastjet-config instead of prefix from
    configure).
  * Added a --disable-auto-ptr option to configure.
  * Added internal helpers for C++11 and C++14 features:
    compile-time deprecation and the override keyword.
  * Small tweaks to the build system.
  * fjcore now ships with an illustrative fortran wrapper and
    example.

-------------------------------------------------------------------
Sun Nov  8 13:20:00 UTC 2015 - p.drouand@gmail.com

- Update to version 3.1.3
  * disables JetDefinition::operator(...) when CINT is detected, for
    ROOT v5 compatibility
  * works around an issue with recent versions of CGAL and the clang
    compiler 
- Changes from version 3.1.2
  * fixes a rounding error issue in the "lazy" clustering strategies 
    that, in rare cases, caused infinite loops or crashes
  * adds a check on clustering's internal consistency; a failure will 
    throw a new "InternalError" exception (derived from Error)
  * fixes a bug in the extraction of the fjcore code that resulted in
    fjcore failing for high multiplicities (~1000). This issue only 
    affects fjcore, not the full fastjet library 

-------------------------------------------------------------------
Mon Jan 12 12:53:33 UTC 2015 - p.drouand@gmail.com

- Update to version 3.1.1
  + fix to area support for Filter with Cambridge/Aachen jets and subjets
  + GridMedianBackgroundEstimator has new constructor and RectangularGrid
    as public base
  + added virtual destructor to TilingBase class

-------------------------------------------------------------------
Fri Dec  6 23:36:30 UTC 2013 - badshah400@gmail.com

- Initial version

