-------------------------------------------------------------------
Fri Mar 12 08:26:27 UTC 2021 - Thorsten Kukuk <kukuk@suse.com>

- Cleanup build dependencies

-------------------------------------------------------------------
Fri Mar 12 07:42:54 UTC 2021 - kukuk@suse.com

- Update to version 2+git20201210.bd8898e:
  * docs: fix simple typo, distuingish -> distinguish
  * caprotocol: fix typo in protocol description
  * Call stat again after changing ownership of created files, so we detect reset setuid/setgid bits and reset them.
  * We erroneously use the st_dev value in place of the magic value if the st_dev value is cached. This causes problems extracting trees containing subvolumes.
  * Update to Fedora31

-------------------------------------------------------------------
Mon Feb  3 12:06:39 UTC 2020 - Dominique Leuenberger <dimstar@opensuse.org>

- BuildRequire pkgconfig(udev) instead of udev: Allow OBS to
  shortcut through the -minif lavors.
- Drop libudev-devel BuildRequires: we already have the aequivalent
  pkgconfig(libudev) in place.

-------------------------------------------------------------------
Sat Jan 18 10:38:54 UTC 2020 - Sebastian Wagner <sebix+novell.com@sebix.at>

- fix build by adding build requirement on c++ compiler

-------------------------------------------------------------------
Sun Jul 28 13:28:57 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- Update to revision a8f6c841 because of build errors on Tumbleweed.
 - No changelog available.
- remove fix-gcc9-renameat.patch

-------------------------------------------------------------------
Mon May 20 12:47:25 UTC 2019 - Christophe Giboudeaux <christophe@krop.fr>

- Add the missing zlib requirement.

-------------------------------------------------------------------
Sat Mar 16 12:44:53 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- add fix-gcc9-renameat.patch from upstream PR#160 to fix boo#1121387

-------------------------------------------------------------------
Mon Feb  5 13:32:07 UTC 2018 - sebix+novell.com@sebix.at

- specfile:
 - remove test condition
 - remove LANG export for test, done by meson

-------------------------------------------------------------------
Mon Feb  5 11:20:40 UTC 2018 - sebix+novell.com@sebix.at

- specfile: remove manual manpage build, done by meson

-------------------------------------------------------------------
Sun Feb  4 10:06:43 UTC 2018 - jengelh@inai.de

- Fix typographic issues in description.

-------------------------------------------------------------------
Fri Feb  2 11:03:11 UTC 2018 - sebix+novell.com@sebix.at

- add missing group
- run spec-cleaner

-------------------------------------------------------------------
Sun Sep 17 12:35:49 UTC 2017 - sebix+novell.com@sebix.at

- update to version 2
 * casync now supports retrieving index and chunk data from sftp:// URLs. (In
   addition to the existing ftp://, http:// and https:// support).
 * casync will now honour $TMP if it is set, for placing temporary files and
   directories.
 * casync now saves/restores basic btrfs subvolume information. (Specifically it
   will store whether a directory is a subvolume, and whether it has the
   read-only bit set.) Control this metadata option with the new
   --with=subvolume/--without=subvolume and
   --with=subvolume-ro/--without=subvolume-ro switches.
 * casync now saves/restores SELinux label information. Control this metadata
   option with the new --with=selinux/--without=selinux switches.
 * The libgcrypt dependency has been replaced with an OpenSSL dependency, as
   that appears to be better supported today, and may be used to generate
   SHA512/256 hashes (see below).
 * casync now permits selecting the hash function to use with the new --digest=
   option. SHA512/256 is now supported in addition to the old SHA256 algorithm,
   which continues to be supported. The new default however is SHA512/256, as it
   is substantially faster at otherwise equal properties on today's 64bit
   processors. In specific environments SHA256 might perform better, hence both
   algorithms remain supported. Index files contain information about the hash
   algorithm used, hence automatic compatibility is retained.
 * casync now permits selecting the compression format to use with the new
   option --compression=. In addition to the originally reported xz compression,
   gzip and zstd compression are now supported, the latter being the new default
   as it provides excellent compression at very high speeds. It's OK to mix
   chunks compressed with different algorithms in the same store, but of course
   clients downloading them need to be new enough to read chunks in non-xz
   formats. Note that the file suffix for compressed chunks changed ".xz" →
   ".cacnk", as they now may contain either compression, and continuing to use
   the ".xz" suffix would be misleading. To retain compatibility with older
   casync, the environment variable $CASYNC_COMPRESSED_CHUNK_SUFFIX may be set
   to ".xz", to force usage of the old suffix.
 * When extracting archives or archive indexes a subset of the metadata stored
   in the archive may now be selected to be replayed, using the usual --with=
   and --without= options. For example, if an archive containing full metadata
   is extracted with --without=privileged only the unprivileged metadata fields
   are extracted (i.e. no file ownership, ACLs, SELinux labels, ...).
 * After completing an operation statistics about downloaded chunks are now
   shown.
 * When invoking "casync mkdev" the third parameter may now be an arbitrarily
   selected path below /dev which is then created as a symlink to the block
   device used, and registered with udev. This means the usual device
   enumeration will find the block device under the name picked. Example:
       # casync mkdev /somepath/tomy/index-file.caibx /dev/quux
   This will expose the block image /somepath/tomy/index-file.caibx as /dev/quux.

-------------------------------------------------------------------
Thu Jul 27 08:39:23 UTC 2017 - sebix+novell.com@sebix.at

- update to version 1
 *  casync now supports retrieving index and chunk data from sftp:// URLs. (In
    addition to the existing ftp://, http:// and https:// support).
 *  casync will now honour $TMP if it is set, for placing temporary files and
    directories.
 *  casync now saves/restores basic btrfs subvolume information. (Specifically it
    will store whether a directory is a subvolume, and whether it has the
    read-only bit set.) Control this metadata option with the new
    --with=subvolume/--without=subvolume and
    --with=subvolume-ro/--without=subvolume-ro switches.
 *  casync now saves/restores SELinux label information. Control this metadata
    option with the new --with=selinux/--without=selinux switches.
 *  The libgcrypt dependency has been replaced with an OpenSSL dependency, as
    that appears to be better supported today, and may be used to generate
    SHA512/256 hashes (see below).
 *  casync now permits selecting the hash function to use with the new --digest=
    option. SHA512/256 is now supported in addition to the old SHA256 algorithm,
    which continues to be supported. The new default however is SHA512/256, as it
    is substantially faster at otherwise equal properties on today's 64bit
    processors. In specific environments SHA256 might perform better, hence both
    algorithms remain supported. Index files contain information about the hash
    algorithm used, hence automatic compatibility is retained.
 *  casync now permits selecting the compression format to use with the new
    option --compression=. In addition to the originally reported xz compression,
    gzip and zstd compression are now supported, the latter being the new default
    as it provides excellent compression at very high speeds. It's OK to mix
    chunks compressed with different algorithms in the same store, but of course
    clients downloading them need to be new enough to read chunks in non-xz
    formats. Note that the file suffix for compressed chunks changed ".xz" →
    ".cacnk", as they now may contain either compression, and continuing to use
    the ".xz" suffix would be misleading. To retain compatibility with older
    casync, the environment variable $CASYNC_COMPRESSED_CHUNK_SUFFIX may be set
    to ".xz", to force usage of the old suffix.
 *  When extracting archives or archive indexes a subset of the metadata stored
    in the archive may now be selected to be replayed, using the usual --with=
    and --without= options. For example, if an archive containing full metadata
    is extracted with --without=privileged only the unprivileged metadata fields
    are extracted (i.e. no file ownership, ACLs, SELinux labels, ...).
 *  After completing an operation statistics about downloaded chunks are now
    shown.
 *  When invoking "casync mkdev" the third parameter may now be an arbitrarily
    selected path below /dev which is then created as a symlink to the block
    device used, and registered with udev. This means the usual device
    enumeration will find the block device under the name picked. Example:
        # casync mkdev /somepath/tomy/index-file.caibx /dev/quux
 *  This will expose the block image /somepath/tomy/index-file.caibx as /dev/quux.

-------------------------------------------------------------------
Fri Jun 23 09:28:49 UTC 2017 - sebix+novell.com@sebix.at

- add a959668782dafbfe469994b14d9c3adaef4e1c34.patch to fix tests on various non-64bit platforms

-------------------------------------------------------------------
Wed Jun 21 12:38:29 UTC 2017 - sebix+novell.com@sebix.at

- initial package
- add pull request 28 as 28.patch to fix the tests for kernels >= 4.11
- add commmit 675e7902e449cc00b0a459a6ec17a0e044ac966b.patch as patch for a manpage
