[ 1379s] I: Program returns random data in a function
[ 1379s] E: nodejs42 no-return-in-nonvoid-function ../deps/v8/src/builtins/builtins-intl.cc:749
[ 1379s] E: nodejs42 no-return-in-nonvoid-function ../deps/v8/src/compiler/effect-control-linearizer.cc:4122
[ 1379s] E: nodejs42 no-return-in-nonvoid-function ../deps/v8/src/compiler/js-heap-broker.cc:2277
[ 1379s] E: nodejs42 no-return-in-nonvoid-function ../deps/v8/src/objects/js-break-iterator.cc:167
[ 1379s] E: nodejs42 no-return-in-nonvoid-function ../deps/v8/src/objects/js-date-time-format.cc:155
[ 1379s] E: nodejs42 no-return-in-nonvoid-function ../deps/v8/src/objects/js-list-format.cc:86, 231, 244
[ 1379s] E: nodejs42 no-return-in-nonvoid-function ../deps/v8/src/objects/js-locale.cc:375, 390, 403
[ 1379s] E: nodejs42 no-return-in-nonvoid-function ../deps/v8/src/objects/js-number-format.cc:472, 485
[ 1379s] E: nodejs42 no-return-in-nonvoid-function ../deps/v8/src/objects/js-relative-time-format.cc:40, 193, 204
[ 1379s] E: nodejs42 no-return-in-nonvoid-function ../deps/v8/src/objects/js-segmenter.cc:196, 211
[ 1379s]

[ 4759s] E: nodejs12 no-return-in-nonvoid-function ../deps/v8/src/compiler/code-assembler.h:284
[ 4759s] E: nodejs12 no-return-in-nonvoid-function ../deps/v8/src/objects/js-collator.cc:229
[ 4759s] E: nodejs12 no-return-in-nonvoid-function ../deps/v8/src/objects/js-date-time-format.cc:344, 587, 989
[ 4759s] E: nodejs12 no-return-in-nonvoid-function ../deps/v8/src/objects/js-number-format.cc:40
[ 4759s] E: nodejs12 no-return-in-nonvoid-function ../deps/v8/src/objects/js-plural-rules.cc:92
[ 4759s] E: nodejs12 no-return-in-nonvoid-function ../deps/v8/src/objects/js-segment-iterator.cc:43, 125
[ 4759s] E: nodejs12 no-return-in-nonvoid-function ../deps/v8/src/vm-state-inl.h:40
[ 4759s] 

Index: node-v12.3.1/deps/v8/src/compiler/effect-control-linearizer.cc
===================================================================
--- node-v12.3.1.orig/deps/v8/src/compiler/effect-control-linearizer.cc
+++ node-v12.3.1/deps/v8/src/compiler/effect-control-linearizer.cc
@@ -4297,6 +4297,8 @@ Node* EffectControlLinearizer::BuildReve
     case kExternalBigUint64Array:
       UNREACHABLE();
   }
+
+  UNREACHABLE();
 }
 
 Node* EffectControlLinearizer::LowerLoadDataViewElement(Node* node) {
Index: node-v12.3.1/deps/v8/src/compiler/js-heap-broker.cc
===================================================================
--- node-v12.3.1.orig/deps/v8/src/compiler/js-heap-broker.cc
+++ node-v12.3.1/deps/v8/src/compiler/js-heap-broker.cc
@@ -2641,6 +2641,8 @@ ObjectData* ObjectRef::data() const {
     case JSHeapBroker::kRetired:
       UNREACHABLE();
   }
+
+  UNREACHABLE();
 }
 
 Reduction NoChangeBecauseOfMissingData(JSHeapBroker* broker,
Index: node-v12.3.1/deps/v8/src/objects/js-break-iterator.cc
===================================================================
--- node-v12.3.1.orig/deps/v8/src/objects/js-break-iterator.cc
+++ node-v12.3.1/deps/v8/src/objects/js-break-iterator.cc
@@ -144,6 +144,8 @@ Handle<String> JSV8BreakIterator::TypeAs
     case Type::COUNT:
       UNREACHABLE();
   }
+
+  UNREACHABLE();
 }
 
 Handle<Object> JSV8BreakIterator::Current(
Index: node-v12.3.1/deps/v8/src/objects/js-date-time-format.cc
===================================================================
--- node-v12.3.1.orig/deps/v8/src/objects/js-date-time-format.cc
+++ node-v12.3.1/deps/v8/src/objects/js-date-time-format.cc
@@ -224,6 +224,8 @@ const std::vector<PatternData>& GetPatte
     default:
       UNREACHABLE();
   }
+
+  UNREACHABLE();
 }
 
 std::string GetGMTTzID(Isolate* isolate, const std::string& input) {
@@ -339,6 +341,8 @@ Handle<String> DateTimeStyleAsString(Iso
     case JSDateTimeFormat::DateTimeStyle::kUndefined:
       UNREACHABLE();
   }
+
+  UNREACHABLE();
 }
 
 }  // namespace
@@ -582,6 +586,8 @@ Isolate::ICUObjectCacheType ConvertToCac
     case JSDateTimeFormat::DefaultsOption::kAll:
       return Isolate::ICUObjectCacheType::kDefaultSimpleDateFormat;
   }
+
+  return Isolate::ICUObjectCacheType::kDefaultSimpleDateFormat;
 }
 }  // namespace
 
@@ -984,6 +990,8 @@ icu::DateFormat::EStyle DateTimeStyleToE
     case JSDateTimeFormat::DateTimeStyle::kUndefined:
       UNREACHABLE();
   }
+
+  UNREACHABLE();
 }
 
 icu::UnicodeString ReplaceSkeleton(const icu::UnicodeString input,
Index: node-v12.3.1/deps/v8/src/objects/js-list-format.cc
===================================================================
--- node-v12.3.1.orig/deps/v8/src/objects/js-list-format.cc
+++ node-v12.3.1/deps/v8/src/objects/js-list-format.cc
@@ -85,6 +85,8 @@ const char* GetIcuStyleString(JSListForm
     case JSListFormat::Type::COUNT:
       UNREACHABLE();
   }
+
+  UNREACHABLE();
 }
 
 }  // namespace
@@ -256,6 +258,8 @@ Handle<String> JSListFormat::StyleAsStri
     case Style::COUNT:
       UNREACHABLE();
   }
+
+  UNREACHABLE();
 }
 
 Handle<String> JSListFormat::TypeAsString() const {
@@ -269,6 +273,8 @@ Handle<String> JSListFormat::TypeAsStrin
     case Type::COUNT:
       UNREACHABLE();
   }
+
+  UNREACHABLE();
 }
 
 namespace {
Index: node-v12.3.1/deps/v8/src/objects/js-number-format.cc
===================================================================
--- node-v12.3.1.orig/deps/v8/src/objects/js-number-format.cc
+++ node-v12.3.1/deps/v8/src/objects/js-number-format.cc
@@ -37,6 +37,7 @@ UNumberFormatStyle ToNumberFormatStyle(
     case JSNumberFormat::CurrencyDisplay::COUNT:
       UNREACHABLE();
   }
+  UNREACHABLE();
 }
 
 // ecma-402/#sec-currencydigits
@@ -447,6 +448,8 @@ Handle<String> JSNumberFormat::StyleAsSt
     case Style::COUNT:
       UNREACHABLE();
   }
+
+  UNREACHABLE();
 }
 
 Handle<String> JSNumberFormat::CurrencyDisplayAsString() const {
@@ -460,6 +463,8 @@ Handle<String> JSNumberFormat::CurrencyD
     case CurrencyDisplay::COUNT:
       UNREACHABLE();
   }
+
+  UNREACHABLE();
 }
 
 namespace {
Index: node-v12.3.1/deps/v8/src/objects/js-relative-time-format.cc
===================================================================
--- node-v12.3.1.orig/deps/v8/src/objects/js-relative-time-format.cc
+++ node-v12.3.1/deps/v8/src/objects/js-relative-time-format.cc
@@ -37,6 +37,8 @@ UDateRelativeDateTimeFormatterStyle getI
     case JSRelativeTimeFormat::Style::COUNT:
       UNREACHABLE();
   }
+
+  UNREACHABLE();
 }
 }  // namespace
 
@@ -197,6 +199,8 @@ Handle<String> JSRelativeTimeFormat::Sty
     case Style::COUNT:
       UNREACHABLE();
   }
+
+  UNREACHABLE();
 }
 
 Handle<String> JSRelativeTimeFormat::NumericAsString() const {
@@ -208,6 +212,8 @@ Handle<String> JSRelativeTimeFormat::Num
     case Numeric::COUNT:
       UNREACHABLE();
   }
+
+  UNREACHABLE();
 }
 
 namespace {
Index: node-v12.3.1/deps/v8/src/objects/js-segmenter.cc
===================================================================
--- node-v12.3.1.orig/deps/v8/src/objects/js-segmenter.cc
+++ node-v12.3.1/deps/v8/src/objects/js-segmenter.cc
@@ -160,6 +160,8 @@ Handle<String> JSSegmenter::GranularityA
     case Granularity::COUNT:
       UNREACHABLE();
   }
+
+  UNREACHABLE();
 }
 
 const std::set<std::string>& JSSegmenter::GetAvailableLocales() {
Index: node-v12.3.1/deps/v8/src/compiler/code-assembler.h
===================================================================
--- node-v12.3.1.orig/deps/v8/src/compiler/code-assembler.h
+++ node-v12.3.1/deps/v8/src/compiler/code-assembler.h
@@ -281,6 +281,7 @@ inline bool NeedsBoundsCheck(CheckBounds
     case CheckBounds::kDebugOnly:
       return DEBUG_BOOL;
   }
+  return false;
 }
 
 class AccessCheckNeeded;
Index: node-v12.3.1/deps/v8/src/objects/js-collator.cc
===================================================================
--- node-v12.3.1.orig/deps/v8/src/objects/js-collator.cc
+++ node-v12.3.1/deps/v8/src/objects/js-collator.cc
@@ -226,6 +226,8 @@ UColAttributeValue ToUColAttributeValue(
     case Intl::CaseFirst::kUndefined:
       return UCOL_OFF;
   }
+
+  return UCOL_DEFAULT;
 }
 
 void SetNumericOption(icu::Collator* icu_collator, bool numeric) {
Index: node-v12.3.1/deps/v8/src/objects/js-plural-rules.cc
===================================================================
--- node-v12.3.1.orig/deps/v8/src/objects/js-plural-rules.cc
+++ node-v12.3.1/deps/v8/src/objects/js-plural-rules.cc
@@ -89,6 +89,8 @@ Handle<String> JSPluralRules::TypeAsStri
     case Type::COUNT:
       UNREACHABLE();
   }
+
+  UNREACHABLE();
 }
 
 // static
Index: node-v12.3.1/deps/v8/src/objects/js-segment-iterator.cc
===================================================================
--- node-v12.3.1.orig/deps/v8/src/objects/js-segment-iterator.cc
+++ node-v12.3.1/deps/v8/src/objects/js-segment-iterator.cc
@@ -40,6 +40,7 @@ Handle<String> JSSegmentIterator::Granul
     case JSSegmenter::Granularity::COUNT:
       UNREACHABLE();
   }
+  UNREACHABLE();
 }
 
 MaybeHandle<JSSegmentIterator> JSSegmentIterator::Create(
@@ -122,6 +123,7 @@ Handle<Object> JSSegmentIterator::BreakT
     case JSSegmenter::Granularity::COUNT:
       UNREACHABLE();
   }
+  UNREACHABLE();
 }
 
 // ecma402 #sec-segment-iterator-prototype-index
Index: node-v12.3.1/deps/v8/src/vm-state-inl.h
===================================================================
--- node-v12.3.1.orig/deps/v8/src/vm-state-inl.h
+++ node-v12.3.1/deps/v8/src/vm-state-inl.h
@@ -37,6 +37,7 @@ inline const char* StateToString(StateTa
     case IDLE:
       return "IDLE";
   }
+  return "SHOULD_NOT_HAPPEN";
 }
 
 
