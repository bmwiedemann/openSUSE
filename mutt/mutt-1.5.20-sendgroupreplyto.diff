---
 init.h |    7 +++++++
 mutt.h |    1 +
 send.c |   12 ++++++++++--
 3 files changed, 18 insertions(+), 2 deletions(-)

--- init.h
+++ init.h	2019-01-02 13:03:50.043338815 +0000
@@ -2864,6 +2864,13 @@ struct option_t MuttVars[] = {
   ** .pp
   ** Also see the $$force_name variable.
   */
+  { "send_group_reply_to",	DT_BOOL, R_NONE, OPTSENDGROUPREPLYTO, 0 },
+  /*
+  ** .pp
+  ** This variable controls how group replies are done.
+  ** When set, all recepients listet in "To:" are set in the
+  ** "To:" header again, else in the "CC", which is the default.
+  */
   { "score", 		DT_BOOL, R_NONE, OPTSCORE, 1 },
   /*
   ** .pp
--- mutt.h
+++ mutt.h	2019-01-02 13:03:50.043338815 +0000
@@ -480,6 +480,7 @@ enum
   OPTSAVEADDRESS,
   OPTSAVEEMPTY,
   OPTSAVENAME,
+  OPTSENDGROUPREPLYTO,
   OPTSCORE,
 #ifdef USE_SIDEBAR
   OPTSIDEBAR,
--- send.c
+++ send.c	2019-01-02 13:03:50.043338815 +0000
@@ -559,8 +559,16 @@ int mutt_fetch_recips (ENVELOPE *out, EN
     if ((flags & SENDGROUPREPLY) && (!in->mail_followup_to || hmfupto != MUTT_YES))
     {
       /* if(!mutt_addr_is_user(in->to)) */
-      rfc822_append (&out->cc, in->to, 1);
-      rfc822_append (&out->cc, in->cc, 1);
+      if (option (OPTSENDGROUPREPLYTO))
+      {
+        rfc822_append(&out->to, in->to, 0);
+        rfc822_append(&out->cc, in->cc, 1);
+      }
+      else
+      {
+        rfc822_append(&out->cc, in->to, 1);
+        rfc822_append(&out->cc, in->cc, 1);
+      }
     }
   }
   return 0;
